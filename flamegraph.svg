<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="8262" onload="init(evt)" viewBox="0 0 1200 8262" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="8262" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="8245.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="8245.00"> </text><svg id="frames" x="10" width="1180" total_samples="32713"><g><title>[radeonsi_dri.so] (4 samples, 0.01%)</title><rect x="0.0061%" y="8101" width="0.0122%" height="15" fill="rgb(227,0,7)" fg:x="2" fg:w="4"/><text x="0.2561%" y="8111.50"></text></g><g><title>[radeonsi_dri.so] (4 samples, 0.01%)</title><rect x="0.0061%" y="8085" width="0.0122%" height="15" fill="rgb(217,0,24)" fg:x="2" fg:w="4"/><text x="0.2561%" y="8095.50"></text></g><g><title>[radeonsi_dri.so] (5 samples, 0.02%)</title><rect x="0.0061%" y="8133" width="0.0153%" height="15" fill="rgb(221,193,54)" fg:x="2" fg:w="5"/><text x="0.2561%" y="8143.50"></text></g><g><title>[radeonsi_dri.so] (5 samples, 0.02%)</title><rect x="0.0061%" y="8117" width="0.0153%" height="15" fill="rgb(248,212,6)" fg:x="2" fg:w="5"/><text x="0.2561%" y="8127.50"></text></g><g><title>[radeonsi_dri.so] (6 samples, 0.02%)</title><rect x="0.0061%" y="8149" width="0.0183%" height="15" fill="rgb(208,68,35)" fg:x="2" fg:w="6"/><text x="0.2561%" y="8159.50"></text></g><g><title>[libc.so.6] (8 samples, 0.02%)</title><rect x="0.0031%" y="8181" width="0.0245%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="8"/><text x="0.2531%" y="8191.50"></text></g><g><title>[libc.so.6] (8 samples, 0.02%)</title><rect x="0.0031%" y="8165" width="0.0245%" height="15" fill="rgb(207,160,47)" fg:x="1" fg:w="8"/><text x="0.2531%" y="8175.50"></text></g><g><title>tetrs:gl0 (9 samples, 0.03%)</title><rect x="0.0031%" y="8197" width="0.0275%" height="15" fill="rgb(228,23,34)" fg:x="1" fg:w="9"/><text x="0.2531%" y="8207.50"></text></g><g><title>tetrs:sh0 (4 samples, 0.01%)</title><rect x="0.0306%" y="8197" width="0.0122%" height="15" fill="rgb(218,30,26)" fg:x="10" fg:w="4"/><text x="0.2806%" y="8207.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="0.0306%" y="8181" width="0.0122%" height="15" fill="rgb(220,122,19)" fg:x="10" fg:w="4"/><text x="0.2806%" y="8191.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="0.0306%" y="8165" width="0.0122%" height="15" fill="rgb(250,228,42)" fg:x="10" fg:w="4"/><text x="0.2806%" y="8175.50"></text></g><g><title>[radeonsi_dri.so] (4 samples, 0.01%)</title><rect x="0.0306%" y="8149" width="0.0122%" height="15" fill="rgb(240,193,28)" fg:x="10" fg:w="4"/><text x="0.2806%" y="8159.50"></text></g><g><title>[radeonsi_dri.so] (4 samples, 0.01%)</title><rect x="0.0306%" y="8133" width="0.0122%" height="15" fill="rgb(216,20,37)" fg:x="10" fg:w="4"/><text x="0.2806%" y="8143.50"></text></g><g><title>[radeonsi_dri.so] (4 samples, 0.01%)</title><rect x="0.0306%" y="8117" width="0.0122%" height="15" fill="rgb(206,188,39)" fg:x="10" fg:w="4"/><text x="0.2806%" y="8127.50"></text></g><g><title>[radeonsi_dri.so] (4 samples, 0.01%)</title><rect x="0.0306%" y="8101" width="0.0122%" height="15" fill="rgb(217,207,13)" fg:x="10" fg:w="4"/><text x="0.2806%" y="8111.50"></text></g><g><title>[radeonsi_dri.so] (4 samples, 0.01%)</title><rect x="0.0306%" y="8085" width="0.0122%" height="15" fill="rgb(231,73,38)" fg:x="10" fg:w="4"/><text x="0.2806%" y="8095.50"></text></g><g><title>tetrs:sh1 (6 samples, 0.02%)</title><rect x="0.0428%" y="8197" width="0.0183%" height="15" fill="rgb(225,20,46)" fg:x="14" fg:w="6"/><text x="0.2928%" y="8207.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="0.0428%" y="8181" width="0.0183%" height="15" fill="rgb(210,31,41)" fg:x="14" fg:w="6"/><text x="0.2928%" y="8191.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="0.0428%" y="8165" width="0.0183%" height="15" fill="rgb(221,200,47)" fg:x="14" fg:w="6"/><text x="0.2928%" y="8175.50"></text></g><g><title>[ld-linux-x86-64.so.2] (5 samples, 0.02%)</title><rect x="0.0734%" y="8165" width="0.0153%" height="15" fill="rgb(226,26,5)" fg:x="24" fg:w="5"/><text x="0.3234%" y="8175.50"></text></g><g><title>[ld-linux-x86-64.so.2] (6 samples, 0.02%)</title><rect x="0.0734%" y="8181" width="0.0183%" height="15" fill="rgb(249,33,26)" fg:x="24" fg:w="6"/><text x="0.3234%" y="8191.50"></text></g><g><title>[libc.so.6] (8 samples, 0.02%)</title><rect x="0.0948%" y="8149" width="0.0245%" height="15" fill="rgb(235,183,28)" fg:x="31" fg:w="8"/><text x="0.3448%" y="8159.50"></text></g><g><title>[radeonsi_dri.so] (5 samples, 0.02%)</title><rect x="0.1192%" y="8133" width="0.0153%" height="15" fill="rgb(221,5,38)" fg:x="39" fg:w="5"/><text x="0.3692%" y="8143.50"></text></g><g><title>[radeonsi_dri.so] (5 samples, 0.02%)</title><rect x="0.1192%" y="8117" width="0.0153%" height="15" fill="rgb(247,18,42)" fg:x="39" fg:w="5"/><text x="0.3692%" y="8127.50"></text></g><g><title>pthread_setname_np (4 samples, 0.01%)</title><rect x="0.1223%" y="8101" width="0.0122%" height="15" fill="rgb(241,131,45)" fg:x="40" fg:w="4"/><text x="0.3723%" y="8111.50"></text></g><g><title>prctl (4 samples, 0.01%)</title><rect x="0.1223%" y="8085" width="0.0122%" height="15" fill="rgb(249,31,29)" fg:x="40" fg:w="4"/><text x="0.3723%" y="8095.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="0.1223%" y="8069" width="0.0122%" height="15" fill="rgb(225,111,53)" fg:x="40" fg:w="4"/><text x="0.3723%" y="8079.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="0.1223%" y="8053" width="0.0122%" height="15" fill="rgb(238,160,17)" fg:x="40" fg:w="4"/><text x="0.3723%" y="8063.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="0.1223%" y="8037" width="0.0122%" height="15" fill="rgb(214,148,48)" fg:x="40" fg:w="4"/><text x="0.3723%" y="8047.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="0.1223%" y="8021" width="0.0122%" height="15" fill="rgb(232,36,49)" fg:x="40" fg:w="4"/><text x="0.3723%" y="8031.50"></text></g><g><title>[libc.so.6] (10 samples, 0.03%)</title><rect x="0.1376%" y="8085" width="0.0306%" height="15" fill="rgb(209,103,24)" fg:x="45" fg:w="10"/><text x="0.3876%" y="8095.50"></text></g><g><title>__mmap (6 samples, 0.02%)</title><rect x="0.1498%" y="8069" width="0.0183%" height="15" fill="rgb(229,88,8)" fg:x="49" fg:w="6"/><text x="0.3998%" y="8079.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="0.1528%" y="8053" width="0.0153%" height="15" fill="rgb(213,181,19)" fg:x="50" fg:w="5"/><text x="0.4028%" y="8063.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="0.1528%" y="8037" width="0.0153%" height="15" fill="rgb(254,191,54)" fg:x="50" fg:w="5"/><text x="0.4028%" y="8047.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="0.1528%" y="8021" width="0.0153%" height="15" fill="rgb(241,83,37)" fg:x="50" fg:w="5"/><text x="0.4028%" y="8031.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="0.1528%" y="8005" width="0.0153%" height="15" fill="rgb(233,36,39)" fg:x="50" fg:w="5"/><text x="0.4028%" y="8015.50"></text></g><g><title>[radeonsi_dri.so] (18 samples, 0.06%)</title><rect x="0.1192%" y="8149" width="0.0550%" height="15" fill="rgb(226,3,54)" fg:x="39" fg:w="18"/><text x="0.3692%" y="8159.50"></text></g><g><title>cfree (13 samples, 0.04%)</title><rect x="0.1345%" y="8133" width="0.0397%" height="15" fill="rgb(245,192,40)" fg:x="44" fg:w="13"/><text x="0.3845%" y="8143.50"></text></g><g><title>[libc.so.6] (13 samples, 0.04%)</title><rect x="0.1345%" y="8117" width="0.0397%" height="15" fill="rgb(238,167,29)" fg:x="44" fg:w="13"/><text x="0.3845%" y="8127.50"></text></g><g><title>[libc.so.6] (13 samples, 0.04%)</title><rect x="0.1345%" y="8101" width="0.0397%" height="15" fill="rgb(232,182,51)" fg:x="44" fg:w="13"/><text x="0.3845%" y="8111.50"></text></g><g><title>[unknown] (10 samples, 0.03%)</title><rect x="0.1742%" y="8149" width="0.0306%" height="15" fill="rgb(231,60,39)" fg:x="57" fg:w="10"/><text x="0.4242%" y="8159.50"></text></g><g><title>[unknown] (8 samples, 0.02%)</title><rect x="0.1804%" y="8133" width="0.0245%" height="15" fill="rgb(208,69,12)" fg:x="59" fg:w="8"/><text x="0.4304%" y="8143.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="0.1895%" y="8117" width="0.0153%" height="15" fill="rgb(235,93,37)" fg:x="62" fg:w="5"/><text x="0.4395%" y="8127.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="0.1926%" y="8101" width="0.0122%" height="15" fill="rgb(213,116,39)" fg:x="63" fg:w="4"/><text x="0.4426%" y="8111.50"></text></g><g><title>[libc.so.6] (37 samples, 0.11%)</title><rect x="0.0948%" y="8181" width="0.1131%" height="15" fill="rgb(222,207,29)" fg:x="31" fg:w="37"/><text x="0.3448%" y="8191.50"></text></g><g><title>[libc.so.6] (37 samples, 0.11%)</title><rect x="0.0948%" y="8165" width="0.1131%" height="15" fill="rgb(206,96,30)" fg:x="31" fg:w="37"/><text x="0.3448%" y="8175.50"></text></g><g><title>[unknown] (10 samples, 0.03%)</title><rect x="0.2079%" y="8165" width="0.0306%" height="15" fill="rgb(218,138,4)" fg:x="68" fg:w="10"/><text x="0.4579%" y="8175.50"></text></g><g><title>[unknown] (10 samples, 0.03%)</title><rect x="0.2079%" y="8149" width="0.0306%" height="15" fill="rgb(250,191,14)" fg:x="68" fg:w="10"/><text x="0.4579%" y="8159.50"></text></g><g><title>[unknown] (10 samples, 0.03%)</title><rect x="0.2079%" y="8133" width="0.0306%" height="15" fill="rgb(239,60,40)" fg:x="68" fg:w="10"/><text x="0.4579%" y="8143.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="0.2232%" y="8117" width="0.0153%" height="15" fill="rgb(206,27,48)" fg:x="73" fg:w="5"/><text x="0.4732%" y="8127.50"></text></g><g><title>macroquad::quad_gl::MagicSnapshotter::new (5 samples, 0.02%)</title><rect x="0.2384%" y="8133" width="0.0153%" height="15" fill="rgb(225,35,8)" fg:x="78" fg:w="5"/><text x="0.4884%" y="8143.50"></text></g><g><title>&lt;miniquad::graphics::gl::GlContext as miniquad::graphics::RenderingBackend&gt;::new_shader (5 samples, 0.02%)</title><rect x="0.2537%" y="8117" width="0.0153%" height="15" fill="rgb(250,213,24)" fg:x="83" fg:w="5"/><text x="0.5037%" y="8127.50"></text></g><g><title>miniquad::graphics::gl::load_shader_internal (5 samples, 0.02%)</title><rect x="0.2537%" y="8101" width="0.0153%" height="15" fill="rgb(247,123,22)" fg:x="83" fg:w="5"/><text x="0.5037%" y="8111.50"></text></g><g><title>macroquad::quad_gl::QuadGl::new (11 samples, 0.03%)</title><rect x="0.2384%" y="8149" width="0.0336%" height="15" fill="rgb(231,138,38)" fg:x="78" fg:w="11"/><text x="0.4884%" y="8159.50"></text></g><g><title>macroquad::quad_gl::PipelinesStorage::new (6 samples, 0.02%)</title><rect x="0.2537%" y="8133" width="0.0183%" height="15" fill="rgb(231,145,46)" fg:x="83" fg:w="6"/><text x="0.5037%" y="8143.50"></text></g><g><title>macroquad::Context::new (12 samples, 0.04%)</title><rect x="0.2384%" y="8165" width="0.0367%" height="15" fill="rgb(251,118,11)" fg:x="78" fg:w="12"/><text x="0.4884%" y="8175.50"></text></g><g><title>miniquad::native::linux_x11::run (5 samples, 0.02%)</title><rect x="0.2782%" y="8165" width="0.0153%" height="15" fill="rgb(217,147,25)" fg:x="91" fg:w="5"/><text x="0.5282%" y="8175.50"></text></g><g><title>miniquad::native::linux_x11::glx_main_loop (5 samples, 0.02%)</title><rect x="0.2782%" y="8149" width="0.0153%" height="15" fill="rgb(247,81,37)" fg:x="91" fg:w="5"/><text x="0.5282%" y="8159.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (8 samples, 0.02%)</title><rect x="0.3149%" y="7989" width="0.0245%" height="15" fill="rgb(209,12,38)" fg:x="103" fg:w="8"/><text x="0.5649%" y="7999.50"></text></g><g><title>clock_gettime (7 samples, 0.02%)</title><rect x="0.3179%" y="7973" width="0.0214%" height="15" fill="rgb(227,1,9)" fg:x="104" fg:w="7"/><text x="0.5679%" y="7983.50"></text></g><g><title>__vdso_clock_gettime (7 samples, 0.02%)</title><rect x="0.3179%" y="7957" width="0.0214%" height="15" fill="rgb(248,47,43)" fg:x="104" fg:w="7"/><text x="0.5679%" y="7967.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.01%)</title><rect x="0.4646%" y="7973" width="0.0122%" height="15" fill="rgb(221,10,30)" fg:x="152" fg:w="4"/><text x="0.7146%" y="7983.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (4 samples, 0.01%)</title><rect x="0.4646%" y="7957" width="0.0122%" height="15" fill="rgb(210,229,1)" fg:x="152" fg:w="4"/><text x="0.7146%" y="7967.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 0.08%)</title><rect x="0.4769%" y="7973" width="0.0764%" height="15" fill="rgb(222,148,37)" fg:x="156" fg:w="25"/><text x="0.7269%" y="7983.50"></text></g><g><title>core::ptr::read (17 samples, 0.05%)</title><rect x="0.5013%" y="7957" width="0.0520%" height="15" fill="rgb(234,67,33)" fg:x="164" fg:w="17"/><text x="0.7513%" y="7967.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (89 samples, 0.27%)</title><rect x="0.5625%" y="7829" width="0.2721%" height="15" fill="rgb(247,98,35)" fg:x="184" fg:w="89"/><text x="0.8125%" y="7839.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (89 samples, 0.27%)</title><rect x="0.5625%" y="7813" width="0.2721%" height="15" fill="rgb(247,138,52)" fg:x="184" fg:w="89"/><text x="0.8125%" y="7823.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (89 samples, 0.27%)</title><rect x="0.5625%" y="7797" width="0.2721%" height="15" fill="rgb(213,79,30)" fg:x="184" fg:w="89"/><text x="0.8125%" y="7807.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (86 samples, 0.26%)</title><rect x="0.5716%" y="7781" width="0.2629%" height="15" fill="rgb(246,177,23)" fg:x="187" fg:w="86"/><text x="0.8216%" y="7791.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (86 samples, 0.26%)</title><rect x="0.5716%" y="7765" width="0.2629%" height="15" fill="rgb(230,62,27)" fg:x="187" fg:w="86"/><text x="0.8216%" y="7775.50"></text></g><g><title>alloc::alloc::alloc (86 samples, 0.26%)</title><rect x="0.5716%" y="7749" width="0.2629%" height="15" fill="rgb(216,154,8)" fg:x="187" fg:w="86"/><text x="0.8216%" y="7759.50"></text></g><g><title>malloc (81 samples, 0.25%)</title><rect x="0.5869%" y="7733" width="0.2476%" height="15" fill="rgb(244,35,45)" fg:x="192" fg:w="81"/><text x="0.8369%" y="7743.50"></text></g><g><title>[libc.so.6] (54 samples, 0.17%)</title><rect x="0.6695%" y="7717" width="0.1651%" height="15" fill="rgb(251,115,12)" fg:x="219" fg:w="54"/><text x="0.9195%" y="7727.50"></text></g><g><title>[libc.so.6] (10 samples, 0.03%)</title><rect x="0.8040%" y="7701" width="0.0306%" height="15" fill="rgb(240,54,50)" fg:x="263" fg:w="10"/><text x="1.0540%" y="7711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (102 samples, 0.31%)</title><rect x="0.5625%" y="7893" width="0.3118%" height="15" fill="rgb(233,84,52)" fg:x="184" fg:w="102"/><text x="0.8125%" y="7903.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (102 samples, 0.31%)</title><rect x="0.5625%" y="7877" width="0.3118%" height="15" fill="rgb(207,117,47)" fg:x="184" fg:w="102"/><text x="0.8125%" y="7887.50"></text></g><g><title>alloc::slice::hack::to_vec (102 samples, 0.31%)</title><rect x="0.5625%" y="7861" width="0.3118%" height="15" fill="rgb(249,43,39)" fg:x="184" fg:w="102"/><text x="0.8125%" y="7871.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (102 samples, 0.31%)</title><rect x="0.5625%" y="7845" width="0.3118%" height="15" fill="rgb(209,38,44)" fg:x="184" fg:w="102"/><text x="0.8125%" y="7855.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (13 samples, 0.04%)</title><rect x="0.8345%" y="7829" width="0.0397%" height="15" fill="rgb(236,212,23)" fg:x="273" fg:w="13"/><text x="1.0845%" y="7839.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (13 samples, 0.04%)</title><rect x="0.8345%" y="7813" width="0.0397%" height="15" fill="rgb(242,79,21)" fg:x="273" fg:w="13"/><text x="1.0845%" y="7823.50"></text></g><g><title>[libc.so.6] (11 samples, 0.03%)</title><rect x="0.8406%" y="7797" width="0.0336%" height="15" fill="rgb(211,96,35)" fg:x="275" fg:w="11"/><text x="1.0906%" y="7807.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (18 samples, 0.06%)</title><rect x="0.8773%" y="7893" width="0.0550%" height="15" fill="rgb(253,215,40)" fg:x="287" fg:w="18"/><text x="1.1273%" y="7903.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (18 samples, 0.06%)</title><rect x="0.8773%" y="7877" width="0.0550%" height="15" fill="rgb(211,81,21)" fg:x="287" fg:w="18"/><text x="1.1273%" y="7887.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (18 samples, 0.06%)</title><rect x="0.8773%" y="7861" width="0.0550%" height="15" fill="rgb(208,190,38)" fg:x="287" fg:w="18"/><text x="1.1273%" y="7871.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (18 samples, 0.06%)</title><rect x="0.8773%" y="7845" width="0.0550%" height="15" fill="rgb(235,213,38)" fg:x="287" fg:w="18"/><text x="1.1273%" y="7855.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (18 samples, 0.06%)</title><rect x="0.8773%" y="7829" width="0.0550%" height="15" fill="rgb(237,122,38)" fg:x="287" fg:w="18"/><text x="1.1273%" y="7839.50"></text></g><g><title>alloc::alloc::alloc (18 samples, 0.06%)</title><rect x="0.8773%" y="7813" width="0.0550%" height="15" fill="rgb(244,218,35)" fg:x="287" fg:w="18"/><text x="1.1273%" y="7823.50"></text></g><g><title>malloc (18 samples, 0.06%)</title><rect x="0.8773%" y="7797" width="0.0550%" height="15" fill="rgb(240,68,47)" fg:x="287" fg:w="18"/><text x="1.1273%" y="7807.50"></text></g><g><title>[libc.so.6] (15 samples, 0.05%)</title><rect x="0.8865%" y="7781" width="0.0459%" height="15" fill="rgb(210,16,53)" fg:x="290" fg:w="15"/><text x="1.1365%" y="7791.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (129 samples, 0.39%)</title><rect x="0.5533%" y="7957" width="0.3943%" height="15" fill="rgb(235,124,12)" fg:x="181" fg:w="129"/><text x="0.8033%" y="7967.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (129 samples, 0.39%)</title><rect x="0.5533%" y="7941" width="0.3943%" height="15" fill="rgb(224,169,11)" fg:x="181" fg:w="129"/><text x="0.8033%" y="7951.50"></text></g><g><title>alloc::slice::hack::to_vec (129 samples, 0.39%)</title><rect x="0.5533%" y="7925" width="0.3943%" height="15" fill="rgb(250,166,2)" fg:x="181" fg:w="129"/><text x="0.8033%" y="7935.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (129 samples, 0.39%)</title><rect x="0.5533%" y="7909" width="0.3943%" height="15" fill="rgb(242,216,29)" fg:x="181" fg:w="129"/><text x="0.8033%" y="7919.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (5 samples, 0.02%)</title><rect x="0.9324%" y="7893" width="0.0153%" height="15" fill="rgb(230,116,27)" fg:x="305" fg:w="5"/><text x="1.1824%" y="7903.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.02%)</title><rect x="0.9324%" y="7877" width="0.0153%" height="15" fill="rgb(228,99,48)" fg:x="305" fg:w="5"/><text x="1.1824%" y="7887.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="0.9354%" y="7861" width="0.0122%" height="15" fill="rgb(253,11,6)" fg:x="306" fg:w="4"/><text x="1.1854%" y="7871.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (18 samples, 0.06%)</title><rect x="0.9537%" y="7765" width="0.0550%" height="15" fill="rgb(247,143,39)" fg:x="312" fg:w="18"/><text x="1.2037%" y="7775.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (18 samples, 0.06%)</title><rect x="0.9537%" y="7749" width="0.0550%" height="15" fill="rgb(236,97,10)" fg:x="312" fg:w="18"/><text x="1.2037%" y="7759.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (18 samples, 0.06%)</title><rect x="0.9537%" y="7733" width="0.0550%" height="15" fill="rgb(233,208,19)" fg:x="312" fg:w="18"/><text x="1.2037%" y="7743.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17 samples, 0.05%)</title><rect x="0.9568%" y="7717" width="0.0520%" height="15" fill="rgb(216,164,2)" fg:x="313" fg:w="17"/><text x="1.2068%" y="7727.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17 samples, 0.05%)</title><rect x="0.9568%" y="7701" width="0.0520%" height="15" fill="rgb(220,129,5)" fg:x="313" fg:w="17"/><text x="1.2068%" y="7711.50"></text></g><g><title>alloc::alloc::alloc (17 samples, 0.05%)</title><rect x="0.9568%" y="7685" width="0.0520%" height="15" fill="rgb(242,17,10)" fg:x="313" fg:w="17"/><text x="1.2068%" y="7695.50"></text></g><g><title>malloc (16 samples, 0.05%)</title><rect x="0.9599%" y="7669" width="0.0489%" height="15" fill="rgb(242,107,0)" fg:x="314" fg:w="16"/><text x="1.2099%" y="7679.50"></text></g><g><title>[libc.so.6] (9 samples, 0.03%)</title><rect x="0.9813%" y="7653" width="0.0275%" height="15" fill="rgb(251,28,31)" fg:x="321" fg:w="9"/><text x="1.2313%" y="7663.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (21 samples, 0.06%)</title><rect x="0.9537%" y="7829" width="0.0642%" height="15" fill="rgb(233,223,10)" fg:x="312" fg:w="21"/><text x="1.2037%" y="7839.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (21 samples, 0.06%)</title><rect x="0.9537%" y="7813" width="0.0642%" height="15" fill="rgb(215,21,27)" fg:x="312" fg:w="21"/><text x="1.2037%" y="7823.50"></text></g><g><title>alloc::slice::hack::to_vec (21 samples, 0.06%)</title><rect x="0.9537%" y="7797" width="0.0642%" height="15" fill="rgb(232,23,21)" fg:x="312" fg:w="21"/><text x="1.2037%" y="7807.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (21 samples, 0.06%)</title><rect x="0.9537%" y="7781" width="0.0642%" height="15" fill="rgb(244,5,23)" fg:x="312" fg:w="21"/><text x="1.2037%" y="7791.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.01%)</title><rect x="1.0179%" y="7829" width="0.0122%" height="15" fill="rgb(226,81,46)" fg:x="333" fg:w="4"/><text x="1.2679%" y="7839.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.01%)</title><rect x="1.0179%" y="7813" width="0.0122%" height="15" fill="rgb(247,70,30)" fg:x="333" fg:w="4"/><text x="1.2679%" y="7823.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.01%)</title><rect x="1.0179%" y="7797" width="0.0122%" height="15" fill="rgb(212,68,19)" fg:x="333" fg:w="4"/><text x="1.2679%" y="7807.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.01%)</title><rect x="1.0179%" y="7781" width="0.0122%" height="15" fill="rgb(240,187,13)" fg:x="333" fg:w="4"/><text x="1.2679%" y="7791.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.01%)</title><rect x="1.0179%" y="7765" width="0.0122%" height="15" fill="rgb(223,113,26)" fg:x="333" fg:w="4"/><text x="1.2679%" y="7775.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.01%)</title><rect x="1.0179%" y="7749" width="0.0122%" height="15" fill="rgb(206,192,2)" fg:x="333" fg:w="4"/><text x="1.2679%" y="7759.50"></text></g><g><title>malloc (4 samples, 0.01%)</title><rect x="1.0179%" y="7733" width="0.0122%" height="15" fill="rgb(241,108,4)" fg:x="333" fg:w="4"/><text x="1.2679%" y="7743.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="1.0179%" y="7717" width="0.0122%" height="15" fill="rgb(247,173,49)" fg:x="333" fg:w="4"/><text x="1.2679%" y="7727.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (27 samples, 0.08%)</title><rect x="0.9507%" y="7893" width="0.0825%" height="15" fill="rgb(224,114,35)" fg:x="311" fg:w="27"/><text x="1.2007%" y="7903.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (27 samples, 0.08%)</title><rect x="0.9507%" y="7877" width="0.0825%" height="15" fill="rgb(245,159,27)" fg:x="311" fg:w="27"/><text x="1.2007%" y="7887.50"></text></g><g><title>alloc::slice::hack::to_vec (27 samples, 0.08%)</title><rect x="0.9507%" y="7861" width="0.0825%" height="15" fill="rgb(245,172,44)" fg:x="311" fg:w="27"/><text x="1.2007%" y="7871.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (27 samples, 0.08%)</title><rect x="0.9507%" y="7845" width="0.0825%" height="15" fill="rgb(236,23,11)" fg:x="311" fg:w="27"/><text x="1.2007%" y="7855.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (28 samples, 0.09%)</title><rect x="0.9507%" y="7941" width="0.0856%" height="15" fill="rgb(205,117,38)" fg:x="311" fg:w="28"/><text x="1.2007%" y="7951.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (28 samples, 0.09%)</title><rect x="0.9507%" y="7925" width="0.0856%" height="15" fill="rgb(237,72,25)" fg:x="311" fg:w="28"/><text x="1.2007%" y="7935.50"></text></g><g><title>&lt;tetrs::logic::state::State as core::clone::Clone&gt;::clone (28 samples, 0.09%)</title><rect x="0.9507%" y="7909" width="0.0856%" height="15" fill="rgb(244,70,9)" fg:x="311" fg:w="28"/><text x="1.2007%" y="7919.50"></text></g><g><title>&lt;tetrs::logic::state::State as core::clone::Clone&gt;::clone (159 samples, 0.49%)</title><rect x="0.5533%" y="7973" width="0.4860%" height="15" fill="rgb(217,125,39)" fg:x="181" fg:w="159"/><text x="0.8033%" y="7983.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (30 samples, 0.09%)</title><rect x="0.9476%" y="7957" width="0.0917%" height="15" fill="rgb(235,36,10)" fg:x="310" fg:w="30"/><text x="1.1976%" y="7967.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (324 samples, 0.99%)</title><rect x="1.0393%" y="7973" width="0.9904%" height="15" fill="rgb(251,123,47)" fg:x="340" fg:w="324"/><text x="1.2893%" y="7983.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (322 samples, 0.98%)</title><rect x="1.0455%" y="7957" width="0.9843%" height="15" fill="rgb(221,13,13)" fg:x="342" fg:w="322"/><text x="1.2955%" y="7967.50"></text></g><g><title>alloc::alloc::exchange_malloc (283 samples, 0.87%)</title><rect x="1.1647%" y="7941" width="0.8651%" height="15" fill="rgb(238,131,9)" fg:x="381" fg:w="283"/><text x="1.4147%" y="7951.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (283 samples, 0.87%)</title><rect x="1.1647%" y="7925" width="0.8651%" height="15" fill="rgb(211,50,8)" fg:x="381" fg:w="283"/><text x="1.4147%" y="7935.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (283 samples, 0.87%)</title><rect x="1.1647%" y="7909" width="0.8651%" height="15" fill="rgb(245,182,24)" fg:x="381" fg:w="283"/><text x="1.4147%" y="7919.50"></text></g><g><title>alloc::alloc::alloc (283 samples, 0.87%)</title><rect x="1.1647%" y="7893" width="0.8651%" height="15" fill="rgb(242,14,37)" fg:x="381" fg:w="283"/><text x="1.4147%" y="7903.50"></text></g><g><title>malloc (278 samples, 0.85%)</title><rect x="1.1800%" y="7877" width="0.8498%" height="15" fill="rgb(246,228,12)" fg:x="386" fg:w="278"/><text x="1.4300%" y="7887.50"></text></g><g><title>[libc.so.6] (231 samples, 0.71%)</title><rect x="1.3236%" y="7861" width="0.7061%" height="15" fill="rgb(213,55,15)" fg:x="433" fg:w="231"/><text x="1.5736%" y="7871.50"></text></g><g><title>[libc.so.6] (42 samples, 0.13%)</title><rect x="1.9014%" y="7845" width="0.1284%" height="15" fill="rgb(209,9,3)" fg:x="622" fg:w="42"/><text x="2.1514%" y="7855.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::is_empty (4 samples, 0.01%)</title><rect x="2.0298%" y="7973" width="0.0122%" height="15" fill="rgb(230,59,30)" fg:x="664" fg:w="4"/><text x="2.2798%" y="7983.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (4 samples, 0.01%)</title><rect x="2.0298%" y="7957" width="0.0122%" height="15" fill="rgb(209,121,21)" fg:x="664" fg:w="4"/><text x="2.2798%" y="7967.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (49 samples, 0.15%)</title><rect x="2.0542%" y="7877" width="0.1498%" height="15" fill="rgb(220,109,13)" fg:x="672" fg:w="49"/><text x="2.3042%" y="7887.50"></text></g><g><title>alloc::alloc::dealloc (49 samples, 0.15%)</title><rect x="2.0542%" y="7861" width="0.1498%" height="15" fill="rgb(232,18,1)" fg:x="672" fg:w="49"/><text x="2.3042%" y="7871.50"></text></g><g><title>cfree (46 samples, 0.14%)</title><rect x="2.0634%" y="7845" width="0.1406%" height="15" fill="rgb(215,41,42)" fg:x="675" fg:w="46"/><text x="2.3134%" y="7855.50"></text></g><g><title>[libc.so.6] (35 samples, 0.11%)</title><rect x="2.0970%" y="7829" width="0.1070%" height="15" fill="rgb(224,123,36)" fg:x="686" fg:w="35"/><text x="2.3470%" y="7839.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (52 samples, 0.16%)</title><rect x="2.0481%" y="7957" width="0.1590%" height="15" fill="rgb(240,125,3)" fg:x="670" fg:w="52"/><text x="2.2981%" y="7967.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u16&gt;]&gt; (50 samples, 0.15%)</title><rect x="2.0542%" y="7941" width="0.1528%" height="15" fill="rgb(205,98,50)" fg:x="672" fg:w="50"/><text x="2.3042%" y="7951.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u16&gt;&gt; (50 samples, 0.15%)</title><rect x="2.0542%" y="7925" width="0.1528%" height="15" fill="rgb(205,185,37)" fg:x="672" fg:w="50"/><text x="2.3042%" y="7935.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u16&gt;&gt; (50 samples, 0.15%)</title><rect x="2.0542%" y="7909" width="0.1528%" height="15" fill="rgb(238,207,15)" fg:x="672" fg:w="50"/><text x="2.3042%" y="7919.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (50 samples, 0.15%)</title><rect x="2.0542%" y="7893" width="0.1528%" height="15" fill="rgb(213,199,42)" fg:x="672" fg:w="50"/><text x="2.3042%" y="7903.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (56 samples, 0.17%)</title><rect x="2.0481%" y="7973" width="0.1712%" height="15" fill="rgb(235,201,11)" fg:x="670" fg:w="56"/><text x="2.2981%" y="7983.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (4 samples, 0.01%)</title><rect x="2.2071%" y="7957" width="0.0122%" height="15" fill="rgb(207,46,11)" fg:x="722" fg:w="4"/><text x="2.4571%" y="7967.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="2.2071%" y="7941" width="0.0122%" height="15" fill="rgb(241,35,35)" fg:x="722" fg:w="4"/><text x="2.4571%" y="7951.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.01%)</title><rect x="2.2071%" y="7925" width="0.0122%" height="15" fill="rgb(243,32,47)" fg:x="722" fg:w="4"/><text x="2.4571%" y="7935.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.01%)</title><rect x="2.2071%" y="7909" width="0.0122%" height="15" fill="rgb(247,202,23)" fg:x="722" fg:w="4"/><text x="2.4571%" y="7919.50"></text></g><g><title>cfree (4 samples, 0.01%)</title><rect x="2.2071%" y="7893" width="0.0122%" height="15" fill="rgb(219,102,11)" fg:x="722" fg:w="4"/><text x="2.4571%" y="7903.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.02%)</title><rect x="2.2376%" y="7957" width="0.0214%" height="15" fill="rgb(243,110,44)" fg:x="732" fg:w="7"/><text x="2.4876%" y="7967.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="2.2254%" y="7973" width="0.1009%" height="15" fill="rgb(222,74,54)" fg:x="728" fg:w="33"/><text x="2.4754%" y="7983.50"></text></g><g><title>cfree (22 samples, 0.07%)</title><rect x="2.2590%" y="7957" width="0.0673%" height="15" fill="rgb(216,99,12)" fg:x="739" fg:w="22"/><text x="2.5090%" y="7967.50"></text></g><g><title>[libc.so.6] (20 samples, 0.06%)</title><rect x="2.2652%" y="7941" width="0.0611%" height="15" fill="rgb(226,22,26)" fg:x="741" fg:w="20"/><text x="2.5152%" y="7951.50"></text></g><g><title>[libc.so.6] (9 samples, 0.03%)</title><rect x="2.2988%" y="7925" width="0.0275%" height="15" fill="rgb(217,163,10)" fg:x="752" fg:w="9"/><text x="2.5488%" y="7935.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;priority_queue::store::Index&gt;&gt; (7 samples, 0.02%)</title><rect x="2.3324%" y="7941" width="0.0214%" height="15" fill="rgb(213,25,53)" fg:x="763" fg:w="7"/><text x="2.5824%" y="7951.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;priority_queue::store::Index&gt;&gt; (7 samples, 0.02%)</title><rect x="2.3324%" y="7925" width="0.0214%" height="15" fill="rgb(252,105,26)" fg:x="763" fg:w="7"/><text x="2.5824%" y="7935.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.02%)</title><rect x="2.3324%" y="7909" width="0.0214%" height="15" fill="rgb(220,39,43)" fg:x="763" fg:w="7"/><text x="2.5824%" y="7919.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.02%)</title><rect x="2.3324%" y="7893" width="0.0214%" height="15" fill="rgb(229,68,48)" fg:x="763" fg:w="7"/><text x="2.5824%" y="7903.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.02%)</title><rect x="2.3324%" y="7877" width="0.0214%" height="15" fill="rgb(252,8,32)" fg:x="763" fg:w="7"/><text x="2.5824%" y="7887.50"></text></g><g><title>cfree (7 samples, 0.02%)</title><rect x="2.3324%" y="7861" width="0.0214%" height="15" fill="rgb(223,20,43)" fg:x="763" fg:w="7"/><text x="2.5824%" y="7871.50"></text></g><g><title>[libc.so.6] (7 samples, 0.02%)</title><rect x="2.3324%" y="7845" width="0.0214%" height="15" fill="rgb(229,81,49)" fg:x="763" fg:w="7"/><text x="2.5824%" y="7855.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="2.3416%" y="7829" width="0.0122%" height="15" fill="rgb(236,28,36)" fg:x="766" fg:w="4"/><text x="2.5916%" y="7839.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (60 samples, 0.18%)</title><rect x="2.4272%" y="7813" width="0.1834%" height="15" fill="rgb(249,185,26)" fg:x="794" fg:w="60"/><text x="2.6772%" y="7823.50"></text></g><g><title>alloc::alloc::dealloc (60 samples, 0.18%)</title><rect x="2.4272%" y="7797" width="0.1834%" height="15" fill="rgb(249,174,33)" fg:x="794" fg:w="60"/><text x="2.6772%" y="7807.50"></text></g><g><title>cfree (55 samples, 0.17%)</title><rect x="2.4425%" y="7781" width="0.1681%" height="15" fill="rgb(233,201,37)" fg:x="799" fg:w="55"/><text x="2.6925%" y="7791.50"></text></g><g><title>[libc.so.6] (41 samples, 0.13%)</title><rect x="2.4853%" y="7765" width="0.1253%" height="15" fill="rgb(221,78,26)" fg:x="813" fg:w="41"/><text x="2.7353%" y="7775.50"></text></g><g><title>cfree (63 samples, 0.19%)</title><rect x="2.6228%" y="7813" width="0.1926%" height="15" fill="rgb(250,127,30)" fg:x="858" fg:w="63"/><text x="2.8728%" y="7823.50"></text></g><g><title>[libc.so.6] (39 samples, 0.12%)</title><rect x="2.6962%" y="7797" width="0.1192%" height="15" fill="rgb(230,49,44)" fg:x="882" fg:w="39"/><text x="2.9462%" y="7807.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,123 samples, 3.43%)</title><rect x="2.8398%" y="7701" width="3.4329%" height="15" fill="rgb(229,67,23)" fg:x="929" fg:w="1123"/><text x="3.0898%" y="7711.50">&lt;al..</text></g><g><title>alloc::alloc::dealloc (1,123 samples, 3.43%)</title><rect x="2.8398%" y="7685" width="3.4329%" height="15" fill="rgb(249,83,47)" fg:x="929" fg:w="1123"/><text x="3.0898%" y="7695.50">all..</text></g><g><title>cfree (1,023 samples, 3.13%)</title><rect x="3.1455%" y="7669" width="3.1272%" height="15" fill="rgb(215,43,3)" fg:x="1029" fg:w="1023"/><text x="3.3955%" y="7679.50">cfr..</text></g><g><title>[libc.so.6] (703 samples, 2.15%)</title><rect x="4.1237%" y="7653" width="2.1490%" height="15" fill="rgb(238,154,13)" fg:x="1349" fg:w="703"/><text x="4.3737%" y="7663.50">[..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,180 samples, 3.61%)</title><rect x="2.8307%" y="7781" width="3.6071%" height="15" fill="rgb(219,56,2)" fg:x="926" fg:w="1180"/><text x="3.0807%" y="7791.50">&lt;all..</text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u16&gt;]&gt; (1,180 samples, 3.61%)</title><rect x="2.8307%" y="7765" width="3.6071%" height="15" fill="rgb(233,0,4)" fg:x="926" fg:w="1180"/><text x="3.0807%" y="7775.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u16&gt;&gt; (1,179 samples, 3.60%)</title><rect x="2.8337%" y="7749" width="3.6041%" height="15" fill="rgb(235,30,7)" fg:x="927" fg:w="1179"/><text x="3.0837%" y="7759.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u16&gt;&gt; (1,179 samples, 3.60%)</title><rect x="2.8337%" y="7733" width="3.6041%" height="15" fill="rgb(250,79,13)" fg:x="927" fg:w="1179"/><text x="3.0837%" y="7743.50">core..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,179 samples, 3.60%)</title><rect x="2.8337%" y="7717" width="3.6041%" height="15" fill="rgb(211,146,34)" fg:x="927" fg:w="1179"/><text x="3.0837%" y="7727.50">&lt;all..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (54 samples, 0.17%)</title><rect x="6.2727%" y="7701" width="0.1651%" height="15" fill="rgb(228,22,38)" fg:x="2052" fg:w="54"/><text x="6.5227%" y="7711.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (4 samples, 0.01%)</title><rect x="6.4256%" y="7685" width="0.0122%" height="15" fill="rgb(235,168,5)" fg:x="2102" fg:w="4"/><text x="6.6756%" y="7695.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (157 samples, 0.48%)</title><rect x="6.4378%" y="7749" width="0.4799%" height="15" fill="rgb(221,155,16)" fg:x="2106" fg:w="157"/><text x="6.6878%" y="7759.50"></text></g><g><title>alloc::alloc::dealloc (157 samples, 0.48%)</title><rect x="6.4378%" y="7733" width="0.4799%" height="15" fill="rgb(215,215,53)" fg:x="2106" fg:w="157"/><text x="6.6878%" y="7743.50"></text></g><g><title>cfree (152 samples, 0.46%)</title><rect x="6.4531%" y="7717" width="0.4646%" height="15" fill="rgb(223,4,10)" fg:x="2111" fg:w="152"/><text x="6.7031%" y="7727.50"></text></g><g><title>[libc.so.6] (126 samples, 0.39%)</title><rect x="6.5326%" y="7701" width="0.3852%" height="15" fill="rgb(234,103,6)" fg:x="2137" fg:w="126"/><text x="6.7826%" y="7711.50"></text></g><g><title>[libc.so.6] (64 samples, 0.20%)</title><rect x="6.7221%" y="7685" width="0.1956%" height="15" fill="rgb(227,97,0)" fg:x="2199" fg:w="64"/><text x="6.9721%" y="7695.50"></text></g><g><title>[libc.so.6] (39 samples, 0.12%)</title><rect x="6.7985%" y="7669" width="0.1192%" height="15" fill="rgb(234,150,53)" fg:x="2224" fg:w="39"/><text x="7.0485%" y="7679.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="6.9055%" y="7653" width="0.0122%" height="15" fill="rgb(228,201,54)" fg:x="2259" fg:w="4"/><text x="7.1555%" y="7663.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (1,359 samples, 4.15%)</title><rect x="2.8307%" y="7797" width="4.1543%" height="15" fill="rgb(222,22,37)" fg:x="926" fg:w="1359"/><text x="3.0807%" y="7807.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (179 samples, 0.55%)</title><rect x="6.4378%" y="7781" width="0.5472%" height="15" fill="rgb(237,53,32)" fg:x="2106" fg:w="179"/><text x="6.6878%" y="7791.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (179 samples, 0.55%)</title><rect x="6.4378%" y="7765" width="0.5472%" height="15" fill="rgb(233,25,53)" fg:x="2106" fg:w="179"/><text x="6.6878%" y="7775.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (22 samples, 0.07%)</title><rect x="6.9177%" y="7749" width="0.0673%" height="15" fill="rgb(210,40,34)" fg:x="2263" fg:w="22"/><text x="7.1677%" y="7759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;char&gt;&gt; (5 samples, 0.02%)</title><rect x="6.9850%" y="7797" width="0.0153%" height="15" fill="rgb(241,220,44)" fg:x="2285" fg:w="5"/><text x="7.2350%" y="7807.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;char&gt;&gt; (5 samples, 0.02%)</title><rect x="6.9850%" y="7781" width="0.0153%" height="15" fill="rgb(235,28,35)" fg:x="2285" fg:w="5"/><text x="7.2350%" y="7791.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="6.9850%" y="7765" width="0.0153%" height="15" fill="rgb(210,56,17)" fg:x="2285" fg:w="5"/><text x="7.2350%" y="7775.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.02%)</title><rect x="7.0125%" y="7765" width="0.0214%" height="15" fill="rgb(224,130,29)" fg:x="2294" fg:w="7"/><text x="7.2625%" y="7775.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.02%)</title><rect x="7.0125%" y="7749" width="0.0214%" height="15" fill="rgb(235,212,8)" fg:x="2294" fg:w="7"/><text x="7.2625%" y="7759.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.02%)</title><rect x="7.0125%" y="7733" width="0.0214%" height="15" fill="rgb(223,33,50)" fg:x="2294" fg:w="7"/><text x="7.2625%" y="7743.50"></text></g><g><title>cfree (7 samples, 0.02%)</title><rect x="7.0125%" y="7717" width="0.0214%" height="15" fill="rgb(219,149,13)" fg:x="2294" fg:w="7"/><text x="7.2625%" y="7727.50"></text></g><g><title>[libc.so.6] (7 samples, 0.02%)</title><rect x="7.0125%" y="7701" width="0.0214%" height="15" fill="rgb(250,156,29)" fg:x="2294" fg:w="7"/><text x="7.2625%" y="7711.50"></text></g><g><title>cfree (6 samples, 0.02%)</title><rect x="7.0339%" y="7765" width="0.0183%" height="15" fill="rgb(216,193,19)" fg:x="2301" fg:w="6"/><text x="7.2839%" y="7775.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="7.0400%" y="7749" width="0.0122%" height="15" fill="rgb(216,135,14)" fg:x="2303" fg:w="4"/><text x="7.2900%" y="7759.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (89 samples, 0.27%)</title><rect x="7.0584%" y="7653" width="0.2721%" height="15" fill="rgb(241,47,5)" fg:x="2309" fg:w="89"/><text x="7.3084%" y="7663.50"></text></g><g><title>alloc::alloc::dealloc (89 samples, 0.27%)</title><rect x="7.0584%" y="7637" width="0.2721%" height="15" fill="rgb(233,42,35)" fg:x="2309" fg:w="89"/><text x="7.3084%" y="7647.50"></text></g><g><title>cfree (86 samples, 0.26%)</title><rect x="7.0675%" y="7621" width="0.2629%" height="15" fill="rgb(231,13,6)" fg:x="2312" fg:w="86"/><text x="7.3175%" y="7631.50"></text></g><g><title>[libc.so.6] (60 samples, 0.18%)</title><rect x="7.1470%" y="7605" width="0.1834%" height="15" fill="rgb(207,181,40)" fg:x="2338" fg:w="60"/><text x="7.3970%" y="7615.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (96 samples, 0.29%)</title><rect x="7.0584%" y="7733" width="0.2935%" height="15" fill="rgb(254,173,49)" fg:x="2309" fg:w="96"/><text x="7.3084%" y="7743.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u16&gt;]&gt; (96 samples, 0.29%)</title><rect x="7.0584%" y="7717" width="0.2935%" height="15" fill="rgb(221,1,38)" fg:x="2309" fg:w="96"/><text x="7.3084%" y="7727.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u16&gt;&gt; (96 samples, 0.29%)</title><rect x="7.0584%" y="7701" width="0.2935%" height="15" fill="rgb(206,124,46)" fg:x="2309" fg:w="96"/><text x="7.3084%" y="7711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u16&gt;&gt; (96 samples, 0.29%)</title><rect x="7.0584%" y="7685" width="0.2935%" height="15" fill="rgb(249,21,11)" fg:x="2309" fg:w="96"/><text x="7.3084%" y="7695.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (96 samples, 0.29%)</title><rect x="7.0584%" y="7669" width="0.2935%" height="15" fill="rgb(222,201,40)" fg:x="2309" fg:w="96"/><text x="7.3084%" y="7679.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (7 samples, 0.02%)</title><rect x="7.3304%" y="7653" width="0.0214%" height="15" fill="rgb(235,61,29)" fg:x="2398" fg:w="7"/><text x="7.5804%" y="7663.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (104 samples, 0.32%)</title><rect x="7.0584%" y="7749" width="0.3179%" height="15" fill="rgb(219,207,3)" fg:x="2309" fg:w="104"/><text x="7.3084%" y="7759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (8 samples, 0.02%)</title><rect x="7.3518%" y="7733" width="0.0245%" height="15" fill="rgb(222,56,46)" fg:x="2405" fg:w="8"/><text x="7.6018%" y="7743.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.02%)</title><rect x="7.3518%" y="7717" width="0.0245%" height="15" fill="rgb(239,76,54)" fg:x="2405" fg:w="8"/><text x="7.6018%" y="7727.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.02%)</title><rect x="7.3518%" y="7701" width="0.0245%" height="15" fill="rgb(231,124,27)" fg:x="2405" fg:w="8"/><text x="7.6018%" y="7711.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.02%)</title><rect x="7.3518%" y="7685" width="0.0245%" height="15" fill="rgb(249,195,6)" fg:x="2405" fg:w="8"/><text x="7.6018%" y="7695.50"></text></g><g><title>cfree (8 samples, 0.02%)</title><rect x="7.3518%" y="7669" width="0.0245%" height="15" fill="rgb(237,174,47)" fg:x="2405" fg:w="8"/><text x="7.6018%" y="7679.50"></text></g><g><title>[libc.so.6] (8 samples, 0.02%)</title><rect x="7.3518%" y="7653" width="0.0245%" height="15" fill="rgb(206,201,31)" fg:x="2405" fg:w="8"/><text x="7.6018%" y="7663.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="7.3579%" y="7637" width="0.0183%" height="15" fill="rgb(231,57,52)" fg:x="2407" fg:w="6"/><text x="7.6079%" y="7647.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;tetrs::logic::state::State&gt;&gt;&gt; (130 samples, 0.40%)</title><rect x="7.0003%" y="7797" width="0.3974%" height="15" fill="rgb(248,177,22)" fg:x="2290" fg:w="130"/><text x="7.2503%" y="7807.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;tetrs::logic::state::State&gt;&gt; (126 samples, 0.39%)</title><rect x="7.0125%" y="7781" width="0.3852%" height="15" fill="rgb(215,211,37)" fg:x="2294" fg:w="126"/><text x="7.2625%" y="7791.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (113 samples, 0.35%)</title><rect x="7.0522%" y="7765" width="0.3454%" height="15" fill="rgb(241,128,51)" fg:x="2307" fg:w="113"/><text x="7.3022%" y="7775.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (7 samples, 0.02%)</title><rect x="7.3763%" y="7749" width="0.0214%" height="15" fill="rgb(227,165,31)" fg:x="2413" fg:w="7"/><text x="7.6263%" y="7759.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (70 samples, 0.21%)</title><rect x="7.4924%" y="7637" width="0.2140%" height="15" fill="rgb(228,167,24)" fg:x="2451" fg:w="70"/><text x="7.7424%" y="7647.50"></text></g><g><title>alloc::alloc::dealloc (70 samples, 0.21%)</title><rect x="7.4924%" y="7621" width="0.2140%" height="15" fill="rgb(228,143,12)" fg:x="2451" fg:w="70"/><text x="7.7424%" y="7631.50"></text></g><g><title>cfree (68 samples, 0.21%)</title><rect x="7.4985%" y="7605" width="0.2079%" height="15" fill="rgb(249,149,8)" fg:x="2453" fg:w="68"/><text x="7.7485%" y="7615.50"></text></g><g><title>[libc.so.6] (46 samples, 0.14%)</title><rect x="7.5658%" y="7589" width="0.1406%" height="15" fill="rgb(243,35,44)" fg:x="2475" fg:w="46"/><text x="7.8158%" y="7599.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (71 samples, 0.22%)</title><rect x="7.4924%" y="7717" width="0.2170%" height="15" fill="rgb(246,89,9)" fg:x="2451" fg:w="71"/><text x="7.7424%" y="7727.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u16&gt;]&gt; (71 samples, 0.22%)</title><rect x="7.4924%" y="7701" width="0.2170%" height="15" fill="rgb(233,213,13)" fg:x="2451" fg:w="71"/><text x="7.7424%" y="7711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u16&gt;&gt; (71 samples, 0.22%)</title><rect x="7.4924%" y="7685" width="0.2170%" height="15" fill="rgb(233,141,41)" fg:x="2451" fg:w="71"/><text x="7.7424%" y="7695.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u16&gt;&gt; (71 samples, 0.22%)</title><rect x="7.4924%" y="7669" width="0.2170%" height="15" fill="rgb(239,167,4)" fg:x="2451" fg:w="71"/><text x="7.7424%" y="7679.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (71 samples, 0.22%)</title><rect x="7.4924%" y="7653" width="0.2170%" height="15" fill="rgb(209,217,16)" fg:x="2451" fg:w="71"/><text x="7.7424%" y="7663.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9 samples, 0.03%)</title><rect x="7.7095%" y="7685" width="0.0275%" height="15" fill="rgb(219,88,35)" fg:x="2522" fg:w="9"/><text x="7.9595%" y="7695.50"></text></g><g><title>alloc::alloc::dealloc (9 samples, 0.03%)</title><rect x="7.7095%" y="7669" width="0.0275%" height="15" fill="rgb(220,193,23)" fg:x="2522" fg:w="9"/><text x="7.9595%" y="7679.50"></text></g><g><title>cfree (7 samples, 0.02%)</title><rect x="7.7156%" y="7653" width="0.0214%" height="15" fill="rgb(230,90,52)" fg:x="2524" fg:w="7"/><text x="7.9656%" y="7663.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="7.7186%" y="7637" width="0.0183%" height="15" fill="rgb(252,106,19)" fg:x="2525" fg:w="6"/><text x="7.9686%" y="7647.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (83 samples, 0.25%)</title><rect x="7.4924%" y="7733" width="0.2537%" height="15" fill="rgb(206,74,20)" fg:x="2451" fg:w="83"/><text x="7.7424%" y="7743.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="7.7095%" y="7717" width="0.0367%" height="15" fill="rgb(230,138,44)" fg:x="2522" fg:w="12"/><text x="7.9595%" y="7727.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="7.7095%" y="7701" width="0.0367%" height="15" fill="rgb(235,182,43)" fg:x="2522" fg:w="12"/><text x="7.9595%" y="7711.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.02%)</title><rect x="7.7523%" y="7589" width="0.0245%" height="15" fill="rgb(242,16,51)" fg:x="2536" fg:w="8"/><text x="8.0023%" y="7599.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.02%)</title><rect x="7.7523%" y="7573" width="0.0245%" height="15" fill="rgb(248,9,4)" fg:x="2536" fg:w="8"/><text x="8.0023%" y="7583.50"></text></g><g><title>cfree (7 samples, 0.02%)</title><rect x="7.7553%" y="7557" width="0.0214%" height="15" fill="rgb(210,31,22)" fg:x="2537" fg:w="7"/><text x="8.0053%" y="7567.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.03%)</title><rect x="7.7523%" y="7669" width="0.0306%" height="15" fill="rgb(239,54,39)" fg:x="2536" fg:w="10"/><text x="8.0023%" y="7679.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u16&gt;]&gt; (10 samples, 0.03%)</title><rect x="7.7523%" y="7653" width="0.0306%" height="15" fill="rgb(230,99,41)" fg:x="2536" fg:w="10"/><text x="8.0023%" y="7663.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u16&gt;&gt; (10 samples, 0.03%)</title><rect x="7.7523%" y="7637" width="0.0306%" height="15" fill="rgb(253,106,12)" fg:x="2536" fg:w="10"/><text x="8.0023%" y="7647.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u16&gt;&gt; (10 samples, 0.03%)</title><rect x="7.7523%" y="7621" width="0.0306%" height="15" fill="rgb(213,46,41)" fg:x="2536" fg:w="10"/><text x="8.0023%" y="7631.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.03%)</title><rect x="7.7523%" y="7605" width="0.0306%" height="15" fill="rgb(215,133,35)" fg:x="2536" fg:w="10"/><text x="8.0023%" y="7615.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (17 samples, 0.05%)</title><rect x="7.7523%" y="7685" width="0.0520%" height="15" fill="rgb(213,28,5)" fg:x="2536" fg:w="17"/><text x="8.0023%" y="7695.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (7 samples, 0.02%)</title><rect x="7.7828%" y="7669" width="0.0214%" height="15" fill="rgb(215,77,49)" fg:x="2546" fg:w="7"/><text x="8.0328%" y="7679.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.02%)</title><rect x="7.7828%" y="7653" width="0.0214%" height="15" fill="rgb(248,100,22)" fg:x="2546" fg:w="7"/><text x="8.0328%" y="7663.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.02%)</title><rect x="7.7828%" y="7637" width="0.0214%" height="15" fill="rgb(208,67,9)" fg:x="2546" fg:w="7"/><text x="8.0328%" y="7647.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.02%)</title><rect x="7.7828%" y="7621" width="0.0214%" height="15" fill="rgb(219,133,21)" fg:x="2546" fg:w="7"/><text x="8.0328%" y="7631.50"></text></g><g><title>cfree (6 samples, 0.02%)</title><rect x="7.7859%" y="7605" width="0.0183%" height="15" fill="rgb(246,46,29)" fg:x="2547" fg:w="6"/><text x="8.0359%" y="7615.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="7.7859%" y="7589" width="0.0183%" height="15" fill="rgb(246,185,52)" fg:x="2547" fg:w="6"/><text x="8.0359%" y="7599.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;tetrs::logic::state::State&gt;&gt;&gt; (19 samples, 0.06%)</title><rect x="7.7492%" y="7733" width="0.0581%" height="15" fill="rgb(252,136,11)" fg:x="2535" fg:w="19"/><text x="7.9992%" y="7743.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;tetrs::logic::state::State&gt;&gt; (19 samples, 0.06%)</title><rect x="7.7492%" y="7717" width="0.0581%" height="15" fill="rgb(219,138,53)" fg:x="2535" fg:w="19"/><text x="7.9992%" y="7727.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (18 samples, 0.06%)</title><rect x="7.7523%" y="7701" width="0.0550%" height="15" fill="rgb(211,51,23)" fg:x="2536" fg:w="18"/><text x="8.0023%" y="7711.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (27 samples, 0.08%)</title><rect x="7.8287%" y="7573" width="0.0825%" height="15" fill="rgb(247,221,28)" fg:x="2561" fg:w="27"/><text x="8.0787%" y="7583.50"></text></g><g><title>alloc::alloc::dealloc (27 samples, 0.08%)</title><rect x="7.8287%" y="7557" width="0.0825%" height="15" fill="rgb(251,222,45)" fg:x="2561" fg:w="27"/><text x="8.0787%" y="7567.50"></text></g><g><title>cfree (27 samples, 0.08%)</title><rect x="7.8287%" y="7541" width="0.0825%" height="15" fill="rgb(217,162,53)" fg:x="2561" fg:w="27"/><text x="8.0787%" y="7551.50"></text></g><g><title>[libc.so.6] (20 samples, 0.06%)</title><rect x="7.8501%" y="7525" width="0.0611%" height="15" fill="rgb(229,93,14)" fg:x="2568" fg:w="20"/><text x="8.1001%" y="7535.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.09%)</title><rect x="7.8287%" y="7653" width="0.0917%" height="15" fill="rgb(209,67,49)" fg:x="2561" fg:w="30"/><text x="8.0787%" y="7663.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u16&gt;]&gt; (30 samples, 0.09%)</title><rect x="7.8287%" y="7637" width="0.0917%" height="15" fill="rgb(213,87,29)" fg:x="2561" fg:w="30"/><text x="8.0787%" y="7647.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u16&gt;&gt; (30 samples, 0.09%)</title><rect x="7.8287%" y="7621" width="0.0917%" height="15" fill="rgb(205,151,52)" fg:x="2561" fg:w="30"/><text x="8.0787%" y="7631.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u16&gt;&gt; (30 samples, 0.09%)</title><rect x="7.8287%" y="7605" width="0.0917%" height="15" fill="rgb(253,215,39)" fg:x="2561" fg:w="30"/><text x="8.0787%" y="7615.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.09%)</title><rect x="7.8287%" y="7589" width="0.0917%" height="15" fill="rgb(221,220,41)" fg:x="2561" fg:w="30"/><text x="8.0787%" y="7599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (40 samples, 0.12%)</title><rect x="7.8287%" y="7669" width="0.1223%" height="15" fill="rgb(218,133,21)" fg:x="2561" fg:w="40"/><text x="8.0787%" y="7679.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (10 samples, 0.03%)</title><rect x="7.9204%" y="7653" width="0.0306%" height="15" fill="rgb(221,193,43)" fg:x="2591" fg:w="10"/><text x="8.1704%" y="7663.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.03%)</title><rect x="7.9204%" y="7637" width="0.0306%" height="15" fill="rgb(240,128,52)" fg:x="2591" fg:w="10"/><text x="8.1704%" y="7647.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10 samples, 0.03%)</title><rect x="7.9204%" y="7621" width="0.0306%" height="15" fill="rgb(253,114,12)" fg:x="2591" fg:w="10"/><text x="8.1704%" y="7631.50"></text></g><g><title>alloc::alloc::dealloc (10 samples, 0.03%)</title><rect x="7.9204%" y="7605" width="0.0306%" height="15" fill="rgb(215,223,47)" fg:x="2591" fg:w="10"/><text x="8.1704%" y="7615.50"></text></g><g><title>cfree (10 samples, 0.03%)</title><rect x="7.9204%" y="7589" width="0.0306%" height="15" fill="rgb(248,225,23)" fg:x="2591" fg:w="10"/><text x="8.1704%" y="7599.50"></text></g><g><title>[libc.so.6] (9 samples, 0.03%)</title><rect x="7.9235%" y="7573" width="0.0275%" height="15" fill="rgb(250,108,0)" fg:x="2592" fg:w="9"/><text x="8.1735%" y="7583.50"></text></g><g><title>[libc.so.6] (8 samples, 0.02%)</title><rect x="7.9265%" y="7557" width="0.0245%" height="15" fill="rgb(228,208,7)" fg:x="2593" fg:w="8"/><text x="8.1765%" y="7567.50"></text></g><g><title>[libc.so.6] (7 samples, 0.02%)</title><rect x="7.9296%" y="7541" width="0.0214%" height="15" fill="rgb(244,45,10)" fg:x="2594" fg:w="7"/><text x="8.1796%" y="7551.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;tetrs::logic::state::State&gt;&gt;&gt; (4 samples, 0.01%)</title><rect x="7.9510%" y="7669" width="0.0122%" height="15" fill="rgb(207,125,25)" fg:x="2601" fg:w="4"/><text x="8.2010%" y="7679.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.04%)</title><rect x="7.9724%" y="7589" width="0.0397%" height="15" fill="rgb(210,195,18)" fg:x="2608" fg:w="13"/><text x="8.2224%" y="7599.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u16&gt;]&gt; (13 samples, 0.04%)</title><rect x="7.9724%" y="7573" width="0.0397%" height="15" fill="rgb(249,80,12)" fg:x="2608" fg:w="13"/><text x="8.2224%" y="7583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u16&gt;&gt; (13 samples, 0.04%)</title><rect x="7.9724%" y="7557" width="0.0397%" height="15" fill="rgb(221,65,9)" fg:x="2608" fg:w="13"/><text x="8.2224%" y="7567.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u16&gt;&gt; (13 samples, 0.04%)</title><rect x="7.9724%" y="7541" width="0.0397%" height="15" fill="rgb(235,49,36)" fg:x="2608" fg:w="13"/><text x="8.2224%" y="7551.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.04%)</title><rect x="7.9724%" y="7525" width="0.0397%" height="15" fill="rgb(225,32,20)" fg:x="2608" fg:w="13"/><text x="8.2224%" y="7535.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.04%)</title><rect x="7.9724%" y="7509" width="0.0397%" height="15" fill="rgb(215,141,46)" fg:x="2608" fg:w="13"/><text x="8.2224%" y="7519.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.04%)</title><rect x="7.9724%" y="7493" width="0.0397%" height="15" fill="rgb(250,160,47)" fg:x="2608" fg:w="13"/><text x="8.2224%" y="7503.50"></text></g><g><title>cfree (13 samples, 0.04%)</title><rect x="7.9724%" y="7477" width="0.0397%" height="15" fill="rgb(216,222,40)" fg:x="2608" fg:w="13"/><text x="8.2224%" y="7487.50"></text></g><g><title>[libc.so.6] (8 samples, 0.02%)</title><rect x="7.9877%" y="7461" width="0.0245%" height="15" fill="rgb(234,217,39)" fg:x="2613" fg:w="8"/><text x="8.2377%" y="7471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (16 samples, 0.05%)</title><rect x="7.9724%" y="7605" width="0.0489%" height="15" fill="rgb(207,178,40)" fg:x="2608" fg:w="16"/><text x="8.2224%" y="7615.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (6 samples, 0.02%)</title><rect x="8.0213%" y="7557" width="0.0183%" height="15" fill="rgb(221,136,13)" fg:x="2624" fg:w="6"/><text x="8.2713%" y="7567.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;tetrs::logic::state::State&gt;&gt;&gt; (8 samples, 0.02%)</title><rect x="8.0213%" y="7605" width="0.0245%" height="15" fill="rgb(249,199,10)" fg:x="2624" fg:w="8"/><text x="8.2713%" y="7615.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;tetrs::logic::state::State&gt;&gt; (8 samples, 0.02%)</title><rect x="8.0213%" y="7589" width="0.0245%" height="15" fill="rgb(249,222,13)" fg:x="2624" fg:w="8"/><text x="8.2713%" y="7599.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (8 samples, 0.02%)</title><rect x="8.0213%" y="7573" width="0.0245%" height="15" fill="rgb(244,185,38)" fg:x="2624" fg:w="8"/><text x="8.2713%" y="7583.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.04%)</title><rect x="8.0488%" y="7445" width="0.0397%" height="15" fill="rgb(236,202,9)" fg:x="2633" fg:w="13"/><text x="8.2988%" y="7455.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.04%)</title><rect x="8.0488%" y="7429" width="0.0397%" height="15" fill="rgb(250,229,37)" fg:x="2633" fg:w="13"/><text x="8.2988%" y="7439.50"></text></g><g><title>cfree (12 samples, 0.04%)</title><rect x="8.0518%" y="7413" width="0.0367%" height="15" fill="rgb(206,174,23)" fg:x="2634" fg:w="12"/><text x="8.3018%" y="7423.50"></text></g><g><title>[libc.so.6] (7 samples, 0.02%)</title><rect x="8.0671%" y="7397" width="0.0214%" height="15" fill="rgb(211,33,43)" fg:x="2639" fg:w="7"/><text x="8.3171%" y="7407.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.05%)</title><rect x="8.0488%" y="7525" width="0.0459%" height="15" fill="rgb(245,58,50)" fg:x="2633" fg:w="15"/><text x="8.2988%" y="7535.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u16&gt;]&gt; (15 samples, 0.05%)</title><rect x="8.0488%" y="7509" width="0.0459%" height="15" fill="rgb(244,68,36)" fg:x="2633" fg:w="15"/><text x="8.2988%" y="7519.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u16&gt;&gt; (15 samples, 0.05%)</title><rect x="8.0488%" y="7493" width="0.0459%" height="15" fill="rgb(232,229,15)" fg:x="2633" fg:w="15"/><text x="8.2988%" y="7503.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u16&gt;&gt; (15 samples, 0.05%)</title><rect x="8.0488%" y="7477" width="0.0459%" height="15" fill="rgb(254,30,23)" fg:x="2633" fg:w="15"/><text x="8.2988%" y="7487.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.05%)</title><rect x="8.0488%" y="7461" width="0.0459%" height="15" fill="rgb(235,160,14)" fg:x="2633" fg:w="15"/><text x="8.2988%" y="7471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (18 samples, 0.06%)</title><rect x="8.0488%" y="7541" width="0.0550%" height="15" fill="rgb(212,155,44)" fg:x="2633" fg:w="18"/><text x="8.2988%" y="7551.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (15 samples, 0.05%)</title><rect x="8.1038%" y="7397" width="0.0459%" height="15" fill="rgb(226,2,50)" fg:x="2651" fg:w="15"/><text x="8.3538%" y="7407.50"></text></g><g><title>alloc::alloc::dealloc (15 samples, 0.05%)</title><rect x="8.1038%" y="7381" width="0.0459%" height="15" fill="rgb(234,177,6)" fg:x="2651" fg:w="15"/><text x="8.3538%" y="7391.50"></text></g><g><title>cfree (15 samples, 0.05%)</title><rect x="8.1038%" y="7365" width="0.0459%" height="15" fill="rgb(217,24,9)" fg:x="2651" fg:w="15"/><text x="8.3538%" y="7375.50"></text></g><g><title>[libc.so.6] (9 samples, 0.03%)</title><rect x="8.1222%" y="7349" width="0.0275%" height="15" fill="rgb(220,13,46)" fg:x="2657" fg:w="9"/><text x="8.3722%" y="7359.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.05%)</title><rect x="8.1038%" y="7477" width="0.0489%" height="15" fill="rgb(239,221,27)" fg:x="2651" fg:w="16"/><text x="8.3538%" y="7487.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u16&gt;]&gt; (16 samples, 0.05%)</title><rect x="8.1038%" y="7461" width="0.0489%" height="15" fill="rgb(222,198,25)" fg:x="2651" fg:w="16"/><text x="8.3538%" y="7471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u16&gt;&gt; (16 samples, 0.05%)</title><rect x="8.1038%" y="7445" width="0.0489%" height="15" fill="rgb(211,99,13)" fg:x="2651" fg:w="16"/><text x="8.3538%" y="7455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u16&gt;&gt; (16 samples, 0.05%)</title><rect x="8.1038%" y="7429" width="0.0489%" height="15" fill="rgb(232,111,31)" fg:x="2651" fg:w="16"/><text x="8.3538%" y="7439.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.05%)</title><rect x="8.1038%" y="7413" width="0.0489%" height="15" fill="rgb(245,82,37)" fg:x="2651" fg:w="16"/><text x="8.3538%" y="7423.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;tetrs::logic::state::State&gt;&gt;&gt; (20 samples, 0.06%)</title><rect x="8.1038%" y="7541" width="0.0611%" height="15" fill="rgb(227,149,46)" fg:x="2651" fg:w="20"/><text x="8.3538%" y="7551.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;tetrs::logic::state::State&gt;&gt; (20 samples, 0.06%)</title><rect x="8.1038%" y="7525" width="0.0611%" height="15" fill="rgb(218,36,50)" fg:x="2651" fg:w="20"/><text x="8.3538%" y="7535.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (20 samples, 0.06%)</title><rect x="8.1038%" y="7509" width="0.0611%" height="15" fill="rgb(226,80,48)" fg:x="2651" fg:w="20"/><text x="8.3538%" y="7519.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (20 samples, 0.06%)</title><rect x="8.1038%" y="7493" width="0.0611%" height="15" fill="rgb(238,224,15)" fg:x="2651" fg:w="20"/><text x="8.3538%" y="7503.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (4 samples, 0.01%)</title><rect x="8.1527%" y="7477" width="0.0122%" height="15" fill="rgb(241,136,10)" fg:x="2667" fg:w="4"/><text x="8.4027%" y="7487.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="8.1527%" y="7461" width="0.0122%" height="15" fill="rgb(208,32,45)" fg:x="2667" fg:w="4"/><text x="8.4027%" y="7471.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.01%)</title><rect x="8.1527%" y="7445" width="0.0122%" height="15" fill="rgb(207,135,9)" fg:x="2667" fg:w="4"/><text x="8.4027%" y="7455.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.01%)</title><rect x="8.1527%" y="7429" width="0.0122%" height="15" fill="rgb(206,86,44)" fg:x="2667" fg:w="4"/><text x="8.4027%" y="7439.50"></text></g><g><title>cfree (4 samples, 0.01%)</title><rect x="8.1527%" y="7413" width="0.0122%" height="15" fill="rgb(245,177,15)" fg:x="2667" fg:w="4"/><text x="8.4027%" y="7423.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="8.1527%" y="7397" width="0.0122%" height="15" fill="rgb(206,64,50)" fg:x="2667" fg:w="4"/><text x="8.4027%" y="7407.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="8.1527%" y="7381" width="0.0122%" height="15" fill="rgb(234,36,40)" fg:x="2667" fg:w="4"/><text x="8.4027%" y="7391.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,902 samples, 5.81%)</title><rect x="2.3538%" y="7893" width="5.8142%" height="15" fill="rgb(213,64,8)" fg:x="770" fg:w="1902"/><text x="2.6038%" y="7903.50">&lt;alloc:..</text></g><g><title>core::ptr::drop_in_place&lt;[indexmap::Bucket&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;,i32&gt;]&gt; (1,902 samples, 5.81%)</title><rect x="2.3538%" y="7877" width="5.8142%" height="15" fill="rgb(210,75,36)" fg:x="770" fg:w="1902"/><text x="2.6038%" y="7887.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;indexmap::Bucket&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;,i32&gt;&gt; (1,901 samples, 5.81%)</title><rect x="2.3569%" y="7861" width="5.8111%" height="15" fill="rgb(229,88,21)" fg:x="771" fg:w="1901"/><text x="2.6069%" y="7871.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (1,901 samples, 5.81%)</title><rect x="2.3569%" y="7845" width="5.8111%" height="15" fill="rgb(252,204,47)" fg:x="771" fg:w="1901"/><text x="2.6069%" y="7855.50">core::p..</text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,901 samples, 5.81%)</title><rect x="2.3569%" y="7829" width="5.8111%" height="15" fill="rgb(208,77,27)" fg:x="771" fg:w="1901"/><text x="2.6069%" y="7839.50">&lt;alloc:..</text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (1,751 samples, 5.35%)</title><rect x="2.8154%" y="7813" width="5.3526%" height="15" fill="rgb(221,76,26)" fg:x="921" fg:w="1751"/><text x="3.0654%" y="7823.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (252 samples, 0.77%)</title><rect x="7.3977%" y="7797" width="0.7703%" height="15" fill="rgb(225,139,18)" fg:x="2420" fg:w="252"/><text x="7.6477%" y="7807.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (244 samples, 0.75%)</title><rect x="7.4221%" y="7781" width="0.7459%" height="15" fill="rgb(230,137,11)" fg:x="2428" fg:w="244"/><text x="7.6721%" y="7791.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (244 samples, 0.75%)</title><rect x="7.4221%" y="7765" width="0.7459%" height="15" fill="rgb(212,28,1)" fg:x="2428" fg:w="244"/><text x="7.6721%" y="7775.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (223 samples, 0.68%)</title><rect x="7.4863%" y="7749" width="0.6817%" height="15" fill="rgb(248,164,17)" fg:x="2449" fg:w="223"/><text x="7.7363%" y="7759.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (118 samples, 0.36%)</title><rect x="7.8073%" y="7733" width="0.3607%" height="15" fill="rgb(222,171,42)" fg:x="2554" fg:w="118"/><text x="8.0573%" y="7743.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (115 samples, 0.35%)</title><rect x="7.8165%" y="7717" width="0.3515%" height="15" fill="rgb(243,84,45)" fg:x="2557" fg:w="115"/><text x="8.0665%" y="7727.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (115 samples, 0.35%)</title><rect x="7.8165%" y="7701" width="0.3515%" height="15" fill="rgb(252,49,23)" fg:x="2557" fg:w="115"/><text x="8.0665%" y="7711.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (111 samples, 0.34%)</title><rect x="7.8287%" y="7685" width="0.3393%" height="15" fill="rgb(215,19,7)" fg:x="2561" fg:w="111"/><text x="8.0787%" y="7695.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (67 samples, 0.20%)</title><rect x="7.9632%" y="7669" width="0.2048%" height="15" fill="rgb(238,81,41)" fg:x="2605" fg:w="67"/><text x="8.2132%" y="7679.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (67 samples, 0.20%)</title><rect x="7.9632%" y="7653" width="0.2048%" height="15" fill="rgb(210,199,37)" fg:x="2605" fg:w="67"/><text x="8.2132%" y="7663.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (67 samples, 0.20%)</title><rect x="7.9632%" y="7637" width="0.2048%" height="15" fill="rgb(244,192,49)" fg:x="2605" fg:w="67"/><text x="8.2132%" y="7647.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (64 samples, 0.20%)</title><rect x="7.9724%" y="7621" width="0.1956%" height="15" fill="rgb(226,211,11)" fg:x="2608" fg:w="64"/><text x="8.2224%" y="7631.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (40 samples, 0.12%)</title><rect x="8.0457%" y="7605" width="0.1223%" height="15" fill="rgb(236,162,54)" fg:x="2632" fg:w="40"/><text x="8.2957%" y="7615.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (40 samples, 0.12%)</title><rect x="8.0457%" y="7589" width="0.1223%" height="15" fill="rgb(220,229,9)" fg:x="2632" fg:w="40"/><text x="8.2957%" y="7599.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (40 samples, 0.12%)</title><rect x="8.0457%" y="7573" width="0.1223%" height="15" fill="rgb(250,87,22)" fg:x="2632" fg:w="40"/><text x="8.2957%" y="7583.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (39 samples, 0.12%)</title><rect x="8.0488%" y="7557" width="0.1192%" height="15" fill="rgb(239,43,17)" fg:x="2633" fg:w="39"/><text x="8.2988%" y="7567.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9 samples, 0.03%)</title><rect x="8.1680%" y="7861" width="0.0275%" height="15" fill="rgb(231,177,25)" fg:x="2672" fg:w="9"/><text x="8.4180%" y="7871.50"></text></g><g><title>alloc::alloc::dealloc (9 samples, 0.03%)</title><rect x="8.1680%" y="7845" width="0.0275%" height="15" fill="rgb(219,179,1)" fg:x="2672" fg:w="9"/><text x="8.4180%" y="7855.50"></text></g><g><title>cfree (9 samples, 0.03%)</title><rect x="8.1680%" y="7829" width="0.0275%" height="15" fill="rgb(238,219,53)" fg:x="2672" fg:w="9"/><text x="8.4180%" y="7839.50"></text></g><g><title>[libc.so.6] (8 samples, 0.02%)</title><rect x="8.1711%" y="7813" width="0.0245%" height="15" fill="rgb(232,167,36)" fg:x="2673" fg:w="8"/><text x="8.4211%" y="7823.50"></text></g><g><title>[libc.so.6] (8 samples, 0.02%)</title><rect x="8.1711%" y="7797" width="0.0245%" height="15" fill="rgb(244,19,51)" fg:x="2673" fg:w="8"/><text x="8.4211%" y="7807.50"></text></g><g><title>[libc.so.6] (8 samples, 0.02%)</title><rect x="8.1711%" y="7781" width="0.0245%" height="15" fill="rgb(224,6,22)" fg:x="2673" fg:w="8"/><text x="8.4211%" y="7791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;indexmap::Bucket&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;,i32&gt;&gt;&gt; (1,912 samples, 5.84%)</title><rect x="2.3538%" y="7909" width="5.8448%" height="15" fill="rgb(224,145,5)" fg:x="770" fg:w="1912"/><text x="2.6038%" y="7919.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;indexmap::Bucket&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;,i32&gt;&gt;&gt; (10 samples, 0.03%)</title><rect x="8.1680%" y="7893" width="0.0306%" height="15" fill="rgb(234,130,49)" fg:x="2672" fg:w="10"/><text x="8.4180%" y="7903.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.03%)</title><rect x="8.1680%" y="7877" width="0.0306%" height="15" fill="rgb(254,6,2)" fg:x="2672" fg:w="10"/><text x="8.4180%" y="7887.50"></text></g><g><title>core::ptr::drop_in_place&lt;priority_queue::priority_queue::PriorityQueue&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;,i32&gt;&gt; (1,922 samples, 5.88%)</title><rect x="2.3263%" y="7973" width="5.8753%" height="15" fill="rgb(208,96,46)" fg:x="761" fg:w="1922"/><text x="2.5763%" y="7983.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;priority_queue::store::Store&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;,i32&gt;&gt; (1,920 samples, 5.87%)</title><rect x="2.3324%" y="7957" width="5.8692%" height="15" fill="rgb(239,3,39)" fg:x="763" fg:w="1920"/><text x="2.5824%" y="7967.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;indexmap::map::IndexMap&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;,i32&gt;&gt; (1,913 samples, 5.85%)</title><rect x="2.3538%" y="7941" width="5.8478%" height="15" fill="rgb(233,210,1)" fg:x="770" fg:w="1913"/><text x="2.6038%" y="7951.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;indexmap::map::core::IndexMapCore&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;,i32&gt;&gt; (1,913 samples, 5.85%)</title><rect x="2.3538%" y="7925" width="5.8478%" height="15" fill="rgb(244,137,37)" fg:x="770" fg:w="1913"/><text x="2.6038%" y="7935.50">core::p..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="8.2597%" y="7765" width="0.0367%" height="15" fill="rgb(240,136,2)" fg:x="2702" fg:w="12"/><text x="8.5097%" y="7775.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u16&gt;]&gt; (12 samples, 0.04%)</title><rect x="8.2597%" y="7749" width="0.0367%" height="15" fill="rgb(239,18,37)" fg:x="2702" fg:w="12"/><text x="8.5097%" y="7759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u16&gt;&gt; (12 samples, 0.04%)</title><rect x="8.2597%" y="7733" width="0.0367%" height="15" fill="rgb(218,185,22)" fg:x="2702" fg:w="12"/><text x="8.5097%" y="7743.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u16&gt;&gt; (12 samples, 0.04%)</title><rect x="8.2597%" y="7717" width="0.0367%" height="15" fill="rgb(225,218,4)" fg:x="2702" fg:w="12"/><text x="8.5097%" y="7727.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="8.2597%" y="7701" width="0.0367%" height="15" fill="rgb(230,182,32)" fg:x="2702" fg:w="12"/><text x="8.5097%" y="7711.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.04%)</title><rect x="8.2597%" y="7685" width="0.0367%" height="15" fill="rgb(242,56,43)" fg:x="2702" fg:w="12"/><text x="8.5097%" y="7695.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.04%)</title><rect x="8.2597%" y="7669" width="0.0367%" height="15" fill="rgb(233,99,24)" fg:x="2702" fg:w="12"/><text x="8.5097%" y="7679.50"></text></g><g><title>cfree (12 samples, 0.04%)</title><rect x="8.2597%" y="7653" width="0.0367%" height="15" fill="rgb(234,209,42)" fg:x="2702" fg:w="12"/><text x="8.5097%" y="7663.50"></text></g><g><title>[libc.so.6] (8 samples, 0.02%)</title><rect x="8.2719%" y="7637" width="0.0245%" height="15" fill="rgb(227,7,12)" fg:x="2706" fg:w="8"/><text x="8.5219%" y="7647.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (13 samples, 0.04%)</title><rect x="8.2597%" y="7781" width="0.0397%" height="15" fill="rgb(245,203,43)" fg:x="2702" fg:w="13"/><text x="8.5097%" y="7791.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="8.2016%" y="7909" width="0.1009%" height="15" fill="rgb(238,205,33)" fg:x="2683" fg:w="33"/><text x="8.4516%" y="7919.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (33 samples, 0.10%)</title><rect x="8.2016%" y="7893" width="0.1009%" height="15" fill="rgb(231,56,7)" fg:x="2683" fg:w="33"/><text x="8.4516%" y="7903.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (32 samples, 0.10%)</title><rect x="8.2047%" y="7877" width="0.0978%" height="15" fill="rgb(244,186,29)" fg:x="2684" fg:w="32"/><text x="8.4547%" y="7887.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (32 samples, 0.10%)</title><rect x="8.2047%" y="7861" width="0.0978%" height="15" fill="rgb(234,111,31)" fg:x="2684" fg:w="32"/><text x="8.4547%" y="7871.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::rc::Rc&lt;tetrs::logic::state::State&gt;,())&gt; (32 samples, 0.10%)</title><rect x="8.2047%" y="7845" width="0.0978%" height="15" fill="rgb(241,149,10)" fg:x="2684" fg:w="32"/><text x="8.4547%" y="7855.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (32 samples, 0.10%)</title><rect x="8.2047%" y="7829" width="0.0978%" height="15" fill="rgb(249,206,44)" fg:x="2684" fg:w="32"/><text x="8.4547%" y="7839.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 0.10%)</title><rect x="8.2047%" y="7813" width="0.0978%" height="15" fill="rgb(251,153,30)" fg:x="2684" fg:w="32"/><text x="8.4547%" y="7823.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (14 samples, 0.04%)</title><rect x="8.2597%" y="7797" width="0.0428%" height="15" fill="rgb(239,152,38)" fg:x="2702" fg:w="14"/><text x="8.5097%" y="7807.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (35 samples, 0.11%)</title><rect x="8.2016%" y="7973" width="0.1070%" height="15" fill="rgb(249,139,47)" fg:x="2683" fg:w="35"/><text x="8.4516%" y="7983.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;,std::collections::hash::map::RandomState&gt;&gt; (35 samples, 0.11%)</title><rect x="8.2016%" y="7957" width="0.1070%" height="15" fill="rgb(244,64,35)" fg:x="2683" fg:w="35"/><text x="8.4516%" y="7967.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;,(),std::collections::hash::map::RandomState&gt;&gt; (35 samples, 0.11%)</title><rect x="8.2016%" y="7941" width="0.1070%" height="15" fill="rgb(216,46,15)" fg:x="2683" fg:w="35"/><text x="8.4516%" y="7951.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::rc::Rc&lt;tetrs::logic::state::State&gt;,())&gt;&gt; (35 samples, 0.11%)</title><rect x="8.2016%" y="7925" width="0.1070%" height="15" fill="rgb(250,74,19)" fg:x="2683" fg:w="35"/><text x="8.4516%" y="7935.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::swap_remove_finish (9 samples, 0.03%)</title><rect x="8.3147%" y="7941" width="0.0275%" height="15" fill="rgb(249,42,33)" fg:x="2720" fg:w="9"/><text x="8.5647%" y="7951.50"></text></g><g><title>indexmap::map::core::update_index (8 samples, 0.02%)</title><rect x="8.3178%" y="7925" width="0.0245%" height="15" fill="rgb(242,149,17)" fg:x="2721" fg:w="8"/><text x="8.5678%" y="7935.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get_mut (8 samples, 0.02%)</title><rect x="8.3178%" y="7909" width="0.0245%" height="15" fill="rgb(244,29,21)" fg:x="2721" fg:w="8"/><text x="8.5678%" y="7919.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (8 samples, 0.02%)</title><rect x="8.3178%" y="7893" width="0.0245%" height="15" fill="rgb(220,130,37)" fg:x="2721" fg:w="8"/><text x="8.5678%" y="7903.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_inner (8 samples, 0.02%)</title><rect x="8.3178%" y="7877" width="0.0245%" height="15" fill="rgb(211,67,2)" fg:x="2721" fg:w="8"/><text x="8.5678%" y="7887.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::erase (5 samples, 0.02%)</title><rect x="8.3422%" y="7909" width="0.0153%" height="15" fill="rgb(235,68,52)" fg:x="2729" fg:w="5"/><text x="8.5922%" y="7919.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::erase_no_drop (5 samples, 0.02%)</title><rect x="8.3422%" y="7893" width="0.0153%" height="15" fill="rgb(246,142,3)" fg:x="2729" fg:w="5"/><text x="8.5922%" y="7903.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::erase (5 samples, 0.02%)</title><rect x="8.3422%" y="7877" width="0.0153%" height="15" fill="rgb(241,25,7)" fg:x="2729" fg:w="5"/><text x="8.5922%" y="7887.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::swap_remove_index (19 samples, 0.06%)</title><rect x="8.3117%" y="7957" width="0.0581%" height="15" fill="rgb(242,119,39)" fg:x="2719" fg:w="19"/><text x="8.5617%" y="7967.50"></text></g><g><title>indexmap::map::core::erase_index (9 samples, 0.03%)</title><rect x="8.3422%" y="7941" width="0.0275%" height="15" fill="rgb(241,98,45)" fg:x="2729" fg:w="9"/><text x="8.5922%" y="7951.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::erase_entry (9 samples, 0.03%)</title><rect x="8.3422%" y="7925" width="0.0275%" height="15" fill="rgb(254,28,30)" fg:x="2729" fg:w="9"/><text x="8.5922%" y="7935.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (4 samples, 0.01%)</title><rect x="8.3575%" y="7909" width="0.0122%" height="15" fill="rgb(241,142,54)" fg:x="2734" fg:w="4"/><text x="8.6075%" y="7919.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_inner (4 samples, 0.01%)</title><rect x="8.3575%" y="7893" width="0.0122%" height="15" fill="rgb(222,85,15)" fg:x="2734" fg:w="4"/><text x="8.6075%" y="7903.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::gt (4 samples, 0.01%)</title><rect x="8.4126%" y="7941" width="0.0122%" height="15" fill="rgb(210,85,47)" fg:x="2752" fg:w="4"/><text x="8.6626%" y="7951.50"></text></g><g><title>priority_queue::store::Store&lt;I,P,H&gt;::get_priority_from_position (4 samples, 0.01%)</title><rect x="8.4278%" y="7941" width="0.0122%" height="15" fill="rgb(224,206,25)" fg:x="2757" fg:w="4"/><text x="8.6778%" y="7951.50"></text></g><g><title>priority_queue::priority_queue::PriorityQueue&lt;I,P,H&gt;::heapify (40 samples, 0.12%)</title><rect x="8.3698%" y="7957" width="0.1223%" height="15" fill="rgb(243,201,19)" fg:x="2738" fg:w="40"/><text x="8.6198%" y="7967.50"></text></g><g><title>priority_queue::store::Store&lt;I,P,H&gt;::swap (17 samples, 0.05%)</title><rect x="8.4401%" y="7941" width="0.0520%" height="15" fill="rgb(236,59,4)" fg:x="2761" fg:w="17"/><text x="8.6901%" y="7951.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (17 samples, 0.05%)</title><rect x="8.4401%" y="7925" width="0.0520%" height="15" fill="rgb(254,179,45)" fg:x="2761" fg:w="17"/><text x="8.6901%" y="7935.50"></text></g><g><title>core::ptr::swap (9 samples, 0.03%)</title><rect x="8.4645%" y="7909" width="0.0275%" height="15" fill="rgb(226,14,10)" fg:x="2769" fg:w="9"/><text x="8.7145%" y="7919.50"></text></g><g><title>core::intrinsics::copy (9 samples, 0.03%)</title><rect x="8.4645%" y="7893" width="0.0275%" height="15" fill="rgb(244,27,41)" fg:x="2769" fg:w="9"/><text x="8.7145%" y="7903.50"></text></g><g><title>priority_queue::priority_queue::PriorityQueue&lt;I,P,H&gt;::pop (71 samples, 0.22%)</title><rect x="8.3086%" y="7973" width="0.2170%" height="15" fill="rgb(235,35,32)" fg:x="2718" fg:w="71"/><text x="8.5586%" y="7983.50"></text></g><g><title>priority_queue::store::Store&lt;I,P,H&gt;::swap_remove (11 samples, 0.03%)</title><rect x="8.4920%" y="7957" width="0.0336%" height="15" fill="rgb(218,68,31)" fg:x="2778" fg:w="11"/><text x="8.7420%" y="7967.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::swap_remove (5 samples, 0.02%)</title><rect x="8.5104%" y="7941" width="0.0153%" height="15" fill="rgb(207,120,37)" fg:x="2784" fg:w="5"/><text x="8.7604%" y="7951.50"></text></g><g><title>alloc::raw_vec::finish_grow (56 samples, 0.17%)</title><rect x="8.6113%" y="7909" width="0.1712%" height="15" fill="rgb(227,98,0)" fg:x="2817" fg:w="56"/><text x="8.8613%" y="7919.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (54 samples, 0.17%)</title><rect x="8.6174%" y="7893" width="0.1651%" height="15" fill="rgb(207,7,3)" fg:x="2819" fg:w="54"/><text x="8.8674%" y="7903.50"></text></g><g><title>alloc::alloc::Global::grow_impl (54 samples, 0.17%)</title><rect x="8.6174%" y="7877" width="0.1651%" height="15" fill="rgb(206,98,19)" fg:x="2819" fg:w="54"/><text x="8.8674%" y="7887.50"></text></g><g><title>alloc::alloc::realloc (54 samples, 0.17%)</title><rect x="8.6174%" y="7861" width="0.1651%" height="15" fill="rgb(217,5,26)" fg:x="2819" fg:w="54"/><text x="8.8674%" y="7871.50"></text></g><g><title>realloc (53 samples, 0.16%)</title><rect x="8.6204%" y="7845" width="0.1620%" height="15" fill="rgb(235,190,38)" fg:x="2820" fg:w="53"/><text x="8.8704%" y="7855.50"></text></g><g><title>[libc.so.6] (43 samples, 0.13%)</title><rect x="8.6510%" y="7829" width="0.1314%" height="15" fill="rgb(247,86,24)" fg:x="2830" fg:w="43"/><text x="8.9010%" y="7839.50"></text></g><g><title>[libc.so.6] (39 samples, 0.12%)</title><rect x="8.6632%" y="7813" width="0.1192%" height="15" fill="rgb(205,101,16)" fg:x="2834" fg:w="39"/><text x="8.9132%" y="7823.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="8.7672%" y="7797" width="0.0153%" height="15" fill="rgb(246,168,33)" fg:x="2868" fg:w="5"/><text x="9.0172%" y="7807.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (60 samples, 0.18%)</title><rect x="8.6051%" y="7941" width="0.1834%" height="15" fill="rgb(231,114,1)" fg:x="2815" fg:w="60"/><text x="8.8551%" y="7951.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (60 samples, 0.18%)</title><rect x="8.6051%" y="7925" width="0.1834%" height="15" fill="rgb(207,184,53)" fg:x="2815" fg:w="60"/><text x="8.8551%" y="7935.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (69 samples, 0.21%)</title><rect x="8.5807%" y="7957" width="0.2109%" height="15" fill="rgb(224,95,51)" fg:x="2807" fg:w="69"/><text x="8.8307%" y="7967.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (5 samples, 0.02%)</title><rect x="8.8527%" y="7893" width="0.0153%" height="15" fill="rgb(212,188,45)" fg:x="2896" fg:w="5"/><text x="9.1027%" y="7903.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.02%)</title><rect x="8.8527%" y="7877" width="0.0153%" height="15" fill="rgb(223,154,38)" fg:x="2896" fg:w="5"/><text x="9.1027%" y="7887.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (205 samples, 0.63%)</title><rect x="8.8680%" y="7893" width="0.6267%" height="15" fill="rgb(251,22,52)" fg:x="2901" fg:w="205"/><text x="9.1180%" y="7903.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (164 samples, 0.50%)</title><rect x="8.9934%" y="7877" width="0.5013%" height="15" fill="rgb(229,209,22)" fg:x="2942" fg:w="164"/><text x="9.2434%" y="7887.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (10 samples, 0.03%)</title><rect x="9.5528%" y="7813" width="0.0306%" height="15" fill="rgb(234,138,34)" fg:x="3125" fg:w="10"/><text x="9.8028%" y="7823.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (5 samples, 0.02%)</title><rect x="9.5681%" y="7797" width="0.0153%" height="15" fill="rgb(212,95,11)" fg:x="3130" fg:w="5"/><text x="9.8181%" y="7807.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (32 samples, 0.10%)</title><rect x="9.4978%" y="7861" width="0.0978%" height="15" fill="rgb(240,179,47)" fg:x="3107" fg:w="32"/><text x="9.7478%" y="7871.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (27 samples, 0.08%)</title><rect x="9.5130%" y="7845" width="0.0825%" height="15" fill="rgb(240,163,11)" fg:x="3112" fg:w="27"/><text x="9.7630%" y="7855.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (27 samples, 0.08%)</title><rect x="9.5130%" y="7829" width="0.0825%" height="15" fill="rgb(236,37,12)" fg:x="3112" fg:w="27"/><text x="9.7630%" y="7839.50"></text></g><g><title>core::hash::sip::u8to64_le (4 samples, 0.01%)</title><rect x="9.5833%" y="7813" width="0.0122%" height="15" fill="rgb(232,164,16)" fg:x="3135" fg:w="4"/><text x="9.8333%" y="7823.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for char&gt;::hash (43 samples, 0.13%)</title><rect x="9.4947%" y="7893" width="0.1314%" height="15" fill="rgb(244,205,15)" fg:x="3106" fg:w="43"/><text x="9.7447%" y="7903.50"></text></g><g><title>core::hash::Hasher::write_u32 (43 samples, 0.13%)</title><rect x="9.4947%" y="7877" width="0.1314%" height="15" fill="rgb(223,117,47)" fg:x="3106" fg:w="43"/><text x="9.7447%" y="7887.50"></text></g><g><title>core::num::&lt;impl u32&gt;::to_ne_bytes (10 samples, 0.03%)</title><rect x="9.5956%" y="7861" width="0.0306%" height="15" fill="rgb(244,107,35)" fg:x="3139" fg:w="10"/><text x="9.8456%" y="7871.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (109 samples, 0.33%)</title><rect x="12.3651%" y="7797" width="0.3332%" height="15" fill="rgb(205,140,8)" fg:x="4045" fg:w="109"/><text x="12.6151%" y="7807.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (271 samples, 0.83%)</title><rect x="12.1542%" y="7813" width="0.8284%" height="15" fill="rgb(228,84,46)" fg:x="3976" fg:w="271"/><text x="12.4042%" y="7823.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (93 samples, 0.28%)</title><rect x="12.6983%" y="7797" width="0.2843%" height="15" fill="rgb(254,188,9)" fg:x="4154" fg:w="93"/><text x="12.9483%" y="7807.50"></text></g><g><title>core::cmp::min (127 samples, 0.39%)</title><rect x="12.9826%" y="7813" width="0.3882%" height="15" fill="rgb(206,112,54)" fg:x="4247" fg:w="127"/><text x="13.2326%" y="7823.50"></text></g><g><title>core::cmp::Ord::min (127 samples, 0.39%)</title><rect x="12.9826%" y="7797" width="0.3882%" height="15" fill="rgb(216,84,49)" fg:x="4247" fg:w="127"/><text x="13.2326%" y="7807.50"></text></g><g><title>core::cmp::min_by (127 samples, 0.39%)</title><rect x="12.9826%" y="7781" width="0.3882%" height="15" fill="rgb(214,194,35)" fg:x="4247" fg:w="127"/><text x="13.2326%" y="7791.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1,994 samples, 6.10%)</title><rect x="9.7576%" y="7861" width="6.0954%" height="15" fill="rgb(249,28,3)" fg:x="3192" fg:w="1994"/><text x="10.0076%" y="7871.50">&lt;std::co..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1,990 samples, 6.08%)</title><rect x="9.7698%" y="7845" width="6.0832%" height="15" fill="rgb(222,56,52)" fg:x="3196" fg:w="1990"/><text x="10.0198%" y="7855.50">&lt;core::h..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,990 samples, 6.08%)</title><rect x="9.7698%" y="7829" width="6.0832%" height="15" fill="rgb(245,217,50)" fg:x="3196" fg:w="1990"/><text x="10.0198%" y="7839.50">&lt;core::h..</text></g><g><title>core::hash::sip::u8to64_le (812 samples, 2.48%)</title><rect x="13.3708%" y="7813" width="2.4822%" height="15" fill="rgb(213,201,24)" fg:x="4374" fg:w="812"/><text x="13.6208%" y="7823.50">co..</text></g><g><title>core::intrinsics::copy_nonoverlapping (13 samples, 0.04%)</title><rect x="15.8133%" y="7797" width="0.0397%" height="15" fill="rgb(248,116,28)" fg:x="5173" fg:w="13"/><text x="16.0633%" y="7807.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::hash::Hash&gt;::hash (2,374 samples, 7.26%)</title><rect x="8.8252%" y="7925" width="7.2571%" height="15" fill="rgb(219,72,43)" fg:x="2887" fg:w="2374"/><text x="9.0752%" y="7935.50">&lt;alloc::rc..</text></g><g><title>&lt;tetrs::logic::state::State as core::hash::Hash&gt;::hash (2,374 samples, 7.26%)</title><rect x="8.8252%" y="7909" width="7.2571%" height="15" fill="rgb(209,138,14)" fg:x="2887" fg:w="2374"/><text x="9.0752%" y="7919.50">&lt;tetrs::lo..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (2,112 samples, 6.46%)</title><rect x="9.6261%" y="7893" width="6.4561%" height="15" fill="rgb(222,18,33)" fg:x="3149" fg:w="2112"/><text x="9.8761%" y="7903.50">core::ha..</text></g><g><title>core::hash::Hasher::write_u16 (2,112 samples, 6.46%)</title><rect x="9.6261%" y="7877" width="6.4561%" height="15" fill="rgb(213,199,7)" fg:x="3149" fg:w="2112"/><text x="9.8761%" y="7887.50">core::ha..</text></g><g><title>core::num::&lt;impl u16&gt;::to_ne_bytes (75 samples, 0.23%)</title><rect x="15.8530%" y="7861" width="0.2293%" height="15" fill="rgb(250,110,10)" fg:x="5186" fg:w="75"/><text x="16.1030%" y="7871.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (8 samples, 0.02%)</title><rect x="16.2779%" y="7861" width="0.0245%" height="15" fill="rgb(248,123,6)" fg:x="5325" fg:w="8"/><text x="16.5279%" y="7871.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (17 samples, 0.05%)</title><rect x="16.2718%" y="7877" width="0.0520%" height="15" fill="rgb(206,91,31)" fg:x="5323" fg:w="17"/><text x="16.5218%" y="7887.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (7 samples, 0.02%)</title><rect x="16.3024%" y="7861" width="0.0214%" height="15" fill="rgb(211,154,13)" fg:x="5333" fg:w="7"/><text x="16.5524%" y="7871.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (29 samples, 0.09%)</title><rect x="16.3330%" y="7861" width="0.0886%" height="15" fill="rgb(225,148,7)" fg:x="5343" fg:w="29"/><text x="16.5830%" y="7871.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (115 samples, 0.35%)</title><rect x="16.0823%" y="7925" width="0.3515%" height="15" fill="rgb(220,160,43)" fg:x="5261" fg:w="115"/><text x="16.3323%" y="7935.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (115 samples, 0.35%)</title><rect x="16.0823%" y="7909" width="0.3515%" height="15" fill="rgb(213,52,39)" fg:x="5261" fg:w="115"/><text x="16.3323%" y="7919.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (115 samples, 0.35%)</title><rect x="16.0823%" y="7893" width="0.3515%" height="15" fill="rgb(243,137,7)" fg:x="5261" fg:w="115"/><text x="16.3323%" y="7903.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (36 samples, 0.11%)</title><rect x="16.3238%" y="7877" width="0.1100%" height="15" fill="rgb(230,79,13)" fg:x="5340" fg:w="36"/><text x="16.5738%" y="7887.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (4 samples, 0.01%)</title><rect x="16.4216%" y="7861" width="0.0122%" height="15" fill="rgb(247,105,23)" fg:x="5372" fg:w="4"/><text x="16.6716%" y="7871.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (2,494 samples, 7.62%)</title><rect x="8.8252%" y="7941" width="7.6239%" height="15" fill="rgb(223,179,41)" fg:x="2887" fg:w="2494"/><text x="9.0752%" y="7951.50">indexmap::..</text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (5 samples, 0.02%)</title><rect x="16.4338%" y="7925" width="0.0153%" height="15" fill="rgb(218,9,34)" fg:x="5376" fg:w="5"/><text x="16.6838%" y="7935.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (5 samples, 0.02%)</title><rect x="16.4338%" y="7909" width="0.0153%" height="15" fill="rgb(222,106,8)" fg:x="5376" fg:w="5"/><text x="16.6838%" y="7919.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (5 samples, 0.02%)</title><rect x="16.4338%" y="7893" width="0.0153%" height="15" fill="rgb(211,220,0)" fg:x="5376" fg:w="5"/><text x="16.6838%" y="7903.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (5 samples, 0.02%)</title><rect x="16.4338%" y="7877" width="0.0153%" height="15" fill="rgb(229,52,16)" fg:x="5376" fg:w="5"/><text x="16.6838%" y="7887.50"></text></g><g><title>&lt;hashbrown::raw::inner::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.04%)</title><rect x="16.4980%" y="7893" width="0.0428%" height="15" fill="rgb(212,155,18)" fg:x="5397" fg:w="14"/><text x="16.7480%" y="7903.50"></text></g><g><title>hashbrown::raw::inner::ProbeSeq::move_next (7 samples, 0.02%)</title><rect x="16.5408%" y="7893" width="0.0214%" height="15" fill="rgb(242,21,14)" fg:x="5411" fg:w="7"/><text x="16.7908%" y="7903.50"></text></g><g><title>[libc.so.6] (38 samples, 0.12%)</title><rect x="16.6203%" y="7621" width="0.1162%" height="15" fill="rgb(222,19,48)" fg:x="5437" fg:w="38"/><text x="16.8703%" y="7631.50"></text></g><g><title>&lt;tetrs::logic::state::State as core::cmp::PartialEq&gt;::eq (55 samples, 0.17%)</title><rect x="16.5714%" y="7813" width="0.1681%" height="15" fill="rgb(232,45,27)" fg:x="5421" fg:w="55"/><text x="16.8214%" y="7823.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (55 samples, 0.17%)</title><rect x="16.5714%" y="7797" width="0.1681%" height="15" fill="rgb(249,103,42)" fg:x="5421" fg:w="55"/><text x="16.8214%" y="7807.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (55 samples, 0.17%)</title><rect x="16.5714%" y="7781" width="0.1681%" height="15" fill="rgb(246,81,33)" fg:x="5421" fg:w="55"/><text x="16.8214%" y="7791.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (55 samples, 0.17%)</title><rect x="16.5714%" y="7765" width="0.1681%" height="15" fill="rgb(252,33,42)" fg:x="5421" fg:w="55"/><text x="16.8214%" y="7775.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (54 samples, 0.17%)</title><rect x="16.5745%" y="7749" width="0.1651%" height="15" fill="rgb(209,212,41)" fg:x="5422" fg:w="54"/><text x="16.8245%" y="7759.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (54 samples, 0.17%)</title><rect x="16.5745%" y="7733" width="0.1651%" height="15" fill="rgb(207,154,6)" fg:x="5422" fg:w="54"/><text x="16.8245%" y="7743.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (47 samples, 0.14%)</title><rect x="16.5958%" y="7717" width="0.1437%" height="15" fill="rgb(223,64,47)" fg:x="5429" fg:w="47"/><text x="16.8458%" y="7727.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::_{{closure}} (47 samples, 0.14%)</title><rect x="16.5958%" y="7701" width="0.1437%" height="15" fill="rgb(211,161,38)" fg:x="5429" fg:w="47"/><text x="16.8458%" y="7711.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (47 samples, 0.14%)</title><rect x="16.5958%" y="7685" width="0.1437%" height="15" fill="rgb(219,138,40)" fg:x="5429" fg:w="47"/><text x="16.8458%" y="7695.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (47 samples, 0.14%)</title><rect x="16.5958%" y="7669" width="0.1437%" height="15" fill="rgb(241,228,46)" fg:x="5429" fg:w="47"/><text x="16.8458%" y="7679.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (47 samples, 0.14%)</title><rect x="16.5958%" y="7653" width="0.1437%" height="15" fill="rgb(223,209,38)" fg:x="5429" fg:w="47"/><text x="16.8458%" y="7663.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (47 samples, 0.14%)</title><rect x="16.5958%" y="7637" width="0.1437%" height="15" fill="rgb(236,164,45)" fg:x="5429" fg:w="47"/><text x="16.8458%" y="7647.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find::_{{closure}} (62 samples, 0.19%)</title><rect x="16.5622%" y="7893" width="0.1895%" height="15" fill="rgb(231,15,5)" fg:x="5418" fg:w="62"/><text x="16.8122%" y="7903.50"></text></g><g><title>indexmap::map::core::equivalent::_{{closure}} (61 samples, 0.19%)</title><rect x="16.5653%" y="7877" width="0.1865%" height="15" fill="rgb(252,35,15)" fg:x="5419" fg:w="61"/><text x="16.8153%" y="7887.50"></text></g><g><title>&lt;Q as indexmap::equivalent::Equivalent&lt;K&gt;&gt;::equivalent (59 samples, 0.18%)</title><rect x="16.5714%" y="7861" width="0.1804%" height="15" fill="rgb(248,181,18)" fg:x="5421" fg:w="59"/><text x="16.8214%" y="7871.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::cmp::PartialEq&gt;::eq (59 samples, 0.18%)</title><rect x="16.5714%" y="7845" width="0.1804%" height="15" fill="rgb(233,39,42)" fg:x="5421" fg:w="59"/><text x="16.8214%" y="7855.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as alloc::rc::RcEqIdent&lt;T,A&gt;&gt;::eq (59 samples, 0.18%)</title><rect x="16.5714%" y="7829" width="0.1804%" height="15" fill="rgb(238,110,33)" fg:x="5421" fg:w="59"/><text x="16.8214%" y="7839.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::ptr_eq (4 samples, 0.01%)</title><rect x="16.7395%" y="7813" width="0.0122%" height="15" fill="rgb(233,195,10)" fg:x="5476" fg:w="4"/><text x="16.9895%" y="7823.50"></text></g><g><title>hashbrown::raw::inner::h2 (13 samples, 0.04%)</title><rect x="16.7518%" y="7893" width="0.0397%" height="15" fill="rgb(254,105,3)" fg:x="5480" fg:w="13"/><text x="17.0018%" y="7903.50"></text></g><g><title>hashbrown::raw::inner::likely (12 samples, 0.04%)</title><rect x="16.7915%" y="7893" width="0.0367%" height="15" fill="rgb(221,225,9)" fg:x="5493" fg:w="12"/><text x="17.0415%" y="7903.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::load (8 samples, 0.02%)</title><rect x="16.8282%" y="7893" width="0.0245%" height="15" fill="rgb(224,227,45)" fg:x="5505" fg:w="8"/><text x="17.0782%" y="7903.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (8 samples, 0.02%)</title><rect x="16.8282%" y="7877" width="0.0245%" height="15" fill="rgb(229,198,43)" fg:x="5505" fg:w="8"/><text x="17.0782%" y="7887.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8 samples, 0.02%)</title><rect x="16.8282%" y="7861" width="0.0245%" height="15" fill="rgb(206,209,35)" fg:x="5505" fg:w="8"/><text x="17.0782%" y="7871.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::entry (2,663 samples, 8.14%)</title><rect x="8.7916%" y="7957" width="8.1405%" height="15" fill="rgb(245,195,53)" fg:x="2876" fg:w="2663"/><text x="9.0416%" y="7967.50">indexmap::m..</text></g><g><title>indexmap::map::core::raw::&lt;impl indexmap::map::core::IndexMapCore&lt;K,V&gt;&gt;::entry (158 samples, 0.48%)</title><rect x="16.4491%" y="7941" width="0.4830%" height="15" fill="rgb(240,92,26)" fg:x="5381" fg:w="158"/><text x="16.6991%" y="7951.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (148 samples, 0.45%)</title><rect x="16.4797%" y="7925" width="0.4524%" height="15" fill="rgb(207,40,23)" fg:x="5391" fg:w="148"/><text x="16.7297%" y="7935.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_inner (148 samples, 0.45%)</title><rect x="16.4797%" y="7909" width="0.4524%" height="15" fill="rgb(223,111,35)" fg:x="5391" fg:w="148"/><text x="16.7297%" y="7919.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_empty (24 samples, 0.07%)</title><rect x="16.8587%" y="7893" width="0.0734%" height="15" fill="rgb(229,147,28)" fg:x="5515" fg:w="24"/><text x="17.1087%" y="7903.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_byte (24 samples, 0.07%)</title><rect x="16.8587%" y="7877" width="0.0734%" height="15" fill="rgb(211,29,28)" fg:x="5515" fg:w="24"/><text x="17.1087%" y="7887.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (24 samples, 0.07%)</title><rect x="16.8587%" y="7861" width="0.0734%" height="15" fill="rgb(228,72,33)" fg:x="5515" fg:w="24"/><text x="17.1087%" y="7871.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (4 samples, 0.01%)</title><rect x="16.9657%" y="7925" width="0.0122%" height="15" fill="rgb(205,214,31)" fg:x="5550" fg:w="4"/><text x="17.2157%" y="7935.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (4 samples, 0.01%)</title><rect x="16.9657%" y="7909" width="0.0122%" height="15" fill="rgb(224,111,15)" fg:x="5550" fg:w="4"/><text x="17.2157%" y="7919.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (4 samples, 0.01%)</title><rect x="16.9657%" y="7893" width="0.0122%" height="15" fill="rgb(253,21,26)" fg:x="5550" fg:w="4"/><text x="17.2157%" y="7903.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (64 samples, 0.20%)</title><rect x="16.9810%" y="7925" width="0.1956%" height="15" fill="rgb(245,139,43)" fg:x="5555" fg:w="64"/><text x="17.2310%" y="7935.50"></text></g><g><title>core::ptr::write (60 samples, 0.18%)</title><rect x="16.9932%" y="7909" width="0.1834%" height="15" fill="rgb(252,170,7)" fg:x="5559" fg:w="60"/><text x="17.2432%" y="7919.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::inner::RawTableInner&lt;hashbrown::raw::inner::alloc::inner::Global&gt;,hashbrown::raw::inner::RawTableInner&lt;hashbrown::raw::inner::alloc::inner::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (4 samples, 0.01%)</title><rect x="17.2684%" y="7845" width="0.0122%" height="15" fill="rgb(231,118,14)" fg:x="5649" fg:w="4"/><text x="17.5184%" y="7855.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="17.2684%" y="7829" width="0.0122%" height="15" fill="rgb(238,83,0)" fg:x="5649" fg:w="4"/><text x="17.5184%" y="7839.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::prepare_resize::_{{closure}} (4 samples, 0.01%)</title><rect x="17.2684%" y="7813" width="0.0122%" height="15" fill="rgb(221,39,39)" fg:x="5649" fg:w="4"/><text x="17.5184%" y="7823.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::bucket_ptr (6 samples, 0.02%)</title><rect x="17.2898%" y="7845" width="0.0183%" height="15" fill="rgb(222,119,46)" fg:x="5656" fg:w="6"/><text x="17.5398%" y="7855.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_empty_or_deleted (32 samples, 0.10%)</title><rect x="17.3784%" y="7813" width="0.0978%" height="15" fill="rgb(222,165,49)" fg:x="5685" fg:w="32"/><text x="17.6284%" y="7823.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (32 samples, 0.10%)</title><rect x="17.3784%" y="7797" width="0.0978%" height="15" fill="rgb(219,113,52)" fg:x="5685" fg:w="32"/><text x="17.6284%" y="7807.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_insert_slot (76 samples, 0.23%)</title><rect x="17.3081%" y="7829" width="0.2323%" height="15" fill="rgb(214,7,15)" fg:x="5662" fg:w="76"/><text x="17.5581%" y="7839.50"></text></g><g><title>hashbrown::raw::inner::unlikely (21 samples, 0.06%)</title><rect x="17.4762%" y="7813" width="0.0642%" height="15" fill="rgb(235,32,4)" fg:x="5717" fg:w="21"/><text x="17.7262%" y="7823.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::prepare_insert_slot (78 samples, 0.24%)</title><rect x="17.3081%" y="7845" width="0.2384%" height="15" fill="rgb(238,90,54)" fg:x="5662" fg:w="78"/><text x="17.5581%" y="7855.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::new_uninitialized (12 samples, 0.04%)</title><rect x="17.5496%" y="7813" width="0.0367%" height="15" fill="rgb(213,208,19)" fg:x="5741" fg:w="12"/><text x="17.7996%" y="7823.50"></text></g><g><title>hashbrown::raw::inner::alloc::inner::do_alloc (12 samples, 0.04%)</title><rect x="17.5496%" y="7797" width="0.0367%" height="15" fill="rgb(233,156,4)" fg:x="5741" fg:w="12"/><text x="17.7996%" y="7807.50"></text></g><g><title>&lt;hashbrown::raw::inner::alloc::inner::Global as hashbrown::raw::inner::alloc::inner::Allocator&gt;::allocate (12 samples, 0.04%)</title><rect x="17.5496%" y="7781" width="0.0367%" height="15" fill="rgb(207,194,5)" fg:x="5741" fg:w="12"/><text x="17.7996%" y="7791.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.04%)</title><rect x="17.5496%" y="7765" width="0.0367%" height="15" fill="rgb(206,111,30)" fg:x="5741" fg:w="12"/><text x="17.7996%" y="7775.50"></text></g><g><title>malloc (11 samples, 0.03%)</title><rect x="17.5527%" y="7749" width="0.0336%" height="15" fill="rgb(243,70,54)" fg:x="5742" fg:w="11"/><text x="17.8027%" y="7759.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="17.5741%" y="7733" width="0.0122%" height="15" fill="rgb(242,28,8)" fg:x="5749" fg:w="4"/><text x="17.8241%" y="7743.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::resize_inner (114 samples, 0.35%)</title><rect x="17.2439%" y="7861" width="0.3485%" height="15" fill="rgb(219,106,18)" fg:x="5641" fg:w="114"/><text x="17.4939%" y="7871.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::prepare_resize (15 samples, 0.05%)</title><rect x="17.5465%" y="7845" width="0.0459%" height="15" fill="rgb(244,222,10)" fg:x="5740" fg:w="15"/><text x="17.7965%" y="7855.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::fallible_with_capacity (15 samples, 0.05%)</title><rect x="17.5465%" y="7829" width="0.0459%" height="15" fill="rgb(236,179,52)" fg:x="5740" fg:w="15"/><text x="17.7965%" y="7839.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve (115 samples, 0.35%)</title><rect x="17.2439%" y="7909" width="0.3515%" height="15" fill="rgb(213,23,39)" fg:x="5641" fg:w="115"/><text x="17.4939%" y="7919.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (115 samples, 0.35%)</title><rect x="17.2439%" y="7893" width="0.3515%" height="15" fill="rgb(238,48,10)" fg:x="5641" fg:w="115"/><text x="17.4939%" y="7903.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::reserve_rehash_inner (115 samples, 0.35%)</title><rect x="17.2439%" y="7877" width="0.3515%" height="15" fill="rgb(251,196,23)" fg:x="5641" fg:w="115"/><text x="17.4939%" y="7887.50"></text></g><g><title>hashbrown::raw::inner::is_full (12 samples, 0.04%)</title><rect x="17.6382%" y="7893" width="0.0367%" height="15" fill="rgb(250,152,24)" fg:x="5770" fg:w="12"/><text x="17.8882%" y="7903.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_insert_slot (31 samples, 0.09%)</title><rect x="17.5955%" y="7909" width="0.0948%" height="15" fill="rgb(209,150,17)" fg:x="5756" fg:w="31"/><text x="17.8455%" y="7919.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_empty_or_deleted (5 samples, 0.02%)</title><rect x="17.6749%" y="7893" width="0.0153%" height="15" fill="rgb(234,202,34)" fg:x="5782" fg:w="5"/><text x="17.9249%" y="7903.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (5 samples, 0.02%)</title><rect x="17.6749%" y="7877" width="0.0153%" height="15" fill="rgb(253,148,53)" fg:x="5782" fg:w="5"/><text x="17.9249%" y="7887.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::record_item_insert_at (10 samples, 0.03%)</title><rect x="17.6902%" y="7909" width="0.0306%" height="15" fill="rgb(218,129,16)" fg:x="5787" fg:w="10"/><text x="17.9402%" y="7919.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::set_ctrl_h2 (5 samples, 0.02%)</title><rect x="17.7055%" y="7893" width="0.0153%" height="15" fill="rgb(216,85,19)" fg:x="5792" fg:w="5"/><text x="17.9555%" y="7903.50"></text></g><g><title>hashbrown::raw::inner::h2 (4 samples, 0.01%)</title><rect x="17.7086%" y="7877" width="0.0122%" height="15" fill="rgb(235,228,7)" fg:x="5793" fg:w="4"/><text x="17.9586%" y="7887.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::insert (179 samples, 0.55%)</title><rect x="17.1767%" y="7925" width="0.5472%" height="15" fill="rgb(245,175,0)" fg:x="5619" fg:w="179"/><text x="17.4267%" y="7935.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (78 samples, 0.24%)</title><rect x="17.7330%" y="7829" width="0.2384%" height="15" fill="rgb(208,168,36)" fg:x="5801" fg:w="78"/><text x="17.9830%" y="7839.50"></text></g><g><title>alloc::alloc::Global::grow_impl (78 samples, 0.24%)</title><rect x="17.7330%" y="7813" width="0.2384%" height="15" fill="rgb(246,171,24)" fg:x="5801" fg:w="78"/><text x="17.9830%" y="7823.50"></text></g><g><title>alloc::alloc::realloc (78 samples, 0.24%)</title><rect x="17.7330%" y="7797" width="0.2384%" height="15" fill="rgb(215,142,24)" fg:x="5801" fg:w="78"/><text x="17.9830%" y="7807.50"></text></g><g><title>realloc (78 samples, 0.24%)</title><rect x="17.7330%" y="7781" width="0.2384%" height="15" fill="rgb(250,187,7)" fg:x="5801" fg:w="78"/><text x="17.9830%" y="7791.50"></text></g><g><title>[libc.so.6] (73 samples, 0.22%)</title><rect x="17.7483%" y="7765" width="0.2232%" height="15" fill="rgb(228,66,33)" fg:x="5806" fg:w="73"/><text x="17.9983%" y="7775.50"></text></g><g><title>[libc.so.6] (72 samples, 0.22%)</title><rect x="17.7514%" y="7749" width="0.2201%" height="15" fill="rgb(234,215,21)" fg:x="5807" fg:w="72"/><text x="18.0014%" y="7759.50"></text></g><g><title>[libc.so.6] (34 samples, 0.10%)</title><rect x="17.8675%" y="7733" width="0.1039%" height="15" fill="rgb(222,191,20)" fg:x="5845" fg:w="34"/><text x="18.1175%" y="7743.50"></text></g><g><title>[libc.so.6] (7 samples, 0.02%)</title><rect x="17.9501%" y="7717" width="0.0214%" height="15" fill="rgb(245,79,54)" fg:x="5872" fg:w="7"/><text x="18.2001%" y="7727.50"></text></g><g><title>alloc::raw_vec::finish_grow (81 samples, 0.25%)</title><rect x="17.7269%" y="7845" width="0.2476%" height="15" fill="rgb(240,10,37)" fg:x="5799" fg:w="81"/><text x="17.9769%" y="7855.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (83 samples, 0.25%)</title><rect x="17.7238%" y="7861" width="0.2537%" height="15" fill="rgb(214,192,32)" fg:x="5798" fg:w="83"/><text x="17.9738%" y="7871.50"></text></g><g><title>indexmap::map::core::VacantEntry&lt;K,V&gt;::insert (343 samples, 1.05%)</title><rect x="16.9321%" y="7957" width="1.0485%" height="15" fill="rgb(209,36,54)" fg:x="5539" fg:w="343"/><text x="17.1821%" y="7967.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::push (336 samples, 1.03%)</title><rect x="16.9535%" y="7941" width="1.0271%" height="15" fill="rgb(220,10,11)" fg:x="5546" fg:w="336"/><text x="17.2035%" y="7951.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::reserve_entries (84 samples, 0.26%)</title><rect x="17.7238%" y="7925" width="0.2568%" height="15" fill="rgb(221,106,17)" fg:x="5798" fg:w="84"/><text x="17.9738%" y="7935.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve_exact (84 samples, 0.26%)</title><rect x="17.7238%" y="7909" width="0.2568%" height="15" fill="rgb(251,142,44)" fg:x="5798" fg:w="84"/><text x="17.9738%" y="7919.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (84 samples, 0.26%)</title><rect x="17.7238%" y="7893" width="0.2568%" height="15" fill="rgb(238,13,15)" fg:x="5798" fg:w="84"/><text x="17.9738%" y="7903.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (84 samples, 0.26%)</title><rect x="17.7238%" y="7877" width="0.2568%" height="15" fill="rgb(208,107,27)" fg:x="5798" fg:w="84"/><text x="17.9738%" y="7887.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::lt (12 samples, 0.04%)</title><rect x="18.1487%" y="7941" width="0.0367%" height="15" fill="rgb(205,136,37)" fg:x="5937" fg:w="12"/><text x="18.3987%" y="7951.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i32&gt;::lt (12 samples, 0.04%)</title><rect x="18.1487%" y="7925" width="0.0367%" height="15" fill="rgb(250,205,27)" fg:x="5937" fg:w="12"/><text x="18.3987%" y="7935.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (6 samples, 0.02%)</title><rect x="18.1946%" y="7925" width="0.0183%" height="15" fill="rgb(210,80,43)" fg:x="5952" fg:w="6"/><text x="18.4446%" y="7935.50"></text></g><g><title>priority_queue::priority_queue::PriorityQueue&lt;I,P,H&gt;::push (3,180 samples, 9.72%)</title><rect x="8.5257%" y="7973" width="9.7209%" height="15" fill="rgb(247,160,36)" fg:x="2789" fg:w="3180"/><text x="8.7757%" y="7983.50">priority_queue..</text></g><g><title>priority_queue::priority_queue::PriorityQueue&lt;I,P,H&gt;::bubble_up (87 samples, 0.27%)</title><rect x="17.9806%" y="7957" width="0.2659%" height="15" fill="rgb(234,13,49)" fg:x="5882" fg:w="87"/><text x="18.2306%" y="7967.50"></text></g><g><title>priority_queue::store::Store&lt;I,P,H&gt;::get_priority_from_position (17 samples, 0.05%)</title><rect x="18.1946%" y="7941" width="0.0520%" height="15" fill="rgb(234,122,0)" fg:x="5952" fg:w="17"/><text x="18.4446%" y="7951.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index (11 samples, 0.03%)</title><rect x="18.2129%" y="7925" width="0.0336%" height="15" fill="rgb(207,146,38)" fg:x="5958" fg:w="11"/><text x="18.4629%" y="7935.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (11 samples, 0.03%)</title><rect x="18.2129%" y="7909" width="0.0336%" height="15" fill="rgb(207,177,25)" fg:x="5958" fg:w="11"/><text x="18.4629%" y="7919.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (11 samples, 0.03%)</title><rect x="18.2129%" y="7893" width="0.0336%" height="15" fill="rgb(211,178,42)" fg:x="5958" fg:w="11"/><text x="18.4629%" y="7903.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (10 samples, 0.03%)</title><rect x="18.4972%" y="7829" width="0.0306%" height="15" fill="rgb(230,69,54)" fg:x="6051" fg:w="10"/><text x="18.7472%" y="7839.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (15 samples, 0.05%)</title><rect x="18.4942%" y="7845" width="0.0459%" height="15" fill="rgb(214,135,41)" fg:x="6050" fg:w="15"/><text x="18.7442%" y="7855.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (4 samples, 0.01%)</title><rect x="18.5278%" y="7829" width="0.0122%" height="15" fill="rgb(237,67,25)" fg:x="6061" fg:w="4"/><text x="18.7778%" y="7839.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (27 samples, 0.08%)</title><rect x="18.5400%" y="7829" width="0.0825%" height="15" fill="rgb(222,189,50)" fg:x="6065" fg:w="27"/><text x="18.7900%" y="7839.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (117 samples, 0.36%)</title><rect x="18.2894%" y="7893" width="0.3577%" height="15" fill="rgb(245,148,34)" fg:x="5983" fg:w="117"/><text x="18.5394%" y="7903.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (117 samples, 0.36%)</title><rect x="18.2894%" y="7877" width="0.3577%" height="15" fill="rgb(222,29,6)" fg:x="5983" fg:w="117"/><text x="18.5394%" y="7887.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (117 samples, 0.36%)</title><rect x="18.2894%" y="7861" width="0.3577%" height="15" fill="rgb(221,189,43)" fg:x="5983" fg:w="117"/><text x="18.5394%" y="7871.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (35 samples, 0.11%)</title><rect x="18.5400%" y="7845" width="0.1070%" height="15" fill="rgb(207,36,27)" fg:x="6065" fg:w="35"/><text x="18.7900%" y="7855.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (8 samples, 0.02%)</title><rect x="18.6226%" y="7829" width="0.0245%" height="15" fill="rgb(217,90,24)" fg:x="6092" fg:w="8"/><text x="18.8726%" y="7839.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (6 samples, 0.02%)</title><rect x="18.6470%" y="7893" width="0.0183%" height="15" fill="rgb(224,66,35)" fg:x="6100" fg:w="6"/><text x="18.8970%" y="7903.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (271 samples, 0.83%)</title><rect x="18.6715%" y="7845" width="0.8284%" height="15" fill="rgb(221,13,50)" fg:x="6108" fg:w="271"/><text x="18.9215%" y="7855.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (218 samples, 0.67%)</title><rect x="18.8335%" y="7829" width="0.6664%" height="15" fill="rgb(236,68,49)" fg:x="6161" fg:w="218"/><text x="19.0835%" y="7839.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (5 samples, 0.02%)</title><rect x="19.6008%" y="7749" width="0.0153%" height="15" fill="rgb(229,146,28)" fg:x="6412" fg:w="5"/><text x="19.8508%" y="7759.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (12 samples, 0.04%)</title><rect x="19.5885%" y="7765" width="0.0367%" height="15" fill="rgb(225,31,38)" fg:x="6408" fg:w="12"/><text x="19.8385%" y="7775.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (59 samples, 0.18%)</title><rect x="19.5060%" y="7813" width="0.1804%" height="15" fill="rgb(250,208,3)" fg:x="6381" fg:w="59"/><text x="19.7560%" y="7823.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (56 samples, 0.17%)</title><rect x="19.5152%" y="7797" width="0.1712%" height="15" fill="rgb(246,54,23)" fg:x="6384" fg:w="56"/><text x="19.7652%" y="7807.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (56 samples, 0.17%)</title><rect x="19.5152%" y="7781" width="0.1712%" height="15" fill="rgb(243,76,11)" fg:x="6384" fg:w="56"/><text x="19.7652%" y="7791.50"></text></g><g><title>core::hash::sip::u8to64_le (18 samples, 0.06%)</title><rect x="19.6313%" y="7765" width="0.0550%" height="15" fill="rgb(245,21,50)" fg:x="6422" fg:w="18"/><text x="19.8813%" y="7775.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (10 samples, 0.03%)</title><rect x="19.6558%" y="7749" width="0.0306%" height="15" fill="rgb(228,9,43)" fg:x="6430" fg:w="10"/><text x="19.9058%" y="7759.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for char&gt;::hash (82 samples, 0.25%)</title><rect x="19.4999%" y="7845" width="0.2507%" height="15" fill="rgb(208,100,47)" fg:x="6379" fg:w="82"/><text x="19.7499%" y="7855.50"></text></g><g><title>core::hash::Hasher::write_u32 (82 samples, 0.25%)</title><rect x="19.4999%" y="7829" width="0.2507%" height="15" fill="rgb(232,26,8)" fg:x="6379" fg:w="82"/><text x="19.7499%" y="7839.50"></text></g><g><title>core::num::&lt;impl u32&gt;::to_ne_bytes (21 samples, 0.06%)</title><rect x="19.6864%" y="7813" width="0.0642%" height="15" fill="rgb(216,166,38)" fg:x="6440" fg:w="21"/><text x="19.9364%" y="7823.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (106 samples, 0.32%)</title><rect x="22.6057%" y="7749" width="0.3240%" height="15" fill="rgb(251,202,51)" fg:x="7395" fg:w="106"/><text x="22.8557%" y="7759.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (302 samples, 0.92%)</title><rect x="22.3459%" y="7765" width="0.9232%" height="15" fill="rgb(254,216,34)" fg:x="7310" fg:w="302"/><text x="22.5959%" y="7775.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (111 samples, 0.34%)</title><rect x="22.9297%" y="7749" width="0.3393%" height="15" fill="rgb(251,32,27)" fg:x="7501" fg:w="111"/><text x="23.1797%" y="7759.50"></text></g><g><title>core::cmp::min (112 samples, 0.34%)</title><rect x="23.2690%" y="7765" width="0.3424%" height="15" fill="rgb(208,127,28)" fg:x="7612" fg:w="112"/><text x="23.5190%" y="7775.50"></text></g><g><title>core::cmp::Ord::min (112 samples, 0.34%)</title><rect x="23.2690%" y="7749" width="0.3424%" height="15" fill="rgb(224,137,22)" fg:x="7612" fg:w="112"/><text x="23.5190%" y="7759.50"></text></g><g><title>core::cmp::min_by (112 samples, 0.34%)</title><rect x="23.2690%" y="7733" width="0.3424%" height="15" fill="rgb(254,70,32)" fg:x="7612" fg:w="112"/><text x="23.5190%" y="7743.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2,112 samples, 6.46%)</title><rect x="19.9156%" y="7813" width="6.4561%" height="15" fill="rgb(229,75,37)" fg:x="6515" fg:w="2112"/><text x="20.1656%" y="7823.50">&lt;std::co..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2,105 samples, 6.43%)</title><rect x="19.9370%" y="7797" width="6.4348%" height="15" fill="rgb(252,64,23)" fg:x="6522" fg:w="2105"/><text x="20.1870%" y="7807.50">&lt;core::h..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2,105 samples, 6.43%)</title><rect x="19.9370%" y="7781" width="6.4348%" height="15" fill="rgb(232,162,48)" fg:x="6522" fg:w="2105"/><text x="20.1870%" y="7791.50">&lt;core::h..</text></g><g><title>core::hash::sip::u8to64_le (903 samples, 2.76%)</title><rect x="23.6114%" y="7765" width="2.7604%" height="15" fill="rgb(246,160,12)" fg:x="7724" fg:w="903"/><text x="23.8614%" y="7775.50">co..</text></g><g><title>core::intrinsics::copy_nonoverlapping (22 samples, 0.07%)</title><rect x="26.3045%" y="7749" width="0.0673%" height="15" fill="rgb(247,166,0)" fg:x="8605" fg:w="22"/><text x="26.5545%" y="7759.50"></text></g><g><title>hashbrown::map::make_hash (2,724 samples, 8.33%)</title><rect x="18.2680%" y="7925" width="8.3270%" height="15" fill="rgb(249,219,21)" fg:x="5976" fg:w="2724"/><text x="18.5180%" y="7935.50">hashbrown::m..</text></g><g><title>core::hash::BuildHasher::hash_one (2,724 samples, 8.33%)</title><rect x="18.2680%" y="7909" width="8.3270%" height="15" fill="rgb(205,209,3)" fg:x="5976" fg:w="2724"/><text x="18.5180%" y="7919.50">core::hash::..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2,594 samples, 7.93%)</title><rect x="18.6654%" y="7893" width="7.9296%" height="15" fill="rgb(243,44,1)" fg:x="6106" fg:w="2594"/><text x="18.9154%" y="7903.50">core::hash:..</text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::hash::Hash&gt;::hash (2,594 samples, 7.93%)</title><rect x="18.6654%" y="7877" width="7.9296%" height="15" fill="rgb(206,159,16)" fg:x="6106" fg:w="2594"/><text x="18.9154%" y="7887.50">&lt;alloc::rc:..</text></g><g><title>&lt;tetrs::logic::state::State as core::hash::Hash&gt;::hash (2,594 samples, 7.93%)</title><rect x="18.6654%" y="7861" width="7.9296%" height="15" fill="rgb(244,77,30)" fg:x="6106" fg:w="2594"/><text x="18.9154%" y="7871.50">&lt;tetrs::log..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (2,239 samples, 6.84%)</title><rect x="19.7506%" y="7845" width="6.8444%" height="15" fill="rgb(218,69,12)" fg:x="6461" fg:w="2239"/><text x="20.0006%" y="7855.50">core::has..</text></g><g><title>core::hash::Hasher::write_u16 (2,239 samples, 6.84%)</title><rect x="19.7506%" y="7829" width="6.8444%" height="15" fill="rgb(212,87,7)" fg:x="6461" fg:w="2239"/><text x="20.0006%" y="7839.50">core::has..</text></g><g><title>core::num::&lt;impl u16&gt;::to_ne_bytes (73 samples, 0.22%)</title><rect x="26.3718%" y="7813" width="0.2232%" height="15" fill="rgb(245,114,25)" fg:x="8627" fg:w="73"/><text x="26.6218%" y="7823.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (5 samples, 0.02%)</title><rect x="26.6622%" y="7845" width="0.0153%" height="15" fill="rgb(210,61,42)" fg:x="8722" fg:w="5"/><text x="26.9122%" y="7855.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (5 samples, 0.02%)</title><rect x="26.6622%" y="7829" width="0.0153%" height="15" fill="rgb(211,52,33)" fg:x="8722" fg:w="5"/><text x="26.9122%" y="7839.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;,hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (6 samples, 0.02%)</title><rect x="26.6866%" y="7845" width="0.0183%" height="15" fill="rgb(234,58,33)" fg:x="8730" fg:w="6"/><text x="26.9366%" y="7855.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="26.6866%" y="7829" width="0.0183%" height="15" fill="rgb(220,115,36)" fg:x="8730" fg:w="6"/><text x="26.9366%" y="7839.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize::_{{closure}} (6 samples, 0.02%)</title><rect x="26.6866%" y="7813" width="0.0183%" height="15" fill="rgb(243,153,54)" fg:x="8730" fg:w="6"/><text x="26.9366%" y="7823.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (13 samples, 0.04%)</title><rect x="27.0321%" y="7717" width="0.0397%" height="15" fill="rgb(251,47,18)" fg:x="8843" fg:w="13"/><text x="27.2821%" y="7727.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (22 samples, 0.07%)</title><rect x="27.0198%" y="7733" width="0.0673%" height="15" fill="rgb(242,102,42)" fg:x="8839" fg:w="22"/><text x="27.2698%" y="7743.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (5 samples, 0.02%)</title><rect x="27.0718%" y="7717" width="0.0153%" height="15" fill="rgb(234,31,38)" fg:x="8856" fg:w="5"/><text x="27.3218%" y="7727.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (39 samples, 0.12%)</title><rect x="27.1085%" y="7717" width="0.1192%" height="15" fill="rgb(221,117,51)" fg:x="8868" fg:w="39"/><text x="27.3585%" y="7727.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (168 samples, 0.51%)</title><rect x="26.7478%" y="7781" width="0.5136%" height="15" fill="rgb(212,20,18)" fg:x="8750" fg:w="168"/><text x="26.9978%" y="7791.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (168 samples, 0.51%)</title><rect x="26.7478%" y="7765" width="0.5136%" height="15" fill="rgb(245,133,36)" fg:x="8750" fg:w="168"/><text x="26.9978%" y="7775.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (168 samples, 0.51%)</title><rect x="26.7478%" y="7749" width="0.5136%" height="15" fill="rgb(212,6,19)" fg:x="8750" fg:w="168"/><text x="26.9978%" y="7759.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (57 samples, 0.17%)</title><rect x="27.0871%" y="7733" width="0.1742%" height="15" fill="rgb(218,1,36)" fg:x="8861" fg:w="57"/><text x="27.3371%" y="7743.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (11 samples, 0.03%)</title><rect x="27.2277%" y="7717" width="0.0336%" height="15" fill="rgb(246,84,54)" fg:x="8907" fg:w="11"/><text x="27.4777%" y="7727.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (10 samples, 0.03%)</title><rect x="27.2613%" y="7781" width="0.0306%" height="15" fill="rgb(242,110,6)" fg:x="8918" fg:w="10"/><text x="27.5113%" y="7791.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (352 samples, 1.08%)</title><rect x="27.3102%" y="7733" width="1.0760%" height="15" fill="rgb(214,47,5)" fg:x="8934" fg:w="352"/><text x="27.5602%" y="7743.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (278 samples, 0.85%)</title><rect x="27.5365%" y="7717" width="0.8498%" height="15" fill="rgb(218,159,25)" fg:x="9008" fg:w="278"/><text x="27.7865%" y="7727.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (11 samples, 0.03%)</title><rect x="28.5177%" y="7637" width="0.0336%" height="15" fill="rgb(215,211,28)" fg:x="9329" fg:w="11"/><text x="28.7677%" y="7647.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (24 samples, 0.07%)</title><rect x="28.5024%" y="7653" width="0.0734%" height="15" fill="rgb(238,59,32)" fg:x="9324" fg:w="24"/><text x="28.7524%" y="7663.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (8 samples, 0.02%)</title><rect x="28.5513%" y="7637" width="0.0245%" height="15" fill="rgb(226,82,3)" fg:x="9340" fg:w="8"/><text x="28.8013%" y="7647.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (80 samples, 0.24%)</title><rect x="28.3893%" y="7701" width="0.2446%" height="15" fill="rgb(240,164,32)" fg:x="9287" fg:w="80"/><text x="28.6393%" y="7711.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (79 samples, 0.24%)</title><rect x="28.3924%" y="7685" width="0.2415%" height="15" fill="rgb(232,46,7)" fg:x="9288" fg:w="79"/><text x="28.6424%" y="7695.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (79 samples, 0.24%)</title><rect x="28.3924%" y="7669" width="0.2415%" height="15" fill="rgb(229,129,53)" fg:x="9288" fg:w="79"/><text x="28.6424%" y="7679.50"></text></g><g><title>core::hash::sip::u8to64_le (19 samples, 0.06%)</title><rect x="28.5758%" y="7653" width="0.0581%" height="15" fill="rgb(234,188,29)" fg:x="9348" fg:w="19"/><text x="28.8258%" y="7663.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.02%)</title><rect x="28.6155%" y="7637" width="0.0183%" height="15" fill="rgb(246,141,4)" fg:x="9361" fg:w="6"/><text x="28.8655%" y="7647.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for char&gt;::hash (139 samples, 0.42%)</title><rect x="28.3863%" y="7733" width="0.4249%" height="15" fill="rgb(229,23,39)" fg:x="9286" fg:w="139"/><text x="28.6363%" y="7743.50"></text></g><g><title>core::hash::Hasher::write_u32 (138 samples, 0.42%)</title><rect x="28.3893%" y="7717" width="0.4219%" height="15" fill="rgb(206,12,3)" fg:x="9287" fg:w="138"/><text x="28.6393%" y="7727.50"></text></g><g><title>core::num::&lt;impl u32&gt;::to_ne_bytes (58 samples, 0.18%)</title><rect x="28.6339%" y="7701" width="0.1773%" height="15" fill="rgb(252,226,20)" fg:x="9367" fg:w="58"/><text x="28.8839%" y="7711.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (157 samples, 0.48%)</title><rect x="32.9471%" y="7637" width="0.4799%" height="15" fill="rgb(216,123,35)" fg:x="10778" fg:w="157"/><text x="33.1971%" y="7647.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (385 samples, 1.18%)</title><rect x="32.6415%" y="7653" width="1.1769%" height="15" fill="rgb(212,68,40)" fg:x="10678" fg:w="385"/><text x="32.8915%" y="7663.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (128 samples, 0.39%)</title><rect x="33.4271%" y="7637" width="0.3913%" height="15" fill="rgb(254,125,32)" fg:x="10935" fg:w="128"/><text x="33.6771%" y="7647.50"></text></g><g><title>core::cmp::min (138 samples, 0.42%)</title><rect x="33.8184%" y="7653" width="0.4219%" height="15" fill="rgb(253,97,22)" fg:x="11063" fg:w="138"/><text x="34.0684%" y="7663.50"></text></g><g><title>core::cmp::Ord::min (138 samples, 0.42%)</title><rect x="33.8184%" y="7637" width="0.4219%" height="15" fill="rgb(241,101,14)" fg:x="11063" fg:w="138"/><text x="34.0684%" y="7647.50"></text></g><g><title>core::cmp::min_by (138 samples, 0.42%)</title><rect x="33.8184%" y="7621" width="0.4219%" height="15" fill="rgb(238,103,29)" fg:x="11063" fg:w="138"/><text x="34.0684%" y="7631.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2,586 samples, 7.91%)</title><rect x="29.1138%" y="7701" width="7.9051%" height="15" fill="rgb(233,195,47)" fg:x="9524" fg:w="2586"/><text x="29.3638%" y="7711.50">&lt;std::colle..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2,519 samples, 7.70%)</title><rect x="29.3186%" y="7685" width="7.7003%" height="15" fill="rgb(246,218,30)" fg:x="9591" fg:w="2519"/><text x="29.5686%" y="7695.50">&lt;core::hash..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2,519 samples, 7.70%)</title><rect x="29.3186%" y="7669" width="7.7003%" height="15" fill="rgb(219,145,47)" fg:x="9591" fg:w="2519"/><text x="29.5686%" y="7679.50">&lt;core::hash..</text></g><g><title>core::hash::sip::u8to64_le (909 samples, 2.78%)</title><rect x="34.2402%" y="7653" width="2.7787%" height="15" fill="rgb(243,12,26)" fg:x="11201" fg:w="909"/><text x="34.4902%" y="7663.50">co..</text></g><g><title>core::intrinsics::copy_nonoverlapping (20 samples, 0.06%)</title><rect x="36.9578%" y="7637" width="0.0611%" height="15" fill="rgb(214,87,16)" fg:x="12090" fg:w="20"/><text x="37.2078%" y="7647.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (3,844 samples, 11.75%)</title><rect x="26.7050%" y="7829" width="11.7507%" height="15" fill="rgb(208,99,42)" fg:x="8736" fg:w="3844"/><text x="26.9550%" y="7839.50">hashbrown::map::m..</text></g><g><title>hashbrown::map::make_hash (3,844 samples, 11.75%)</title><rect x="26.7050%" y="7813" width="11.7507%" height="15" fill="rgb(253,99,2)" fg:x="8736" fg:w="3844"/><text x="26.9550%" y="7823.50">hashbrown::map::m..</text></g><g><title>core::hash::BuildHasher::hash_one (3,844 samples, 11.75%)</title><rect x="26.7050%" y="7797" width="11.7507%" height="15" fill="rgb(220,168,23)" fg:x="8736" fg:w="3844"/><text x="26.9550%" y="7807.50">core::hash::Build..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (3,652 samples, 11.16%)</title><rect x="27.2919%" y="7781" width="11.1638%" height="15" fill="rgb(242,38,24)" fg:x="8928" fg:w="3652"/><text x="27.5419%" y="7791.50">core::hash::impl..</text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::hash::Hash&gt;::hash (3,652 samples, 11.16%)</title><rect x="27.2919%" y="7765" width="11.1638%" height="15" fill="rgb(225,182,9)" fg:x="8928" fg:w="3652"/><text x="27.5419%" y="7775.50">&lt;alloc::rc::Rc&lt;T..</text></g><g><title>&lt;tetrs::logic::state::State as core::hash::Hash&gt;::hash (3,651 samples, 11.16%)</title><rect x="27.2950%" y="7749" width="11.1607%" height="15" fill="rgb(243,178,37)" fg:x="8929" fg:w="3651"/><text x="27.5450%" y="7759.50">&lt;tetrs::logic::s..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (3,155 samples, 9.64%)</title><rect x="28.8112%" y="7733" width="9.6445%" height="15" fill="rgb(232,139,19)" fg:x="9425" fg:w="3155"/><text x="29.0612%" y="7743.50">core::hash::im..</text></g><g><title>core::hash::Hasher::write_u16 (3,155 samples, 9.64%)</title><rect x="28.8112%" y="7717" width="9.6445%" height="15" fill="rgb(225,201,24)" fg:x="9425" fg:w="3155"/><text x="29.0612%" y="7727.50">core::hash::Ha..</text></g><g><title>core::num::&lt;impl u16&gt;::to_ne_bytes (470 samples, 1.44%)</title><rect x="37.0189%" y="7701" width="1.4367%" height="15" fill="rgb(221,47,46)" fg:x="12110" fg:w="470"/><text x="37.2689%" y="7711.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (3,845 samples, 11.75%)</title><rect x="26.7050%" y="7845" width="11.7537%" height="15" fill="rgb(249,23,13)" fg:x="8736" fg:w="3845"/><text x="26.9550%" y="7855.50">hashbrown::raw::R..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket_ptr (5 samples, 0.02%)</title><rect x="38.4587%" y="7845" width="0.0153%" height="15" fill="rgb(219,9,5)" fg:x="12581" fg:w="5"/><text x="38.7087%" y="7855.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (7 samples, 0.02%)</title><rect x="38.5535%" y="7797" width="0.0214%" height="15" fill="rgb(254,171,16)" fg:x="12612" fg:w="7"/><text x="38.8035%" y="7807.50"></text></g><g><title>core::num::nonzero::NonZeroU16::new (7 samples, 0.02%)</title><rect x="38.5535%" y="7781" width="0.0214%" height="15" fill="rgb(230,171,20)" fg:x="12612" fg:w="7"/><text x="38.8035%" y="7791.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot_in_group (37 samples, 0.11%)</title><rect x="38.5137%" y="7813" width="0.1131%" height="15" fill="rgb(210,71,41)" fg:x="12599" fg:w="37"/><text x="38.7637%" y="7823.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (17 samples, 0.05%)</title><rect x="38.5749%" y="7797" width="0.0520%" height="15" fill="rgb(206,173,20)" fg:x="12619" fg:w="17"/><text x="38.8249%" y="7807.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (17 samples, 0.05%)</title><rect x="38.5749%" y="7781" width="0.0520%" height="15" fill="rgb(233,88,34)" fg:x="12619" fg:w="17"/><text x="38.8249%" y="7791.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (73 samples, 0.22%)</title><rect x="38.4740%" y="7829" width="0.2232%" height="15" fill="rgb(223,209,46)" fg:x="12586" fg:w="73"/><text x="38.7240%" y="7839.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fix_insert_slot (23 samples, 0.07%)</title><rect x="38.6268%" y="7813" width="0.0703%" height="15" fill="rgb(250,43,18)" fg:x="12636" fg:w="23"/><text x="38.8768%" y="7823.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_bucket_full (4 samples, 0.01%)</title><rect x="38.6849%" y="7797" width="0.0122%" height="15" fill="rgb(208,13,10)" fg:x="12655" fg:w="4"/><text x="38.9349%" y="7807.50"></text></g><g><title>hashbrown::raw::is_full (4 samples, 0.01%)</title><rect x="38.6849%" y="7781" width="0.0122%" height="15" fill="rgb(212,200,36)" fg:x="12655" fg:w="4"/><text x="38.9349%" y="7791.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (76 samples, 0.23%)</title><rect x="38.4740%" y="7845" width="0.2323%" height="15" fill="rgb(225,90,30)" fg:x="12586" fg:w="76"/><text x="38.7240%" y="7855.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (23 samples, 0.07%)</title><rect x="38.7094%" y="7813" width="0.0703%" height="15" fill="rgb(236,182,39)" fg:x="12663" fg:w="23"/><text x="38.9594%" y="7823.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (23 samples, 0.07%)</title><rect x="38.7094%" y="7797" width="0.0703%" height="15" fill="rgb(212,144,35)" fg:x="12663" fg:w="23"/><text x="38.9594%" y="7807.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (23 samples, 0.07%)</title><rect x="38.7094%" y="7781" width="0.0703%" height="15" fill="rgb(228,63,44)" fg:x="12663" fg:w="23"/><text x="38.9594%" y="7791.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (23 samples, 0.07%)</title><rect x="38.7094%" y="7765" width="0.0703%" height="15" fill="rgb(228,109,6)" fg:x="12663" fg:w="23"/><text x="38.9594%" y="7775.50"></text></g><g><title>alloc::alloc::alloc (23 samples, 0.07%)</title><rect x="38.7094%" y="7749" width="0.0703%" height="15" fill="rgb(238,117,24)" fg:x="12663" fg:w="23"/><text x="38.9594%" y="7759.50"></text></g><g><title>malloc (22 samples, 0.07%)</title><rect x="38.7124%" y="7733" width="0.0673%" height="15" fill="rgb(242,26,26)" fg:x="12664" fg:w="22"/><text x="38.9624%" y="7743.50"></text></g><g><title>[libc.so.6] (14 samples, 0.04%)</title><rect x="38.7369%" y="7717" width="0.0428%" height="15" fill="rgb(221,92,48)" fg:x="12672" fg:w="14"/><text x="38.9869%" y="7727.50"></text></g><g><title>[libc.so.6] (10 samples, 0.03%)</title><rect x="38.7491%" y="7701" width="0.0306%" height="15" fill="rgb(209,209,32)" fg:x="12676" fg:w="10"/><text x="38.9991%" y="7711.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (3,975 samples, 12.15%)</title><rect x="26.6316%" y="7861" width="12.1511%" height="15" fill="rgb(221,70,22)" fg:x="8712" fg:w="3975"/><text x="26.8816%" y="7871.50">hashbrown::raw::Ra..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (25 samples, 0.08%)</title><rect x="38.7063%" y="7845" width="0.0764%" height="15" fill="rgb(248,145,5)" fg:x="12662" fg:w="25"/><text x="38.9563%" y="7855.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (25 samples, 0.08%)</title><rect x="38.7063%" y="7829" width="0.0764%" height="15" fill="rgb(226,116,26)" fg:x="12662" fg:w="25"/><text x="38.9563%" y="7839.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (3,986 samples, 12.18%)</title><rect x="26.6010%" y="7909" width="12.1848%" height="15" fill="rgb(244,5,17)" fg:x="8702" fg:w="3986"/><text x="26.8510%" y="7919.50">hashbrown::raw::Ra..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3,983 samples, 12.18%)</title><rect x="26.6102%" y="7893" width="12.1756%" height="15" fill="rgb(252,159,33)" fg:x="8705" fg:w="3983"/><text x="26.8602%" y="7903.50">hashbrown::raw::Ra..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (3,983 samples, 12.18%)</title><rect x="26.6102%" y="7877" width="12.1756%" height="15" fill="rgb(206,71,0)" fg:x="8705" fg:w="3983"/><text x="26.8602%" y="7887.50">hashbrown::raw::Ra..</text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.04%)</title><rect x="38.8531%" y="7893" width="0.0367%" height="15" fill="rgb(233,118,54)" fg:x="12710" fg:w="12"/><text x="39.1031%" y="7903.50"></text></g><g><title>&lt;tetrs::logic::state::State as core::cmp::PartialEq&gt;::eq (51 samples, 0.16%)</title><rect x="38.8928%" y="7797" width="0.1559%" height="15" fill="rgb(234,83,48)" fg:x="12723" fg:w="51"/><text x="39.1428%" y="7807.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (49 samples, 0.15%)</title><rect x="38.8989%" y="7781" width="0.1498%" height="15" fill="rgb(228,3,54)" fg:x="12725" fg:w="49"/><text x="39.1489%" y="7791.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (49 samples, 0.15%)</title><rect x="38.8989%" y="7765" width="0.1498%" height="15" fill="rgb(226,155,13)" fg:x="12725" fg:w="49"/><text x="39.1489%" y="7775.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (49 samples, 0.15%)</title><rect x="38.8989%" y="7749" width="0.1498%" height="15" fill="rgb(241,28,37)" fg:x="12725" fg:w="49"/><text x="39.1489%" y="7759.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (46 samples, 0.14%)</title><rect x="38.9081%" y="7733" width="0.1406%" height="15" fill="rgb(233,93,10)" fg:x="12728" fg:w="46"/><text x="39.1581%" y="7743.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (46 samples, 0.14%)</title><rect x="38.9081%" y="7717" width="0.1406%" height="15" fill="rgb(225,113,19)" fg:x="12728" fg:w="46"/><text x="39.1581%" y="7727.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (44 samples, 0.13%)</title><rect x="38.9142%" y="7701" width="0.1345%" height="15" fill="rgb(241,2,18)" fg:x="12730" fg:w="44"/><text x="39.1642%" y="7711.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::_{{closure}} (44 samples, 0.13%)</title><rect x="38.9142%" y="7685" width="0.1345%" height="15" fill="rgb(228,207,21)" fg:x="12730" fg:w="44"/><text x="39.1642%" y="7695.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (44 samples, 0.13%)</title><rect x="38.9142%" y="7669" width="0.1345%" height="15" fill="rgb(213,211,35)" fg:x="12730" fg:w="44"/><text x="39.1642%" y="7679.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (44 samples, 0.13%)</title><rect x="38.9142%" y="7653" width="0.1345%" height="15" fill="rgb(209,83,10)" fg:x="12730" fg:w="44"/><text x="39.1642%" y="7663.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (44 samples, 0.13%)</title><rect x="38.9142%" y="7637" width="0.1345%" height="15" fill="rgb(209,164,1)" fg:x="12730" fg:w="44"/><text x="39.1642%" y="7647.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (44 samples, 0.13%)</title><rect x="38.9142%" y="7621" width="0.1345%" height="15" fill="rgb(213,184,43)" fg:x="12730" fg:w="44"/><text x="39.1642%" y="7631.50"></text></g><g><title>[libc.so.6] (35 samples, 0.11%)</title><rect x="38.9417%" y="7605" width="0.1070%" height="15" fill="rgb(231,61,34)" fg:x="12739" fg:w="35"/><text x="39.1917%" y="7615.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot::_{{closure}} (56 samples, 0.17%)</title><rect x="38.8897%" y="7893" width="0.1712%" height="15" fill="rgb(235,75,3)" fg:x="12722" fg:w="56"/><text x="39.1397%" y="7903.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (56 samples, 0.17%)</title><rect x="38.8897%" y="7877" width="0.1712%" height="15" fill="rgb(220,106,47)" fg:x="12722" fg:w="56"/><text x="39.1397%" y="7887.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (56 samples, 0.17%)</title><rect x="38.8897%" y="7861" width="0.1712%" height="15" fill="rgb(210,196,33)" fg:x="12722" fg:w="56"/><text x="39.1397%" y="7871.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (56 samples, 0.17%)</title><rect x="38.8897%" y="7845" width="0.1712%" height="15" fill="rgb(229,154,42)" fg:x="12722" fg:w="56"/><text x="39.1397%" y="7855.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::cmp::PartialEq&gt;::eq (55 samples, 0.17%)</title><rect x="38.8928%" y="7829" width="0.1681%" height="15" fill="rgb(228,114,26)" fg:x="12723" fg:w="55"/><text x="39.1428%" y="7839.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as alloc::rc::RcEqIdent&lt;T,A&gt;&gt;::eq (55 samples, 0.17%)</title><rect x="38.8928%" y="7813" width="0.1681%" height="15" fill="rgb(208,144,1)" fg:x="12723" fg:w="55"/><text x="39.1428%" y="7823.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::ptr_eq (4 samples, 0.01%)</title><rect x="39.0487%" y="7797" width="0.0122%" height="15" fill="rgb(239,112,37)" fg:x="12774" fg:w="4"/><text x="39.2987%" y="7807.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (18 samples, 0.06%)</title><rect x="39.0640%" y="7877" width="0.0550%" height="15" fill="rgb(210,96,50)" fg:x="12779" fg:w="18"/><text x="39.3140%" y="7887.50"></text></g><g><title>core::num::nonzero::NonZeroU16::new (18 samples, 0.06%)</title><rect x="39.0640%" y="7861" width="0.0550%" height="15" fill="rgb(222,178,2)" fg:x="12779" fg:w="18"/><text x="39.3140%" y="7871.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot_in_group (21 samples, 0.06%)</title><rect x="39.0609%" y="7893" width="0.0642%" height="15" fill="rgb(226,74,18)" fg:x="12778" fg:w="21"/><text x="39.3109%" y="7903.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fix_insert_slot (17 samples, 0.05%)</title><rect x="39.1251%" y="7893" width="0.0520%" height="15" fill="rgb(225,67,54)" fg:x="12799" fg:w="17"/><text x="39.3751%" y="7903.50"></text></g><g><title>hashbrown::raw::h2 (17 samples, 0.05%)</title><rect x="39.1771%" y="7893" width="0.0520%" height="15" fill="rgb(251,92,32)" fg:x="12816" fg:w="17"/><text x="39.4271%" y="7903.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (6 samples, 0.02%)</title><rect x="39.2291%" y="7893" width="0.0183%" height="15" fill="rgb(228,149,22)" fg:x="12833" fg:w="6"/><text x="39.4791%" y="7903.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (6 samples, 0.02%)</title><rect x="39.2291%" y="7877" width="0.0183%" height="15" fill="rgb(243,54,13)" fg:x="12833" fg:w="6"/><text x="39.4791%" y="7887.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.02%)</title><rect x="39.2291%" y="7861" width="0.0183%" height="15" fill="rgb(243,180,28)" fg:x="12833" fg:w="6"/><text x="39.4791%" y="7871.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (4,144 samples, 12.67%)</title><rect x="26.5949%" y="7925" width="12.6677%" height="15" fill="rgb(208,167,24)" fg:x="8700" fg:w="4144"/><text x="26.8449%" y="7935.50">hashbrown::raw::Raw..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_or_find_insert_slot_inner (156 samples, 0.48%)</title><rect x="38.7858%" y="7909" width="0.4769%" height="15" fill="rgb(245,73,45)" fg:x="12688" fg:w="156"/><text x="39.0358%" y="7919.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (5 samples, 0.02%)</title><rect x="39.2474%" y="7893" width="0.0153%" height="15" fill="rgb(237,203,48)" fg:x="12839" fg:w="5"/><text x="39.4974%" y="7903.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (5 samples, 0.02%)</title><rect x="39.2474%" y="7877" width="0.0153%" height="15" fill="rgb(211,197,16)" fg:x="12839" fg:w="5"/><text x="39.4974%" y="7887.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (10 samples, 0.03%)</title><rect x="39.2627%" y="7909" width="0.0306%" height="15" fill="rgb(243,99,51)" fg:x="12844" fg:w="10"/><text x="39.5127%" y="7919.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (10 samples, 0.03%)</title><rect x="39.2627%" y="7893" width="0.0306%" height="15" fill="rgb(215,123,29)" fg:x="12844" fg:w="10"/><text x="39.5127%" y="7903.50"></text></g><g><title>core::ptr::write (10 samples, 0.03%)</title><rect x="39.2627%" y="7877" width="0.0306%" height="15" fill="rgb(239,186,37)" fg:x="12844" fg:w="10"/><text x="39.5127%" y="7887.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (5 samples, 0.02%)</title><rect x="39.3177%" y="7893" width="0.0153%" height="15" fill="rgb(252,136,39)" fg:x="12862" fg:w="5"/><text x="39.5677%" y="7903.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl (5 samples, 0.02%)</title><rect x="39.3177%" y="7877" width="0.0153%" height="15" fill="rgb(223,213,32)" fg:x="12862" fg:w="5"/><text x="39.5677%" y="7887.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (6,899 samples, 21.09%)</title><rect x="18.2466%" y="7973" width="21.0895%" height="15" fill="rgb(233,115,5)" fg:x="5969" fg:w="6899"/><text x="18.4966%" y="7983.50">std::collections::hash::set::Hash..</text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (6,899 samples, 21.09%)</title><rect x="18.2466%" y="7957" width="21.0895%" height="15" fill="rgb(207,226,44)" fg:x="5969" fg:w="6899"/><text x="18.4966%" y="7967.50">hashbrown::set::HashSet&lt;T,S,A&gt;::i..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6,899 samples, 21.09%)</title><rect x="18.2466%" y="7941" width="21.0895%" height="15" fill="rgb(208,126,0)" fg:x="5969" fg:w="6899"/><text x="18.4966%" y="7951.50">hashbrown::map::HashMap&lt;K,V,S,A&gt;:..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (24 samples, 0.07%)</title><rect x="39.2627%" y="7925" width="0.0734%" height="15" fill="rgb(244,66,21)" fg:x="12844" fg:w="24"/><text x="39.5127%" y="7935.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::record_item_insert_at (14 samples, 0.04%)</title><rect x="39.2932%" y="7909" width="0.0428%" height="15" fill="rgb(222,97,12)" fg:x="12854" fg:w="14"/><text x="39.5432%" y="7919.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.02%)</title><rect x="40.2623%" y="7957" width="0.0153%" height="15" fill="rgb(219,213,19)" fg:x="13171" fg:w="5"/><text x="40.5123%" y="7967.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (5 samples, 0.02%)</title><rect x="40.2623%" y="7941" width="0.0153%" height="15" fill="rgb(252,169,30)" fg:x="13171" fg:w="5"/><text x="40.5123%" y="7951.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (11 samples, 0.03%)</title><rect x="40.3142%" y="7941" width="0.0336%" height="15" fill="rgb(206,32,51)" fg:x="13188" fg:w="11"/><text x="40.5642%" y="7951.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (7 samples, 0.02%)</title><rect x="40.3265%" y="7925" width="0.0214%" height="15" fill="rgb(250,172,42)" fg:x="13192" fg:w="7"/><text x="40.5765%" y="7935.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (7 samples, 0.02%)</title><rect x="40.3265%" y="7909" width="0.0214%" height="15" fill="rgb(209,34,43)" fg:x="13192" fg:w="7"/><text x="40.5765%" y="7919.50"></text></g><g><title>__rdl_alloc (51 samples, 0.16%)</title><rect x="40.6627%" y="7733" width="0.1559%" height="15" fill="rgb(223,11,35)" fg:x="13302" fg:w="51"/><text x="40.9127%" y="7743.50"></text></g><g><title>__rust_alloc (57 samples, 0.17%)</title><rect x="40.8186%" y="7733" width="0.1742%" height="15" fill="rgb(251,219,26)" fg:x="13353" fg:w="57"/><text x="41.0686%" y="7743.50"></text></g><g><title>core::ptr::read_volatile (4 samples, 0.01%)</title><rect x="40.9929%" y="7733" width="0.0122%" height="15" fill="rgb(231,119,3)" fg:x="13410" fg:w="4"/><text x="41.2429%" y="7743.50"></text></g><g><title>[libc.so.6] (114 samples, 0.35%)</title><rect x="46.1132%" y="7701" width="0.3485%" height="15" fill="rgb(216,97,11)" fg:x="15085" fg:w="114"/><text x="46.3632%" y="7711.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,919 samples, 5.87%)</title><rect x="40.6016%" y="7781" width="5.8662%" height="15" fill="rgb(223,59,9)" fg:x="13282" fg:w="1919"/><text x="40.8516%" y="7791.50">&lt;alloc:..</text></g><g><title>alloc::alloc::Global::alloc_impl (1,919 samples, 5.87%)</title><rect x="40.6016%" y="7765" width="5.8662%" height="15" fill="rgb(233,93,31)" fg:x="13282" fg:w="1919"/><text x="40.8516%" y="7775.50">alloc::..</text></g><g><title>alloc::alloc::alloc (1,914 samples, 5.85%)</title><rect x="40.6169%" y="7749" width="5.8509%" height="15" fill="rgb(239,81,33)" fg:x="13287" fg:w="1914"/><text x="40.8669%" y="7759.50">alloc::..</text></g><g><title>malloc (1,787 samples, 5.46%)</title><rect x="41.0051%" y="7733" width="5.4627%" height="15" fill="rgb(213,120,34)" fg:x="13414" fg:w="1787"/><text x="41.2551%" y="7743.50">malloc</text></g><g><title>[libc.so.6] (1,129 samples, 3.45%)</title><rect x="43.0165%" y="7717" width="3.4512%" height="15" fill="rgb(243,49,53)" fg:x="14072" fg:w="1129"/><text x="43.2665%" y="7727.50">[li..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,996 samples, 6.10%)</title><rect x="40.3937%" y="7829" width="6.1015%" height="15" fill="rgb(247,216,33)" fg:x="13214" fg:w="1996"/><text x="40.6437%" y="7839.50">alloc::v..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,996 samples, 6.10%)</title><rect x="40.3937%" y="7813" width="6.1015%" height="15" fill="rgb(226,26,14)" fg:x="13214" fg:w="1996"/><text x="40.6437%" y="7823.50">alloc::r..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1,996 samples, 6.10%)</title><rect x="40.3937%" y="7797" width="6.1015%" height="15" fill="rgb(215,49,53)" fg:x="13214" fg:w="1996"/><text x="40.6437%" y="7807.50">alloc::r..</text></g><g><title>core::alloc::layout::Layout::array (9 samples, 0.03%)</title><rect x="46.4678%" y="7781" width="0.0275%" height="15" fill="rgb(245,162,40)" fg:x="15201" fg:w="9"/><text x="46.7178%" y="7791.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (9 samples, 0.03%)</title><rect x="46.4678%" y="7765" width="0.0275%" height="15" fill="rgb(229,68,17)" fg:x="15201" fg:w="9"/><text x="46.7178%" y="7775.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,209 samples, 6.75%)</title><rect x="40.3937%" y="7893" width="6.7527%" height="15" fill="rgb(213,182,10)" fg:x="13214" fg:w="2209"/><text x="40.6437%" y="7903.50">&lt;alloc::v..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,209 samples, 6.75%)</title><rect x="40.3937%" y="7877" width="6.7527%" height="15" fill="rgb(245,125,30)" fg:x="13214" fg:w="2209"/><text x="40.6437%" y="7887.50">alloc::sl..</text></g><g><title>alloc::slice::hack::to_vec (2,209 samples, 6.75%)</title><rect x="40.3937%" y="7861" width="6.7527%" height="15" fill="rgb(232,202,2)" fg:x="13214" fg:w="2209"/><text x="40.6437%" y="7871.50">alloc::sl..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,209 samples, 6.75%)</title><rect x="40.3937%" y="7845" width="6.7527%" height="15" fill="rgb(237,140,51)" fg:x="13214" fg:w="2209"/><text x="40.6437%" y="7855.50">&lt;T as all..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (213 samples, 0.65%)</title><rect x="46.4953%" y="7829" width="0.6511%" height="15" fill="rgb(236,157,25)" fg:x="15210" fg:w="213"/><text x="46.7453%" y="7839.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (213 samples, 0.65%)</title><rect x="46.4953%" y="7813" width="0.6511%" height="15" fill="rgb(219,209,0)" fg:x="15210" fg:w="213"/><text x="46.7453%" y="7823.50"></text></g><g><title>[libc.so.6] (148 samples, 0.45%)</title><rect x="46.6940%" y="7797" width="0.4524%" height="15" fill="rgb(240,116,54)" fg:x="15275" fg:w="148"/><text x="46.9440%" y="7807.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (51 samples, 0.16%)</title><rect x="47.1464%" y="7893" width="0.1559%" height="15" fill="rgb(216,10,36)" fg:x="15423" fg:w="51"/><text x="47.3964%" y="7903.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.02%)</title><rect x="47.2809%" y="7877" width="0.0214%" height="15" fill="rgb(222,72,44)" fg:x="15467" fg:w="7"/><text x="47.5309%" y="7887.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.02%)</title><rect x="47.2840%" y="7861" width="0.0183%" height="15" fill="rgb(232,159,9)" fg:x="15468" fg:w="6"/><text x="47.5340%" y="7871.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (14 samples, 0.04%)</title><rect x="47.3023%" y="7893" width="0.0428%" height="15" fill="rgb(210,39,32)" fg:x="15474" fg:w="14"/><text x="47.5523%" y="7903.50"></text></g><g><title>__rdl_alloc (5 samples, 0.02%)</title><rect x="47.4123%" y="7797" width="0.0153%" height="15" fill="rgb(216,194,45)" fg:x="15510" fg:w="5"/><text x="47.6623%" y="7807.50"></text></g><g><title>__rust_alloc (10 samples, 0.03%)</title><rect x="47.4276%" y="7797" width="0.0306%" height="15" fill="rgb(218,18,35)" fg:x="15515" fg:w="10"/><text x="47.6776%" y="7807.50"></text></g><g><title>core::ptr::read_volatile (5 samples, 0.02%)</title><rect x="47.4582%" y="7797" width="0.0153%" height="15" fill="rgb(207,83,51)" fg:x="15525" fg:w="5"/><text x="47.7082%" y="7807.50"></text></g><g><title>[libc.so.6] (16 samples, 0.05%)</title><rect x="49.1639%" y="7765" width="0.0489%" height="15" fill="rgb(225,63,43)" fg:x="16083" fg:w="16"/><text x="49.4139%" y="7775.50"></text></g><g><title>[libc.so.6] (426 samples, 1.30%)</title><rect x="47.9137%" y="7781" width="1.3022%" height="15" fill="rgb(207,57,36)" fg:x="15674" fg:w="426"/><text x="48.1637%" y="7791.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (592 samples, 1.81%)</title><rect x="47.4093%" y="7845" width="1.8097%" height="15" fill="rgb(216,99,33)" fg:x="15509" fg:w="592"/><text x="47.6593%" y="7855.50">&lt;..</text></g><g><title>alloc::alloc::Global::alloc_impl (592 samples, 1.81%)</title><rect x="47.4093%" y="7829" width="1.8097%" height="15" fill="rgb(225,42,16)" fg:x="15509" fg:w="592"/><text x="47.6593%" y="7839.50">a..</text></g><g><title>alloc::alloc::alloc (591 samples, 1.81%)</title><rect x="47.4123%" y="7813" width="1.8066%" height="15" fill="rgb(220,201,45)" fg:x="15510" fg:w="591"/><text x="47.6623%" y="7823.50">a..</text></g><g><title>malloc (571 samples, 1.75%)</title><rect x="47.4735%" y="7797" width="1.7455%" height="15" fill="rgb(225,33,4)" fg:x="15530" fg:w="571"/><text x="47.7235%" y="7807.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (617 samples, 1.89%)</title><rect x="47.3451%" y="7893" width="1.8861%" height="15" fill="rgb(224,33,50)" fg:x="15488" fg:w="617"/><text x="47.5951%" y="7903.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (610 samples, 1.86%)</title><rect x="47.3665%" y="7877" width="1.8647%" height="15" fill="rgb(246,198,51)" fg:x="15495" fg:w="610"/><text x="47.6165%" y="7887.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (610 samples, 1.86%)</title><rect x="47.3665%" y="7861" width="1.8647%" height="15" fill="rgb(205,22,4)" fg:x="15495" fg:w="610"/><text x="47.6165%" y="7871.50">a..</text></g><g><title>core::alloc::layout::Layout::array (4 samples, 0.01%)</title><rect x="49.2190%" y="7845" width="0.0122%" height="15" fill="rgb(206,3,8)" fg:x="16101" fg:w="4"/><text x="49.4690%" y="7855.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (4 samples, 0.01%)</title><rect x="49.2190%" y="7829" width="0.0122%" height="15" fill="rgb(251,23,15)" fg:x="16101" fg:w="4"/><text x="49.4690%" y="7839.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (23 samples, 0.07%)</title><rect x="49.2312%" y="7893" width="0.0703%" height="15" fill="rgb(252,88,28)" fg:x="16105" fg:w="23"/><text x="49.4812%" y="7903.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,970 samples, 9.08%)</title><rect x="40.2776%" y="7957" width="9.0790%" height="15" fill="rgb(212,127,14)" fg:x="13176" fg:w="2970"/><text x="40.5276%" y="7967.50">&lt;alloc::vec::..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,947 samples, 9.01%)</title><rect x="40.3479%" y="7941" width="9.0087%" height="15" fill="rgb(247,145,37)" fg:x="13199" fg:w="2947"/><text x="40.5979%" y="7951.50">alloc::slice:..</text></g><g><title>alloc::slice::hack::to_vec (2,947 samples, 9.01%)</title><rect x="40.3479%" y="7925" width="9.0087%" height="15" fill="rgb(209,117,53)" fg:x="13199" fg:w="2947"/><text x="40.5979%" y="7935.50">alloc::slice:..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,947 samples, 9.01%)</title><rect x="40.3479%" y="7909" width="9.0087%" height="15" fill="rgb(212,90,42)" fg:x="13199" fg:w="2947"/><text x="40.5979%" y="7919.50">&lt;T as alloc::..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (18 samples, 0.06%)</title><rect x="49.3015%" y="7893" width="0.0550%" height="15" fill="rgb(218,164,37)" fg:x="16128" fg:w="18"/><text x="49.5515%" y="7903.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (18 samples, 0.06%)</title><rect x="49.3015%" y="7877" width="0.0550%" height="15" fill="rgb(246,65,34)" fg:x="16128" fg:w="18"/><text x="49.5515%" y="7887.50"></text></g><g><title>[libc.so.6] (12 samples, 0.04%)</title><rect x="49.3198%" y="7861" width="0.0367%" height="15" fill="rgb(231,100,33)" fg:x="16134" fg:w="12"/><text x="49.5698%" y="7871.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (17 samples, 0.05%)</title><rect x="49.3565%" y="7957" width="0.0520%" height="15" fill="rgb(228,126,14)" fg:x="16146" fg:w="17"/><text x="49.6065%" y="7967.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (17 samples, 0.05%)</title><rect x="49.3565%" y="7941" width="0.0520%" height="15" fill="rgb(215,173,21)" fg:x="16146" fg:w="17"/><text x="49.6065%" y="7951.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (17 samples, 0.05%)</title><rect x="49.3565%" y="7925" width="0.0520%" height="15" fill="rgb(210,6,40)" fg:x="16146" fg:w="17"/><text x="49.6065%" y="7935.50"></text></g><g><title>__rdl_alloc (7 samples, 0.02%)</title><rect x="49.4513%" y="7717" width="0.0214%" height="15" fill="rgb(212,48,18)" fg:x="16177" fg:w="7"/><text x="49.7013%" y="7727.50"></text></g><g><title>__rust_alloc (4 samples, 0.01%)</title><rect x="49.4727%" y="7717" width="0.0122%" height="15" fill="rgb(230,214,11)" fg:x="16184" fg:w="4"/><text x="49.7227%" y="7727.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (100 samples, 0.31%)</title><rect x="49.4238%" y="7813" width="0.3057%" height="15" fill="rgb(254,105,39)" fg:x="16168" fg:w="100"/><text x="49.6738%" y="7823.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (100 samples, 0.31%)</title><rect x="49.4238%" y="7797" width="0.3057%" height="15" fill="rgb(245,158,5)" fg:x="16168" fg:w="100"/><text x="49.6738%" y="7807.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (100 samples, 0.31%)</title><rect x="49.4238%" y="7781" width="0.3057%" height="15" fill="rgb(249,208,11)" fg:x="16168" fg:w="100"/><text x="49.6738%" y="7791.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (95 samples, 0.29%)</title><rect x="49.4391%" y="7765" width="0.2904%" height="15" fill="rgb(210,39,28)" fg:x="16173" fg:w="95"/><text x="49.6891%" y="7775.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (95 samples, 0.29%)</title><rect x="49.4391%" y="7749" width="0.2904%" height="15" fill="rgb(211,56,53)" fg:x="16173" fg:w="95"/><text x="49.6891%" y="7759.50"></text></g><g><title>alloc::alloc::alloc (95 samples, 0.29%)</title><rect x="49.4391%" y="7733" width="0.2904%" height="15" fill="rgb(226,201,30)" fg:x="16173" fg:w="95"/><text x="49.6891%" y="7743.50"></text></g><g><title>malloc (80 samples, 0.24%)</title><rect x="49.4849%" y="7717" width="0.2446%" height="15" fill="rgb(239,101,34)" fg:x="16188" fg:w="80"/><text x="49.7349%" y="7727.50"></text></g><g><title>[libc.so.6] (36 samples, 0.11%)</title><rect x="49.6194%" y="7701" width="0.1100%" height="15" fill="rgb(226,209,5)" fg:x="16232" fg:w="36"/><text x="49.8694%" y="7711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (115 samples, 0.35%)</title><rect x="49.4238%" y="7877" width="0.3515%" height="15" fill="rgb(250,105,47)" fg:x="16168" fg:w="115"/><text x="49.6738%" y="7887.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (115 samples, 0.35%)</title><rect x="49.4238%" y="7861" width="0.3515%" height="15" fill="rgb(230,72,3)" fg:x="16168" fg:w="115"/><text x="49.6738%" y="7871.50"></text></g><g><title>alloc::slice::hack::to_vec (115 samples, 0.35%)</title><rect x="49.4238%" y="7845" width="0.3515%" height="15" fill="rgb(232,218,39)" fg:x="16168" fg:w="115"/><text x="49.6738%" y="7855.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (115 samples, 0.35%)</title><rect x="49.4238%" y="7829" width="0.3515%" height="15" fill="rgb(248,166,6)" fg:x="16168" fg:w="115"/><text x="49.6738%" y="7839.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (15 samples, 0.05%)</title><rect x="49.7295%" y="7813" width="0.0459%" height="15" fill="rgb(247,89,20)" fg:x="16268" fg:w="15"/><text x="49.9795%" y="7823.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (15 samples, 0.05%)</title><rect x="49.7295%" y="7797" width="0.0459%" height="15" fill="rgb(248,130,54)" fg:x="16268" fg:w="15"/><text x="49.9795%" y="7807.50"></text></g><g><title>[libc.so.6] (14 samples, 0.04%)</title><rect x="49.7325%" y="7781" width="0.0428%" height="15" fill="rgb(234,196,4)" fg:x="16269" fg:w="14"/><text x="49.9825%" y="7791.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.02%)</title><rect x="49.7753%" y="7877" width="0.0183%" height="15" fill="rgb(250,143,31)" fg:x="16283" fg:w="6"/><text x="50.0253%" y="7887.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (73 samples, 0.22%)</title><rect x="49.7967%" y="7829" width="0.2232%" height="15" fill="rgb(211,110,34)" fg:x="16290" fg:w="73"/><text x="50.0467%" y="7839.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (73 samples, 0.22%)</title><rect x="49.7967%" y="7813" width="0.2232%" height="15" fill="rgb(215,124,48)" fg:x="16290" fg:w="73"/><text x="50.0467%" y="7823.50"></text></g><g><title>alloc::alloc::alloc (72 samples, 0.22%)</title><rect x="49.7998%" y="7797" width="0.2201%" height="15" fill="rgb(216,46,13)" fg:x="16291" fg:w="72"/><text x="50.0498%" y="7807.50"></text></g><g><title>malloc (70 samples, 0.21%)</title><rect x="49.8059%" y="7781" width="0.2140%" height="15" fill="rgb(205,184,25)" fg:x="16293" fg:w="70"/><text x="50.0559%" y="7791.50"></text></g><g><title>[libc.so.6] (64 samples, 0.20%)</title><rect x="49.8242%" y="7765" width="0.1956%" height="15" fill="rgb(228,1,10)" fg:x="16299" fg:w="64"/><text x="50.0742%" y="7775.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (75 samples, 0.23%)</title><rect x="49.7937%" y="7877" width="0.2293%" height="15" fill="rgb(213,116,27)" fg:x="16289" fg:w="75"/><text x="50.0437%" y="7887.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (75 samples, 0.23%)</title><rect x="49.7937%" y="7861" width="0.2293%" height="15" fill="rgb(241,95,50)" fg:x="16289" fg:w="75"/><text x="50.0437%" y="7871.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (75 samples, 0.23%)</title><rect x="49.7937%" y="7845" width="0.2293%" height="15" fill="rgb(238,48,32)" fg:x="16289" fg:w="75"/><text x="50.0437%" y="7855.50"></text></g><g><title>&lt;tetrs::logic::state::State as core::clone::Clone&gt;::clone (201 samples, 0.61%)</title><rect x="49.4146%" y="7957" width="0.6144%" height="15" fill="rgb(235,113,49)" fg:x="16165" fg:w="201"/><text x="49.6646%" y="7967.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (201 samples, 0.61%)</title><rect x="49.4146%" y="7941" width="0.6144%" height="15" fill="rgb(205,127,43)" fg:x="16165" fg:w="201"/><text x="49.6646%" y="7951.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (200 samples, 0.61%)</title><rect x="49.4177%" y="7925" width="0.6114%" height="15" fill="rgb(250,162,2)" fg:x="16166" fg:w="200"/><text x="49.6677%" y="7935.50"></text></g><g><title>alloc::slice::hack::to_vec (200 samples, 0.61%)</title><rect x="49.4177%" y="7909" width="0.6114%" height="15" fill="rgb(220,13,41)" fg:x="16166" fg:w="200"/><text x="49.6677%" y="7919.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (200 samples, 0.61%)</title><rect x="49.4177%" y="7893" width="0.6114%" height="15" fill="rgb(249,221,25)" fg:x="16166" fg:w="200"/><text x="49.6677%" y="7903.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (16 samples, 0.05%)</title><rect x="50.0321%" y="7957" width="0.0489%" height="15" fill="rgb(215,208,19)" fg:x="16367" fg:w="16"/><text x="50.2821%" y="7967.50"></text></g><g><title>alloc::alloc::exchange_malloc (15 samples, 0.05%)</title><rect x="50.0352%" y="7941" width="0.0459%" height="15" fill="rgb(236,175,2)" fg:x="16368" fg:w="15"/><text x="50.2852%" y="7951.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (15 samples, 0.05%)</title><rect x="50.0352%" y="7925" width="0.0459%" height="15" fill="rgb(241,52,2)" fg:x="16368" fg:w="15"/><text x="50.2852%" y="7935.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (15 samples, 0.05%)</title><rect x="50.0352%" y="7909" width="0.0459%" height="15" fill="rgb(248,140,14)" fg:x="16368" fg:w="15"/><text x="50.2852%" y="7919.50"></text></g><g><title>alloc::alloc::alloc (15 samples, 0.05%)</title><rect x="50.0352%" y="7893" width="0.0459%" height="15" fill="rgb(253,22,42)" fg:x="16368" fg:w="15"/><text x="50.2852%" y="7903.50"></text></g><g><title>malloc (13 samples, 0.04%)</title><rect x="50.0413%" y="7877" width="0.0397%" height="15" fill="rgb(234,61,47)" fg:x="16370" fg:w="13"/><text x="50.2913%" y="7887.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="50.0627%" y="7861" width="0.0183%" height="15" fill="rgb(208,226,15)" fg:x="16377" fg:w="6"/><text x="50.3127%" y="7871.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (4 samples, 0.01%)</title><rect x="50.1146%" y="7909" width="0.0122%" height="15" fill="rgb(217,221,4)" fg:x="16394" fg:w="4"/><text x="50.3646%" y="7919.50"></text></g><g><title>__rdl_realloc (5 samples, 0.02%)</title><rect x="50.1421%" y="7845" width="0.0153%" height="15" fill="rgb(212,174,34)" fg:x="16403" fg:w="5"/><text x="50.3921%" y="7855.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (5 samples, 0.02%)</title><rect x="50.1421%" y="7829" width="0.0153%" height="15" fill="rgb(253,83,4)" fg:x="16403" fg:w="5"/><text x="50.3921%" y="7839.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,908 samples, 5.83%)</title><rect x="50.1421%" y="7893" width="5.8325%" height="15" fill="rgb(250,195,49)" fg:x="16403" fg:w="1908"/><text x="50.3921%" y="7903.50">&lt;alloc:..</text></g><g><title>alloc::alloc::Global::grow_impl (1,908 samples, 5.83%)</title><rect x="50.1421%" y="7877" width="5.8325%" height="15" fill="rgb(241,192,25)" fg:x="16403" fg:w="1908"/><text x="50.3921%" y="7887.50">alloc::..</text></g><g><title>alloc::alloc::realloc (1,908 samples, 5.83%)</title><rect x="50.1421%" y="7861" width="5.8325%" height="15" fill="rgb(208,124,10)" fg:x="16403" fg:w="1908"/><text x="50.3921%" y="7871.50">alloc::..</text></g><g><title>realloc (1,902 samples, 5.81%)</title><rect x="50.1605%" y="7845" width="5.8142%" height="15" fill="rgb(222,33,0)" fg:x="16409" fg:w="1902"/><text x="50.4105%" y="7855.50">realloc</text></g><g><title>[libc.so.6] (1,889 samples, 5.77%)</title><rect x="50.2002%" y="7829" width="5.7745%" height="15" fill="rgb(234,209,28)" fg:x="16422" fg:w="1889"/><text x="50.4502%" y="7839.50">[libc.s..</text></g><g><title>[libc.so.6] (1,880 samples, 5.75%)</title><rect x="50.2277%" y="7813" width="5.7470%" height="15" fill="rgb(224,11,23)" fg:x="16431" fg:w="1880"/><text x="50.4777%" y="7823.50">[libc.s..</text></g><g><title>[libc.so.6] (1,455 samples, 4.45%)</title><rect x="51.5269%" y="7797" width="4.4478%" height="15" fill="rgb(232,99,1)" fg:x="16856" fg:w="1455"/><text x="51.7769%" y="7807.50">[libc..</text></g><g><title>[libc.so.6] (386 samples, 1.18%)</title><rect x="54.7947%" y="7781" width="1.1800%" height="15" fill="rgb(237,95,45)" fg:x="17925" fg:w="386"/><text x="55.0447%" y="7791.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,917 samples, 5.86%)</title><rect x="50.1360%" y="7909" width="5.8601%" height="15" fill="rgb(208,109,11)" fg:x="16401" fg:w="1917"/><text x="50.3860%" y="7919.50">alloc::..</text></g><g><title>malloc (4 samples, 0.01%)</title><rect x="55.9839%" y="7893" width="0.0122%" height="15" fill="rgb(216,190,48)" fg:x="18314" fg:w="4"/><text x="56.2339%" y="7903.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1,930 samples, 5.90%)</title><rect x="50.1055%" y="7941" width="5.8998%" height="15" fill="rgb(251,171,36)" fg:x="16391" fg:w="1930"/><text x="50.3555%" y="7951.50">alloc::..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1,929 samples, 5.90%)</title><rect x="50.1085%" y="7925" width="5.8967%" height="15" fill="rgb(230,62,22)" fg:x="16392" fg:w="1929"/><text x="50.3585%" y="7935.50">alloc::..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (7 samples, 0.02%)</title><rect x="56.0053%" y="7941" width="0.0214%" height="15" fill="rgb(225,114,35)" fg:x="18321" fg:w="7"/><text x="56.2553%" y="7951.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (7 samples, 0.02%)</title><rect x="56.0053%" y="7925" width="0.0214%" height="15" fill="rgb(215,118,42)" fg:x="18321" fg:w="7"/><text x="56.2553%" y="7935.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,991 samples, 6.09%)</title><rect x="50.0810%" y="7957" width="6.0863%" height="15" fill="rgb(243,119,21)" fg:x="16383" fg:w="1991"/><text x="50.3310%" y="7967.50">alloc::v..</text></g><g><title>core::ptr::write (43 samples, 0.13%)</title><rect x="56.0358%" y="7941" width="0.1314%" height="15" fill="rgb(252,177,53)" fg:x="18331" fg:w="43"/><text x="56.2858%" y="7951.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::remove (19 samples, 0.06%)</title><rect x="56.1673%" y="7957" width="0.0581%" height="15" fill="rgb(237,209,29)" fg:x="18374" fg:w="19"/><text x="56.4173%" y="7967.50"></text></g><g><title>core::intrinsics::copy (18 samples, 0.06%)</title><rect x="56.1703%" y="7941" width="0.0550%" height="15" fill="rgb(212,65,23)" fg:x="18375" fg:w="18"/><text x="56.4203%" y="7951.50"></text></g><g><title>[libc.so.6] (15 samples, 0.05%)</title><rect x="56.1795%" y="7925" width="0.0459%" height="15" fill="rgb(230,222,46)" fg:x="18378" fg:w="15"/><text x="56.4295%" y="7935.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (8 samples, 0.02%)</title><rect x="56.2254%" y="7957" width="0.0245%" height="15" fill="rgb(215,135,32)" fg:x="18393" fg:w="8"/><text x="56.4754%" y="7967.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (54 samples, 0.17%)</title><rect x="56.3629%" y="7925" width="0.1651%" height="15" fill="rgb(246,101,22)" fg:x="18438" fg:w="54"/><text x="56.6129%" y="7935.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::next (149 samples, 0.46%)</title><rect x="56.2498%" y="7957" width="0.4555%" height="15" fill="rgb(206,107,13)" fg:x="18401" fg:w="149"/><text x="56.4998%" y="7967.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::iter::range::RangeInclusiveIteratorImpl&gt;::spec_next (149 samples, 0.46%)</title><rect x="56.2498%" y="7941" width="0.4555%" height="15" fill="rgb(250,100,44)" fg:x="18401" fg:w="149"/><text x="56.4998%" y="7951.50"></text></g><g><title>core::ops::range::RangeInclusive&lt;Idx&gt;::is_empty (58 samples, 0.18%)</title><rect x="56.5280%" y="7925" width="0.1773%" height="15" fill="rgb(231,147,38)" fg:x="18492" fg:w="58"/><text x="56.7780%" y="7935.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (201 samples, 0.61%)</title><rect x="63.1339%" y="7941" width="0.6144%" height="15" fill="rgb(229,8,40)" fg:x="20653" fg:w="201"/><text x="63.3839%" y="7951.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (201 samples, 0.61%)</title><rect x="63.1339%" y="7925" width="0.6144%" height="15" fill="rgb(221,135,30)" fg:x="20653" fg:w="201"/><text x="63.3839%" y="7935.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (201 samples, 0.61%)</title><rect x="63.1339%" y="7909" width="0.6144%" height="15" fill="rgb(249,193,18)" fg:x="20653" fg:w="201"/><text x="63.3839%" y="7919.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (56 samples, 0.17%)</title><rect x="64.1030%" y="7909" width="0.1712%" height="15" fill="rgb(209,133,39)" fg:x="20970" fg:w="56"/><text x="64.3530%" y="7919.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (56 samples, 0.17%)</title><rect x="64.1030%" y="7893" width="0.1712%" height="15" fill="rgb(232,100,14)" fg:x="20970" fg:w="56"/><text x="64.3530%" y="7903.50"></text></g><g><title>tetrs::logic::bot::can_place (2,575 samples, 7.87%)</title><rect x="56.7083%" y="7957" width="7.8715%" height="15" fill="rgb(224,185,1)" fg:x="18551" fg:w="2575"/><text x="56.9583%" y="7967.50">tetrs::logi..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (271 samples, 0.83%)</title><rect x="63.7514%" y="7941" width="0.8284%" height="15" fill="rgb(223,139,8)" fg:x="20855" fg:w="271"/><text x="64.0014%" y="7951.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (271 samples, 0.83%)</title><rect x="63.7514%" y="7925" width="0.8284%" height="15" fill="rgb(232,213,38)" fg:x="20855" fg:w="271"/><text x="64.0014%" y="7935.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (100 samples, 0.31%)</title><rect x="64.2741%" y="7909" width="0.3057%" height="15" fill="rgb(207,94,22)" fg:x="21026" fg:w="100"/><text x="64.5241%" y="7919.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (35 samples, 0.11%)</title><rect x="65.1087%" y="7941" width="0.1070%" height="15" fill="rgb(219,183,54)" fg:x="21299" fg:w="35"/><text x="65.3587%" y="7951.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (35 samples, 0.11%)</title><rect x="65.1087%" y="7925" width="0.1070%" height="15" fill="rgb(216,185,54)" fg:x="21299" fg:w="35"/><text x="65.3587%" y="7935.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (35 samples, 0.11%)</title><rect x="65.1087%" y="7909" width="0.1070%" height="15" fill="rgb(254,217,39)" fg:x="21299" fg:w="35"/><text x="65.3587%" y="7919.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (10 samples, 0.03%)</title><rect x="65.2157%" y="7941" width="0.0306%" height="15" fill="rgb(240,178,23)" fg:x="21334" fg:w="10"/><text x="65.4657%" y="7951.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (10 samples, 0.03%)</title><rect x="65.2157%" y="7925" width="0.0306%" height="15" fill="rgb(218,11,47)" fg:x="21334" fg:w="10"/><text x="65.4657%" y="7935.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (10 samples, 0.03%)</title><rect x="65.2157%" y="7909" width="0.0306%" height="15" fill="rgb(218,51,51)" fg:x="21334" fg:w="10"/><text x="65.4657%" y="7919.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (4 samples, 0.01%)</title><rect x="65.2462%" y="7941" width="0.0122%" height="15" fill="rgb(238,126,27)" fg:x="21344" fg:w="4"/><text x="65.4962%" y="7951.50"></text></g><g><title>tetrs::logic::bot::place_piece (265 samples, 0.81%)</title><rect x="64.5798%" y="7957" width="0.8101%" height="15" fill="rgb(249,202,22)" fg:x="21126" fg:w="265"/><text x="64.8298%" y="7967.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (43 samples, 0.13%)</title><rect x="65.2585%" y="7941" width="0.1314%" height="15" fill="rgb(254,195,49)" fg:x="21348" fg:w="43"/><text x="65.5085%" y="7951.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (43 samples, 0.13%)</title><rect x="65.2585%" y="7925" width="0.1314%" height="15" fill="rgb(208,123,14)" fg:x="21348" fg:w="43"/><text x="65.5085%" y="7935.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (38 samples, 0.12%)</title><rect x="65.2737%" y="7909" width="0.1162%" height="15" fill="rgb(224,200,8)" fg:x="21353" fg:w="38"/><text x="65.5237%" y="7919.50"></text></g><g><title>tetrs::logic::bot::generate_states (8,554 samples, 26.15%)</title><rect x="39.3360%" y="7973" width="26.1486%" height="15" fill="rgb(217,61,36)" fg:x="12868" fg:w="8554"/><text x="39.5860%" y="7983.50">tetrs::logic::bot::generate_states</text></g><g><title>tetrs::logic::id_manager::IdManager::next_unique_id (31 samples, 0.09%)</title><rect x="65.3899%" y="7957" width="0.0948%" height="15" fill="rgb(206,35,45)" fg:x="21391" fg:w="31"/><text x="65.6399%" y="7967.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (28 samples, 0.09%)</title><rect x="66.0808%" y="7957" width="0.0856%" height="15" fill="rgb(217,65,33)" fg:x="21617" fg:w="28"/><text x="66.3308%" y="7967.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (28 samples, 0.09%)</title><rect x="66.0808%" y="7941" width="0.0856%" height="15" fill="rgb(222,158,48)" fg:x="21617" fg:w="28"/><text x="66.3308%" y="7951.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (28 samples, 0.09%)</title><rect x="66.0808%" y="7925" width="0.0856%" height="15" fill="rgb(254,2,54)" fg:x="21617" fg:w="28"/><text x="66.3308%" y="7935.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (26 samples, 0.08%)</title><rect x="66.1878%" y="7925" width="0.0795%" height="15" fill="rgb(250,143,38)" fg:x="21652" fg:w="26"/><text x="66.4378%" y="7935.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (26 samples, 0.08%)</title><rect x="66.1878%" y="7909" width="0.0795%" height="15" fill="rgb(248,25,0)" fg:x="21652" fg:w="26"/><text x="66.4378%" y="7919.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (112 samples, 0.34%)</title><rect x="66.1664%" y="7957" width="0.3424%" height="15" fill="rgb(206,152,27)" fg:x="21645" fg:w="112"/><text x="66.4164%" y="7967.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (112 samples, 0.34%)</title><rect x="66.1664%" y="7941" width="0.3424%" height="15" fill="rgb(240,77,30)" fg:x="21645" fg:w="112"/><text x="66.4164%" y="7951.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (79 samples, 0.24%)</title><rect x="66.2672%" y="7925" width="0.2415%" height="15" fill="rgb(231,5,3)" fg:x="21678" fg:w="79"/><text x="66.5172%" y="7935.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (36 samples, 0.11%)</title><rect x="68.7617%" y="7941" width="0.1100%" height="15" fill="rgb(207,226,32)" fg:x="22494" fg:w="36"/><text x="69.0117%" y="7951.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (316 samples, 0.97%)</title><rect x="68.8717%" y="7941" width="0.9660%" height="15" fill="rgb(222,207,47)" fg:x="22530" fg:w="316"/><text x="69.1217%" y="7951.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (316 samples, 0.97%)</title><rect x="68.8717%" y="7925" width="0.9660%" height="15" fill="rgb(229,115,45)" fg:x="22530" fg:w="316"/><text x="69.1217%" y="7935.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (316 samples, 0.97%)</title><rect x="68.8717%" y="7909" width="0.9660%" height="15" fill="rgb(224,191,6)" fg:x="22530" fg:w="316"/><text x="69.1217%" y="7919.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (59 samples, 0.18%)</title><rect x="69.8377%" y="7941" width="0.1804%" height="15" fill="rgb(230,227,24)" fg:x="22846" fg:w="59"/><text x="70.0877%" y="7951.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (59 samples, 0.18%)</title><rect x="69.8377%" y="7925" width="0.1804%" height="15" fill="rgb(228,80,19)" fg:x="22846" fg:w="59"/><text x="70.0877%" y="7935.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (59 samples, 0.18%)</title><rect x="69.8377%" y="7909" width="0.1804%" height="15" fill="rgb(247,229,0)" fg:x="22846" fg:w="59"/><text x="70.0877%" y="7919.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::backward_unchecked (4 samples, 0.01%)</title><rect x="70.0547%" y="7893" width="0.0122%" height="15" fill="rgb(237,194,15)" fg:x="22917" fg:w="4"/><text x="70.3047%" y="7903.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_sub (4 samples, 0.01%)</title><rect x="70.0547%" y="7877" width="0.0122%" height="15" fill="rgb(219,203,20)" fg:x="22917" fg:w="4"/><text x="70.3047%" y="7887.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.09%)</title><rect x="70.0180%" y="7941" width="0.0886%" height="15" fill="rgb(234,128,8)" fg:x="22905" fg:w="29"/><text x="70.2680%" y="7951.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (29 samples, 0.09%)</title><rect x="70.0180%" y="7925" width="0.0886%" height="15" fill="rgb(248,202,8)" fg:x="22905" fg:w="29"/><text x="70.2680%" y="7935.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (29 samples, 0.09%)</title><rect x="70.0180%" y="7909" width="0.0886%" height="15" fill="rgb(206,104,37)" fg:x="22905" fg:w="29"/><text x="70.2680%" y="7919.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (13 samples, 0.04%)</title><rect x="70.0669%" y="7893" width="0.0397%" height="15" fill="rgb(223,8,27)" fg:x="22921" fg:w="13"/><text x="70.3169%" y="7903.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::all (303 samples, 0.93%)</title><rect x="70.1067%" y="7941" width="0.9262%" height="15" fill="rgb(216,217,28)" fg:x="22934" fg:w="303"/><text x="70.3567%" y="7951.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (75 samples, 0.23%)</title><rect x="70.8037%" y="7925" width="0.2293%" height="15" fill="rgb(249,199,1)" fg:x="23162" fg:w="75"/><text x="71.0537%" y="7935.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (34 samples, 0.10%)</title><rect x="70.9290%" y="7909" width="0.1039%" height="15" fill="rgb(240,85,17)" fg:x="23203" fg:w="34"/><text x="71.1790%" y="7919.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (61 samples, 0.19%)</title><rect x="71.0329%" y="7941" width="0.1865%" height="15" fill="rgb(206,108,45)" fg:x="23237" fg:w="61"/><text x="71.2829%" y="7951.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (61 samples, 0.19%)</title><rect x="71.0329%" y="7925" width="0.1865%" height="15" fill="rgb(245,210,41)" fg:x="23237" fg:w="61"/><text x="71.2829%" y="7935.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (57 samples, 0.17%)</title><rect x="71.0452%" y="7909" width="0.1742%" height="15" fill="rgb(206,13,37)" fg:x="23241" fg:w="57"/><text x="71.2952%" y="7919.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (4 samples, 0.01%)</title><rect x="71.4181%" y="7925" width="0.0122%" height="15" fill="rgb(250,61,18)" fg:x="23363" fg:w="4"/><text x="71.6681%" y="7935.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (21 samples, 0.06%)</title><rect x="71.4303%" y="7925" width="0.0642%" height="15" fill="rgb(235,172,48)" fg:x="23367" fg:w="21"/><text x="71.6803%" y="7935.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (21 samples, 0.06%)</title><rect x="71.4303%" y="7909" width="0.0642%" height="15" fill="rgb(249,201,17)" fg:x="23367" fg:w="21"/><text x="71.6803%" y="7919.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (21 samples, 0.06%)</title><rect x="71.4303%" y="7893" width="0.0642%" height="15" fill="rgb(219,208,6)" fg:x="23367" fg:w="21"/><text x="71.6803%" y="7903.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (5 samples, 0.02%)</title><rect x="71.4945%" y="7925" width="0.0153%" height="15" fill="rgb(248,31,23)" fg:x="23388" fg:w="5"/><text x="71.7445%" y="7935.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (5 samples, 0.02%)</title><rect x="71.4945%" y="7909" width="0.0153%" height="15" fill="rgb(245,15,42)" fg:x="23388" fg:w="5"/><text x="71.7445%" y="7919.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (5 samples, 0.02%)</title><rect x="71.4945%" y="7893" width="0.0153%" height="15" fill="rgb(222,217,39)" fg:x="23388" fg:w="5"/><text x="71.7445%" y="7903.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::all (14 samples, 0.04%)</title><rect x="71.5129%" y="7925" width="0.0428%" height="15" fill="rgb(210,219,27)" fg:x="23394" fg:w="14"/><text x="71.7629%" y="7935.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.02%)</title><rect x="71.5343%" y="7909" width="0.0214%" height="15" fill="rgb(252,166,36)" fg:x="23401" fg:w="7"/><text x="71.7843%" y="7919.50"></text></g><g><title>tetrs::logic::game::gravity (17 samples, 0.05%)</title><rect x="71.6198%" y="7909" width="0.0520%" height="15" fill="rgb(245,132,34)" fg:x="23429" fg:w="17"/><text x="71.8698%" y="7919.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (5 samples, 0.02%)</title><rect x="71.6565%" y="7893" width="0.0153%" height="15" fill="rgb(236,54,3)" fg:x="23441" fg:w="5"/><text x="71.9065%" y="7903.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (5 samples, 0.02%)</title><rect x="71.6565%" y="7877" width="0.0153%" height="15" fill="rgb(241,173,43)" fg:x="23441" fg:w="5"/><text x="71.9065%" y="7887.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.02%)</title><rect x="71.6565%" y="7861" width="0.0153%" height="15" fill="rgb(215,190,9)" fg:x="23441" fg:w="5"/><text x="71.9065%" y="7871.50"></text></g><g><title>tetrs::logic::game::is_connected (9 samples, 0.03%)</title><rect x="71.6718%" y="7909" width="0.0275%" height="15" fill="rgb(242,101,16)" fg:x="23446" fg:w="9"/><text x="71.9218%" y="7919.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(i8,i8)&gt;&gt; (5 samples, 0.02%)</title><rect x="71.6840%" y="7893" width="0.0153%" height="15" fill="rgb(223,190,21)" fg:x="23450" fg:w="5"/><text x="71.9340%" y="7903.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="71.6840%" y="7877" width="0.0153%" height="15" fill="rgb(215,228,25)" fg:x="23450" fg:w="5"/><text x="71.9340%" y="7887.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(i8,i8),alloc::alloc::Global&gt;&gt; (5 samples, 0.02%)</title><rect x="71.6840%" y="7861" width="0.0153%" height="15" fill="rgb(225,36,22)" fg:x="23450" fg:w="5"/><text x="71.9340%" y="7871.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="71.6840%" y="7845" width="0.0153%" height="15" fill="rgb(251,106,46)" fg:x="23450" fg:w="5"/><text x="71.9340%" y="7855.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(i8,i8)&gt;&gt; (5 samples, 0.02%)</title><rect x="71.6840%" y="7829" width="0.0153%" height="15" fill="rgb(208,90,1)" fg:x="23450" fg:w="5"/><text x="71.9340%" y="7839.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="71.6840%" y="7813" width="0.0153%" height="15" fill="rgb(243,10,4)" fg:x="23450" fg:w="5"/><text x="71.9340%" y="7823.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.02%)</title><rect x="71.6840%" y="7797" width="0.0153%" height="15" fill="rgb(212,137,27)" fg:x="23450" fg:w="5"/><text x="71.9340%" y="7807.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.02%)</title><rect x="71.6840%" y="7781" width="0.0153%" height="15" fill="rgb(231,220,49)" fg:x="23450" fg:w="5"/><text x="71.9340%" y="7791.50"></text></g><g><title>cfree (5 samples, 0.02%)</title><rect x="71.6840%" y="7765" width="0.0153%" height="15" fill="rgb(237,96,20)" fg:x="23450" fg:w="5"/><text x="71.9340%" y="7775.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="71.6840%" y="7749" width="0.0153%" height="15" fill="rgb(239,229,30)" fg:x="23450" fg:w="5"/><text x="71.9340%" y="7759.50"></text></g><g><title>tetrs::logic::game::clear_rows (57 samples, 0.17%)</title><rect x="71.5618%" y="7925" width="0.1742%" height="15" fill="rgb(219,65,33)" fg:x="23410" fg:w="57"/><text x="71.8118%" y="7935.50"></text></g><g><title>tetrs::logic::id_manager::IdManager::next_unique_id (12 samples, 0.04%)</title><rect x="71.6993%" y="7909" width="0.0367%" height="15" fill="rgb(243,134,7)" fg:x="23455" fg:w="12"/><text x="71.9493%" y="7919.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (13 samples, 0.04%)</title><rect x="71.8308%" y="7909" width="0.0397%" height="15" fill="rgb(216,177,54)" fg:x="23498" fg:w="13"/><text x="72.0808%" y="7919.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (13 samples, 0.04%)</title><rect x="71.8308%" y="7893" width="0.0397%" height="15" fill="rgb(211,160,20)" fg:x="23498" fg:w="13"/><text x="72.0808%" y="7903.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (13 samples, 0.04%)</title><rect x="71.8308%" y="7877" width="0.0397%" height="15" fill="rgb(239,85,39)" fg:x="23498" fg:w="13"/><text x="72.0808%" y="7887.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="71.8705%" y="7909" width="0.0122%" height="15" fill="rgb(232,125,22)" fg:x="23511" fg:w="4"/><text x="72.1205%" y="7919.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (4 samples, 0.01%)</title><rect x="71.8705%" y="7893" width="0.0122%" height="15" fill="rgb(244,57,34)" fg:x="23511" fg:w="4"/><text x="72.1205%" y="7903.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (4 samples, 0.01%)</title><rect x="71.8705%" y="7877" width="0.0122%" height="15" fill="rgb(214,203,32)" fg:x="23511" fg:w="4"/><text x="72.1205%" y="7887.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::backward_unchecked (4 samples, 0.01%)</title><rect x="71.8705%" y="7861" width="0.0122%" height="15" fill="rgb(207,58,43)" fg:x="23511" fg:w="4"/><text x="72.1205%" y="7871.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_sub (4 samples, 0.01%)</title><rect x="71.8705%" y="7845" width="0.0122%" height="15" fill="rgb(215,193,15)" fg:x="23511" fg:w="4"/><text x="72.1205%" y="7855.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (7 samples, 0.02%)</title><rect x="71.9102%" y="7845" width="0.0214%" height="15" fill="rgb(232,15,44)" fg:x="23524" fg:w="7"/><text x="72.1602%" y="7855.50"></text></g><g><title>alloc::alloc::Global::grow_impl (7 samples, 0.02%)</title><rect x="71.9102%" y="7829" width="0.0214%" height="15" fill="rgb(212,3,48)" fg:x="23524" fg:w="7"/><text x="72.1602%" y="7839.50"></text></g><g><title>alloc::alloc::realloc (6 samples, 0.02%)</title><rect x="71.9133%" y="7813" width="0.0183%" height="15" fill="rgb(218,128,7)" fg:x="23525" fg:w="6"/><text x="72.1633%" y="7823.50"></text></g><g><title>realloc (5 samples, 0.02%)</title><rect x="71.9164%" y="7797" width="0.0153%" height="15" fill="rgb(226,216,39)" fg:x="23526" fg:w="5"/><text x="72.1664%" y="7807.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="71.9194%" y="7781" width="0.0122%" height="15" fill="rgb(243,47,51)" fg:x="23527" fg:w="4"/><text x="72.1694%" y="7791.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (11 samples, 0.03%)</title><rect x="71.9011%" y="7893" width="0.0336%" height="15" fill="rgb(241,183,40)" fg:x="23521" fg:w="11"/><text x="72.1511%" y="7903.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (11 samples, 0.03%)</title><rect x="71.9011%" y="7877" width="0.0336%" height="15" fill="rgb(231,217,32)" fg:x="23521" fg:w="11"/><text x="72.1511%" y="7887.50"></text></g><g><title>alloc::raw_vec::finish_grow (10 samples, 0.03%)</title><rect x="71.9041%" y="7861" width="0.0306%" height="15" fill="rgb(229,61,38)" fg:x="23522" fg:w="10"/><text x="72.1541%" y="7871.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (17 samples, 0.05%)</title><rect x="71.8889%" y="7909" width="0.0520%" height="15" fill="rgb(225,210,5)" fg:x="23517" fg:w="17"/><text x="72.1389%" y="7919.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,usize)&gt;&gt; (6 samples, 0.02%)</title><rect x="71.9408%" y="7909" width="0.0183%" height="15" fill="rgb(231,79,45)" fg:x="23534" fg:w="6"/><text x="72.1908%" y="7919.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,usize)&gt;&gt; (6 samples, 0.02%)</title><rect x="71.9408%" y="7893" width="0.0183%" height="15" fill="rgb(224,100,7)" fg:x="23534" fg:w="6"/><text x="72.1908%" y="7903.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="71.9408%" y="7877" width="0.0183%" height="15" fill="rgb(241,198,18)" fg:x="23534" fg:w="6"/><text x="72.1908%" y="7887.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.02%)</title><rect x="71.9408%" y="7861" width="0.0183%" height="15" fill="rgb(252,97,53)" fg:x="23534" fg:w="6"/><text x="72.1908%" y="7871.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.02%)</title><rect x="71.9408%" y="7845" width="0.0183%" height="15" fill="rgb(220,88,7)" fg:x="23534" fg:w="6"/><text x="72.1908%" y="7855.50"></text></g><g><title>cfree (6 samples, 0.02%)</title><rect x="71.9408%" y="7829" width="0.0183%" height="15" fill="rgb(213,176,14)" fg:x="23534" fg:w="6"/><text x="72.1908%" y="7839.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="71.9408%" y="7813" width="0.0183%" height="15" fill="rgb(246,73,7)" fg:x="23534" fg:w="6"/><text x="72.1908%" y="7823.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (9 samples, 0.03%)</title><rect x="71.9744%" y="7813" width="0.0275%" height="15" fill="rgb(245,64,36)" fg:x="23545" fg:w="9"/><text x="72.2244%" y="7823.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (9 samples, 0.03%)</title><rect x="71.9744%" y="7797" width="0.0275%" height="15" fill="rgb(245,80,10)" fg:x="23545" fg:w="9"/><text x="72.2244%" y="7807.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (9 samples, 0.03%)</title><rect x="71.9744%" y="7781" width="0.0275%" height="15" fill="rgb(232,107,50)" fg:x="23545" fg:w="9"/><text x="72.2244%" y="7791.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (5 samples, 0.02%)</title><rect x="71.9867%" y="7765" width="0.0153%" height="15" fill="rgb(253,3,0)" fg:x="23549" fg:w="5"/><text x="72.2367%" y="7775.50"></text></g><g><title>hashbrown::map::make_hash (13 samples, 0.04%)</title><rect x="71.9744%" y="7845" width="0.0397%" height="15" fill="rgb(212,99,53)" fg:x="23545" fg:w="13"/><text x="72.2244%" y="7855.50"></text></g><g><title>core::hash::BuildHasher::hash_one (13 samples, 0.04%)</title><rect x="71.9744%" y="7829" width="0.0397%" height="15" fill="rgb(249,111,54)" fg:x="23545" fg:w="13"/><text x="72.2244%" y="7839.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (4 samples, 0.01%)</title><rect x="72.0020%" y="7813" width="0.0122%" height="15" fill="rgb(249,55,30)" fg:x="23554" fg:w="4"/><text x="72.2520%" y="7823.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (4 samples, 0.01%)</title><rect x="72.0020%" y="7797" width="0.0122%" height="15" fill="rgb(237,47,42)" fg:x="23554" fg:w="4"/><text x="72.2520%" y="7807.50"></text></g><g><title>core::hash::Hasher::write_u16 (4 samples, 0.01%)</title><rect x="72.0020%" y="7781" width="0.0122%" height="15" fill="rgb(211,20,18)" fg:x="23554" fg:w="4"/><text x="72.2520%" y="7791.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.02%)</title><rect x="72.0325%" y="7797" width="0.0153%" height="15" fill="rgb(231,203,46)" fg:x="23564" fg:w="5"/><text x="72.2825%" y="7807.50"></text></g><g><title>hashbrown::raw::h2 (6 samples, 0.02%)</title><rect x="72.0539%" y="7797" width="0.0183%" height="15" fill="rgb(237,142,3)" fg:x="23571" fg:w="6"/><text x="72.3039%" y="7807.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (34 samples, 0.10%)</title><rect x="71.9744%" y="7909" width="0.1039%" height="15" fill="rgb(241,107,1)" fg:x="23545" fg:w="34"/><text x="72.2244%" y="7919.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (34 samples, 0.10%)</title><rect x="71.9744%" y="7893" width="0.1039%" height="15" fill="rgb(229,83,13)" fg:x="23545" fg:w="34"/><text x="72.2244%" y="7903.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (34 samples, 0.10%)</title><rect x="71.9744%" y="7877" width="0.1039%" height="15" fill="rgb(241,91,40)" fg:x="23545" fg:w="34"/><text x="72.2244%" y="7887.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (34 samples, 0.10%)</title><rect x="71.9744%" y="7861" width="0.1039%" height="15" fill="rgb(225,3,45)" fg:x="23545" fg:w="34"/><text x="72.2244%" y="7871.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (21 samples, 0.06%)</title><rect x="72.0142%" y="7845" width="0.0642%" height="15" fill="rgb(244,223,14)" fg:x="23558" fg:w="21"/><text x="72.2642%" y="7855.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (21 samples, 0.06%)</title><rect x="72.0142%" y="7829" width="0.0642%" height="15" fill="rgb(224,124,37)" fg:x="23558" fg:w="21"/><text x="72.2642%" y="7839.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (21 samples, 0.06%)</title><rect x="72.0142%" y="7813" width="0.0642%" height="15" fill="rgb(251,171,30)" fg:x="23558" fg:w="21"/><text x="72.2642%" y="7823.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (6 samples, 0.02%)</title><rect x="72.1487%" y="7781" width="0.0183%" height="15" fill="rgb(236,46,54)" fg:x="23602" fg:w="6"/><text x="72.3987%" y="7791.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (6 samples, 0.02%)</title><rect x="72.1731%" y="7765" width="0.0183%" height="15" fill="rgb(245,213,5)" fg:x="23610" fg:w="6"/><text x="72.4231%" y="7775.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (30 samples, 0.09%)</title><rect x="72.1151%" y="7829" width="0.0917%" height="15" fill="rgb(230,144,27)" fg:x="23591" fg:w="30"/><text x="72.3651%" y="7839.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (30 samples, 0.09%)</title><rect x="72.1151%" y="7813" width="0.0917%" height="15" fill="rgb(220,86,6)" fg:x="23591" fg:w="30"/><text x="72.3651%" y="7823.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (30 samples, 0.09%)</title><rect x="72.1151%" y="7797" width="0.0917%" height="15" fill="rgb(240,20,13)" fg:x="23591" fg:w="30"/><text x="72.3651%" y="7807.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (13 samples, 0.04%)</title><rect x="72.1670%" y="7781" width="0.0397%" height="15" fill="rgb(217,89,34)" fg:x="23608" fg:w="13"/><text x="72.4170%" y="7791.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (5 samples, 0.02%)</title><rect x="72.1915%" y="7765" width="0.0153%" height="15" fill="rgb(229,13,5)" fg:x="23616" fg:w="5"/><text x="72.4415%" y="7775.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (6 samples, 0.02%)</title><rect x="72.2068%" y="7829" width="0.0183%" height="15" fill="rgb(244,67,35)" fg:x="23621" fg:w="6"/><text x="72.4568%" y="7839.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (5 samples, 0.02%)</title><rect x="72.2098%" y="7813" width="0.0153%" height="15" fill="rgb(221,40,2)" fg:x="23622" fg:w="5"/><text x="72.4598%" y="7823.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (5 samples, 0.02%)</title><rect x="72.2098%" y="7797" width="0.0153%" height="15" fill="rgb(237,157,21)" fg:x="23622" fg:w="5"/><text x="72.4598%" y="7807.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (5 samples, 0.02%)</title><rect x="72.2098%" y="7781" width="0.0153%" height="15" fill="rgb(222,94,11)" fg:x="23622" fg:w="5"/><text x="72.4598%" y="7791.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (7 samples, 0.02%)</title><rect x="72.2251%" y="7781" width="0.0214%" height="15" fill="rgb(249,113,6)" fg:x="23627" fg:w="7"/><text x="72.4751%" y="7791.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (7 samples, 0.02%)</title><rect x="72.2251%" y="7765" width="0.0214%" height="15" fill="rgb(238,137,36)" fg:x="23627" fg:w="7"/><text x="72.4751%" y="7775.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.02%)</title><rect x="72.2251%" y="7749" width="0.0214%" height="15" fill="rgb(210,102,26)" fg:x="23627" fg:w="7"/><text x="72.4751%" y="7759.50"></text></g><g><title>core::hash::sip::u8to64_le (4 samples, 0.01%)</title><rect x="72.2343%" y="7733" width="0.0122%" height="15" fill="rgb(218,30,30)" fg:x="23630" fg:w="4"/><text x="72.4843%" y="7743.50"></text></g><g><title>hashbrown::map::make_hash (49 samples, 0.15%)</title><rect x="72.0998%" y="7861" width="0.1498%" height="15" fill="rgb(214,67,26)" fg:x="23586" fg:w="49"/><text x="72.3498%" y="7871.50"></text></g><g><title>core::hash::BuildHasher::hash_one (48 samples, 0.15%)</title><rect x="72.1028%" y="7845" width="0.1467%" height="15" fill="rgb(251,9,53)" fg:x="23587" fg:w="48"/><text x="72.3528%" y="7855.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (8 samples, 0.02%)</title><rect x="72.2251%" y="7829" width="0.0245%" height="15" fill="rgb(228,204,25)" fg:x="23627" fg:w="8"/><text x="72.4751%" y="7839.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (8 samples, 0.02%)</title><rect x="72.2251%" y="7813" width="0.0245%" height="15" fill="rgb(207,153,8)" fg:x="23627" fg:w="8"/><text x="72.4751%" y="7823.50"></text></g><g><title>core::hash::Hasher::write_u16 (8 samples, 0.02%)</title><rect x="72.2251%" y="7797" width="0.0245%" height="15" fill="rgb(242,9,16)" fg:x="23627" fg:w="8"/><text x="72.4751%" y="7807.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (9 samples, 0.03%)</title><rect x="72.2801%" y="7717" width="0.0275%" height="15" fill="rgb(217,211,10)" fg:x="23645" fg:w="9"/><text x="72.5301%" y="7727.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (9 samples, 0.03%)</title><rect x="72.2801%" y="7701" width="0.0275%" height="15" fill="rgb(219,228,52)" fg:x="23645" fg:w="9"/><text x="72.5301%" y="7711.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (9 samples, 0.03%)</title><rect x="72.2801%" y="7685" width="0.0275%" height="15" fill="rgb(231,92,29)" fg:x="23645" fg:w="9"/><text x="72.5301%" y="7695.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (4 samples, 0.01%)</title><rect x="72.2954%" y="7669" width="0.0122%" height="15" fill="rgb(232,8,23)" fg:x="23650" fg:w="4"/><text x="72.5454%" y="7679.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (14 samples, 0.04%)</title><rect x="72.2801%" y="7781" width="0.0428%" height="15" fill="rgb(216,211,34)" fg:x="23645" fg:w="14"/><text x="72.5301%" y="7791.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (14 samples, 0.04%)</title><rect x="72.2801%" y="7765" width="0.0428%" height="15" fill="rgb(236,151,0)" fg:x="23645" fg:w="14"/><text x="72.5301%" y="7775.50"></text></g><g><title>hashbrown::map::make_hash (14 samples, 0.04%)</title><rect x="72.2801%" y="7749" width="0.0428%" height="15" fill="rgb(209,168,3)" fg:x="23645" fg:w="14"/><text x="72.5301%" y="7759.50"></text></g><g><title>core::hash::BuildHasher::hash_one (14 samples, 0.04%)</title><rect x="72.2801%" y="7733" width="0.0428%" height="15" fill="rgb(208,129,28)" fg:x="23645" fg:w="14"/><text x="72.5301%" y="7743.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (4 samples, 0.01%)</title><rect x="72.3229%" y="7733" width="0.0122%" height="15" fill="rgb(229,78,22)" fg:x="23659" fg:w="4"/><text x="72.5729%" y="7743.50"></text></g><g><title>core::num::nonzero::NonZeroU16::new (4 samples, 0.01%)</title><rect x="72.3229%" y="7717" width="0.0122%" height="15" fill="rgb(228,187,13)" fg:x="23659" fg:w="4"/><text x="72.5729%" y="7727.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot_in_group (5 samples, 0.02%)</title><rect x="72.3229%" y="7749" width="0.0153%" height="15" fill="rgb(240,119,24)" fg:x="23659" fg:w="5"/><text x="72.5729%" y="7759.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (11 samples, 0.03%)</title><rect x="72.3229%" y="7781" width="0.0336%" height="15" fill="rgb(209,194,42)" fg:x="23659" fg:w="11"/><text x="72.5729%" y="7791.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (11 samples, 0.03%)</title><rect x="72.3229%" y="7765" width="0.0336%" height="15" fill="rgb(247,200,46)" fg:x="23659" fg:w="11"/><text x="72.5729%" y="7775.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fix_insert_slot (6 samples, 0.02%)</title><rect x="72.3382%" y="7749" width="0.0183%" height="15" fill="rgb(218,76,16)" fg:x="23664" fg:w="6"/><text x="72.5882%" y="7759.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (4 samples, 0.01%)</title><rect x="72.3627%" y="7733" width="0.0122%" height="15" fill="rgb(225,21,48)" fg:x="23672" fg:w="4"/><text x="72.6127%" y="7743.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (45 samples, 0.14%)</title><rect x="72.2557%" y="7797" width="0.1376%" height="15" fill="rgb(239,223,50)" fg:x="23637" fg:w="45"/><text x="72.5057%" y="7807.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (12 samples, 0.04%)</title><rect x="72.3566%" y="7781" width="0.0367%" height="15" fill="rgb(244,45,21)" fg:x="23670" fg:w="12"/><text x="72.6066%" y="7791.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (12 samples, 0.04%)</title><rect x="72.3566%" y="7765" width="0.0367%" height="15" fill="rgb(232,33,43)" fg:x="23670" fg:w="12"/><text x="72.6066%" y="7775.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (10 samples, 0.03%)</title><rect x="72.3627%" y="7749" width="0.0306%" height="15" fill="rgb(209,8,3)" fg:x="23672" fg:w="10"/><text x="72.6127%" y="7759.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (6 samples, 0.02%)</title><rect x="72.3749%" y="7733" width="0.0183%" height="15" fill="rgb(214,25,53)" fg:x="23676" fg:w="6"/><text x="72.6249%" y="7743.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.02%)</title><rect x="72.3749%" y="7717" width="0.0183%" height="15" fill="rgb(254,186,54)" fg:x="23676" fg:w="6"/><text x="72.6249%" y="7727.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.02%)</title><rect x="72.3749%" y="7701" width="0.0183%" height="15" fill="rgb(208,174,49)" fg:x="23676" fg:w="6"/><text x="72.6249%" y="7711.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.02%)</title><rect x="72.3749%" y="7685" width="0.0183%" height="15" fill="rgb(233,191,51)" fg:x="23676" fg:w="6"/><text x="72.6249%" y="7695.50"></text></g><g><title>malloc (4 samples, 0.01%)</title><rect x="72.3810%" y="7669" width="0.0122%" height="15" fill="rgb(222,134,10)" fg:x="23678" fg:w="4"/><text x="72.6310%" y="7679.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (47 samples, 0.14%)</title><rect x="72.2526%" y="7845" width="0.1437%" height="15" fill="rgb(230,226,20)" fg:x="23636" fg:w="47"/><text x="72.5026%" y="7855.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (47 samples, 0.14%)</title><rect x="72.2526%" y="7829" width="0.1437%" height="15" fill="rgb(251,111,25)" fg:x="23636" fg:w="47"/><text x="72.5026%" y="7839.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (47 samples, 0.14%)</title><rect x="72.2526%" y="7813" width="0.1437%" height="15" fill="rgb(224,40,46)" fg:x="23636" fg:w="47"/><text x="72.5026%" y="7823.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (4 samples, 0.01%)</title><rect x="72.4269%" y="7813" width="0.0122%" height="15" fill="rgb(236,108,47)" fg:x="23693" fg:w="4"/><text x="72.6769%" y="7823.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.04%)</title><rect x="72.3994%" y="7829" width="0.0428%" height="15" fill="rgb(234,93,0)" fg:x="23684" fg:w="14"/><text x="72.6494%" y="7839.50"></text></g><g><title>hashbrown::raw::h2 (7 samples, 0.02%)</title><rect x="72.4635%" y="7829" width="0.0214%" height="15" fill="rgb(224,213,32)" fg:x="23705" fg:w="7"/><text x="72.7135%" y="7839.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (8 samples, 0.02%)</title><rect x="72.4849%" y="7829" width="0.0245%" height="15" fill="rgb(251,11,48)" fg:x="23712" fg:w="8"/><text x="72.7349%" y="7839.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (8 samples, 0.02%)</title><rect x="72.4849%" y="7813" width="0.0245%" height="15" fill="rgb(236,173,5)" fg:x="23712" fg:w="8"/><text x="72.7349%" y="7823.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (86 samples, 0.26%)</title><rect x="72.2526%" y="7861" width="0.2629%" height="15" fill="rgb(230,95,12)" fg:x="23636" fg:w="86"/><text x="72.5026%" y="7871.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_or_find_insert_slot_inner (39 samples, 0.12%)</title><rect x="72.3963%" y="7845" width="0.1192%" height="15" fill="rgb(232,209,1)" fg:x="23683" fg:w="39"/><text x="72.6463%" y="7855.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (150 samples, 0.46%)</title><rect x="72.0784%" y="7909" width="0.4585%" height="15" fill="rgb(232,6,1)" fg:x="23579" fg:w="150"/><text x="72.3284%" y="7919.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (150 samples, 0.46%)</title><rect x="72.0784%" y="7893" width="0.4585%" height="15" fill="rgb(210,224,50)" fg:x="23579" fg:w="150"/><text x="72.3284%" y="7903.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (149 samples, 0.46%)</title><rect x="72.0814%" y="7877" width="0.4555%" height="15" fill="rgb(228,127,35)" fg:x="23580" fg:w="149"/><text x="72.3314%" y="7887.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (7 samples, 0.02%)</title><rect x="72.5155%" y="7861" width="0.0214%" height="15" fill="rgb(245,102,45)" fg:x="23722" fg:w="7"/><text x="72.7655%" y="7871.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::record_item_insert_at (6 samples, 0.02%)</title><rect x="72.5186%" y="7845" width="0.0183%" height="15" fill="rgb(214,1,49)" fg:x="23723" fg:w="6"/><text x="72.7686%" y="7855.50"></text></g><g><title>tetrs::logic::game::gravity (263 samples, 0.80%)</title><rect x="71.7360%" y="7925" width="0.8040%" height="15" fill="rgb(226,163,40)" fg:x="23467" fg:w="263"/><text x="71.9860%" y="7935.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (6 samples, 0.02%)</title><rect x="72.6592%" y="7909" width="0.0183%" height="15" fill="rgb(239,212,28)" fg:x="23769" fg:w="6"/><text x="72.9092%" y="7919.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (6 samples, 0.02%)</title><rect x="72.6592%" y="7893" width="0.0183%" height="15" fill="rgb(220,20,13)" fg:x="23769" fg:w="6"/><text x="72.9092%" y="7903.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (6 samples, 0.02%)</title><rect x="72.6592%" y="7877" width="0.0183%" height="15" fill="rgb(210,164,35)" fg:x="23769" fg:w="6"/><text x="72.9092%" y="7887.50"></text></g><g><title>core::ptr::read_volatile (6 samples, 0.02%)</title><rect x="72.6989%" y="7845" width="0.0183%" height="15" fill="rgb(248,109,41)" fg:x="23782" fg:w="6"/><text x="72.9489%" y="7855.50"></text></g><g><title>alloc::alloc::exchange_malloc (31 samples, 0.09%)</title><rect x="72.6775%" y="7909" width="0.0948%" height="15" fill="rgb(238,23,50)" fg:x="23775" fg:w="31"/><text x="72.9275%" y="7919.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (28 samples, 0.09%)</title><rect x="72.6867%" y="7893" width="0.0856%" height="15" fill="rgb(211,48,49)" fg:x="23778" fg:w="28"/><text x="72.9367%" y="7903.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (28 samples, 0.09%)</title><rect x="72.6867%" y="7877" width="0.0856%" height="15" fill="rgb(223,36,21)" fg:x="23778" fg:w="28"/><text x="72.9367%" y="7887.50"></text></g><g><title>alloc::alloc::alloc (28 samples, 0.09%)</title><rect x="72.6867%" y="7861" width="0.0856%" height="15" fill="rgb(207,123,46)" fg:x="23778" fg:w="28"/><text x="72.9367%" y="7871.50"></text></g><g><title>malloc (18 samples, 0.06%)</title><rect x="72.7173%" y="7845" width="0.0550%" height="15" fill="rgb(240,218,32)" fg:x="23788" fg:w="18"/><text x="72.9673%" y="7855.50"></text></g><g><title>__rust_dealloc (4 samples, 0.01%)</title><rect x="72.7937%" y="7781" width="0.0122%" height="15" fill="rgb(252,5,43)" fg:x="23813" fg:w="4"/><text x="73.0437%" y="7791.50"></text></g><g><title>tetrs::logic::game::is_connected (118 samples, 0.36%)</title><rect x="72.5400%" y="7925" width="0.3607%" height="15" fill="rgb(252,84,19)" fg:x="23730" fg:w="118"/><text x="72.7900%" y="7935.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(i8,i8)&gt;&gt; (42 samples, 0.13%)</title><rect x="72.7723%" y="7909" width="0.1284%" height="15" fill="rgb(243,152,39)" fg:x="23806" fg:w="42"/><text x="73.0223%" y="7919.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 0.13%)</title><rect x="72.7723%" y="7893" width="0.1284%" height="15" fill="rgb(234,160,15)" fg:x="23806" fg:w="42"/><text x="73.0223%" y="7903.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(i8,i8),alloc::alloc::Global&gt;&gt; (42 samples, 0.13%)</title><rect x="72.7723%" y="7877" width="0.1284%" height="15" fill="rgb(237,34,20)" fg:x="23806" fg:w="42"/><text x="73.0223%" y="7887.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 0.13%)</title><rect x="72.7723%" y="7861" width="0.1284%" height="15" fill="rgb(229,97,13)" fg:x="23806" fg:w="42"/><text x="73.0223%" y="7871.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(i8,i8)&gt;&gt; (42 samples, 0.13%)</title><rect x="72.7723%" y="7845" width="0.1284%" height="15" fill="rgb(234,71,50)" fg:x="23806" fg:w="42"/><text x="73.0223%" y="7855.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 0.13%)</title><rect x="72.7723%" y="7829" width="0.1284%" height="15" fill="rgb(253,155,4)" fg:x="23806" fg:w="42"/><text x="73.0223%" y="7839.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (42 samples, 0.13%)</title><rect x="72.7723%" y="7813" width="0.1284%" height="15" fill="rgb(222,185,37)" fg:x="23806" fg:w="42"/><text x="73.0223%" y="7823.50"></text></g><g><title>alloc::alloc::dealloc (42 samples, 0.13%)</title><rect x="72.7723%" y="7797" width="0.1284%" height="15" fill="rgb(251,177,13)" fg:x="23806" fg:w="42"/><text x="73.0223%" y="7807.50"></text></g><g><title>cfree (31 samples, 0.09%)</title><rect x="72.8059%" y="7781" width="0.0948%" height="15" fill="rgb(250,179,40)" fg:x="23817" fg:w="31"/><text x="73.0559%" y="7791.50"></text></g><g><title>[libc.so.6] (22 samples, 0.07%)</title><rect x="72.8334%" y="7765" width="0.0673%" height="15" fill="rgb(242,44,2)" fg:x="23826" fg:w="22"/><text x="73.0834%" y="7775.50"></text></g><g><title>tetrs::logic::game::clear_rows (642 samples, 1.96%)</title><rect x="71.2194%" y="7941" width="1.9625%" height="15" fill="rgb(216,177,13)" fg:x="23298" fg:w="642"/><text x="71.4694%" y="7951.50">t..</text></g><g><title>tetrs::logic::id_manager::IdManager::next_unique_id (92 samples, 0.28%)</title><rect x="72.9007%" y="7925" width="0.2812%" height="15" fill="rgb(216,106,43)" fg:x="23848" fg:w="92"/><text x="73.1507%" y="7935.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (11 samples, 0.03%)</title><rect x="73.1483%" y="7909" width="0.0336%" height="15" fill="rgb(216,183,2)" fg:x="23929" fg:w="11"/><text x="73.3983%" y="7919.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (11 samples, 0.03%)</title><rect x="73.1483%" y="7893" width="0.0336%" height="15" fill="rgb(249,75,3)" fg:x="23929" fg:w="11"/><text x="73.3983%" y="7903.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (11 samples, 0.03%)</title><rect x="73.1483%" y="7877" width="0.0336%" height="15" fill="rgb(219,67,39)" fg:x="23929" fg:w="11"/><text x="73.3983%" y="7887.50"></text></g><g><title>tetrs::logic::game::get_pent_id (7 samples, 0.02%)</title><rect x="73.1819%" y="7941" width="0.0214%" height="15" fill="rgb(253,228,2)" fg:x="23940" fg:w="7"/><text x="73.4319%" y="7951.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (231 samples, 0.71%)</title><rect x="74.8112%" y="7925" width="0.7061%" height="15" fill="rgb(235,138,27)" fg:x="24473" fg:w="231"/><text x="75.0612%" y="7935.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (231 samples, 0.71%)</title><rect x="74.8112%" y="7909" width="0.7061%" height="15" fill="rgb(236,97,51)" fg:x="24473" fg:w="231"/><text x="75.0612%" y="7919.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (231 samples, 0.71%)</title><rect x="74.8112%" y="7893" width="0.7061%" height="15" fill="rgb(240,80,30)" fg:x="24473" fg:w="231"/><text x="75.0612%" y="7903.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::backward_unchecked (5 samples, 0.02%)</title><rect x="75.5296%" y="7877" width="0.0153%" height="15" fill="rgb(230,178,19)" fg:x="24708" fg:w="5"/><text x="75.7796%" y="7887.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_sub (5 samples, 0.02%)</title><rect x="75.5296%" y="7861" width="0.0153%" height="15" fill="rgb(210,190,27)" fg:x="24708" fg:w="5"/><text x="75.7796%" y="7871.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.06%)</title><rect x="75.5235%" y="7925" width="0.0642%" height="15" fill="rgb(222,107,31)" fg:x="24706" fg:w="21"/><text x="75.7735%" y="7935.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (21 samples, 0.06%)</title><rect x="75.5235%" y="7909" width="0.0642%" height="15" fill="rgb(216,127,34)" fg:x="24706" fg:w="21"/><text x="75.7735%" y="7919.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (21 samples, 0.06%)</title><rect x="75.5235%" y="7893" width="0.0642%" height="15" fill="rgb(234,116,52)" fg:x="24706" fg:w="21"/><text x="75.7735%" y="7903.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (14 samples, 0.04%)</title><rect x="75.5449%" y="7877" width="0.0428%" height="15" fill="rgb(222,124,15)" fg:x="24713" fg:w="14"/><text x="75.7949%" y="7887.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (41 samples, 0.13%)</title><rect x="75.5877%" y="7925" width="0.1253%" height="15" fill="rgb(231,179,28)" fg:x="24727" fg:w="41"/><text x="75.8377%" y="7935.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (33 samples, 0.10%)</title><rect x="75.6121%" y="7909" width="0.1009%" height="15" fill="rgb(226,93,45)" fg:x="24735" fg:w="33"/><text x="75.8621%" y="7919.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (15 samples, 0.05%)</title><rect x="76.0615%" y="7877" width="0.0459%" height="15" fill="rgb(215,8,51)" fg:x="24882" fg:w="15"/><text x="76.3115%" y="7887.50"></text></g><g><title>__rdl_realloc (33 samples, 0.10%)</title><rect x="76.1991%" y="7813" width="0.1009%" height="15" fill="rgb(223,106,5)" fg:x="24927" fg:w="33"/><text x="76.4491%" y="7823.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (26 samples, 0.08%)</title><rect x="76.2205%" y="7797" width="0.0795%" height="15" fill="rgb(250,191,5)" fg:x="24934" fg:w="26"/><text x="76.4705%" y="7807.50"></text></g><g><title>__rust_realloc (6 samples, 0.02%)</title><rect x="76.2999%" y="7813" width="0.0183%" height="15" fill="rgb(242,132,44)" fg:x="24960" fg:w="6"/><text x="76.5499%" y="7823.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (517 samples, 1.58%)</title><rect x="76.1991%" y="7861" width="1.5804%" height="15" fill="rgb(251,152,29)" fg:x="24927" fg:w="517"/><text x="76.4491%" y="7871.50"></text></g><g><title>alloc::alloc::Global::grow_impl (517 samples, 1.58%)</title><rect x="76.1991%" y="7845" width="1.5804%" height="15" fill="rgb(218,179,5)" fg:x="24927" fg:w="517"/><text x="76.4491%" y="7855.50"></text></g><g><title>alloc::alloc::realloc (517 samples, 1.58%)</title><rect x="76.1991%" y="7829" width="1.5804%" height="15" fill="rgb(227,67,19)" fg:x="24927" fg:w="517"/><text x="76.4491%" y="7839.50"></text></g><g><title>realloc (478 samples, 1.46%)</title><rect x="76.3183%" y="7813" width="1.4612%" height="15" fill="rgb(233,119,31)" fg:x="24966" fg:w="478"/><text x="76.5683%" y="7823.50"></text></g><g><title>[libc.so.6] (400 samples, 1.22%)</title><rect x="76.5567%" y="7797" width="1.2228%" height="15" fill="rgb(241,120,22)" fg:x="25044" fg:w="400"/><text x="76.8067%" y="7807.50"></text></g><g><title>[libc.so.6] (325 samples, 0.99%)</title><rect x="76.7860%" y="7781" width="0.9935%" height="15" fill="rgb(224,102,30)" fg:x="25119" fg:w="325"/><text x="77.0360%" y="7791.50"></text></g><g><title>[libc.so.6] (31 samples, 0.09%)</title><rect x="77.6847%" y="7765" width="0.0948%" height="15" fill="rgb(210,164,37)" fg:x="25413" fg:w="31"/><text x="77.9347%" y="7775.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (12 samples, 0.04%)</title><rect x="77.7978%" y="7861" width="0.0367%" height="15" fill="rgb(226,191,16)" fg:x="25450" fg:w="12"/><text x="78.0478%" y="7871.50"></text></g><g><title>alloc::raw_vec::finish_grow (606 samples, 1.85%)</title><rect x="76.1196%" y="7877" width="1.8525%" height="15" fill="rgb(214,40,45)" fg:x="24901" fg:w="606"/><text x="76.3696%" y="7887.50">a..</text></g><g><title>malloc (45 samples, 0.14%)</title><rect x="77.8345%" y="7861" width="0.1376%" height="15" fill="rgb(244,29,26)" fg:x="25462" fg:w="45"/><text x="78.0845%" y="7871.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="77.9598%" y="7845" width="0.0122%" height="15" fill="rgb(216,16,5)" fg:x="25503" fg:w="4"/><text x="78.2098%" y="7855.50"></text></g><g><title>core::alloc::layout::Layout::array (11 samples, 0.03%)</title><rect x="77.9721%" y="7877" width="0.0336%" height="15" fill="rgb(249,76,35)" fg:x="25507" fg:w="11"/><text x="78.2221%" y="7887.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (11 samples, 0.03%)</title><rect x="77.9721%" y="7861" width="0.0336%" height="15" fill="rgb(207,11,44)" fg:x="25507" fg:w="11"/><text x="78.2221%" y="7871.50"></text></g><g><title>core::cmp::max (14 samples, 0.04%)</title><rect x="78.0057%" y="7877" width="0.0428%" height="15" fill="rgb(228,190,49)" fg:x="25518" fg:w="14"/><text x="78.2557%" y="7887.50"></text></g><g><title>core::cmp::Ord::max (14 samples, 0.04%)</title><rect x="78.0057%" y="7861" width="0.0428%" height="15" fill="rgb(214,173,12)" fg:x="25518" fg:w="14"/><text x="78.2557%" y="7871.50"></text></g><g><title>core::cmp::max_by (14 samples, 0.04%)</title><rect x="78.0057%" y="7845" width="0.0428%" height="15" fill="rgb(218,26,35)" fg:x="25518" fg:w="14"/><text x="78.2557%" y="7855.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (667 samples, 2.04%)</title><rect x="76.0309%" y="7909" width="2.0389%" height="15" fill="rgb(220,200,19)" fg:x="24872" fg:w="667"/><text x="76.2809%" y="7919.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (664 samples, 2.03%)</title><rect x="76.0401%" y="7893" width="2.0298%" height="15" fill="rgb(239,95,49)" fg:x="24875" fg:w="664"/><text x="76.2901%" y="7903.50">a..</text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (7 samples, 0.02%)</title><rect x="78.0485%" y="7877" width="0.0214%" height="15" fill="rgb(235,85,53)" fg:x="25532" fg:w="7"/><text x="78.2985%" y="7887.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (7 samples, 0.02%)</title><rect x="78.0485%" y="7861" width="0.0214%" height="15" fill="rgb(233,133,31)" fg:x="25532" fg:w="7"/><text x="78.2985%" y="7871.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (21 samples, 0.06%)</title><rect x="78.0699%" y="7909" width="0.0642%" height="15" fill="rgb(218,25,20)" fg:x="25539" fg:w="21"/><text x="78.3199%" y="7919.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (851 samples, 2.60%)</title><rect x="75.7191%" y="7925" width="2.6014%" height="15" fill="rgb(252,210,38)" fg:x="24770" fg:w="851"/><text x="75.9691%" y="7935.50">al..</text></g><g><title>core::ptr::write (61 samples, 0.19%)</title><rect x="78.1341%" y="7909" width="0.1865%" height="15" fill="rgb(242,134,21)" fg:x="25560" fg:w="61"/><text x="78.3841%" y="7919.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (7 samples, 0.02%)</title><rect x="78.3205%" y="7925" width="0.0214%" height="15" fill="rgb(213,28,48)" fg:x="25621" fg:w="7"/><text x="78.5705%" y="7935.50"></text></g><g><title>__rust_dealloc (5 samples, 0.02%)</title><rect x="78.3481%" y="7845" width="0.0153%" height="15" fill="rgb(250,196,2)" fg:x="25630" fg:w="5"/><text x="78.5981%" y="7855.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (115 samples, 0.35%)</title><rect x="78.3419%" y="7877" width="0.3515%" height="15" fill="rgb(227,5,17)" fg:x="25628" fg:w="115"/><text x="78.5919%" y="7887.50"></text></g><g><title>alloc::alloc::dealloc (115 samples, 0.35%)</title><rect x="78.3419%" y="7861" width="0.3515%" height="15" fill="rgb(221,226,24)" fg:x="25628" fg:w="115"/><text x="78.5919%" y="7871.50"></text></g><g><title>cfree (108 samples, 0.33%)</title><rect x="78.3633%" y="7845" width="0.3301%" height="15" fill="rgb(211,5,48)" fg:x="25635" fg:w="108"/><text x="78.6133%" y="7855.50"></text></g><g><title>[libc.so.6] (98 samples, 0.30%)</title><rect x="78.3939%" y="7829" width="0.2996%" height="15" fill="rgb(219,150,6)" fg:x="25645" fg:w="98"/><text x="78.6439%" y="7839.50"></text></g><g><title>[libc.so.6] (58 samples, 0.18%)</title><rect x="78.5162%" y="7813" width="0.1773%" height="15" fill="rgb(251,46,16)" fg:x="25685" fg:w="58"/><text x="78.7662%" y="7823.50"></text></g><g><title>[libc.so.6] (42 samples, 0.13%)</title><rect x="78.5651%" y="7797" width="0.1284%" height="15" fill="rgb(220,204,40)" fg:x="25701" fg:w="42"/><text x="78.8151%" y="7807.50"></text></g><g><title>[libc.so.6] (17 samples, 0.05%)</title><rect x="78.6415%" y="7781" width="0.0520%" height="15" fill="rgb(211,85,2)" fg:x="25726" fg:w="17"/><text x="78.8915%" y="7791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,usize)&gt;&gt; (117 samples, 0.36%)</title><rect x="78.3419%" y="7925" width="0.3577%" height="15" fill="rgb(229,17,7)" fg:x="25628" fg:w="117"/><text x="78.5919%" y="7935.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,usize)&gt;&gt; (117 samples, 0.36%)</title><rect x="78.3419%" y="7909" width="0.3577%" height="15" fill="rgb(239,72,28)" fg:x="25628" fg:w="117"/><text x="78.5919%" y="7919.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (117 samples, 0.36%)</title><rect x="78.3419%" y="7893" width="0.3577%" height="15" fill="rgb(230,47,54)" fg:x="25628" fg:w="117"/><text x="78.5919%" y="7903.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (49 samples, 0.15%)</title><rect x="78.7118%" y="7813" width="0.1498%" height="15" fill="rgb(214,50,8)" fg:x="25749" fg:w="49"/><text x="78.9618%" y="7823.50"></text></g><g><title>alloc::alloc::dealloc (47 samples, 0.14%)</title><rect x="78.7179%" y="7797" width="0.1437%" height="15" fill="rgb(216,198,43)" fg:x="25751" fg:w="47"/><text x="78.9679%" y="7807.50"></text></g><g><title>cfree (39 samples, 0.12%)</title><rect x="78.7424%" y="7781" width="0.1192%" height="15" fill="rgb(234,20,35)" fg:x="25759" fg:w="39"/><text x="78.9924%" y="7791.50"></text></g><g><title>[libc.so.6] (25 samples, 0.08%)</title><rect x="78.7852%" y="7765" width="0.0764%" height="15" fill="rgb(254,45,19)" fg:x="25773" fg:w="25"/><text x="79.0352%" y="7775.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;u16&gt;&gt; (54 samples, 0.17%)</title><rect x="78.6996%" y="7925" width="0.1651%" height="15" fill="rgb(219,14,44)" fg:x="25745" fg:w="54"/><text x="78.9496%" y="7935.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;u16,std::collections::hash::map::RandomState&gt;&gt; (54 samples, 0.17%)</title><rect x="78.6996%" y="7909" width="0.1651%" height="15" fill="rgb(217,220,26)" fg:x="25745" fg:w="54"/><text x="78.9496%" y="7919.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;u16,(),std::collections::hash::map::RandomState&gt;&gt; (54 samples, 0.17%)</title><rect x="78.6996%" y="7893" width="0.1651%" height="15" fill="rgb(213,158,28)" fg:x="25745" fg:w="54"/><text x="78.9496%" y="7903.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u16,())&gt;&gt; (54 samples, 0.17%)</title><rect x="78.6996%" y="7877" width="0.1651%" height="15" fill="rgb(252,51,52)" fg:x="25745" fg:w="54"/><text x="78.9496%" y="7887.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (54 samples, 0.17%)</title><rect x="78.6996%" y="7861" width="0.1651%" height="15" fill="rgb(246,89,16)" fg:x="25745" fg:w="54"/><text x="78.9496%" y="7871.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (50 samples, 0.15%)</title><rect x="78.7118%" y="7845" width="0.1528%" height="15" fill="rgb(216,158,49)" fg:x="25749" fg:w="50"/><text x="78.9618%" y="7855.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (50 samples, 0.15%)</title><rect x="78.7118%" y="7829" width="0.1528%" height="15" fill="rgb(236,107,19)" fg:x="25749" fg:w="50"/><text x="78.9618%" y="7839.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::clear (6 samples, 0.02%)</title><rect x="78.8647%" y="7925" width="0.0183%" height="15" fill="rgb(228,185,30)" fg:x="25799" fg:w="6"/><text x="79.1147%" y="7935.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::clear (6 samples, 0.02%)</title><rect x="78.8647%" y="7909" width="0.0183%" height="15" fill="rgb(246,134,8)" fg:x="25799" fg:w="6"/><text x="79.1147%" y="7919.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (6 samples, 0.02%)</title><rect x="78.8647%" y="7893" width="0.0183%" height="15" fill="rgb(214,143,50)" fg:x="25799" fg:w="6"/><text x="79.1147%" y="7903.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (6 samples, 0.02%)</title><rect x="78.8647%" y="7877" width="0.0183%" height="15" fill="rgb(228,75,8)" fg:x="25799" fg:w="6"/><text x="79.1147%" y="7887.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (14 samples, 0.04%)</title><rect x="79.4424%" y="7765" width="0.0428%" height="15" fill="rgb(207,175,4)" fg:x="25988" fg:w="14"/><text x="79.6924%" y="7775.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (52 samples, 0.16%)</title><rect x="79.3843%" y="7781" width="0.1590%" height="15" fill="rgb(205,108,24)" fg:x="25969" fg:w="52"/><text x="79.6343%" y="7791.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (19 samples, 0.06%)</title><rect x="79.4852%" y="7765" width="0.0581%" height="15" fill="rgb(244,120,49)" fg:x="26002" fg:w="19"/><text x="79.7352%" y="7775.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (143 samples, 0.44%)</title><rect x="79.7206%" y="7765" width="0.4371%" height="15" fill="rgb(223,47,38)" fg:x="26079" fg:w="143"/><text x="79.9706%" y="7775.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (388 samples, 1.19%)</title><rect x="79.0725%" y="7829" width="1.1861%" height="15" fill="rgb(229,179,11)" fg:x="25867" fg:w="388"/><text x="79.3225%" y="7839.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (388 samples, 1.19%)</title><rect x="79.0725%" y="7813" width="1.1861%" height="15" fill="rgb(231,122,1)" fg:x="25867" fg:w="388"/><text x="79.3225%" y="7823.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (388 samples, 1.19%)</title><rect x="79.0725%" y="7797" width="1.1861%" height="15" fill="rgb(245,119,9)" fg:x="25867" fg:w="388"/><text x="79.3225%" y="7807.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (234 samples, 0.72%)</title><rect x="79.5433%" y="7781" width="0.7153%" height="15" fill="rgb(241,163,25)" fg:x="26021" fg:w="234"/><text x="79.7933%" y="7791.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (33 samples, 0.10%)</title><rect x="80.1577%" y="7765" width="0.1009%" height="15" fill="rgb(217,214,3)" fg:x="26222" fg:w="33"/><text x="80.4077%" y="7775.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (20 samples, 0.06%)</title><rect x="80.2586%" y="7829" width="0.0611%" height="15" fill="rgb(240,86,28)" fg:x="26255" fg:w="20"/><text x="80.5086%" y="7839.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (63 samples, 0.19%)</title><rect x="80.3931%" y="7781" width="0.1926%" height="15" fill="rgb(215,47,9)" fg:x="26299" fg:w="63"/><text x="80.6431%" y="7791.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (63 samples, 0.19%)</title><rect x="80.3931%" y="7765" width="0.1926%" height="15" fill="rgb(252,25,45)" fg:x="26299" fg:w="63"/><text x="80.6431%" y="7775.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (63 samples, 0.19%)</title><rect x="80.3931%" y="7749" width="0.1926%" height="15" fill="rgb(251,164,9)" fg:x="26299" fg:w="63"/><text x="80.6431%" y="7759.50"></text></g><g><title>core::hash::sip::u8to64_le (43 samples, 0.13%)</title><rect x="80.4543%" y="7733" width="0.1314%" height="15" fill="rgb(233,194,0)" fg:x="26319" fg:w="43"/><text x="80.7043%" y="7743.50"></text></g><g><title>hashbrown::map::make_hash (546 samples, 1.67%)</title><rect x="78.9380%" y="7861" width="1.6691%" height="15" fill="rgb(249,111,24)" fg:x="25823" fg:w="546"/><text x="79.1880%" y="7871.50"></text></g><g><title>core::hash::BuildHasher::hash_one (544 samples, 1.66%)</title><rect x="78.9442%" y="7845" width="1.6629%" height="15" fill="rgb(250,223,3)" fg:x="25825" fg:w="544"/><text x="79.1942%" y="7855.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (94 samples, 0.29%)</title><rect x="80.3198%" y="7829" width="0.2873%" height="15" fill="rgb(236,178,37)" fg:x="26275" fg:w="94"/><text x="80.5698%" y="7839.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (94 samples, 0.29%)</title><rect x="80.3198%" y="7813" width="0.2873%" height="15" fill="rgb(241,158,50)" fg:x="26275" fg:w="94"/><text x="80.5698%" y="7823.50"></text></g><g><title>core::hash::Hasher::write_u16 (94 samples, 0.29%)</title><rect x="80.3198%" y="7797" width="0.2873%" height="15" fill="rgb(213,121,41)" fg:x="26275" fg:w="94"/><text x="80.5698%" y="7807.50"></text></g><g><title>core::num::&lt;impl u16&gt;::to_ne_bytes (7 samples, 0.02%)</title><rect x="80.5857%" y="7781" width="0.0214%" height="15" fill="rgb(240,92,3)" fg:x="26362" fg:w="7"/><text x="80.8357%" y="7791.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (18 samples, 0.06%)</title><rect x="81.2674%" y="7797" width="0.0550%" height="15" fill="rgb(205,123,3)" fg:x="26585" fg:w="18"/><text x="81.5174%" y="7807.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (99 samples, 0.30%)</title><rect x="81.0228%" y="7813" width="0.3026%" height="15" fill="rgb(205,97,47)" fg:x="26505" fg:w="99"/><text x="81.2728%" y="7823.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (53 samples, 0.16%)</title><rect x="81.3255%" y="7813" width="0.1620%" height="15" fill="rgb(247,152,14)" fg:x="26604" fg:w="53"/><text x="81.5755%" y="7823.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (53 samples, 0.16%)</title><rect x="81.3255%" y="7797" width="0.1620%" height="15" fill="rgb(248,195,53)" fg:x="26604" fg:w="53"/><text x="81.5755%" y="7807.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (53 samples, 0.16%)</title><rect x="81.3255%" y="7781" width="0.1620%" height="15" fill="rgb(226,201,16)" fg:x="26604" fg:w="53"/><text x="81.5755%" y="7791.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (53 samples, 0.16%)</title><rect x="81.3255%" y="7765" width="0.1620%" height="15" fill="rgb(205,98,0)" fg:x="26604" fg:w="53"/><text x="81.5755%" y="7775.50"></text></g><g><title>hashbrown::raw::h2 (120 samples, 0.37%)</title><rect x="81.4875%" y="7813" width="0.3668%" height="15" fill="rgb(214,191,48)" fg:x="26657" fg:w="120"/><text x="81.7375%" y="7823.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (55 samples, 0.17%)</title><rect x="81.8543%" y="7813" width="0.1681%" height="15" fill="rgb(237,112,39)" fg:x="26777" fg:w="55"/><text x="82.1043%" y="7823.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (55 samples, 0.17%)</title><rect x="81.8543%" y="7797" width="0.1681%" height="15" fill="rgb(247,203,27)" fg:x="26777" fg:w="55"/><text x="82.1043%" y="7807.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1,034 samples, 3.16%)</title><rect x="78.8830%" y="7925" width="3.1608%" height="15" fill="rgb(235,124,28)" fg:x="25805" fg:w="1034"/><text x="79.1330%" y="7935.50">std..</text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1,034 samples, 3.16%)</title><rect x="78.8830%" y="7909" width="3.1608%" height="15" fill="rgb(208,207,46)" fg:x="25805" fg:w="1034"/><text x="79.1330%" y="7919.50">has..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1,034 samples, 3.16%)</title><rect x="78.8830%" y="7893" width="3.1608%" height="15" fill="rgb(234,176,4)" fg:x="25805" fg:w="1034"/><text x="79.1330%" y="7903.50">has..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1,034 samples, 3.16%)</title><rect x="78.8830%" y="7877" width="3.1608%" height="15" fill="rgb(230,133,28)" fg:x="25805" fg:w="1034"/><text x="79.1330%" y="7887.50">has..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (470 samples, 1.44%)</title><rect x="80.6071%" y="7861" width="1.4367%" height="15" fill="rgb(211,137,40)" fg:x="26369" fg:w="470"/><text x="80.8571%" y="7871.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (470 samples, 1.44%)</title><rect x="80.6071%" y="7845" width="1.4367%" height="15" fill="rgb(254,35,13)" fg:x="26369" fg:w="470"/><text x="80.8571%" y="7855.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (470 samples, 1.44%)</title><rect x="80.6071%" y="7829" width="1.4367%" height="15" fill="rgb(225,49,51)" fg:x="26369" fg:w="470"/><text x="80.8571%" y="7839.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (7 samples, 0.02%)</title><rect x="82.0224%" y="7813" width="0.0214%" height="15" fill="rgb(251,10,15)" fg:x="26832" fg:w="7"/><text x="82.2724%" y="7823.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (7 samples, 0.02%)</title><rect x="82.0224%" y="7797" width="0.0214%" height="15" fill="rgb(228,207,15)" fg:x="26832" fg:w="7"/><text x="82.2724%" y="7807.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (7 samples, 0.02%)</title><rect x="82.0224%" y="7781" width="0.0214%" height="15" fill="rgb(241,99,19)" fg:x="26832" fg:w="7"/><text x="82.2724%" y="7791.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (26 samples, 0.08%)</title><rect x="82.9212%" y="7781" width="0.0795%" height="15" fill="rgb(207,104,49)" fg:x="27126" fg:w="26"/><text x="83.1712%" y="7791.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (75 samples, 0.23%)</title><rect x="82.8539%" y="7797" width="0.2293%" height="15" fill="rgb(234,99,18)" fg:x="27104" fg:w="75"/><text x="83.1039%" y="7807.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (27 samples, 0.08%)</title><rect x="83.0006%" y="7781" width="0.0825%" height="15" fill="rgb(213,191,49)" fg:x="27152" fg:w="27"/><text x="83.2506%" y="7791.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (179 samples, 0.55%)</title><rect x="83.1627%" y="7781" width="0.5472%" height="15" fill="rgb(210,226,19)" fg:x="27205" fg:w="179"/><text x="83.4127%" y="7791.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (465 samples, 1.42%)</title><rect x="82.4076%" y="7845" width="1.4215%" height="15" fill="rgb(229,97,18)" fg:x="26958" fg:w="465"/><text x="82.6576%" y="7855.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (465 samples, 1.42%)</title><rect x="82.4076%" y="7829" width="1.4215%" height="15" fill="rgb(211,167,15)" fg:x="26958" fg:w="465"/><text x="82.6576%" y="7839.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (465 samples, 1.42%)</title><rect x="82.4076%" y="7813" width="1.4215%" height="15" fill="rgb(210,169,34)" fg:x="26958" fg:w="465"/><text x="82.6576%" y="7823.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (244 samples, 0.75%)</title><rect x="83.0832%" y="7797" width="0.7459%" height="15" fill="rgb(241,121,31)" fg:x="27179" fg:w="244"/><text x="83.3332%" y="7807.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (39 samples, 0.12%)</title><rect x="83.7098%" y="7781" width="0.1192%" height="15" fill="rgb(232,40,11)" fg:x="27384" fg:w="39"/><text x="83.9598%" y="7791.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (71 samples, 0.22%)</title><rect x="83.8291%" y="7845" width="0.2170%" height="15" fill="rgb(205,86,26)" fg:x="27423" fg:w="71"/><text x="84.0791%" y="7855.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (34 samples, 0.10%)</title><rect x="83.9422%" y="7829" width="0.1039%" height="15" fill="rgb(231,126,28)" fg:x="27460" fg:w="34"/><text x="84.1922%" y="7839.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (34 samples, 0.10%)</title><rect x="83.9422%" y="7813" width="0.1039%" height="15" fill="rgb(219,221,18)" fg:x="27460" fg:w="34"/><text x="84.1922%" y="7823.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (34 samples, 0.10%)</title><rect x="83.9422%" y="7797" width="0.1039%" height="15" fill="rgb(211,40,0)" fg:x="27460" fg:w="34"/><text x="84.1922%" y="7807.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (84 samples, 0.26%)</title><rect x="84.0675%" y="7797" width="0.2568%" height="15" fill="rgb(239,85,43)" fg:x="27501" fg:w="84"/><text x="84.3175%" y="7807.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (78 samples, 0.24%)</title><rect x="84.0858%" y="7781" width="0.2384%" height="15" fill="rgb(231,55,21)" fg:x="27507" fg:w="78"/><text x="84.3358%" y="7791.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 samples, 0.24%)</title><rect x="84.0858%" y="7765" width="0.2384%" height="15" fill="rgb(225,184,43)" fg:x="27507" fg:w="78"/><text x="84.3358%" y="7775.50"></text></g><g><title>core::hash::sip::u8to64_le (45 samples, 0.14%)</title><rect x="84.1867%" y="7749" width="0.1376%" height="15" fill="rgb(251,158,41)" fg:x="27540" fg:w="45"/><text x="84.4367%" y="7759.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.02%)</title><rect x="84.3090%" y="7733" width="0.0153%" height="15" fill="rgb(234,159,37)" fg:x="27580" fg:w="5"/><text x="84.5590%" y="7743.50"></text></g><g><title>hashbrown::map::make_hash (673 samples, 2.06%)</title><rect x="82.2976%" y="7877" width="2.0573%" height="15" fill="rgb(216,204,22)" fg:x="26922" fg:w="673"/><text x="82.5476%" y="7887.50">h..</text></g><g><title>core::hash::BuildHasher::hash_one (669 samples, 2.05%)</title><rect x="82.3098%" y="7861" width="2.0451%" height="15" fill="rgb(214,17,3)" fg:x="26926" fg:w="669"/><text x="82.5598%" y="7871.50">c..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (101 samples, 0.31%)</title><rect x="84.0461%" y="7845" width="0.3087%" height="15" fill="rgb(212,111,17)" fg:x="27494" fg:w="101"/><text x="84.2961%" y="7855.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (100 samples, 0.31%)</title><rect x="84.0492%" y="7829" width="0.3057%" height="15" fill="rgb(221,157,24)" fg:x="27495" fg:w="100"/><text x="84.2992%" y="7839.50"></text></g><g><title>core::hash::Hasher::write_u16 (100 samples, 0.31%)</title><rect x="84.0492%" y="7813" width="0.3057%" height="15" fill="rgb(252,16,13)" fg:x="27495" fg:w="100"/><text x="84.2992%" y="7823.50"></text></g><g><title>core::num::&lt;impl u16&gt;::to_ne_bytes (10 samples, 0.03%)</title><rect x="84.3243%" y="7797" width="0.0306%" height="15" fill="rgb(221,62,2)" fg:x="27585" fg:w="10"/><text x="84.5743%" y="7807.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.02%)</title><rect x="84.5658%" y="7797" width="0.0183%" height="15" fill="rgb(247,87,22)" fg:x="27664" fg:w="6"/><text x="84.8158%" y="7807.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (10 samples, 0.03%)</title><rect x="84.5841%" y="7797" width="0.0306%" height="15" fill="rgb(215,73,9)" fg:x="27670" fg:w="10"/><text x="84.8341%" y="7807.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (10 samples, 0.03%)</title><rect x="84.5841%" y="7781" width="0.0306%" height="15" fill="rgb(207,175,33)" fg:x="27670" fg:w="10"/><text x="84.8341%" y="7791.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (8 samples, 0.02%)</title><rect x="84.5902%" y="7765" width="0.0245%" height="15" fill="rgb(243,129,54)" fg:x="27672" fg:w="8"/><text x="84.8402%" y="7775.50"></text></g><g><title>__rdl_dealloc (13 samples, 0.04%)</title><rect x="84.6300%" y="7701" width="0.0397%" height="15" fill="rgb(227,119,45)" fg:x="27685" fg:w="13"/><text x="84.8800%" y="7711.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (13 samples, 0.04%)</title><rect x="84.6300%" y="7685" width="0.0397%" height="15" fill="rgb(205,109,36)" fg:x="27685" fg:w="13"/><text x="84.8800%" y="7695.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (47 samples, 0.14%)</title><rect x="84.6208%" y="7733" width="0.1437%" height="15" fill="rgb(205,6,39)" fg:x="27682" fg:w="47"/><text x="84.8708%" y="7743.50"></text></g><g><title>alloc::alloc::dealloc (47 samples, 0.14%)</title><rect x="84.6208%" y="7717" width="0.1437%" height="15" fill="rgb(221,32,16)" fg:x="27682" fg:w="47"/><text x="84.8708%" y="7727.50"></text></g><g><title>cfree (28 samples, 0.09%)</title><rect x="84.6789%" y="7701" width="0.0856%" height="15" fill="rgb(228,144,50)" fg:x="27701" fg:w="28"/><text x="84.9289%" y="7711.50"></text></g><g><title>[libc.so.6] (13 samples, 0.04%)</title><rect x="84.7247%" y="7685" width="0.0397%" height="15" fill="rgb(229,201,53)" fg:x="27716" fg:w="13"/><text x="84.9747%" y="7695.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;,hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (53 samples, 0.16%)</title><rect x="84.6147%" y="7797" width="0.1620%" height="15" fill="rgb(249,153,27)" fg:x="27680" fg:w="53"/><text x="84.8647%" y="7807.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (53 samples, 0.16%)</title><rect x="84.6147%" y="7781" width="0.1620%" height="15" fill="rgb(227,106,25)" fg:x="27680" fg:w="53"/><text x="84.8647%" y="7791.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize::_{{closure}} (53 samples, 0.16%)</title><rect x="84.6147%" y="7765" width="0.1620%" height="15" fill="rgb(230,65,29)" fg:x="27680" fg:w="53"/><text x="84.8647%" y="7775.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (51 samples, 0.16%)</title><rect x="84.6208%" y="7749" width="0.1559%" height="15" fill="rgb(221,57,46)" fg:x="27682" fg:w="51"/><text x="84.8708%" y="7759.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::allocation_info (4 samples, 0.01%)</title><rect x="84.7645%" y="7733" width="0.0122%" height="15" fill="rgb(229,161,17)" fg:x="27729" fg:w="4"/><text x="85.0145%" y="7743.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (4 samples, 0.01%)</title><rect x="84.7645%" y="7717" width="0.0122%" height="15" fill="rgb(222,213,11)" fg:x="27729" fg:w="4"/><text x="85.0145%" y="7727.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (11 samples, 0.03%)</title><rect x="84.9937%" y="7669" width="0.0336%" height="15" fill="rgb(235,35,13)" fg:x="27804" fg:w="11"/><text x="85.2437%" y="7679.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (25 samples, 0.08%)</title><rect x="84.9662%" y="7685" width="0.0764%" height="15" fill="rgb(233,158,34)" fg:x="27795" fg:w="25"/><text x="85.2162%" y="7695.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (5 samples, 0.02%)</title><rect x="85.0274%" y="7669" width="0.0153%" height="15" fill="rgb(215,151,48)" fg:x="27815" fg:w="5"/><text x="85.2774%" y="7679.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (64 samples, 0.20%)</title><rect x="85.0702%" y="7669" width="0.1956%" height="15" fill="rgb(229,84,14)" fg:x="27829" fg:w="64"/><text x="85.3202%" y="7679.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (172 samples, 0.53%)</title><rect x="84.8317%" y="7733" width="0.5258%" height="15" fill="rgb(229,68,14)" fg:x="27751" fg:w="172"/><text x="85.0817%" y="7743.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (172 samples, 0.53%)</title><rect x="84.8317%" y="7717" width="0.5258%" height="15" fill="rgb(243,106,26)" fg:x="27751" fg:w="172"/><text x="85.0817%" y="7727.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (172 samples, 0.53%)</title><rect x="84.8317%" y="7701" width="0.5258%" height="15" fill="rgb(206,45,38)" fg:x="27751" fg:w="172"/><text x="85.0817%" y="7711.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (103 samples, 0.31%)</title><rect x="85.0426%" y="7685" width="0.3149%" height="15" fill="rgb(226,6,15)" fg:x="27820" fg:w="103"/><text x="85.2926%" y="7695.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (30 samples, 0.09%)</title><rect x="85.2658%" y="7669" width="0.0917%" height="15" fill="rgb(232,22,54)" fg:x="27893" fg:w="30"/><text x="85.5158%" y="7679.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (8 samples, 0.02%)</title><rect x="85.3575%" y="7733" width="0.0245%" height="15" fill="rgb(229,222,32)" fg:x="27923" fg:w="8"/><text x="85.6075%" y="7743.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (5 samples, 0.02%)</title><rect x="85.3667%" y="7717" width="0.0153%" height="15" fill="rgb(228,62,29)" fg:x="27926" fg:w="5"/><text x="85.6167%" y="7727.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (5 samples, 0.02%)</title><rect x="85.3667%" y="7701" width="0.0153%" height="15" fill="rgb(251,103,34)" fg:x="27926" fg:w="5"/><text x="85.6167%" y="7711.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (5 samples, 0.02%)</title><rect x="85.3667%" y="7685" width="0.0153%" height="15" fill="rgb(233,12,30)" fg:x="27926" fg:w="5"/><text x="85.6167%" y="7695.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (46 samples, 0.14%)</title><rect x="85.4064%" y="7685" width="0.1406%" height="15" fill="rgb(238,52,0)" fg:x="27939" fg:w="46"/><text x="85.6564%" y="7695.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (45 samples, 0.14%)</title><rect x="85.4095%" y="7669" width="0.1376%" height="15" fill="rgb(223,98,5)" fg:x="27940" fg:w="45"/><text x="85.6595%" y="7679.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (45 samples, 0.14%)</title><rect x="85.4095%" y="7653" width="0.1376%" height="15" fill="rgb(228,75,37)" fg:x="27940" fg:w="45"/><text x="85.6595%" y="7663.50"></text></g><g><title>core::hash::sip::u8to64_le (30 samples, 0.09%)</title><rect x="85.4553%" y="7637" width="0.0917%" height="15" fill="rgb(205,115,49)" fg:x="27955" fg:w="30"/><text x="85.7053%" y="7647.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (254 samples, 0.78%)</title><rect x="84.7767%" y="7781" width="0.7764%" height="15" fill="rgb(250,154,43)" fg:x="27733" fg:w="254"/><text x="85.0267%" y="7791.50"></text></g><g><title>hashbrown::map::make_hash (254 samples, 0.78%)</title><rect x="84.7767%" y="7765" width="0.7764%" height="15" fill="rgb(226,43,29)" fg:x="27733" fg:w="254"/><text x="85.0267%" y="7775.50"></text></g><g><title>core::hash::BuildHasher::hash_one (253 samples, 0.77%)</title><rect x="84.7798%" y="7749" width="0.7734%" height="15" fill="rgb(249,228,39)" fg:x="27734" fg:w="253"/><text x="85.0298%" y="7759.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (56 samples, 0.17%)</title><rect x="85.3820%" y="7733" width="0.1712%" height="15" fill="rgb(216,79,43)" fg:x="27931" fg:w="56"/><text x="85.6320%" y="7743.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (53 samples, 0.16%)</title><rect x="85.3911%" y="7717" width="0.1620%" height="15" fill="rgb(228,95,12)" fg:x="27934" fg:w="53"/><text x="85.6411%" y="7727.50"></text></g><g><title>core::hash::Hasher::write_u16 (53 samples, 0.16%)</title><rect x="85.3911%" y="7701" width="0.1620%" height="15" fill="rgb(249,221,15)" fg:x="27934" fg:w="53"/><text x="85.6411%" y="7711.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (263 samples, 0.80%)</title><rect x="84.7767%" y="7797" width="0.8040%" height="15" fill="rgb(233,34,13)" fg:x="27733" fg:w="263"/><text x="85.0267%" y="7807.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (9 samples, 0.03%)</title><rect x="85.5531%" y="7781" width="0.0275%" height="15" fill="rgb(214,103,39)" fg:x="27987" fg:w="9"/><text x="85.8031%" y="7791.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (9 samples, 0.03%)</title><rect x="85.5531%" y="7765" width="0.0275%" height="15" fill="rgb(251,126,39)" fg:x="27987" fg:w="9"/><text x="85.8031%" y="7775.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (9 samples, 0.03%)</title><rect x="85.5531%" y="7749" width="0.0275%" height="15" fill="rgb(214,216,36)" fg:x="27987" fg:w="9"/><text x="85.8031%" y="7759.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (9 samples, 0.03%)</title><rect x="85.5531%" y="7733" width="0.0275%" height="15" fill="rgb(220,221,8)" fg:x="27987" fg:w="9"/><text x="85.8031%" y="7743.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket_ptr (7 samples, 0.02%)</title><rect x="85.5807%" y="7797" width="0.0214%" height="15" fill="rgb(240,216,3)" fg:x="27996" fg:w="7"/><text x="85.8307%" y="7807.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (69 samples, 0.21%)</title><rect x="85.6754%" y="7749" width="0.2109%" height="15" fill="rgb(232,218,17)" fg:x="28027" fg:w="69"/><text x="85.9254%" y="7759.50"></text></g><g><title>core::num::nonzero::NonZeroU16::new (69 samples, 0.21%)</title><rect x="85.6754%" y="7733" width="0.2109%" height="15" fill="rgb(229,163,45)" fg:x="28027" fg:w="69"/><text x="85.9254%" y="7743.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot_in_group (142 samples, 0.43%)</title><rect x="85.6021%" y="7765" width="0.4341%" height="15" fill="rgb(231,110,42)" fg:x="28003" fg:w="142"/><text x="85.8521%" y="7775.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (49 samples, 0.15%)</title><rect x="85.8863%" y="7749" width="0.1498%" height="15" fill="rgb(208,170,48)" fg:x="28096" fg:w="49"/><text x="86.1363%" y="7759.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (49 samples, 0.15%)</title><rect x="85.8863%" y="7733" width="0.1498%" height="15" fill="rgb(239,116,25)" fg:x="28096" fg:w="49"/><text x="86.1363%" y="7743.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_bucket_full (5 samples, 0.02%)</title><rect x="86.1890%" y="7749" width="0.0153%" height="15" fill="rgb(219,200,50)" fg:x="28195" fg:w="5"/><text x="86.4390%" y="7759.50"></text></g><g><title>hashbrown::raw::is_full (5 samples, 0.02%)</title><rect x="86.1890%" y="7733" width="0.0153%" height="15" fill="rgb(245,200,0)" fg:x="28195" fg:w="5"/><text x="86.4390%" y="7743.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fix_insert_slot (56 samples, 0.17%)</title><rect x="86.0361%" y="7765" width="0.1712%" height="15" fill="rgb(245,119,33)" fg:x="28145" fg:w="56"/><text x="86.2861%" y="7775.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (206 samples, 0.63%)</title><rect x="85.6021%" y="7781" width="0.6297%" height="15" fill="rgb(231,125,12)" fg:x="28003" fg:w="206"/><text x="85.8521%" y="7791.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (6 samples, 0.02%)</title><rect x="86.2134%" y="7765" width="0.0183%" height="15" fill="rgb(216,96,41)" fg:x="28203" fg:w="6"/><text x="86.4634%" y="7775.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (6 samples, 0.02%)</title><rect x="86.2134%" y="7749" width="0.0183%" height="15" fill="rgb(248,43,45)" fg:x="28203" fg:w="6"/><text x="86.4634%" y="7759.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.02%)</title><rect x="86.2134%" y="7733" width="0.0183%" height="15" fill="rgb(217,222,7)" fg:x="28203" fg:w="6"/><text x="86.4634%" y="7743.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl (5 samples, 0.02%)</title><rect x="86.2318%" y="7765" width="0.0153%" height="15" fill="rgb(233,28,6)" fg:x="28209" fg:w="5"/><text x="86.4818%" y="7775.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (224 samples, 0.68%)</title><rect x="85.6021%" y="7797" width="0.6847%" height="15" fill="rgb(231,218,15)" fg:x="28003" fg:w="224"/><text x="85.8521%" y="7807.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (18 samples, 0.06%)</title><rect x="86.2318%" y="7781" width="0.0550%" height="15" fill="rgb(226,171,48)" fg:x="28209" fg:w="18"/><text x="86.4818%" y="7791.50"></text></g><g><title>hashbrown::raw::h2 (13 samples, 0.04%)</title><rect x="86.2471%" y="7765" width="0.0397%" height="15" fill="rgb(235,201,9)" fg:x="28214" fg:w="13"/><text x="86.4971%" y="7775.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (22 samples, 0.07%)</title><rect x="86.2868%" y="7765" width="0.0673%" height="15" fill="rgb(217,80,15)" fg:x="28227" fg:w="22"/><text x="86.5368%" y="7775.50"></text></g><g><title>core::intrinsics::write_bytes (22 samples, 0.07%)</title><rect x="86.2868%" y="7749" width="0.0673%" height="15" fill="rgb(219,152,8)" fg:x="28227" fg:w="22"/><text x="86.5368%" y="7759.50"></text></g><g><title>[libc.so.6] (18 samples, 0.06%)</title><rect x="86.2990%" y="7733" width="0.0550%" height="15" fill="rgb(243,107,38)" fg:x="28231" fg:w="18"/><text x="86.5490%" y="7743.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (22 samples, 0.07%)</title><rect x="86.3540%" y="7749" width="0.0673%" height="15" fill="rgb(231,17,5)" fg:x="28249" fg:w="22"/><text x="86.6040%" y="7759.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (5 samples, 0.02%)</title><rect x="86.4060%" y="7733" width="0.0153%" height="15" fill="rgb(209,25,54)" fg:x="28266" fg:w="5"/><text x="86.6560%" y="7743.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (5 samples, 0.02%)</title><rect x="86.4060%" y="7717" width="0.0153%" height="15" fill="rgb(219,0,2)" fg:x="28266" fg:w="5"/><text x="86.6560%" y="7727.50"></text></g><g><title>__rdl_alloc (7 samples, 0.02%)</title><rect x="86.4580%" y="7685" width="0.0214%" height="15" fill="rgb(246,9,5)" fg:x="28283" fg:w="7"/><text x="86.7080%" y="7695.50"></text></g><g><title>__rust_alloc (8 samples, 0.02%)</title><rect x="86.4794%" y="7685" width="0.0245%" height="15" fill="rgb(226,159,4)" fg:x="28290" fg:w="8"/><text x="86.7294%" y="7695.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (107 samples, 0.33%)</title><rect x="86.4213%" y="7749" width="0.3271%" height="15" fill="rgb(219,175,34)" fg:x="28271" fg:w="107"/><text x="86.6713%" y="7759.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (107 samples, 0.33%)</title><rect x="86.4213%" y="7733" width="0.3271%" height="15" fill="rgb(236,10,46)" fg:x="28271" fg:w="107"/><text x="86.6713%" y="7743.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (107 samples, 0.33%)</title><rect x="86.4213%" y="7717" width="0.3271%" height="15" fill="rgb(240,211,16)" fg:x="28271" fg:w="107"/><text x="86.6713%" y="7727.50"></text></g><g><title>alloc::alloc::alloc (102 samples, 0.31%)</title><rect x="86.4366%" y="7701" width="0.3118%" height="15" fill="rgb(205,3,43)" fg:x="28276" fg:w="102"/><text x="86.6866%" y="7711.50"></text></g><g><title>malloc (80 samples, 0.24%)</title><rect x="86.5038%" y="7685" width="0.2446%" height="15" fill="rgb(245,7,22)" fg:x="28298" fg:w="80"/><text x="86.7538%" y="7695.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (135 samples, 0.41%)</title><rect x="86.3540%" y="7765" width="0.4127%" height="15" fill="rgb(239,132,32)" fg:x="28249" fg:w="135"/><text x="86.6040%" y="7775.50"></text></g><g><title>hashbrown::raw::bucket_mask_to_capacity (6 samples, 0.02%)</title><rect x="86.7484%" y="7749" width="0.0183%" height="15" fill="rgb(228,202,34)" fg:x="28378" fg:w="6"/><text x="86.9984%" y="7759.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (751 samples, 2.30%)</title><rect x="84.5169%" y="7813" width="2.2957%" height="15" fill="rgb(254,200,22)" fg:x="27648" fg:w="751"/><text x="84.7669%" y="7823.50">h..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (172 samples, 0.53%)</title><rect x="86.2868%" y="7797" width="0.5258%" height="15" fill="rgb(219,10,39)" fg:x="28227" fg:w="172"/><text x="86.5368%" y="7807.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (172 samples, 0.53%)</title><rect x="86.2868%" y="7781" width="0.5258%" height="15" fill="rgb(226,210,39)" fg:x="28227" fg:w="172"/><text x="86.5368%" y="7791.50"></text></g><g><title>hashbrown::raw::capacity_to_buckets (15 samples, 0.05%)</title><rect x="86.7667%" y="7765" width="0.0459%" height="15" fill="rgb(208,219,16)" fg:x="28384" fg:w="15"/><text x="87.0167%" y="7775.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (783 samples, 2.39%)</title><rect x="84.4282%" y="7861" width="2.3935%" height="15" fill="rgb(216,158,51)" fg:x="27619" fg:w="783"/><text x="84.6782%" y="7871.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (778 samples, 2.38%)</title><rect x="84.4435%" y="7845" width="2.3783%" height="15" fill="rgb(233,14,44)" fg:x="27624" fg:w="778"/><text x="84.6935%" y="7855.50">ha..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (775 samples, 2.37%)</title><rect x="84.4527%" y="7829" width="2.3691%" height="15" fill="rgb(237,97,39)" fg:x="27627" fg:w="775"/><text x="84.7027%" y="7839.50">ha..</text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (24 samples, 0.07%)</title><rect x="87.1764%" y="7829" width="0.0734%" height="15" fill="rgb(218,198,43)" fg:x="28518" fg:w="24"/><text x="87.4264%" y="7839.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (124 samples, 0.38%)</title><rect x="86.8982%" y="7845" width="0.3791%" height="15" fill="rgb(231,104,20)" fg:x="28427" fg:w="124"/><text x="87.1482%" y="7855.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (9 samples, 0.03%)</title><rect x="87.2497%" y="7829" width="0.0275%" height="15" fill="rgb(254,36,13)" fg:x="28542" fg:w="9"/><text x="87.4997%" y="7839.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (11 samples, 0.03%)</title><rect x="87.2772%" y="7845" width="0.0336%" height="15" fill="rgb(248,14,50)" fg:x="28551" fg:w="11"/><text x="87.5272%" y="7855.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (11 samples, 0.03%)</title><rect x="87.2772%" y="7829" width="0.0336%" height="15" fill="rgb(217,107,29)" fg:x="28551" fg:w="11"/><text x="87.5272%" y="7839.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot::_{{closure}} (18 samples, 0.06%)</title><rect x="87.3109%" y="7845" width="0.0550%" height="15" fill="rgb(251,169,33)" fg:x="28562" fg:w="18"/><text x="87.5609%" y="7855.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (18 samples, 0.06%)</title><rect x="87.3109%" y="7829" width="0.0550%" height="15" fill="rgb(217,108,32)" fg:x="28562" fg:w="18"/><text x="87.5609%" y="7839.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (18 samples, 0.06%)</title><rect x="87.3109%" y="7813" width="0.0550%" height="15" fill="rgb(219,66,42)" fg:x="28562" fg:w="18"/><text x="87.5609%" y="7823.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (18 samples, 0.06%)</title><rect x="87.3109%" y="7797" width="0.0550%" height="15" fill="rgb(206,180,7)" fg:x="28562" fg:w="18"/><text x="87.5609%" y="7807.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u16&gt;::eq (9 samples, 0.03%)</title><rect x="87.3384%" y="7781" width="0.0275%" height="15" fill="rgb(208,226,31)" fg:x="28571" fg:w="9"/><text x="87.5884%" y="7791.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot_in_group (22 samples, 0.07%)</title><rect x="87.3659%" y="7845" width="0.0673%" height="15" fill="rgb(218,26,49)" fg:x="28580" fg:w="22"/><text x="87.6159%" y="7855.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (7 samples, 0.02%)</title><rect x="87.4117%" y="7829" width="0.0214%" height="15" fill="rgb(233,197,48)" fg:x="28595" fg:w="7"/><text x="87.6617%" y="7839.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_bucket_full (91 samples, 0.28%)</title><rect x="87.4606%" y="7829" width="0.2782%" height="15" fill="rgb(252,181,51)" fg:x="28611" fg:w="91"/><text x="87.7106%" y="7839.50"></text></g><g><title>hashbrown::raw::is_full (91 samples, 0.28%)</title><rect x="87.4606%" y="7813" width="0.2782%" height="15" fill="rgb(253,90,19)" fg:x="28611" fg:w="91"/><text x="87.7106%" y="7823.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fix_insert_slot (107 samples, 0.33%)</title><rect x="87.4331%" y="7845" width="0.3271%" height="15" fill="rgb(215,171,30)" fg:x="28602" fg:w="107"/><text x="87.6831%" y="7855.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (5 samples, 0.02%)</title><rect x="87.7449%" y="7829" width="0.0153%" height="15" fill="rgb(214,222,9)" fg:x="28704" fg:w="5"/><text x="87.9949%" y="7839.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (5 samples, 0.02%)</title><rect x="87.7449%" y="7813" width="0.0153%" height="15" fill="rgb(223,3,22)" fg:x="28704" fg:w="5"/><text x="87.9949%" y="7823.50"></text></g><g><title>hashbrown::raw::h2 (84 samples, 0.26%)</title><rect x="87.7602%" y="7845" width="0.2568%" height="15" fill="rgb(225,196,46)" fg:x="28709" fg:w="84"/><text x="88.0102%" y="7855.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (92 samples, 0.28%)</title><rect x="88.0170%" y="7845" width="0.2812%" height="15" fill="rgb(209,110,37)" fg:x="28793" fg:w="92"/><text x="88.2670%" y="7855.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (92 samples, 0.28%)</title><rect x="88.0170%" y="7829" width="0.2812%" height="15" fill="rgb(249,89,12)" fg:x="28793" fg:w="92"/><text x="88.2670%" y="7839.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (1,307 samples, 4.00%)</title><rect x="84.3579%" y="7877" width="3.9954%" height="15" fill="rgb(226,27,33)" fg:x="27596" fg:w="1307"/><text x="84.6079%" y="7887.50">hash..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_or_find_insert_slot_inner (501 samples, 1.53%)</title><rect x="86.8218%" y="7861" width="1.5315%" height="15" fill="rgb(213,82,22)" fg:x="28402" fg:w="501"/><text x="87.0718%" y="7871.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (18 samples, 0.06%)</title><rect x="88.2982%" y="7845" width="0.0550%" height="15" fill="rgb(248,140,0)" fg:x="28885" fg:w="18"/><text x="88.5482%" y="7855.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (18 samples, 0.06%)</title><rect x="88.2982%" y="7829" width="0.0550%" height="15" fill="rgb(228,106,3)" fg:x="28885" fg:w="18"/><text x="88.5482%" y="7839.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (18 samples, 0.06%)</title><rect x="88.2982%" y="7813" width="0.0550%" height="15" fill="rgb(209,23,37)" fg:x="28885" fg:w="18"/><text x="88.5482%" y="7823.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (22 samples, 0.07%)</title><rect x="88.4205%" y="7845" width="0.0673%" height="15" fill="rgb(241,93,50)" fg:x="28925" fg:w="22"/><text x="88.6705%" y="7855.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl (22 samples, 0.07%)</title><rect x="88.4205%" y="7829" width="0.0673%" height="15" fill="rgb(253,46,43)" fg:x="28925" fg:w="22"/><text x="88.6705%" y="7839.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (18 samples, 0.06%)</title><rect x="88.4327%" y="7813" width="0.0550%" height="15" fill="rgb(226,206,43)" fg:x="28929" fg:w="18"/><text x="88.6827%" y="7823.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (2,109 samples, 6.45%)</title><rect x="82.0438%" y="7925" width="6.4470%" height="15" fill="rgb(217,54,7)" fg:x="26839" fg:w="2109"/><text x="82.2938%" y="7935.50">std::col..</text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (2,109 samples, 6.45%)</title><rect x="82.0438%" y="7909" width="6.4470%" height="15" fill="rgb(223,5,52)" fg:x="26839" fg:w="2109"/><text x="82.2938%" y="7919.50">hashbrow..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2,080 samples, 6.36%)</title><rect x="82.1325%" y="7893" width="6.3583%" height="15" fill="rgb(206,52,46)" fg:x="26868" fg:w="2080"/><text x="82.3825%" y="7903.50">hashbrow..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (45 samples, 0.14%)</title><rect x="88.3533%" y="7877" width="0.1376%" height="15" fill="rgb(253,136,11)" fg:x="28903" fg:w="45"/><text x="88.6033%" y="7887.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::record_item_insert_at (40 samples, 0.12%)</title><rect x="88.3685%" y="7861" width="0.1223%" height="15" fill="rgb(208,106,33)" fg:x="28908" fg:w="40"/><text x="88.6185%" y="7871.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (8 samples, 0.02%)</title><rect x="88.4908%" y="7861" width="0.0245%" height="15" fill="rgb(206,54,4)" fg:x="28948" fg:w="8"/><text x="88.7408%" y="7871.50"></text></g><g><title>std::collections::hash::map::RandomState::new (8 samples, 0.02%)</title><rect x="88.4908%" y="7845" width="0.0245%" height="15" fill="rgb(213,3,15)" fg:x="28948" fg:w="8"/><text x="88.7408%" y="7855.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (8 samples, 0.02%)</title><rect x="88.4908%" y="7829" width="0.0245%" height="15" fill="rgb(252,211,39)" fg:x="28948" fg:w="8"/><text x="88.7408%" y="7839.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (8 samples, 0.02%)</title><rect x="88.4908%" y="7813" width="0.0245%" height="15" fill="rgb(223,6,36)" fg:x="28948" fg:w="8"/><text x="88.7408%" y="7823.50"></text></g><g><title>std::collections::hash::map::RandomState::new::_{{closure}} (6 samples, 0.02%)</title><rect x="88.4969%" y="7797" width="0.0183%" height="15" fill="rgb(252,169,45)" fg:x="28950" fg:w="6"/><text x="88.7469%" y="7807.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (6 samples, 0.02%)</title><rect x="88.4969%" y="7781" width="0.0183%" height="15" fill="rgb(212,48,26)" fg:x="28950" fg:w="6"/><text x="88.7469%" y="7791.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (6 samples, 0.02%)</title><rect x="88.4969%" y="7765" width="0.0183%" height="15" fill="rgb(251,102,48)" fg:x="28950" fg:w="6"/><text x="88.7469%" y="7775.50"></text></g><g><title>core::mem::replace (6 samples, 0.02%)</title><rect x="88.4969%" y="7749" width="0.0183%" height="15" fill="rgb(243,208,16)" fg:x="28950" fg:w="6"/><text x="88.7469%" y="7759.50"></text></g><g><title>core::ptr::write (6 samples, 0.02%)</title><rect x="88.4969%" y="7733" width="0.0183%" height="15" fill="rgb(219,96,24)" fg:x="28950" fg:w="6"/><text x="88.7469%" y="7743.50"></text></g><g><title>tetrs::logic::game::gravity (5,013 samples, 15.32%)</title><rect x="73.2033%" y="7941" width="15.3242%" height="15" fill="rgb(219,33,29)" fg:x="23947" fg:w="5013"/><text x="73.4533%" y="7951.50">tetrs::logic::game::gra..</text></g><g><title>std::collections::hash::set::HashSet&lt;T&gt;::new (12 samples, 0.04%)</title><rect x="88.4908%" y="7925" width="0.0367%" height="15" fill="rgb(223,176,5)" fg:x="28948" fg:w="12"/><text x="88.7408%" y="7935.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::default::Default&gt;::default (12 samples, 0.04%)</title><rect x="88.4908%" y="7909" width="0.0367%" height="15" fill="rgb(228,140,14)" fg:x="28948" fg:w="12"/><text x="88.7408%" y="7919.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::default::Default&gt;::default (12 samples, 0.04%)</title><rect x="88.4908%" y="7893" width="0.0367%" height="15" fill="rgb(217,179,31)" fg:x="28948" fg:w="12"/><text x="88.7408%" y="7903.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::default::Default&gt;::default (12 samples, 0.04%)</title><rect x="88.4908%" y="7877" width="0.0367%" height="15" fill="rgb(230,9,30)" fg:x="28948" fg:w="12"/><text x="88.7408%" y="7887.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::with_hasher_in (4 samples, 0.01%)</title><rect x="88.5153%" y="7861" width="0.0122%" height="15" fill="rgb(230,136,20)" fg:x="28956" fg:w="4"/><text x="88.7653%" y="7871.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (90 samples, 0.28%)</title><rect x="90.6398%" y="7925" width="0.2751%" height="15" fill="rgb(215,210,22)" fg:x="29651" fg:w="90"/><text x="90.8898%" y="7935.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (90 samples, 0.28%)</title><rect x="90.6398%" y="7909" width="0.2751%" height="15" fill="rgb(218,43,5)" fg:x="29651" fg:w="90"/><text x="90.8898%" y="7919.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (90 samples, 0.28%)</title><rect x="90.6398%" y="7893" width="0.2751%" height="15" fill="rgb(216,11,5)" fg:x="29651" fg:w="90"/><text x="90.8898%" y="7903.50"></text></g><g><title>__rdl_alloc (42 samples, 0.13%)</title><rect x="91.1320%" y="7861" width="0.1284%" height="15" fill="rgb(209,82,29)" fg:x="29812" fg:w="42"/><text x="91.3820%" y="7871.50"></text></g><g><title>__rust_alloc (44 samples, 0.13%)</title><rect x="91.2604%" y="7861" width="0.1345%" height="15" fill="rgb(244,115,12)" fg:x="29854" fg:w="44"/><text x="91.5104%" y="7871.50"></text></g><g><title>core::ptr::read_volatile (68 samples, 0.21%)</title><rect x="91.3949%" y="7861" width="0.2079%" height="15" fill="rgb(222,82,18)" fg:x="29898" fg:w="68"/><text x="91.6449%" y="7871.50"></text></g><g><title>alloc::alloc::exchange_malloc (577 samples, 1.76%)</title><rect x="90.9149%" y="7925" width="1.7638%" height="15" fill="rgb(249,227,8)" fg:x="29741" fg:w="577"/><text x="91.1649%" y="7935.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (533 samples, 1.63%)</title><rect x="91.0494%" y="7909" width="1.6293%" height="15" fill="rgb(253,141,45)" fg:x="29785" fg:w="533"/><text x="91.2994%" y="7919.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (533 samples, 1.63%)</title><rect x="91.0494%" y="7893" width="1.6293%" height="15" fill="rgb(234,184,4)" fg:x="29785" fg:w="533"/><text x="91.2994%" y="7903.50"></text></g><g><title>alloc::alloc::alloc (533 samples, 1.63%)</title><rect x="91.0494%" y="7877" width="1.6293%" height="15" fill="rgb(218,194,23)" fg:x="29785" fg:w="533"/><text x="91.2994%" y="7887.50"></text></g><g><title>malloc (352 samples, 1.08%)</title><rect x="91.6027%" y="7861" width="1.0760%" height="15" fill="rgb(235,66,41)" fg:x="29966" fg:w="352"/><text x="91.8527%" y="7871.50"></text></g><g><title>[libc.so.6] (13 samples, 0.04%)</title><rect x="92.6390%" y="7845" width="0.0397%" height="15" fill="rgb(245,217,1)" fg:x="30305" fg:w="13"/><text x="92.8890%" y="7855.50"></text></g><g><title>__rdl_dealloc (47 samples, 0.14%)</title><rect x="92.8102%" y="7797" width="0.1437%" height="15" fill="rgb(229,91,1)" fg:x="30361" fg:w="47"/><text x="93.0602%" y="7807.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (47 samples, 0.14%)</title><rect x="92.8102%" y="7781" width="0.1437%" height="15" fill="rgb(207,101,30)" fg:x="30361" fg:w="47"/><text x="93.0602%" y="7791.50"></text></g><g><title>__rust_dealloc (55 samples, 0.17%)</title><rect x="92.9539%" y="7797" width="0.1681%" height="15" fill="rgb(223,82,49)" fg:x="30408" fg:w="55"/><text x="93.2039%" y="7807.50"></text></g><g><title>tetrs::logic::game::is_connected (2,252 samples, 6.88%)</title><rect x="88.5275%" y="7941" width="6.8841%" height="15" fill="rgb(218,167,17)" fg:x="28960" fg:w="2252"/><text x="88.7775%" y="7951.50">tetrs::lo..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(i8,i8)&gt;&gt; (894 samples, 2.73%)</title><rect x="92.6788%" y="7925" width="2.7329%" height="15" fill="rgb(208,103,14)" fg:x="30318" fg:w="894"/><text x="92.9288%" y="7935.50">co..</text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (894 samples, 2.73%)</title><rect x="92.6788%" y="7909" width="2.7329%" height="15" fill="rgb(238,20,8)" fg:x="30318" fg:w="894"/><text x="92.9288%" y="7919.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(i8,i8),alloc::alloc::Global&gt;&gt; (894 samples, 2.73%)</title><rect x="92.6788%" y="7893" width="2.7329%" height="15" fill="rgb(218,80,54)" fg:x="30318" fg:w="894"/><text x="92.9288%" y="7903.50">co..</text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (894 samples, 2.73%)</title><rect x="92.6788%" y="7877" width="2.7329%" height="15" fill="rgb(240,144,17)" fg:x="30318" fg:w="894"/><text x="92.9288%" y="7887.50">&lt;&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(i8,i8)&gt;&gt; (894 samples, 2.73%)</title><rect x="92.6788%" y="7861" width="2.7329%" height="15" fill="rgb(245,27,50)" fg:x="30318" fg:w="894"/><text x="92.9288%" y="7871.50">co..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (894 samples, 2.73%)</title><rect x="92.6788%" y="7845" width="2.7329%" height="15" fill="rgb(251,51,7)" fg:x="30318" fg:w="894"/><text x="92.9288%" y="7855.50">&lt;a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (894 samples, 2.73%)</title><rect x="92.6788%" y="7829" width="2.7329%" height="15" fill="rgb(245,217,29)" fg:x="30318" fg:w="894"/><text x="92.9288%" y="7839.50">&lt;a..</text></g><g><title>alloc::alloc::dealloc (894 samples, 2.73%)</title><rect x="92.6788%" y="7813" width="2.7329%" height="15" fill="rgb(221,176,29)" fg:x="30318" fg:w="894"/><text x="92.9288%" y="7823.50">al..</text></g><g><title>cfree (749 samples, 2.29%)</title><rect x="93.1220%" y="7797" width="2.2896%" height="15" fill="rgb(212,180,24)" fg:x="30463" fg:w="749"/><text x="93.3720%" y="7807.50">c..</text></g><g><title>[libc.so.6] (469 samples, 1.43%)</title><rect x="93.9779%" y="7781" width="1.4337%" height="15" fill="rgb(254,24,2)" fg:x="30743" fg:w="469"/><text x="94.2279%" y="7791.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (171 samples, 0.52%)</title><rect x="98.6244%" y="7925" width="0.5227%" height="15" fill="rgb(230,100,2)" fg:x="32263" fg:w="171"/><text x="98.8744%" y="7935.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (171 samples, 0.52%)</title><rect x="98.6244%" y="7909" width="0.5227%" height="15" fill="rgb(219,142,25)" fg:x="32263" fg:w="171"/><text x="98.8744%" y="7919.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (171 samples, 0.52%)</title><rect x="98.6244%" y="7893" width="0.5227%" height="15" fill="rgb(240,73,43)" fg:x="32263" fg:w="171"/><text x="98.8744%" y="7903.50"></text></g><g><title>tetrs::logic::bot::search (32,325 samples, 98.81%)</title><rect x="0.3393%" y="7989" width="98.8139%" height="15" fill="rgb(214,114,15)" fg:x="111" fg:w="32325"/><text x="0.5893%" y="7999.50">tetrs::logic::bot::search</text></g><g><title>tetrs::logic::bot::heuristic (11,014 samples, 33.67%)</title><rect x="65.4847%" y="7973" width="33.6686%" height="15" fill="rgb(207,130,4)" fg:x="21422" fg:w="11014"/><text x="65.7347%" y="7983.50">tetrs::logic::bot::heuristic</text></g><g><title>tetrs::logic::game::clear_rows (10,679 samples, 32.64%)</title><rect x="66.5087%" y="7957" width="32.6445%" height="15" fill="rgb(221,25,40)" fg:x="21757" fg:w="10679"/><text x="66.7587%" y="7967.50">tetrs::logic::game::clear_rows</text></g><g><title>tetrs::logic::id_manager::IdManager::next_unique_id (1,224 samples, 3.74%)</title><rect x="95.4116%" y="7941" width="3.7416%" height="15" fill="rgb(241,184,7)" fg:x="31212" fg:w="1224"/><text x="95.6616%" y="7951.50">tetr..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::all (4 samples, 0.01%)</title><rect x="99.1960%" y="7973" width="0.0122%" height="15" fill="rgb(235,159,4)" fg:x="32450" fg:w="4"/><text x="99.4460%" y="7983.50"></text></g><g><title>tetrs::logic::game::clear_rows (8 samples, 0.02%)</title><rect x="99.2480%" y="7957" width="0.0245%" height="15" fill="rgb(214,87,48)" fg:x="32467" fg:w="8"/><text x="99.4980%" y="7967.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (5 samples, 0.02%)</title><rect x="99.3061%" y="7877" width="0.0153%" height="15" fill="rgb(246,198,24)" fg:x="32486" fg:w="5"/><text x="99.5561%" y="7887.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.02%)</title><rect x="99.3061%" y="7861" width="0.0153%" height="15" fill="rgb(209,66,40)" fg:x="32486" fg:w="5"/><text x="99.5561%" y="7871.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (5 samples, 0.02%)</title><rect x="99.3061%" y="7845" width="0.0153%" height="15" fill="rgb(233,147,39)" fg:x="32486" fg:w="5"/><text x="99.5561%" y="7855.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (5 samples, 0.02%)</title><rect x="99.3061%" y="7829" width="0.0153%" height="15" fill="rgb(231,145,52)" fg:x="32486" fg:w="5"/><text x="99.5561%" y="7839.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (11 samples, 0.03%)</title><rect x="99.2939%" y="7941" width="0.0336%" height="15" fill="rgb(206,20,26)" fg:x="32482" fg:w="11"/><text x="99.5439%" y="7951.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (11 samples, 0.03%)</title><rect x="99.2939%" y="7925" width="0.0336%" height="15" fill="rgb(238,220,4)" fg:x="32482" fg:w="11"/><text x="99.5439%" y="7935.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (11 samples, 0.03%)</title><rect x="99.2939%" y="7909" width="0.0336%" height="15" fill="rgb(252,195,42)" fg:x="32482" fg:w="11"/><text x="99.5439%" y="7919.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (7 samples, 0.02%)</title><rect x="99.3061%" y="7893" width="0.0214%" height="15" fill="rgb(209,10,6)" fg:x="32486" fg:w="7"/><text x="99.5561%" y="7903.50"></text></g><g><title>tetrs::logic::game::gravity (19 samples, 0.06%)</title><rect x="99.2725%" y="7957" width="0.0581%" height="15" fill="rgb(229,3,52)" fg:x="32475" fg:w="19"/><text x="99.5225%" y="7967.50"></text></g><g><title>tetrs::logic::game::is_connected (4 samples, 0.01%)</title><rect x="99.3305%" y="7957" width="0.0122%" height="15" fill="rgb(253,49,37)" fg:x="32494" fg:w="4"/><text x="99.5805%" y="7967.50"></text></g><g><title>tetrs::logic::game::clear_rows (52 samples, 0.16%)</title><rect x="99.2083%" y="7973" width="0.1590%" height="15" fill="rgb(240,103,49)" fg:x="32454" fg:w="52"/><text x="99.4583%" y="7983.50"></text></g><g><title>tetrs::logic::id_manager::IdManager::next_unique_id (8 samples, 0.02%)</title><rect x="99.3428%" y="7957" width="0.0245%" height="15" fill="rgb(250,182,30)" fg:x="32498" fg:w="8"/><text x="99.5928%" y="7967.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (38 samples, 0.12%)</title><rect x="99.4039%" y="7893" width="0.1162%" height="15" fill="rgb(248,8,30)" fg:x="32518" fg:w="38"/><text x="99.6539%" y="7903.50"></text></g><g><title>alloc::alloc::Global::grow_impl (38 samples, 0.12%)</title><rect x="99.4039%" y="7877" width="0.1162%" height="15" fill="rgb(237,120,30)" fg:x="32518" fg:w="38"/><text x="99.6539%" y="7887.50"></text></g><g><title>alloc::alloc::realloc (38 samples, 0.12%)</title><rect x="99.4039%" y="7861" width="0.1162%" height="15" fill="rgb(221,146,34)" fg:x="32518" fg:w="38"/><text x="99.6539%" y="7871.50"></text></g><g><title>realloc (38 samples, 0.12%)</title><rect x="99.4039%" y="7845" width="0.1162%" height="15" fill="rgb(242,55,13)" fg:x="32518" fg:w="38"/><text x="99.6539%" y="7855.50"></text></g><g><title>[libc.so.6] (38 samples, 0.12%)</title><rect x="99.4039%" y="7829" width="0.1162%" height="15" fill="rgb(242,112,31)" fg:x="32518" fg:w="38"/><text x="99.6539%" y="7839.50"></text></g><g><title>[libc.so.6] (36 samples, 0.11%)</title><rect x="99.4100%" y="7813" width="0.1100%" height="15" fill="rgb(249,192,27)" fg:x="32520" fg:w="36"/><text x="99.6600%" y="7823.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (41 samples, 0.13%)</title><rect x="99.3978%" y="7941" width="0.1253%" height="15" fill="rgb(208,204,44)" fg:x="32516" fg:w="41"/><text x="99.6478%" y="7951.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (41 samples, 0.13%)</title><rect x="99.3978%" y="7925" width="0.1253%" height="15" fill="rgb(208,93,54)" fg:x="32516" fg:w="41"/><text x="99.6478%" y="7935.50"></text></g><g><title>alloc::raw_vec::finish_grow (40 samples, 0.12%)</title><rect x="99.4008%" y="7909" width="0.1223%" height="15" fill="rgb(242,1,31)" fg:x="32517" fg:w="40"/><text x="99.6508%" y="7919.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (42 samples, 0.13%)</title><rect x="99.3978%" y="7957" width="0.1284%" height="15" fill="rgb(241,83,25)" fg:x="32516" fg:w="42"/><text x="99.6478%" y="7967.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (7 samples, 0.02%)</title><rect x="99.5354%" y="7861" width="0.0214%" height="15" fill="rgb(205,169,50)" fg:x="32561" fg:w="7"/><text x="99.7854%" y="7871.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (7 samples, 0.02%)</title><rect x="99.5354%" y="7845" width="0.0214%" height="15" fill="rgb(239,186,37)" fg:x="32561" fg:w="7"/><text x="99.7854%" y="7855.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (7 samples, 0.02%)</title><rect x="99.5354%" y="7829" width="0.0214%" height="15" fill="rgb(205,221,10)" fg:x="32561" fg:w="7"/><text x="99.7854%" y="7839.50"></text></g><g><title>hashbrown::map::make_hash (8 samples, 0.02%)</title><rect x="99.5354%" y="7893" width="0.0245%" height="15" fill="rgb(218,196,15)" fg:x="32561" fg:w="8"/><text x="99.7854%" y="7903.50"></text></g><g><title>core::hash::BuildHasher::hash_one (8 samples, 0.02%)</title><rect x="99.5354%" y="7877" width="0.0245%" height="15" fill="rgb(218,196,35)" fg:x="32561" fg:w="8"/><text x="99.7854%" y="7887.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (10 samples, 0.03%)</title><rect x="99.5354%" y="7957" width="0.0306%" height="15" fill="rgb(233,63,24)" fg:x="32561" fg:w="10"/><text x="99.7854%" y="7967.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (10 samples, 0.03%)</title><rect x="99.5354%" y="7941" width="0.0306%" height="15" fill="rgb(225,8,4)" fg:x="32561" fg:w="10"/><text x="99.7854%" y="7951.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (10 samples, 0.03%)</title><rect x="99.5354%" y="7925" width="0.0306%" height="15" fill="rgb(234,105,35)" fg:x="32561" fg:w="10"/><text x="99.7854%" y="7935.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (10 samples, 0.03%)</title><rect x="99.5354%" y="7909" width="0.0306%" height="15" fill="rgb(236,21,32)" fg:x="32561" fg:w="10"/><text x="99.7854%" y="7919.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (6 samples, 0.02%)</title><rect x="99.5659%" y="7877" width="0.0183%" height="15" fill="rgb(228,109,6)" fg:x="32571" fg:w="6"/><text x="99.8159%" y="7887.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (6 samples, 0.02%)</title><rect x="99.5659%" y="7861" width="0.0183%" height="15" fill="rgb(229,215,31)" fg:x="32571" fg:w="6"/><text x="99.8159%" y="7871.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (6 samples, 0.02%)</title><rect x="99.5659%" y="7845" width="0.0183%" height="15" fill="rgb(221,52,54)" fg:x="32571" fg:w="6"/><text x="99.8159%" y="7855.50"></text></g><g><title>hashbrown::map::make_hash (12 samples, 0.04%)</title><rect x="99.5659%" y="7909" width="0.0367%" height="15" fill="rgb(252,129,43)" fg:x="32571" fg:w="12"/><text x="99.8159%" y="7919.50"></text></g><g><title>core::hash::BuildHasher::hash_one (12 samples, 0.04%)</title><rect x="99.5659%" y="7893" width="0.0367%" height="15" fill="rgb(248,183,27)" fg:x="32571" fg:w="12"/><text x="99.8159%" y="7903.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (4 samples, 0.01%)</title><rect x="99.5904%" y="7877" width="0.0122%" height="15" fill="rgb(250,0,22)" fg:x="32579" fg:w="4"/><text x="99.8404%" y="7887.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (4 samples, 0.01%)</title><rect x="99.5904%" y="7861" width="0.0122%" height="15" fill="rgb(213,166,10)" fg:x="32579" fg:w="4"/><text x="99.8404%" y="7871.50"></text></g><g><title>core::hash::Hasher::write_u16 (4 samples, 0.01%)</title><rect x="99.5904%" y="7845" width="0.0122%" height="15" fill="rgb(207,163,36)" fg:x="32579" fg:w="4"/><text x="99.8404%" y="7855.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.01%)</title><rect x="99.5904%" y="7829" width="0.0122%" height="15" fill="rgb(208,122,22)" fg:x="32579" fg:w="4"/><text x="99.8404%" y="7839.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (4 samples, 0.01%)</title><rect x="99.5904%" y="7813" width="0.0122%" height="15" fill="rgb(207,104,49)" fg:x="32579" fg:w="4"/><text x="99.8404%" y="7823.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4 samples, 0.01%)</title><rect x="99.5904%" y="7797" width="0.0122%" height="15" fill="rgb(248,211,50)" fg:x="32579" fg:w="4"/><text x="99.8404%" y="7807.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (4 samples, 0.01%)</title><rect x="99.6118%" y="7829" width="0.0122%" height="15" fill="rgb(217,13,45)" fg:x="32586" fg:w="4"/><text x="99.8618%" y="7839.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (9 samples, 0.03%)</title><rect x="99.6026%" y="7845" width="0.0275%" height="15" fill="rgb(211,216,49)" fg:x="32583" fg:w="9"/><text x="99.8526%" y="7855.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (10 samples, 0.03%)</title><rect x="99.6026%" y="7893" width="0.0306%" height="15" fill="rgb(221,58,53)" fg:x="32583" fg:w="10"/><text x="99.8526%" y="7903.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (10 samples, 0.03%)</title><rect x="99.6026%" y="7877" width="0.0306%" height="15" fill="rgb(220,112,41)" fg:x="32583" fg:w="10"/><text x="99.8526%" y="7887.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (10 samples, 0.03%)</title><rect x="99.6026%" y="7861" width="0.0306%" height="15" fill="rgb(236,38,28)" fg:x="32583" fg:w="10"/><text x="99.8526%" y="7871.50"></text></g><g><title>tetrs::logic::game::gravity (93 samples, 0.28%)</title><rect x="99.3672%" y="7973" width="0.2843%" height="15" fill="rgb(227,195,22)" fg:x="32506" fg:w="93"/><text x="99.6172%" y="7983.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (28 samples, 0.09%)</title><rect x="99.5659%" y="7957" width="0.0856%" height="15" fill="rgb(214,55,33)" fg:x="32571" fg:w="28"/><text x="99.8159%" y="7967.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (28 samples, 0.09%)</title><rect x="99.5659%" y="7941" width="0.0856%" height="15" fill="rgb(248,80,13)" fg:x="32571" fg:w="28"/><text x="99.8159%" y="7951.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (28 samples, 0.09%)</title><rect x="99.5659%" y="7925" width="0.0856%" height="15" fill="rgb(238,52,6)" fg:x="32571" fg:w="28"/><text x="99.8159%" y="7935.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (16 samples, 0.05%)</title><rect x="99.6026%" y="7909" width="0.0489%" height="15" fill="rgb(224,198,47)" fg:x="32583" fg:w="16"/><text x="99.8526%" y="7919.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_or_find_insert_slot_inner (6 samples, 0.02%)</title><rect x="99.6332%" y="7893" width="0.0183%" height="15" fill="rgb(233,171,20)" fg:x="32593" fg:w="6"/><text x="99.8832%" y="7903.50"></text></g><g><title>tetrs::logic::game::is_connected (12 samples, 0.04%)</title><rect x="99.6515%" y="7973" width="0.0367%" height="15" fill="rgb(241,30,25)" fg:x="32599" fg:w="12"/><text x="99.9015%" y="7983.50"></text></g><g><title>tetrs::logic::game::clear_rows (187 samples, 0.57%)</title><rect x="99.1532%" y="7989" width="0.5716%" height="15" fill="rgb(207,171,38)" fg:x="32436" fg:w="187"/><text x="99.4032%" y="7999.50"></text></g><g><title>tetrs::logic::id_manager::IdManager::next_unique_id (12 samples, 0.04%)</title><rect x="99.6882%" y="7973" width="0.0367%" height="15" fill="rgb(234,70,1)" fg:x="32611" fg:w="12"/><text x="99.9382%" y="7983.50"></text></g><g><title>&lt;macroquad::Stage as miniquad::event::EventHandler&gt;::draw (32,528 samples, 99.43%)</title><rect x="0.2935%" y="8085" width="99.4345%" height="15" fill="rgb(232,178,18)" fg:x="96" fg:w="32528"/><text x="0.5435%" y="8095.50">&lt;macroquad::Stage as miniquad::event::EventHandler&gt;::draw</text></g><g><title>&lt;macroquad::Stage as miniquad::event::EventHandler&gt;::draw::maybe_unwind (32,528 samples, 99.43%)</title><rect x="0.2935%" y="8069" width="99.4345%" height="15" fill="rgb(241,78,40)" fg:x="96" fg:w="32528"/><text x="0.5435%" y="8079.50">&lt;macroquad::Stage as miniquad::event::EventHandler&gt;::draw::maybe_unwind</text></g><g><title>&lt;macroquad::Stage as miniquad::event::EventHandler&gt;::draw::_{{closure}} (32,528 samples, 99.43%)</title><rect x="0.2935%" y="8053" width="99.4345%" height="15" fill="rgb(222,35,25)" fg:x="96" fg:w="32528"/><text x="0.5435%" y="8063.50">&lt;macroquad::Stage as miniquad::event::EventHandler&gt;::draw::_{{closure}}</text></g><g><title>macroquad::exec::resume (32,528 samples, 99.43%)</title><rect x="0.2935%" y="8037" width="99.4345%" height="15" fill="rgb(207,92,16)" fg:x="96" fg:w="32528"/><text x="0.5435%" y="8047.50">macroquad::exec::resume</text></g><g><title>tetrs::amain::_{{closure}} (32,528 samples, 99.43%)</title><rect x="0.2935%" y="8021" width="99.4345%" height="15" fill="rgb(216,59,51)" fg:x="96" fg:w="32528"/><text x="0.5435%" y="8031.50">tetrs::amain::_{{closure}}</text></g><g><title>tetrs::test_bot (32,528 samples, 99.43%)</title><rect x="0.2935%" y="8005" width="99.4345%" height="15" fill="rgb(213,80,28)" fg:x="96" fg:w="32528"/><text x="0.5435%" y="8015.50">tetrs::test_bot</text></g><g><title>[ld-linux-x86-64.so.2] (7 samples, 0.02%)</title><rect x="99.7493%" y="7781" width="0.0214%" height="15" fill="rgb(220,93,7)" fg:x="32631" fg:w="7"/><text x="99.9993%" y="7791.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (8 samples, 0.02%)</title><rect x="99.7493%" y="7973" width="0.0245%" height="15" fill="rgb(225,24,44)" fg:x="32631" fg:w="8"/><text x="99.9993%" y="7983.50"></text></g><g><title>dlopen (8 samples, 0.02%)</title><rect x="99.7493%" y="7957" width="0.0245%" height="15" fill="rgb(243,74,40)" fg:x="32631" fg:w="8"/><text x="99.9993%" y="7967.50"></text></g><g><title>[libc.so.6] (8 samples, 0.02%)</title><rect x="99.7493%" y="7941" width="0.0245%" height="15" fill="rgb(228,39,7)" fg:x="32631" fg:w="8"/><text x="99.9993%" y="7951.50"></text></g><g><title>[ld-linux-x86-64.so.2] (8 samples, 0.02%)</title><rect x="99.7493%" y="7925" width="0.0245%" height="15" fill="rgb(227,79,8)" fg:x="32631" fg:w="8"/><text x="99.9993%" y="7935.50"></text></g><g><title>_dl_catch_exception (8 samples, 0.02%)</title><rect x="99.7493%" y="7909" width="0.0245%" height="15" fill="rgb(236,58,11)" fg:x="32631" fg:w="8"/><text x="99.9993%" y="7919.50"></text></g><g><title>[libc.so.6] (8 samples, 0.02%)</title><rect x="99.7493%" y="7893" width="0.0245%" height="15" fill="rgb(249,63,35)" fg:x="32631" fg:w="8"/><text x="99.9993%" y="7903.50"></text></g><g><title>[ld-linux-x86-64.so.2] (8 samples, 0.02%)</title><rect x="99.7493%" y="7877" width="0.0245%" height="15" fill="rgb(252,114,16)" fg:x="32631" fg:w="8"/><text x="99.9993%" y="7887.50"></text></g><g><title>_dl_catch_exception (8 samples, 0.02%)</title><rect x="99.7493%" y="7861" width="0.0245%" height="15" fill="rgb(254,151,24)" fg:x="32631" fg:w="8"/><text x="99.9993%" y="7871.50"></text></g><g><title>[ld-linux-x86-64.so.2] (8 samples, 0.02%)</title><rect x="99.7493%" y="7845" width="0.0245%" height="15" fill="rgb(253,54,39)" fg:x="32631" fg:w="8"/><text x="99.9993%" y="7855.50"></text></g><g><title>_dl_catch_exception (8 samples, 0.02%)</title><rect x="99.7493%" y="7829" width="0.0245%" height="15" fill="rgb(243,25,45)" fg:x="32631" fg:w="8"/><text x="99.9993%" y="7839.50"></text></g><g><title>[ld-linux-x86-64.so.2] (8 samples, 0.02%)</title><rect x="99.7493%" y="7813" width="0.0245%" height="15" fill="rgb(234,134,9)" fg:x="32631" fg:w="8"/><text x="99.9993%" y="7823.50"></text></g><g><title>[ld-linux-x86-64.so.2] (8 samples, 0.02%)</title><rect x="99.7493%" y="7797" width="0.0245%" height="15" fill="rgb(227,166,31)" fg:x="32631" fg:w="8"/><text x="99.9993%" y="7807.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (15 samples, 0.05%)</title><rect x="99.7341%" y="7989" width="0.0459%" height="15" fill="rgb(245,143,41)" fg:x="32626" fg:w="15"/><text x="99.9841%" y="7999.50"></text></g><g><title>[radeonsi_dri.so] (34 samples, 0.10%)</title><rect x="99.7799%" y="7861" width="0.1039%" height="15" fill="rgb(238,181,32)" fg:x="32641" fg:w="34"/><text x="100.0299%" y="7871.50"></text></g><g><title>[radeonsi_dri.so] (20 samples, 0.06%)</title><rect x="99.8227%" y="7845" width="0.0611%" height="15" fill="rgb(224,113,18)" fg:x="32655" fg:w="20"/><text x="100.0727%" y="7855.50"></text></g><g><title>pthread_setaffinity_np (19 samples, 0.06%)</title><rect x="99.8258%" y="7829" width="0.0581%" height="15" fill="rgb(240,229,28)" fg:x="32656" fg:w="19"/><text x="100.0758%" y="7839.50"></text></g><g><title>[unknown] (18 samples, 0.06%)</title><rect x="99.8288%" y="7813" width="0.0550%" height="15" fill="rgb(250,185,3)" fg:x="32657" fg:w="18"/><text x="100.0788%" y="7823.50"></text></g><g><title>[unknown] (18 samples, 0.06%)</title><rect x="99.8288%" y="7797" width="0.0550%" height="15" fill="rgb(212,59,25)" fg:x="32657" fg:w="18"/><text x="100.0788%" y="7807.50"></text></g><g><title>[unknown] (18 samples, 0.06%)</title><rect x="99.8288%" y="7781" width="0.0550%" height="15" fill="rgb(221,87,20)" fg:x="32657" fg:w="18"/><text x="100.0788%" y="7791.50"></text></g><g><title>[unknown] (18 samples, 0.06%)</title><rect x="99.8288%" y="7765" width="0.0550%" height="15" fill="rgb(213,74,28)" fg:x="32657" fg:w="18"/><text x="100.0788%" y="7775.50"></text></g><g><title>[unknown] (14 samples, 0.04%)</title><rect x="99.8410%" y="7749" width="0.0428%" height="15" fill="rgb(224,132,34)" fg:x="32661" fg:w="14"/><text x="100.0910%" y="7759.50"></text></g><g><title>[unknown] (14 samples, 0.04%)</title><rect x="99.8410%" y="7733" width="0.0428%" height="15" fill="rgb(222,101,24)" fg:x="32661" fg:w="14"/><text x="100.0910%" y="7743.50"></text></g><g><title>[libc.so.6] (35 samples, 0.11%)</title><rect x="99.7799%" y="7893" width="0.1070%" height="15" fill="rgb(254,142,4)" fg:x="32641" fg:w="35"/><text x="100.0299%" y="7903.50"></text></g><g><title>[radeonsi_dri.so] (35 samples, 0.11%)</title><rect x="99.7799%" y="7877" width="0.1070%" height="15" fill="rgb(230,229,49)" fg:x="32641" fg:w="35"/><text x="100.0299%" y="7887.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (52 samples, 0.16%)</title><rect x="99.7341%" y="8069" width="0.1590%" height="15" fill="rgb(238,70,47)" fg:x="32626" fg:w="52"/><text x="99.9841%" y="8079.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (52 samples, 0.16%)</title><rect x="99.7341%" y="8053" width="0.1590%" height="15" fill="rgb(231,160,17)" fg:x="32626" fg:w="52"/><text x="99.9841%" y="8063.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (52 samples, 0.16%)</title><rect x="99.7341%" y="8037" width="0.1590%" height="15" fill="rgb(218,68,53)" fg:x="32626" fg:w="52"/><text x="99.9841%" y="8047.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (52 samples, 0.16%)</title><rect x="99.7341%" y="8021" width="0.1590%" height="15" fill="rgb(236,111,10)" fg:x="32626" fg:w="52"/><text x="99.9841%" y="8031.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (52 samples, 0.16%)</title><rect x="99.7341%" y="8005" width="0.1590%" height="15" fill="rgb(224,34,41)" fg:x="32626" fg:w="52"/><text x="99.9841%" y="8015.50"></text></g><g><title>[radeonsi_dri.so] (37 samples, 0.11%)</title><rect x="99.7799%" y="7989" width="0.1131%" height="15" fill="rgb(241,118,19)" fg:x="32641" fg:w="37"/><text x="100.0299%" y="7999.50"></text></g><g><title>[radeonsi_dri.so] (37 samples, 0.11%)</title><rect x="99.7799%" y="7973" width="0.1131%" height="15" fill="rgb(238,129,25)" fg:x="32641" fg:w="37"/><text x="100.0299%" y="7983.50"></text></g><g><title>[radeonsi_dri.so] (37 samples, 0.11%)</title><rect x="99.7799%" y="7957" width="0.1131%" height="15" fill="rgb(238,22,31)" fg:x="32641" fg:w="37"/><text x="100.0299%" y="7967.50"></text></g><g><title>[radeonsi_dri.so] (37 samples, 0.11%)</title><rect x="99.7799%" y="7941" width="0.1131%" height="15" fill="rgb(222,174,48)" fg:x="32641" fg:w="37"/><text x="100.0299%" y="7951.50"></text></g><g><title>amdgpu_winsys_create (37 samples, 0.11%)</title><rect x="99.7799%" y="7925" width="0.1131%" height="15" fill="rgb(206,152,40)" fg:x="32641" fg:w="37"/><text x="100.0299%" y="7935.50"></text></g><g><title>[radeonsi_dri.so] (37 samples, 0.11%)</title><rect x="99.7799%" y="7909" width="0.1131%" height="15" fill="rgb(218,99,54)" fg:x="32641" fg:w="37"/><text x="100.0299%" y="7919.50"></text></g><g><title>miniquad::native::linux_x11::glx_main_loop (32,583 samples, 99.60%)</title><rect x="0.2935%" y="8101" width="99.6026%" height="15" fill="rgb(220,174,26)" fg:x="96" fg:w="32583"/><text x="0.5435%" y="8111.50">miniquad::native::linux_x11::glx_main_loop</text></g><g><title>miniquad::native::linux_x11::glx::Glx::init (53 samples, 0.16%)</title><rect x="99.7341%" y="8085" width="0.1620%" height="15" fill="rgb(245,116,9)" fg:x="32626" fg:w="53"/><text x="99.9841%" y="8095.50"></text></g><g><title>[unknown] (32,612 samples, 99.69%)</title><rect x="0.2079%" y="8181" width="99.6913%" height="15" fill="rgb(209,72,35)" fg:x="68" fg:w="32612"/><text x="0.4579%" y="8191.50">[unknown]</text></g><g><title>tetrs::main (32,584 samples, 99.61%)</title><rect x="0.2935%" y="8165" width="99.6057%" height="15" fill="rgb(226,126,21)" fg:x="96" fg:w="32584"/><text x="0.5435%" y="8175.50">tetrs::main</text></g><g><title>macroquad::Window::from_config (32,584 samples, 99.61%)</title><rect x="0.2935%" y="8149" width="99.6057%" height="15" fill="rgb(227,192,1)" fg:x="96" fg:w="32584"/><text x="0.5435%" y="8159.50">macroquad::Window::from_config</text></g><g><title>miniquad::start (32,584 samples, 99.61%)</title><rect x="0.2935%" y="8133" width="99.6057%" height="15" fill="rgb(237,180,29)" fg:x="96" fg:w="32584"/><text x="0.5435%" y="8143.50">miniquad::start</text></g><g><title>miniquad::native::linux_x11::run (32,584 samples, 99.61%)</title><rect x="0.2935%" y="8117" width="99.6057%" height="15" fill="rgb(230,197,35)" fg:x="96" fg:w="32584"/><text x="0.5435%" y="8127.50">miniquad::native::linux_x11::run</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (11 samples, 0.03%)</title><rect x="99.9052%" y="229" width="0.0336%" height="15" fill="rgb(246,193,31)" fg:x="32682" fg:w="11"/><text x="100.1552%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.03%)</title><rect x="99.9052%" y="213" width="0.0336%" height="15" fill="rgb(241,36,4)" fg:x="32682" fg:w="11"/><text x="100.1552%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u16&gt;]&gt; (11 samples, 0.03%)</title><rect x="99.9052%" y="197" width="0.0336%" height="15" fill="rgb(241,130,17)" fg:x="32682" fg:w="11"/><text x="100.1552%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u16&gt;&gt; (11 samples, 0.03%)</title><rect x="99.9052%" y="181" width="0.0336%" height="15" fill="rgb(206,137,32)" fg:x="32682" fg:w="11"/><text x="100.1552%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u16&gt;&gt; (11 samples, 0.03%)</title><rect x="99.9052%" y="165" width="0.0336%" height="15" fill="rgb(237,228,51)" fg:x="32682" fg:w="11"/><text x="100.1552%" y="175.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.03%)</title><rect x="99.9052%" y="149" width="0.0336%" height="15" fill="rgb(243,6,42)" fg:x="32682" fg:w="11"/><text x="100.1552%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.03%)</title><rect x="99.9052%" y="133" width="0.0336%" height="15" fill="rgb(251,74,28)" fg:x="32682" fg:w="11"/><text x="100.1552%" y="143.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.03%)</title><rect x="99.9052%" y="117" width="0.0336%" height="15" fill="rgb(218,20,49)" fg:x="32682" fg:w="11"/><text x="100.1552%" y="127.50"></text></g><g><title>cfree (11 samples, 0.03%)</title><rect x="99.9052%" y="101" width="0.0336%" height="15" fill="rgb(238,28,14)" fg:x="32682" fg:w="11"/><text x="100.1552%" y="111.50"></text></g><g><title>[libc.so.6] (11 samples, 0.03%)</title><rect x="99.9052%" y="85" width="0.0336%" height="15" fill="rgb(229,40,46)" fg:x="32682" fg:w="11"/><text x="100.1552%" y="95.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (7 samples, 0.02%)</title><rect x="99.9480%" y="165" width="0.0214%" height="15" fill="rgb(244,195,20)" fg:x="32696" fg:w="7"/><text x="100.1980%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.02%)</title><rect x="99.9480%" y="149" width="0.0214%" height="15" fill="rgb(253,56,35)" fg:x="32696" fg:w="7"/><text x="100.1980%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u16&gt;]&gt; (7 samples, 0.02%)</title><rect x="99.9480%" y="133" width="0.0214%" height="15" fill="rgb(210,149,44)" fg:x="32696" fg:w="7"/><text x="100.1980%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u16&gt;&gt; (7 samples, 0.02%)</title><rect x="99.9480%" y="117" width="0.0214%" height="15" fill="rgb(240,135,12)" fg:x="32696" fg:w="7"/><text x="100.1980%" y="127.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u16&gt;&gt; (7 samples, 0.02%)</title><rect x="99.9480%" y="101" width="0.0214%" height="15" fill="rgb(251,24,50)" fg:x="32696" fg:w="7"/><text x="100.1980%" y="111.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.02%)</title><rect x="99.9480%" y="85" width="0.0214%" height="15" fill="rgb(243,200,47)" fg:x="32696" fg:w="7"/><text x="100.1980%" y="95.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.02%)</title><rect x="99.9480%" y="69" width="0.0214%" height="15" fill="rgb(224,166,26)" fg:x="32696" fg:w="7"/><text x="100.1980%" y="79.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.02%)</title><rect x="99.9480%" y="53" width="0.0214%" height="15" fill="rgb(233,0,47)" fg:x="32696" fg:w="7"/><text x="100.1980%" y="63.50"></text></g><g><title>cfree (7 samples, 0.02%)</title><rect x="99.9480%" y="37" width="0.0214%" height="15" fill="rgb(253,80,5)" fg:x="32696" fg:w="7"/><text x="100.1980%" y="47.50"></text></g><g><title>all (32,713 samples, 100%)</title><rect x="0.0000%" y="8213" width="100.0000%" height="15" fill="rgb(214,133,25)" fg:x="0" fg:w="32713"/><text x="0.2500%" y="8223.50"></text></g><g><title>tetrs (32,689 samples, 99.93%)</title><rect x="0.0734%" y="8197" width="99.9266%" height="15" fill="rgb(209,27,14)" fg:x="24" fg:w="32689"/><text x="0.3234%" y="8207.50">tetrs</text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="8181" width="0.1009%" height="15" fill="rgb(219,102,51)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="8191.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="8165" width="0.1009%" height="15" fill="rgb(237,18,16)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="8175.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="8149" width="0.1009%" height="15" fill="rgb(241,85,17)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="8159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="8133" width="0.1009%" height="15" fill="rgb(236,90,42)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="8143.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="8117" width="0.1009%" height="15" fill="rgb(249,57,21)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="8127.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="8101" width="0.1009%" height="15" fill="rgb(243,12,36)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="8111.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="8085" width="0.1009%" height="15" fill="rgb(253,128,47)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="8095.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="8069" width="0.1009%" height="15" fill="rgb(207,33,20)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="8079.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="8053" width="0.1009%" height="15" fill="rgb(233,215,35)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="8063.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="8037" width="0.1009%" height="15" fill="rgb(249,188,52)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="8047.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="8021" width="0.1009%" height="15" fill="rgb(225,12,32)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="8031.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="8005" width="0.1009%" height="15" fill="rgb(247,98,14)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="8015.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="7989" width="0.1009%" height="15" fill="rgb(247,219,48)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="7999.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="7973" width="0.1009%" height="15" fill="rgb(253,60,48)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="7983.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="7957" width="0.1009%" height="15" fill="rgb(245,15,52)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="7967.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="7941" width="0.1009%" height="15" fill="rgb(220,133,28)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="7951.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="7925" width="0.1009%" height="15" fill="rgb(217,180,4)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="7935.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="7909" width="0.1009%" height="15" fill="rgb(251,24,1)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="7919.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="7893" width="0.1009%" height="15" fill="rgb(212,185,49)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="7903.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="7877" width="0.1009%" height="15" fill="rgb(215,175,22)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="7887.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="7861" width="0.1009%" height="15" fill="rgb(250,205,14)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="7871.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="7845" width="0.1009%" height="15" fill="rgb(225,211,22)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="7855.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="7829" width="0.1009%" height="15" fill="rgb(251,179,42)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="7839.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="7813" width="0.1009%" height="15" fill="rgb(208,216,51)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="7823.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="7797" width="0.1009%" height="15" fill="rgb(235,36,11)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="7807.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="7781" width="0.1009%" height="15" fill="rgb(213,189,28)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="7791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="7765" width="0.1009%" height="15" fill="rgb(227,203,42)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="7775.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="7749" width="0.1009%" height="15" fill="rgb(244,72,36)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="7759.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="7733" width="0.1009%" height="15" fill="rgb(213,53,17)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="7743.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="7717" width="0.1009%" height="15" fill="rgb(207,167,3)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="7727.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="7701" width="0.1009%" height="15" fill="rgb(216,98,30)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="7711.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="7685" width="0.1009%" height="15" fill="rgb(236,123,15)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="7695.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="7669" width="0.1009%" height="15" fill="rgb(248,81,50)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="7679.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="7653" width="0.1009%" height="15" fill="rgb(214,120,4)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="7663.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="7637" width="0.1009%" height="15" fill="rgb(208,179,34)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="7647.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="7621" width="0.1009%" height="15" fill="rgb(227,140,7)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="7631.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="7605" width="0.1009%" height="15" fill="rgb(214,22,6)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="7615.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="7589" width="0.1009%" height="15" fill="rgb(207,137,27)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="7599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="7573" width="0.1009%" height="15" fill="rgb(210,8,46)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="7583.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="7557" width="0.1009%" height="15" fill="rgb(240,16,54)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="7567.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="7541" width="0.1009%" height="15" fill="rgb(211,209,29)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="7551.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="7525" width="0.1009%" height="15" fill="rgb(226,228,24)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="7535.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="7509" width="0.1009%" height="15" fill="rgb(222,84,9)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="7519.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="7493" width="0.1009%" height="15" fill="rgb(234,203,30)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="7503.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="7477" width="0.1009%" height="15" fill="rgb(238,109,14)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="7487.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="7461" width="0.1009%" height="15" fill="rgb(233,206,34)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="7471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="7445" width="0.1009%" height="15" fill="rgb(220,167,47)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="7455.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="7429" width="0.1009%" height="15" fill="rgb(238,105,10)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="7439.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="7413" width="0.1009%" height="15" fill="rgb(213,227,17)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="7423.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="7397" width="0.1009%" height="15" fill="rgb(217,132,38)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="7407.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="7381" width="0.1009%" height="15" fill="rgb(242,146,4)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="7391.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="7365" width="0.1009%" height="15" fill="rgb(212,61,9)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="7375.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="7349" width="0.1009%" height="15" fill="rgb(247,126,22)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="7359.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="7333" width="0.1009%" height="15" fill="rgb(220,196,2)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="7343.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="7317" width="0.1009%" height="15" fill="rgb(208,46,4)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="7327.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="7301" width="0.1009%" height="15" fill="rgb(252,104,46)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="7311.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="7285" width="0.1009%" height="15" fill="rgb(237,152,48)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="7295.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="7269" width="0.1009%" height="15" fill="rgb(221,59,37)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="7279.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="7253" width="0.1009%" height="15" fill="rgb(209,202,51)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="7263.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="7237" width="0.1009%" height="15" fill="rgb(228,81,30)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="7247.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="7221" width="0.1009%" height="15" fill="rgb(227,42,39)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="7231.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="7205" width="0.1009%" height="15" fill="rgb(221,26,2)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="7215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="7189" width="0.1009%" height="15" fill="rgb(254,61,31)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="7199.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="7173" width="0.1009%" height="15" fill="rgb(222,173,38)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="7183.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="7157" width="0.1009%" height="15" fill="rgb(218,50,12)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="7167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="7141" width="0.1009%" height="15" fill="rgb(223,88,40)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="7151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="7125" width="0.1009%" height="15" fill="rgb(237,54,19)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="7135.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="7109" width="0.1009%" height="15" fill="rgb(251,129,25)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="7119.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="7093" width="0.1009%" height="15" fill="rgb(238,97,19)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="7103.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="7077" width="0.1009%" height="15" fill="rgb(240,169,18)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="7087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="7061" width="0.1009%" height="15" fill="rgb(230,187,49)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="7071.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="7045" width="0.1009%" height="15" fill="rgb(209,44,26)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="7055.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="7029" width="0.1009%" height="15" fill="rgb(244,0,6)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="7039.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="7013" width="0.1009%" height="15" fill="rgb(248,18,21)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="7023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="6997" width="0.1009%" height="15" fill="rgb(245,180,19)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="7007.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="6981" width="0.1009%" height="15" fill="rgb(252,118,36)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="6991.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="6965" width="0.1009%" height="15" fill="rgb(210,224,19)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="6975.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="6949" width="0.1009%" height="15" fill="rgb(218,30,24)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="6959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="6933" width="0.1009%" height="15" fill="rgb(219,75,50)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="6943.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="6917" width="0.1009%" height="15" fill="rgb(234,72,50)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="6927.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="6901" width="0.1009%" height="15" fill="rgb(219,100,48)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="6911.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="6885" width="0.1009%" height="15" fill="rgb(253,5,41)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="6895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="6869" width="0.1009%" height="15" fill="rgb(247,181,11)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="6879.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="6853" width="0.1009%" height="15" fill="rgb(222,223,25)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="6863.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="6837" width="0.1009%" height="15" fill="rgb(214,198,28)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="6847.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="6821" width="0.1009%" height="15" fill="rgb(230,46,43)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="6831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="6805" width="0.1009%" height="15" fill="rgb(233,65,53)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="6815.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="6789" width="0.1009%" height="15" fill="rgb(221,121,27)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="6799.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="6773" width="0.1009%" height="15" fill="rgb(247,70,47)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="6783.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="6757" width="0.1009%" height="15" fill="rgb(228,85,35)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="6767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="6741" width="0.1009%" height="15" fill="rgb(209,50,18)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="6751.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="6725" width="0.1009%" height="15" fill="rgb(250,19,35)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="6735.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="6709" width="0.1009%" height="15" fill="rgb(253,107,29)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="6719.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="6693" width="0.1009%" height="15" fill="rgb(252,179,29)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="6703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="6677" width="0.1009%" height="15" fill="rgb(238,194,6)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="6687.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="6661" width="0.1009%" height="15" fill="rgb(238,164,29)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="6671.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="6645" width="0.1009%" height="15" fill="rgb(224,25,9)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="6655.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="6629" width="0.1009%" height="15" fill="rgb(244,153,23)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="6639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="6613" width="0.1009%" height="15" fill="rgb(212,203,14)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="6623.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="6597" width="0.1009%" height="15" fill="rgb(220,164,20)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="6607.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="6581" width="0.1009%" height="15" fill="rgb(222,203,48)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="6591.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="6565" width="0.1009%" height="15" fill="rgb(215,159,22)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="6575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="6549" width="0.1009%" height="15" fill="rgb(216,183,47)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="6559.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="6533" width="0.1009%" height="15" fill="rgb(229,195,25)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="6543.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="6517" width="0.1009%" height="15" fill="rgb(224,132,51)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="6527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="6501" width="0.1009%" height="15" fill="rgb(240,63,7)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="6511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="6485" width="0.1009%" height="15" fill="rgb(249,182,41)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="6495.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="6469" width="0.1009%" height="15" fill="rgb(243,47,26)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="6479.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="6453" width="0.1009%" height="15" fill="rgb(233,48,2)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="6463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="6437" width="0.1009%" height="15" fill="rgb(244,165,34)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="6447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="6421" width="0.1009%" height="15" fill="rgb(207,89,7)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="6431.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="6405" width="0.1009%" height="15" fill="rgb(244,117,36)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="6415.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="6389" width="0.1009%" height="15" fill="rgb(226,144,34)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="6399.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="6373" width="0.1009%" height="15" fill="rgb(213,23,19)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="6383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="6357" width="0.1009%" height="15" fill="rgb(217,75,12)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="6367.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="6341" width="0.1009%" height="15" fill="rgb(224,159,17)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="6351.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="6325" width="0.1009%" height="15" fill="rgb(217,118,1)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="6335.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="6309" width="0.1009%" height="15" fill="rgb(232,180,48)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="6319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="6293" width="0.1009%" height="15" fill="rgb(230,27,33)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="6303.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="6277" width="0.1009%" height="15" fill="rgb(205,31,21)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="6287.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="6261" width="0.1009%" height="15" fill="rgb(253,59,4)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="6271.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="6245" width="0.1009%" height="15" fill="rgb(224,201,9)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="6255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="6229" width="0.1009%" height="15" fill="rgb(229,206,30)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="6239.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="6213" width="0.1009%" height="15" fill="rgb(212,67,47)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="6223.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="6197" width="0.1009%" height="15" fill="rgb(211,96,50)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="6207.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="6181" width="0.1009%" height="15" fill="rgb(252,114,18)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="6191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="6165" width="0.1009%" height="15" fill="rgb(223,58,37)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="6175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="6149" width="0.1009%" height="15" fill="rgb(237,70,4)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="6159.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="6133" width="0.1009%" height="15" fill="rgb(244,85,46)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="6143.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="6117" width="0.1009%" height="15" fill="rgb(223,39,52)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="6127.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="6101" width="0.1009%" height="15" fill="rgb(218,200,14)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="6111.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="6085" width="0.1009%" height="15" fill="rgb(208,171,16)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="6095.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="6069" width="0.1009%" height="15" fill="rgb(234,200,18)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="6079.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="6053" width="0.1009%" height="15" fill="rgb(228,45,11)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="6063.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="6037" width="0.1009%" height="15" fill="rgb(237,182,11)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="6047.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="6021" width="0.1009%" height="15" fill="rgb(241,175,49)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="6031.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="6005" width="0.1009%" height="15" fill="rgb(247,38,35)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="6015.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="5989" width="0.1009%" height="15" fill="rgb(228,39,49)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="5999.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="5973" width="0.1009%" height="15" fill="rgb(226,101,26)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="5983.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="5957" width="0.1009%" height="15" fill="rgb(206,141,19)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="5967.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="5941" width="0.1009%" height="15" fill="rgb(211,200,13)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="5951.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="5925" width="0.1009%" height="15" fill="rgb(241,121,6)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="5935.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="5909" width="0.1009%" height="15" fill="rgb(234,221,29)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="5919.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="5893" width="0.1009%" height="15" fill="rgb(229,136,5)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="5903.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="5877" width="0.1009%" height="15" fill="rgb(238,36,11)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="5887.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="5861" width="0.1009%" height="15" fill="rgb(251,55,41)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="5871.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="5845" width="0.1009%" height="15" fill="rgb(242,34,40)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="5855.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="5829" width="0.1009%" height="15" fill="rgb(215,42,17)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="5839.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="5813" width="0.1009%" height="15" fill="rgb(207,44,46)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="5823.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="5797" width="0.1009%" height="15" fill="rgb(211,206,28)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="5807.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="5781" width="0.1009%" height="15" fill="rgb(237,167,16)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="5791.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="5765" width="0.1009%" height="15" fill="rgb(233,66,6)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="5775.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="5749" width="0.1009%" height="15" fill="rgb(246,123,29)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="5759.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="5733" width="0.1009%" height="15" fill="rgb(209,62,40)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="5743.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="5717" width="0.1009%" height="15" fill="rgb(218,4,25)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="5727.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="5701" width="0.1009%" height="15" fill="rgb(253,91,49)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="5711.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="5685" width="0.1009%" height="15" fill="rgb(228,155,29)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="5695.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="5669" width="0.1009%" height="15" fill="rgb(243,57,37)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="5679.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="5653" width="0.1009%" height="15" fill="rgb(244,167,17)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="5663.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="5637" width="0.1009%" height="15" fill="rgb(207,181,38)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="5647.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="5621" width="0.1009%" height="15" fill="rgb(211,8,23)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="5631.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="5605" width="0.1009%" height="15" fill="rgb(235,11,44)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="5615.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="5589" width="0.1009%" height="15" fill="rgb(248,18,52)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="5599.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="5573" width="0.1009%" height="15" fill="rgb(208,4,7)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="5583.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="5557" width="0.1009%" height="15" fill="rgb(240,17,39)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="5567.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="5541" width="0.1009%" height="15" fill="rgb(207,170,3)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="5551.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="5525" width="0.1009%" height="15" fill="rgb(236,100,52)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="5535.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="5509" width="0.1009%" height="15" fill="rgb(246,78,51)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="5519.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="5493" width="0.1009%" height="15" fill="rgb(211,17,15)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="5503.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="5477" width="0.1009%" height="15" fill="rgb(209,59,46)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="5487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="5461" width="0.1009%" height="15" fill="rgb(210,92,25)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="5471.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="5445" width="0.1009%" height="15" fill="rgb(238,174,52)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="5455.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="5429" width="0.1009%" height="15" fill="rgb(230,73,7)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="5439.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="5413" width="0.1009%" height="15" fill="rgb(243,124,40)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="5423.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="5397" width="0.1009%" height="15" fill="rgb(244,170,11)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="5407.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="5381" width="0.1009%" height="15" fill="rgb(207,114,54)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="5391.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="5365" width="0.1009%" height="15" fill="rgb(205,42,20)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="5375.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="5349" width="0.1009%" height="15" fill="rgb(230,30,28)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="5359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="5333" width="0.1009%" height="15" fill="rgb(205,73,54)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="5343.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="5317" width="0.1009%" height="15" fill="rgb(254,227,23)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="5327.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="5301" width="0.1009%" height="15" fill="rgb(228,202,34)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="5311.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="5285" width="0.1009%" height="15" fill="rgb(222,225,37)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="5295.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="5269" width="0.1009%" height="15" fill="rgb(221,14,54)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="5279.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="5253" width="0.1009%" height="15" fill="rgb(254,102,2)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="5263.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="5237" width="0.1009%" height="15" fill="rgb(232,104,17)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="5247.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="5221" width="0.1009%" height="15" fill="rgb(250,220,14)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="5231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="5205" width="0.1009%" height="15" fill="rgb(241,158,9)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="5215.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="5189" width="0.1009%" height="15" fill="rgb(246,9,43)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="5199.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="5173" width="0.1009%" height="15" fill="rgb(206,73,33)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="5183.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="5157" width="0.1009%" height="15" fill="rgb(222,79,8)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="5167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="5141" width="0.1009%" height="15" fill="rgb(234,8,54)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="5151.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="5125" width="0.1009%" height="15" fill="rgb(209,134,38)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="5135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="5109" width="0.1009%" height="15" fill="rgb(230,127,29)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="5119.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="5093" width="0.1009%" height="15" fill="rgb(242,44,41)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="5103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="5077" width="0.1009%" height="15" fill="rgb(222,56,43)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="5087.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="5061" width="0.1009%" height="15" fill="rgb(238,39,47)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="5071.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="5045" width="0.1009%" height="15" fill="rgb(226,79,43)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="5055.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="5029" width="0.1009%" height="15" fill="rgb(242,105,53)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="5039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="5013" width="0.1009%" height="15" fill="rgb(251,132,46)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="5023.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="4997" width="0.1009%" height="15" fill="rgb(231,77,14)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="5007.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="4981" width="0.1009%" height="15" fill="rgb(240,135,9)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="4991.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="4965" width="0.1009%" height="15" fill="rgb(248,109,14)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="4975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="4949" width="0.1009%" height="15" fill="rgb(227,146,52)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="4959.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="4933" width="0.1009%" height="15" fill="rgb(232,54,3)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="4943.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="4917" width="0.1009%" height="15" fill="rgb(229,201,43)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="4927.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="4901" width="0.1009%" height="15" fill="rgb(252,161,33)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="4911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="4885" width="0.1009%" height="15" fill="rgb(226,146,40)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="4895.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="4869" width="0.1009%" height="15" fill="rgb(219,47,25)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="4879.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="4853" width="0.1009%" height="15" fill="rgb(250,135,13)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="4863.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="4837" width="0.1009%" height="15" fill="rgb(219,229,18)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="4847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="4821" width="0.1009%" height="15" fill="rgb(217,152,27)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="4831.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="4805" width="0.1009%" height="15" fill="rgb(225,71,47)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="4815.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="4789" width="0.1009%" height="15" fill="rgb(220,139,14)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="4799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="4773" width="0.1009%" height="15" fill="rgb(247,54,32)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="4783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="4757" width="0.1009%" height="15" fill="rgb(252,131,39)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="4767.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="4741" width="0.1009%" height="15" fill="rgb(210,108,39)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="4751.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="4725" width="0.1009%" height="15" fill="rgb(205,23,29)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="4735.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="4709" width="0.1009%" height="15" fill="rgb(246,139,46)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="4719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="4693" width="0.1009%" height="15" fill="rgb(250,81,26)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="4703.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="4677" width="0.1009%" height="15" fill="rgb(214,104,7)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="4687.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="4661" width="0.1009%" height="15" fill="rgb(233,189,8)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="4671.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="4645" width="0.1009%" height="15" fill="rgb(228,141,17)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="4655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="4629" width="0.1009%" height="15" fill="rgb(247,157,1)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="4639.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="4613" width="0.1009%" height="15" fill="rgb(249,225,5)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="4623.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="4597" width="0.1009%" height="15" fill="rgb(242,55,13)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="4607.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="4581" width="0.1009%" height="15" fill="rgb(230,49,50)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="4591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="4565" width="0.1009%" height="15" fill="rgb(241,111,38)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="4575.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="4549" width="0.1009%" height="15" fill="rgb(252,155,4)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="4559.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="4533" width="0.1009%" height="15" fill="rgb(212,69,32)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="4543.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="4517" width="0.1009%" height="15" fill="rgb(243,107,47)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="4527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="4501" width="0.1009%" height="15" fill="rgb(247,130,12)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="4511.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="4485" width="0.1009%" height="15" fill="rgb(233,74,16)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="4495.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="4469" width="0.1009%" height="15" fill="rgb(208,58,18)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="4479.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="4453" width="0.1009%" height="15" fill="rgb(242,225,1)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="4463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="4437" width="0.1009%" height="15" fill="rgb(249,39,40)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="4447.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="4421" width="0.1009%" height="15" fill="rgb(207,72,44)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="4431.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="4405" width="0.1009%" height="15" fill="rgb(215,193,12)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="4415.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="4389" width="0.1009%" height="15" fill="rgb(248,41,39)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="4399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="4373" width="0.1009%" height="15" fill="rgb(253,85,4)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="4383.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="4357" width="0.1009%" height="15" fill="rgb(243,70,31)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="4367.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="4341" width="0.1009%" height="15" fill="rgb(253,195,26)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="4351.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="4325" width="0.1009%" height="15" fill="rgb(243,42,11)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="4335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="4309" width="0.1009%" height="15" fill="rgb(239,66,17)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="4319.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="4293" width="0.1009%" height="15" fill="rgb(217,132,21)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="4303.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="4277" width="0.1009%" height="15" fill="rgb(252,202,21)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="4287.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="4261" width="0.1009%" height="15" fill="rgb(233,98,36)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="4271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="4245" width="0.1009%" height="15" fill="rgb(216,153,54)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="4255.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="4229" width="0.1009%" height="15" fill="rgb(250,99,7)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="4239.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="4213" width="0.1009%" height="15" fill="rgb(207,56,50)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="4223.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="4197" width="0.1009%" height="15" fill="rgb(244,61,34)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="4207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="4181" width="0.1009%" height="15" fill="rgb(241,50,38)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="4191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="4165" width="0.1009%" height="15" fill="rgb(212,166,30)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="4175.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="4149" width="0.1009%" height="15" fill="rgb(249,127,32)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="4159.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="4133" width="0.1009%" height="15" fill="rgb(209,103,0)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="4143.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="4117" width="0.1009%" height="15" fill="rgb(238,209,51)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="4127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="4101" width="0.1009%" height="15" fill="rgb(237,56,23)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="4111.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="4085" width="0.1009%" height="15" fill="rgb(215,153,46)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="4095.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="4069" width="0.1009%" height="15" fill="rgb(224,49,31)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="4079.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="4053" width="0.1009%" height="15" fill="rgb(250,18,42)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="4063.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="4037" width="0.1009%" height="15" fill="rgb(215,176,39)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="4047.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="4021" width="0.1009%" height="15" fill="rgb(223,77,29)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="4031.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="4005" width="0.1009%" height="15" fill="rgb(234,94,52)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="4015.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="3989" width="0.1009%" height="15" fill="rgb(220,154,50)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="3999.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="3973" width="0.1009%" height="15" fill="rgb(212,11,10)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="3983.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="3957" width="0.1009%" height="15" fill="rgb(205,166,19)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="3967.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="3941" width="0.1009%" height="15" fill="rgb(244,198,16)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="3951.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="3925" width="0.1009%" height="15" fill="rgb(219,69,12)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="3935.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="3909" width="0.1009%" height="15" fill="rgb(245,30,7)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="3919.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="3893" width="0.1009%" height="15" fill="rgb(218,221,48)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="3903.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="3877" width="0.1009%" height="15" fill="rgb(216,66,15)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="3887.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="3861" width="0.1009%" height="15" fill="rgb(226,122,50)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="3871.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="3845" width="0.1009%" height="15" fill="rgb(239,156,16)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="3855.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="3829" width="0.1009%" height="15" fill="rgb(224,27,38)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="3839.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="3813" width="0.1009%" height="15" fill="rgb(224,39,27)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="3823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="3797" width="0.1009%" height="15" fill="rgb(215,92,29)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="3807.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="3781" width="0.1009%" height="15" fill="rgb(207,159,16)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="3791.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="3765" width="0.1009%" height="15" fill="rgb(238,163,47)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="3775.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="3749" width="0.1009%" height="15" fill="rgb(219,91,49)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="3759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="3733" width="0.1009%" height="15" fill="rgb(227,167,31)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="3743.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="3717" width="0.1009%" height="15" fill="rgb(234,80,54)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="3727.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="3701" width="0.1009%" height="15" fill="rgb(212,114,2)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="3711.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="3685" width="0.1009%" height="15" fill="rgb(234,50,24)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="3695.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="3669" width="0.1009%" height="15" fill="rgb(221,68,8)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="3679.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="3653" width="0.1009%" height="15" fill="rgb(254,180,31)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="3663.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="3637" width="0.1009%" height="15" fill="rgb(247,130,50)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="3647.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="3621" width="0.1009%" height="15" fill="rgb(211,109,4)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="3631.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="3605" width="0.1009%" height="15" fill="rgb(238,50,21)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="3615.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="3589" width="0.1009%" height="15" fill="rgb(225,57,45)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="3599.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="3573" width="0.1009%" height="15" fill="rgb(209,196,50)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="3583.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="3557" width="0.1009%" height="15" fill="rgb(242,140,13)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="3567.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="3541" width="0.1009%" height="15" fill="rgb(217,111,7)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="3551.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="3525" width="0.1009%" height="15" fill="rgb(253,193,51)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="3535.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="3509" width="0.1009%" height="15" fill="rgb(252,70,29)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="3519.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="3493" width="0.1009%" height="15" fill="rgb(232,127,12)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="3503.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="3477" width="0.1009%" height="15" fill="rgb(211,180,21)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="3487.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="3461" width="0.1009%" height="15" fill="rgb(229,72,13)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="3471.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="3445" width="0.1009%" height="15" fill="rgb(240,211,49)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="3455.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="3429" width="0.1009%" height="15" fill="rgb(219,149,40)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="3439.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="3413" width="0.1009%" height="15" fill="rgb(210,127,46)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="3423.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="3397" width="0.1009%" height="15" fill="rgb(220,106,7)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="3407.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="3381" width="0.1009%" height="15" fill="rgb(249,31,22)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="3391.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="3365" width="0.1009%" height="15" fill="rgb(253,1,49)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="3375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="3349" width="0.1009%" height="15" fill="rgb(227,144,33)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="3359.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="3333" width="0.1009%" height="15" fill="rgb(249,163,44)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="3343.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="3317" width="0.1009%" height="15" fill="rgb(234,15,39)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="3327.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="3301" width="0.1009%" height="15" fill="rgb(207,66,16)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="3311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="3285" width="0.1009%" height="15" fill="rgb(233,112,24)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="3295.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="3269" width="0.1009%" height="15" fill="rgb(230,90,22)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="3279.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="3253" width="0.1009%" height="15" fill="rgb(229,61,13)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="3263.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="3237" width="0.1009%" height="15" fill="rgb(225,57,24)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="3247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="3221" width="0.1009%" height="15" fill="rgb(208,169,48)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="3231.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="3205" width="0.1009%" height="15" fill="rgb(244,218,51)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="3215.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="3189" width="0.1009%" height="15" fill="rgb(214,148,10)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="3199.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="3173" width="0.1009%" height="15" fill="rgb(225,174,27)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="3183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="3157" width="0.1009%" height="15" fill="rgb(230,96,26)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="3167.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="3141" width="0.1009%" height="15" fill="rgb(232,10,30)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="3151.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="3125" width="0.1009%" height="15" fill="rgb(222,8,50)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="3135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="3109" width="0.1009%" height="15" fill="rgb(213,81,27)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="3119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="3093" width="0.1009%" height="15" fill="rgb(245,50,10)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="3103.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="3077" width="0.1009%" height="15" fill="rgb(216,100,18)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="3087.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="3061" width="0.1009%" height="15" fill="rgb(236,147,54)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="3071.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="3045" width="0.1009%" height="15" fill="rgb(205,143,26)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="3055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="3029" width="0.1009%" height="15" fill="rgb(236,26,9)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="3039.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="3013" width="0.1009%" height="15" fill="rgb(221,165,53)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="3023.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="2997" width="0.1009%" height="15" fill="rgb(214,110,17)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="3007.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="2981" width="0.1009%" height="15" fill="rgb(237,197,12)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="2991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="2965" width="0.1009%" height="15" fill="rgb(205,84,17)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="2975.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="2949" width="0.1009%" height="15" fill="rgb(237,18,45)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="2959.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="2933" width="0.1009%" height="15" fill="rgb(221,87,14)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="2943.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="2917" width="0.1009%" height="15" fill="rgb(238,186,15)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="2927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="2901" width="0.1009%" height="15" fill="rgb(208,115,11)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="2911.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="2885" width="0.1009%" height="15" fill="rgb(254,175,0)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="2895.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="2869" width="0.1009%" height="15" fill="rgb(227,24,42)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="2879.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="2853" width="0.1009%" height="15" fill="rgb(223,211,37)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="2863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="2837" width="0.1009%" height="15" fill="rgb(235,49,27)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="2847.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="2821" width="0.1009%" height="15" fill="rgb(254,97,51)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="2831.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="2805" width="0.1009%" height="15" fill="rgb(249,51,40)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="2815.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="2789" width="0.1009%" height="15" fill="rgb(210,128,45)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="2799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="2773" width="0.1009%" height="15" fill="rgb(224,137,50)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="2783.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="2757" width="0.1009%" height="15" fill="rgb(242,15,9)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="2767.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="2741" width="0.1009%" height="15" fill="rgb(233,187,41)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="2751.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="2725" width="0.1009%" height="15" fill="rgb(227,2,29)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="2735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="2709" width="0.1009%" height="15" fill="rgb(222,70,3)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="2719.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="2693" width="0.1009%" height="15" fill="rgb(213,11,42)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="2703.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="2677" width="0.1009%" height="15" fill="rgb(225,150,9)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="2687.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="2661" width="0.1009%" height="15" fill="rgb(230,162,45)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="2671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="2645" width="0.1009%" height="15" fill="rgb(222,14,52)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="2655.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="2629" width="0.1009%" height="15" fill="rgb(254,198,14)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="2639.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="2613" width="0.1009%" height="15" fill="rgb(220,217,30)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="2623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="2597" width="0.1009%" height="15" fill="rgb(215,146,41)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="2607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="2581" width="0.1009%" height="15" fill="rgb(217,27,36)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="2591.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="2565" width="0.1009%" height="15" fill="rgb(219,218,39)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="2575.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="2549" width="0.1009%" height="15" fill="rgb(219,4,42)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="2559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="2533" width="0.1009%" height="15" fill="rgb(249,119,36)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="2543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="2517" width="0.1009%" height="15" fill="rgb(209,23,33)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="2527.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="2501" width="0.1009%" height="15" fill="rgb(211,10,0)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="2511.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="2485" width="0.1009%" height="15" fill="rgb(208,99,37)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="2495.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="2469" width="0.1009%" height="15" fill="rgb(213,132,31)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="2479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="2453" width="0.1009%" height="15" fill="rgb(243,129,40)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="2463.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="2437" width="0.1009%" height="15" fill="rgb(210,66,33)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="2447.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="2421" width="0.1009%" height="15" fill="rgb(209,189,4)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="2431.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="2405" width="0.1009%" height="15" fill="rgb(214,107,37)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="2415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="2389" width="0.1009%" height="15" fill="rgb(245,88,54)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="2399.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="2373" width="0.1009%" height="15" fill="rgb(205,146,20)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="2383.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="2357" width="0.1009%" height="15" fill="rgb(220,161,25)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="2367.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="2341" width="0.1009%" height="15" fill="rgb(215,152,15)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="2351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="2325" width="0.1009%" height="15" fill="rgb(233,192,44)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="2335.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="2309" width="0.1009%" height="15" fill="rgb(240,170,46)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="2319.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="2293" width="0.1009%" height="15" fill="rgb(207,104,33)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="2303.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="2277" width="0.1009%" height="15" fill="rgb(219,21,39)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="2287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="2261" width="0.1009%" height="15" fill="rgb(214,133,29)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="2271.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="2245" width="0.1009%" height="15" fill="rgb(226,93,6)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="2255.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="2229" width="0.1009%" height="15" fill="rgb(252,222,34)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="2239.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="2213" width="0.1009%" height="15" fill="rgb(252,92,48)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="2223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="2197" width="0.1009%" height="15" fill="rgb(245,223,24)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="2207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="2181" width="0.1009%" height="15" fill="rgb(205,176,3)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="2191.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="2165" width="0.1009%" height="15" fill="rgb(235,151,15)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="2175.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="2149" width="0.1009%" height="15" fill="rgb(237,209,11)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="2159.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="2133" width="0.1009%" height="15" fill="rgb(243,227,24)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="2143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="2117" width="0.1009%" height="15" fill="rgb(239,193,16)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="2127.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="2101" width="0.1009%" height="15" fill="rgb(231,27,9)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="2111.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="2085" width="0.1009%" height="15" fill="rgb(219,169,10)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="2095.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="2069" width="0.1009%" height="15" fill="rgb(244,229,43)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="2079.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="2053" width="0.1009%" height="15" fill="rgb(254,38,20)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="2063.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="2037" width="0.1009%" height="15" fill="rgb(250,47,30)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="2047.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="2021" width="0.1009%" height="15" fill="rgb(224,124,36)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="2031.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="2005" width="0.1009%" height="15" fill="rgb(246,68,51)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="2015.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="1989" width="0.1009%" height="15" fill="rgb(253,43,49)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="1999.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="1973" width="0.1009%" height="15" fill="rgb(219,54,36)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="1957" width="0.1009%" height="15" fill="rgb(227,133,34)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="1967.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="1941" width="0.1009%" height="15" fill="rgb(247,227,15)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="1951.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="1925" width="0.1009%" height="15" fill="rgb(229,96,14)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="1935.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="1909" width="0.1009%" height="15" fill="rgb(220,79,17)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="1893" width="0.1009%" height="15" fill="rgb(205,131,53)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="1877" width="0.1009%" height="15" fill="rgb(209,50,29)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="1887.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="1861" width="0.1009%" height="15" fill="rgb(245,86,46)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="1845" width="0.1009%" height="15" fill="rgb(235,66,46)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="1829" width="0.1009%" height="15" fill="rgb(232,148,31)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="1813" width="0.1009%" height="15" fill="rgb(217,149,8)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="1823.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="1797" width="0.1009%" height="15" fill="rgb(209,183,11)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="1781" width="0.1009%" height="15" fill="rgb(208,55,20)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="1765" width="0.1009%" height="15" fill="rgb(218,39,14)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="1749" width="0.1009%" height="15" fill="rgb(216,169,33)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="1759.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="1733" width="0.1009%" height="15" fill="rgb(233,80,24)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="1717" width="0.1009%" height="15" fill="rgb(213,179,31)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="1701" width="0.1009%" height="15" fill="rgb(209,19,5)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="1685" width="0.1009%" height="15" fill="rgb(219,18,35)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="1695.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="1669" width="0.1009%" height="15" fill="rgb(209,169,16)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="1653" width="0.1009%" height="15" fill="rgb(245,90,51)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="1637" width="0.1009%" height="15" fill="rgb(220,99,45)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="1621" width="0.1009%" height="15" fill="rgb(249,89,25)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="1631.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="1605" width="0.1009%" height="15" fill="rgb(239,193,0)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="1589" width="0.1009%" height="15" fill="rgb(231,126,1)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="1573" width="0.1009%" height="15" fill="rgb(243,166,3)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="1557" width="0.1009%" height="15" fill="rgb(223,22,34)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="1567.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="1541" width="0.1009%" height="15" fill="rgb(251,52,51)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="1525" width="0.1009%" height="15" fill="rgb(221,165,28)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="1509" width="0.1009%" height="15" fill="rgb(218,121,47)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="1493" width="0.1009%" height="15" fill="rgb(209,120,9)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="1503.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="1477" width="0.1009%" height="15" fill="rgb(236,68,12)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="1461" width="0.1009%" height="15" fill="rgb(225,194,26)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="1445" width="0.1009%" height="15" fill="rgb(231,84,39)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="1429" width="0.1009%" height="15" fill="rgb(210,11,45)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="1439.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="1413" width="0.1009%" height="15" fill="rgb(224,54,52)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="1397" width="0.1009%" height="15" fill="rgb(238,102,14)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="1381" width="0.1009%" height="15" fill="rgb(243,160,52)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="1365" width="0.1009%" height="15" fill="rgb(216,114,19)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="1375.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="1349" width="0.1009%" height="15" fill="rgb(244,166,37)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="1333" width="0.1009%" height="15" fill="rgb(246,29,44)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="1317" width="0.1009%" height="15" fill="rgb(215,56,53)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="1301" width="0.1009%" height="15" fill="rgb(217,60,2)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="1311.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="1285" width="0.1009%" height="15" fill="rgb(207,26,24)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="1269" width="0.1009%" height="15" fill="rgb(252,210,15)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="1253" width="0.1009%" height="15" fill="rgb(253,209,26)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="1237" width="0.1009%" height="15" fill="rgb(238,170,14)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="1247.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="1221" width="0.1009%" height="15" fill="rgb(216,178,15)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="1205" width="0.1009%" height="15" fill="rgb(250,197,2)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="1189" width="0.1009%" height="15" fill="rgb(212,70,42)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="1173" width="0.1009%" height="15" fill="rgb(227,213,9)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="1183.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="1157" width="0.1009%" height="15" fill="rgb(245,99,25)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="1141" width="0.1009%" height="15" fill="rgb(250,82,29)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="1125" width="0.1009%" height="15" fill="rgb(241,226,54)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="1109" width="0.1009%" height="15" fill="rgb(221,99,41)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="1119.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="1093" width="0.1009%" height="15" fill="rgb(213,90,21)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="1077" width="0.1009%" height="15" fill="rgb(205,208,24)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="1061" width="0.1009%" height="15" fill="rgb(246,31,12)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="1045" width="0.1009%" height="15" fill="rgb(213,154,6)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="1055.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="1029" width="0.1009%" height="15" fill="rgb(222,163,29)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="1013" width="0.1009%" height="15" fill="rgb(227,201,8)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="997" width="0.1009%" height="15" fill="rgb(233,9,32)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="981" width="0.1009%" height="15" fill="rgb(217,54,24)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="991.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="965" width="0.1009%" height="15" fill="rgb(235,192,0)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="949" width="0.1009%" height="15" fill="rgb(235,45,9)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="933" width="0.1009%" height="15" fill="rgb(246,42,40)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="917" width="0.1009%" height="15" fill="rgb(248,111,24)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="927.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="901" width="0.1009%" height="15" fill="rgb(249,65,22)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="885" width="0.1009%" height="15" fill="rgb(238,111,51)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="869" width="0.1009%" height="15" fill="rgb(250,118,22)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="853" width="0.1009%" height="15" fill="rgb(234,84,26)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="863.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="837" width="0.1009%" height="15" fill="rgb(243,172,12)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="821" width="0.1009%" height="15" fill="rgb(236,150,49)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="805" width="0.1009%" height="15" fill="rgb(225,197,26)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="789" width="0.1009%" height="15" fill="rgb(214,17,42)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="799.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="773" width="0.1009%" height="15" fill="rgb(224,165,40)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="757" width="0.1009%" height="15" fill="rgb(246,100,4)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="741" width="0.1009%" height="15" fill="rgb(222,103,0)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="725" width="0.1009%" height="15" fill="rgb(227,189,26)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="735.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="709" width="0.1009%" height="15" fill="rgb(214,202,17)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="693" width="0.1009%" height="15" fill="rgb(229,111,3)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="677" width="0.1009%" height="15" fill="rgb(229,172,15)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="661" width="0.1009%" height="15" fill="rgb(230,224,35)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="671.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="645" width="0.1009%" height="15" fill="rgb(251,141,6)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="629" width="0.1009%" height="15" fill="rgb(225,208,6)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="613" width="0.1009%" height="15" fill="rgb(246,181,16)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="597" width="0.1009%" height="15" fill="rgb(227,129,36)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="607.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="581" width="0.1009%" height="15" fill="rgb(248,117,24)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="565" width="0.1009%" height="15" fill="rgb(214,185,35)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="549" width="0.1009%" height="15" fill="rgb(236,150,34)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="533" width="0.1009%" height="15" fill="rgb(243,228,27)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="543.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="517" width="0.1009%" height="15" fill="rgb(245,77,44)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="501" width="0.1009%" height="15" fill="rgb(235,214,42)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="485" width="0.1009%" height="15" fill="rgb(221,74,3)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="469" width="0.1009%" height="15" fill="rgb(206,121,29)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="479.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="99.8991%" y="453" width="0.1009%" height="15" fill="rgb(249,131,53)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (33 samples, 0.10%)</title><rect x="99.8991%" y="437" width="0.1009%" height="15" fill="rgb(236,170,29)" fg:x="32680" fg:w="33"/><text x="100.1491%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (32 samples, 0.10%)</title><rect x="99.9022%" y="421" width="0.0978%" height="15" fill="rgb(247,96,15)" fg:x="32681" fg:w="32"/><text x="100.1522%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (32 samples, 0.10%)</title><rect x="99.9022%" y="405" width="0.0978%" height="15" fill="rgb(211,210,7)" fg:x="32681" fg:w="32"/><text x="100.1522%" y="415.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 0.10%)</title><rect x="99.9022%" y="389" width="0.0978%" height="15" fill="rgb(240,88,50)" fg:x="32681" fg:w="32"/><text x="100.1522%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (32 samples, 0.10%)</title><rect x="99.9022%" y="373" width="0.0978%" height="15" fill="rgb(209,229,26)" fg:x="32681" fg:w="32"/><text x="100.1522%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (31 samples, 0.09%)</title><rect x="99.9052%" y="357" width="0.0948%" height="15" fill="rgb(210,68,23)" fg:x="32682" fg:w="31"/><text x="100.1552%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (31 samples, 0.09%)</title><rect x="99.9052%" y="341" width="0.0948%" height="15" fill="rgb(229,180,13)" fg:x="32682" fg:w="31"/><text x="100.1552%" y="351.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.09%)</title><rect x="99.9052%" y="325" width="0.0948%" height="15" fill="rgb(236,53,44)" fg:x="32682" fg:w="31"/><text x="100.1552%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (31 samples, 0.09%)</title><rect x="99.9052%" y="309" width="0.0948%" height="15" fill="rgb(244,214,29)" fg:x="32682" fg:w="31"/><text x="100.1552%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (31 samples, 0.09%)</title><rect x="99.9052%" y="293" width="0.0948%" height="15" fill="rgb(220,75,29)" fg:x="32682" fg:w="31"/><text x="100.1552%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (31 samples, 0.09%)</title><rect x="99.9052%" y="277" width="0.0948%" height="15" fill="rgb(214,183,37)" fg:x="32682" fg:w="31"/><text x="100.1552%" y="287.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.09%)</title><rect x="99.9052%" y="261" width="0.0948%" height="15" fill="rgb(239,117,29)" fg:x="32682" fg:w="31"/><text x="100.1552%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (31 samples, 0.09%)</title><rect x="99.9052%" y="245" width="0.0948%" height="15" fill="rgb(237,171,35)" fg:x="32682" fg:w="31"/><text x="100.1552%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (20 samples, 0.06%)</title><rect x="99.9389%" y="229" width="0.0611%" height="15" fill="rgb(229,178,53)" fg:x="32693" fg:w="20"/><text x="100.1889%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (20 samples, 0.06%)</title><rect x="99.9389%" y="213" width="0.0611%" height="15" fill="rgb(210,102,19)" fg:x="32693" fg:w="20"/><text x="100.1889%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.06%)</title><rect x="99.9389%" y="197" width="0.0611%" height="15" fill="rgb(235,127,22)" fg:x="32693" fg:w="20"/><text x="100.1889%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (17 samples, 0.05%)</title><rect x="99.9480%" y="181" width="0.0520%" height="15" fill="rgb(244,31,31)" fg:x="32696" fg:w="17"/><text x="100.1980%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (10 samples, 0.03%)</title><rect x="99.9694%" y="165" width="0.0306%" height="15" fill="rgb(231,43,21)" fg:x="32703" fg:w="10"/><text x="100.2194%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (10 samples, 0.03%)</title><rect x="99.9694%" y="149" width="0.0306%" height="15" fill="rgb(217,131,35)" fg:x="32703" fg:w="10"/><text x="100.2194%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.03%)</title><rect x="99.9694%" y="133" width="0.0306%" height="15" fill="rgb(221,149,4)" fg:x="32703" fg:w="10"/><text x="100.2194%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (8 samples, 0.02%)</title><rect x="99.9755%" y="117" width="0.0245%" height="15" fill="rgb(232,170,28)" fg:x="32705" fg:w="8"/><text x="100.2255%" y="127.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (6 samples, 0.02%)</title><rect x="99.9817%" y="101" width="0.0183%" height="15" fill="rgb(238,56,10)" fg:x="32707" fg:w="6"/><text x="100.2317%" y="111.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (5 samples, 0.02%)</title><rect x="99.9847%" y="85" width="0.0153%" height="15" fill="rgb(235,196,14)" fg:x="32708" fg:w="5"/><text x="100.2347%" y="95.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="99.9847%" y="69" width="0.0153%" height="15" fill="rgb(216,45,48)" fg:x="32708" fg:w="5"/><text x="100.2347%" y="79.50"></text></g></svg></svg>