<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="8278" onload="init(evt)" viewBox="0 0 1200 8278" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="8278" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="8261.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="8261.00"> </text><svg id="frames" x="10" width="1180" total_samples="32808"><g><title>[radeonsi_dri.so] (4 samples, 0.01%)</title><rect x="0.0061%" y="8117" width="0.0122%" height="15" fill="rgb(227,0,7)" fg:x="2" fg:w="4"/><text x="0.2561%" y="8127.50"></text></g><g><title>[radeonsi_dri.so] (5 samples, 0.02%)</title><rect x="0.0061%" y="8149" width="0.0152%" height="15" fill="rgb(217,0,24)" fg:x="2" fg:w="5"/><text x="0.2561%" y="8159.50"></text></g><g><title>[radeonsi_dri.so] (5 samples, 0.02%)</title><rect x="0.0061%" y="8133" width="0.0152%" height="15" fill="rgb(221,193,54)" fg:x="2" fg:w="5"/><text x="0.2561%" y="8143.50"></text></g><g><title>[libc.so.6] (7 samples, 0.02%)</title><rect x="0.0030%" y="8197" width="0.0213%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="7"/><text x="0.2530%" y="8207.50"></text></g><g><title>[libc.so.6] (7 samples, 0.02%)</title><rect x="0.0030%" y="8181" width="0.0213%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="7"/><text x="0.2530%" y="8191.50"></text></g><g><title>[radeonsi_dri.so] (6 samples, 0.02%)</title><rect x="0.0061%" y="8165" width="0.0183%" height="15" fill="rgb(232,128,0)" fg:x="2" fg:w="6"/><text x="0.2561%" y="8175.50"></text></g><g><title>tetrs:gl0 (8 samples, 0.02%)</title><rect x="0.0030%" y="8213" width="0.0244%" height="15" fill="rgb(207,160,47)" fg:x="1" fg:w="8"/><text x="0.2530%" y="8223.50"></text></g><g><title>tetrs:sh1 (7 samples, 0.02%)</title><rect x="0.0335%" y="8213" width="0.0213%" height="15" fill="rgb(228,23,34)" fg:x="11" fg:w="7"/><text x="0.2835%" y="8223.50"></text></g><g><title>[libc.so.6] (7 samples, 0.02%)</title><rect x="0.0335%" y="8197" width="0.0213%" height="15" fill="rgb(218,30,26)" fg:x="11" fg:w="7"/><text x="0.2835%" y="8207.50"></text></g><g><title>[libc.so.6] (7 samples, 0.02%)</title><rect x="0.0335%" y="8181" width="0.0213%" height="15" fill="rgb(220,122,19)" fg:x="11" fg:w="7"/><text x="0.2835%" y="8191.50"></text></g><g><title>[radeonsi_dri.so] (4 samples, 0.01%)</title><rect x="0.0427%" y="8165" width="0.0122%" height="15" fill="rgb(250,228,42)" fg:x="14" fg:w="4"/><text x="0.2927%" y="8175.50"></text></g><g><title>[radeonsi_dri.so] (4 samples, 0.01%)</title><rect x="0.0427%" y="8149" width="0.0122%" height="15" fill="rgb(240,193,28)" fg:x="14" fg:w="4"/><text x="0.2927%" y="8159.50"></text></g><g><title>[ld-linux-x86-64.so.2] (6 samples, 0.02%)</title><rect x="0.0640%" y="8181" width="0.0183%" height="15" fill="rgb(216,20,37)" fg:x="21" fg:w="6"/><text x="0.3140%" y="8191.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="0.0671%" y="8165" width="0.0152%" height="15" fill="rgb(206,188,39)" fg:x="22" fg:w="5"/><text x="0.3171%" y="8175.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="0.0701%" y="8149" width="0.0122%" height="15" fill="rgb(217,207,13)" fg:x="23" fg:w="4"/><text x="0.3201%" y="8159.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="0.0701%" y="8133" width="0.0122%" height="15" fill="rgb(231,73,38)" fg:x="23" fg:w="4"/><text x="0.3201%" y="8143.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="0.0701%" y="8117" width="0.0122%" height="15" fill="rgb(225,20,46)" fg:x="23" fg:w="4"/><text x="0.3201%" y="8127.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="0.0701%" y="8101" width="0.0122%" height="15" fill="rgb(210,31,41)" fg:x="23" fg:w="4"/><text x="0.3201%" y="8111.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="0.0701%" y="8085" width="0.0122%" height="15" fill="rgb(221,200,47)" fg:x="23" fg:w="4"/><text x="0.3201%" y="8095.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="0.0701%" y="8069" width="0.0122%" height="15" fill="rgb(226,26,5)" fg:x="23" fg:w="4"/><text x="0.3201%" y="8079.50"></text></g><g><title>[ld-linux-x86-64.so.2] (7 samples, 0.02%)</title><rect x="0.0640%" y="8197" width="0.0213%" height="15" fill="rgb(249,33,26)" fg:x="21" fg:w="7"/><text x="0.3140%" y="8207.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="0.0914%" y="8165" width="0.0152%" height="15" fill="rgb(235,183,28)" fg:x="30" fg:w="5"/><text x="0.3414%" y="8175.50"></text></g><g><title>[radeonsi_dri.so] (4 samples, 0.01%)</title><rect x="0.1067%" y="8149" width="0.0122%" height="15" fill="rgb(221,5,38)" fg:x="35" fg:w="4"/><text x="0.3567%" y="8159.50"></text></g><g><title>[radeonsi_dri.so] (4 samples, 0.01%)</title><rect x="0.1067%" y="8133" width="0.0122%" height="15" fill="rgb(247,18,42)" fg:x="35" fg:w="4"/><text x="0.3567%" y="8143.50"></text></g><g><title>pthread_setname_np (4 samples, 0.01%)</title><rect x="0.1067%" y="8117" width="0.0122%" height="15" fill="rgb(241,131,45)" fg:x="35" fg:w="4"/><text x="0.3567%" y="8127.50"></text></g><g><title>prctl (4 samples, 0.01%)</title><rect x="0.1067%" y="8101" width="0.0122%" height="15" fill="rgb(249,31,29)" fg:x="35" fg:w="4"/><text x="0.3567%" y="8111.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="0.1067%" y="8085" width="0.0122%" height="15" fill="rgb(225,111,53)" fg:x="35" fg:w="4"/><text x="0.3567%" y="8095.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="0.1067%" y="8069" width="0.0122%" height="15" fill="rgb(238,160,17)" fg:x="35" fg:w="4"/><text x="0.3567%" y="8079.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="0.1067%" y="8053" width="0.0122%" height="15" fill="rgb(214,148,48)" fg:x="35" fg:w="4"/><text x="0.3567%" y="8063.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="0.1067%" y="8037" width="0.0122%" height="15" fill="rgb(232,36,49)" fg:x="35" fg:w="4"/><text x="0.3567%" y="8047.50"></text></g><g><title>[libc.so.6] (7 samples, 0.02%)</title><rect x="0.1311%" y="8101" width="0.0213%" height="15" fill="rgb(209,103,24)" fg:x="43" fg:w="7"/><text x="0.3811%" y="8111.50"></text></g><g><title>__mmap (4 samples, 0.01%)</title><rect x="0.1402%" y="8085" width="0.0122%" height="15" fill="rgb(229,88,8)" fg:x="46" fg:w="4"/><text x="0.3902%" y="8095.50"></text></g><g><title>[radeonsi_dri.so] (17 samples, 0.05%)</title><rect x="0.1067%" y="8165" width="0.0518%" height="15" fill="rgb(213,181,19)" fg:x="35" fg:w="17"/><text x="0.3567%" y="8175.50"></text></g><g><title>cfree (12 samples, 0.04%)</title><rect x="0.1219%" y="8149" width="0.0366%" height="15" fill="rgb(254,191,54)" fg:x="40" fg:w="12"/><text x="0.3719%" y="8159.50"></text></g><g><title>[libc.so.6] (12 samples, 0.04%)</title><rect x="0.1219%" y="8133" width="0.0366%" height="15" fill="rgb(241,83,37)" fg:x="40" fg:w="12"/><text x="0.3719%" y="8143.50"></text></g><g><title>[libc.so.6] (12 samples, 0.04%)</title><rect x="0.1219%" y="8117" width="0.0366%" height="15" fill="rgb(233,36,39)" fg:x="40" fg:w="12"/><text x="0.3719%" y="8127.50"></text></g><g><title>[libc.so.6] (33 samples, 0.10%)</title><rect x="0.0853%" y="8197" width="0.1006%" height="15" fill="rgb(226,3,54)" fg:x="28" fg:w="33"/><text x="0.3353%" y="8207.50"></text></g><g><title>[libc.so.6] (33 samples, 0.10%)</title><rect x="0.0853%" y="8181" width="0.1006%" height="15" fill="rgb(245,192,40)" fg:x="28" fg:w="33"/><text x="0.3353%" y="8191.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="0.1585%" y="8165" width="0.0274%" height="15" fill="rgb(238,167,29)" fg:x="52" fg:w="9"/><text x="0.4085%" y="8175.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="0.1585%" y="8149" width="0.0274%" height="15" fill="rgb(232,182,51)" fg:x="52" fg:w="9"/><text x="0.4085%" y="8159.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="0.1585%" y="8133" width="0.0274%" height="15" fill="rgb(231,60,39)" fg:x="52" fg:w="9"/><text x="0.4085%" y="8143.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="0.1859%" y="8181" width="0.0274%" height="15" fill="rgb(208,69,12)" fg:x="61" fg:w="9"/><text x="0.4359%" y="8191.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="0.1859%" y="8165" width="0.0274%" height="15" fill="rgb(235,93,37)" fg:x="61" fg:w="9"/><text x="0.4359%" y="8175.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="0.1859%" y="8149" width="0.0274%" height="15" fill="rgb(213,116,39)" fg:x="61" fg:w="9"/><text x="0.4359%" y="8159.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="0.1981%" y="8133" width="0.0152%" height="15" fill="rgb(222,207,29)" fg:x="65" fg:w="5"/><text x="0.4481%" y="8143.50"></text></g><g><title>macroquad::Context::new (4 samples, 0.01%)</title><rect x="0.2134%" y="8181" width="0.0122%" height="15" fill="rgb(206,96,30)" fg:x="70" fg:w="4"/><text x="0.4634%" y="8191.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (4 samples, 0.01%)</title><rect x="0.2499%" y="8005" width="0.0122%" height="15" fill="rgb(218,138,4)" fg:x="82" fg:w="4"/><text x="0.4999%" y="8015.50"></text></g><g><title>clock_gettime (4 samples, 0.01%)</title><rect x="0.2499%" y="7989" width="0.0122%" height="15" fill="rgb(250,191,14)" fg:x="82" fg:w="4"/><text x="0.4999%" y="7999.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::clone::Clone&gt;::clone (7 samples, 0.02%)</title><rect x="0.3810%" y="7989" width="0.0213%" height="15" fill="rgb(239,60,40)" fg:x="125" fg:w="7"/><text x="0.6310%" y="7999.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (7 samples, 0.02%)</title><rect x="0.3810%" y="7973" width="0.0213%" height="15" fill="rgb(206,27,48)" fg:x="125" fg:w="7"/><text x="0.6310%" y="7983.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 0.08%)</title><rect x="0.4023%" y="7989" width="0.0823%" height="15" fill="rgb(225,35,8)" fg:x="132" fg:w="27"/><text x="0.6523%" y="7999.50"></text></g><g><title>core::ptr::read (19 samples, 0.06%)</title><rect x="0.4267%" y="7973" width="0.0579%" height="15" fill="rgb(250,213,24)" fg:x="140" fg:w="19"/><text x="0.6767%" y="7983.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (82 samples, 0.25%)</title><rect x="0.4999%" y="7845" width="0.2499%" height="15" fill="rgb(247,123,22)" fg:x="164" fg:w="82"/><text x="0.7499%" y="7855.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (82 samples, 0.25%)</title><rect x="0.4999%" y="7829" width="0.2499%" height="15" fill="rgb(231,138,38)" fg:x="164" fg:w="82"/><text x="0.7499%" y="7839.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (82 samples, 0.25%)</title><rect x="0.4999%" y="7813" width="0.2499%" height="15" fill="rgb(231,145,46)" fg:x="164" fg:w="82"/><text x="0.7499%" y="7823.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (78 samples, 0.24%)</title><rect x="0.5121%" y="7797" width="0.2377%" height="15" fill="rgb(251,118,11)" fg:x="168" fg:w="78"/><text x="0.7621%" y="7807.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (78 samples, 0.24%)</title><rect x="0.5121%" y="7781" width="0.2377%" height="15" fill="rgb(217,147,25)" fg:x="168" fg:w="78"/><text x="0.7621%" y="7791.50"></text></g><g><title>alloc::alloc::alloc (78 samples, 0.24%)</title><rect x="0.5121%" y="7765" width="0.2377%" height="15" fill="rgb(247,81,37)" fg:x="168" fg:w="78"/><text x="0.7621%" y="7775.50"></text></g><g><title>malloc (74 samples, 0.23%)</title><rect x="0.5243%" y="7749" width="0.2256%" height="15" fill="rgb(209,12,38)" fg:x="172" fg:w="74"/><text x="0.7743%" y="7759.50"></text></g><g><title>[libc.so.6] (48 samples, 0.15%)</title><rect x="0.6035%" y="7733" width="0.1463%" height="15" fill="rgb(227,1,9)" fg:x="198" fg:w="48"/><text x="0.8535%" y="7743.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (97 samples, 0.30%)</title><rect x="0.4999%" y="7909" width="0.2957%" height="15" fill="rgb(248,47,43)" fg:x="164" fg:w="97"/><text x="0.7499%" y="7919.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (97 samples, 0.30%)</title><rect x="0.4999%" y="7893" width="0.2957%" height="15" fill="rgb(221,10,30)" fg:x="164" fg:w="97"/><text x="0.7499%" y="7903.50"></text></g><g><title>alloc::slice::hack::to_vec (97 samples, 0.30%)</title><rect x="0.4999%" y="7877" width="0.2957%" height="15" fill="rgb(210,229,1)" fg:x="164" fg:w="97"/><text x="0.7499%" y="7887.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (97 samples, 0.30%)</title><rect x="0.4999%" y="7861" width="0.2957%" height="15" fill="rgb(222,148,37)" fg:x="164" fg:w="97"/><text x="0.7499%" y="7871.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (15 samples, 0.05%)</title><rect x="0.7498%" y="7845" width="0.0457%" height="15" fill="rgb(234,67,33)" fg:x="246" fg:w="15"/><text x="0.9998%" y="7855.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (15 samples, 0.05%)</title><rect x="0.7498%" y="7829" width="0.0457%" height="15" fill="rgb(247,98,35)" fg:x="246" fg:w="15"/><text x="0.9998%" y="7839.50"></text></g><g><title>[libc.so.6] (15 samples, 0.05%)</title><rect x="0.7498%" y="7813" width="0.0457%" height="15" fill="rgb(247,138,52)" fg:x="246" fg:w="15"/><text x="0.9998%" y="7823.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (24 samples, 0.07%)</title><rect x="0.7986%" y="7909" width="0.0732%" height="15" fill="rgb(213,79,30)" fg:x="262" fg:w="24"/><text x="1.0486%" y="7919.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (24 samples, 0.07%)</title><rect x="0.7986%" y="7893" width="0.0732%" height="15" fill="rgb(246,177,23)" fg:x="262" fg:w="24"/><text x="1.0486%" y="7903.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (24 samples, 0.07%)</title><rect x="0.7986%" y="7877" width="0.0732%" height="15" fill="rgb(230,62,27)" fg:x="262" fg:w="24"/><text x="1.0486%" y="7887.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (24 samples, 0.07%)</title><rect x="0.7986%" y="7861" width="0.0732%" height="15" fill="rgb(216,154,8)" fg:x="262" fg:w="24"/><text x="1.0486%" y="7871.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (24 samples, 0.07%)</title><rect x="0.7986%" y="7845" width="0.0732%" height="15" fill="rgb(244,35,45)" fg:x="262" fg:w="24"/><text x="1.0486%" y="7855.50"></text></g><g><title>alloc::alloc::alloc (24 samples, 0.07%)</title><rect x="0.7986%" y="7829" width="0.0732%" height="15" fill="rgb(251,115,12)" fg:x="262" fg:w="24"/><text x="1.0486%" y="7839.50"></text></g><g><title>malloc (24 samples, 0.07%)</title><rect x="0.7986%" y="7813" width="0.0732%" height="15" fill="rgb(240,54,50)" fg:x="262" fg:w="24"/><text x="1.0486%" y="7823.50"></text></g><g><title>[libc.so.6] (22 samples, 0.07%)</title><rect x="0.8047%" y="7797" width="0.0671%" height="15" fill="rgb(233,84,52)" fg:x="264" fg:w="22"/><text x="1.0547%" y="7807.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="0.8595%" y="7781" width="0.0122%" height="15" fill="rgb(207,117,47)" fg:x="282" fg:w="4"/><text x="1.1095%" y="7791.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (129 samples, 0.39%)</title><rect x="0.4877%" y="7973" width="0.3932%" height="15" fill="rgb(249,43,39)" fg:x="160" fg:w="129"/><text x="0.7377%" y="7983.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (128 samples, 0.39%)</title><rect x="0.4907%" y="7957" width="0.3901%" height="15" fill="rgb(209,38,44)" fg:x="161" fg:w="128"/><text x="0.7407%" y="7967.50"></text></g><g><title>alloc::slice::hack::to_vec (128 samples, 0.39%)</title><rect x="0.4907%" y="7941" width="0.3901%" height="15" fill="rgb(236,212,23)" fg:x="161" fg:w="128"/><text x="0.7407%" y="7951.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (128 samples, 0.39%)</title><rect x="0.4907%" y="7925" width="0.3901%" height="15" fill="rgb(242,79,21)" fg:x="161" fg:w="128"/><text x="0.7407%" y="7935.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (18 samples, 0.05%)</title><rect x="0.8839%" y="7781" width="0.0549%" height="15" fill="rgb(211,96,35)" fg:x="290" fg:w="18"/><text x="1.1339%" y="7791.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (18 samples, 0.05%)</title><rect x="0.8839%" y="7765" width="0.0549%" height="15" fill="rgb(253,215,40)" fg:x="290" fg:w="18"/><text x="1.1339%" y="7775.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (18 samples, 0.05%)</title><rect x="0.8839%" y="7749" width="0.0549%" height="15" fill="rgb(211,81,21)" fg:x="290" fg:w="18"/><text x="1.1339%" y="7759.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (18 samples, 0.05%)</title><rect x="0.8839%" y="7733" width="0.0549%" height="15" fill="rgb(208,190,38)" fg:x="290" fg:w="18"/><text x="1.1339%" y="7743.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (18 samples, 0.05%)</title><rect x="0.8839%" y="7717" width="0.0549%" height="15" fill="rgb(235,213,38)" fg:x="290" fg:w="18"/><text x="1.1339%" y="7727.50"></text></g><g><title>alloc::alloc::alloc (18 samples, 0.05%)</title><rect x="0.8839%" y="7701" width="0.0549%" height="15" fill="rgb(237,122,38)" fg:x="290" fg:w="18"/><text x="1.1339%" y="7711.50"></text></g><g><title>malloc (17 samples, 0.05%)</title><rect x="0.8870%" y="7685" width="0.0518%" height="15" fill="rgb(244,218,35)" fg:x="291" fg:w="17"/><text x="1.1370%" y="7695.50"></text></g><g><title>[libc.so.6] (12 samples, 0.04%)</title><rect x="0.9022%" y="7669" width="0.0366%" height="15" fill="rgb(240,68,47)" fg:x="296" fg:w="12"/><text x="1.1522%" y="7679.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (23 samples, 0.07%)</title><rect x="0.8839%" y="7845" width="0.0701%" height="15" fill="rgb(210,16,53)" fg:x="290" fg:w="23"/><text x="1.1339%" y="7855.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (23 samples, 0.07%)</title><rect x="0.8839%" y="7829" width="0.0701%" height="15" fill="rgb(235,124,12)" fg:x="290" fg:w="23"/><text x="1.1339%" y="7839.50"></text></g><g><title>alloc::slice::hack::to_vec (23 samples, 0.07%)</title><rect x="0.8839%" y="7813" width="0.0701%" height="15" fill="rgb(224,169,11)" fg:x="290" fg:w="23"/><text x="1.1339%" y="7823.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (23 samples, 0.07%)</title><rect x="0.8839%" y="7797" width="0.0701%" height="15" fill="rgb(250,166,2)" fg:x="290" fg:w="23"/><text x="1.1339%" y="7807.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (5 samples, 0.02%)</title><rect x="0.9388%" y="7781" width="0.0152%" height="15" fill="rgb(242,216,29)" fg:x="308" fg:w="5"/><text x="1.1888%" y="7791.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.02%)</title><rect x="0.9388%" y="7765" width="0.0152%" height="15" fill="rgb(230,116,27)" fg:x="308" fg:w="5"/><text x="1.1888%" y="7775.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="0.9388%" y="7749" width="0.0152%" height="15" fill="rgb(228,99,48)" fg:x="308" fg:w="5"/><text x="1.1888%" y="7759.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (29 samples, 0.09%)</title><rect x="0.8809%" y="7941" width="0.0884%" height="15" fill="rgb(253,11,6)" fg:x="289" fg:w="29"/><text x="1.1309%" y="7951.50"></text></g><g><title>&lt;tetrs::logic::state::State as core::clone::Clone&gt;::clone (29 samples, 0.09%)</title><rect x="0.8809%" y="7925" width="0.0884%" height="15" fill="rgb(247,143,39)" fg:x="289" fg:w="29"/><text x="1.1309%" y="7935.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (29 samples, 0.09%)</title><rect x="0.8809%" y="7909" width="0.0884%" height="15" fill="rgb(236,97,10)" fg:x="289" fg:w="29"/><text x="1.1309%" y="7919.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (29 samples, 0.09%)</title><rect x="0.8809%" y="7893" width="0.0884%" height="15" fill="rgb(233,208,19)" fg:x="289" fg:w="29"/><text x="1.1309%" y="7903.50"></text></g><g><title>alloc::slice::hack::to_vec (29 samples, 0.09%)</title><rect x="0.8809%" y="7877" width="0.0884%" height="15" fill="rgb(216,164,2)" fg:x="289" fg:w="29"/><text x="1.1309%" y="7887.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (29 samples, 0.09%)</title><rect x="0.8809%" y="7861" width="0.0884%" height="15" fill="rgb(220,129,5)" fg:x="289" fg:w="29"/><text x="1.1309%" y="7871.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5 samples, 0.02%)</title><rect x="0.9540%" y="7845" width="0.0152%" height="15" fill="rgb(242,17,10)" fg:x="313" fg:w="5"/><text x="1.2040%" y="7855.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.02%)</title><rect x="0.9540%" y="7829" width="0.0152%" height="15" fill="rgb(242,107,0)" fg:x="313" fg:w="5"/><text x="1.2040%" y="7839.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.02%)</title><rect x="0.9540%" y="7813" width="0.0152%" height="15" fill="rgb(251,28,31)" fg:x="313" fg:w="5"/><text x="1.2040%" y="7823.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.02%)</title><rect x="0.9540%" y="7797" width="0.0152%" height="15" fill="rgb(233,223,10)" fg:x="313" fg:w="5"/><text x="1.2040%" y="7807.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.02%)</title><rect x="0.9540%" y="7781" width="0.0152%" height="15" fill="rgb(215,21,27)" fg:x="313" fg:w="5"/><text x="1.2040%" y="7791.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.02%)</title><rect x="0.9540%" y="7765" width="0.0152%" height="15" fill="rgb(232,23,21)" fg:x="313" fg:w="5"/><text x="1.2040%" y="7775.50"></text></g><g><title>malloc (5 samples, 0.02%)</title><rect x="0.9540%" y="7749" width="0.0152%" height="15" fill="rgb(244,5,23)" fg:x="313" fg:w="5"/><text x="1.2040%" y="7759.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (30 samples, 0.09%)</title><rect x="0.8809%" y="7957" width="0.0914%" height="15" fill="rgb(226,81,46)" fg:x="289" fg:w="30"/><text x="1.1309%" y="7967.50"></text></g><g><title>&lt;tetrs::logic::state::State as core::clone::Clone&gt;::clone (160 samples, 0.49%)</title><rect x="0.4877%" y="7989" width="0.4877%" height="15" fill="rgb(247,70,30)" fg:x="160" fg:w="160"/><text x="0.7377%" y="7999.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (31 samples, 0.09%)</title><rect x="0.8809%" y="7973" width="0.0945%" height="15" fill="rgb(212,68,19)" fg:x="289" fg:w="31"/><text x="1.1309%" y="7983.50"></text></g><g><title>__rust_alloc (4 samples, 0.01%)</title><rect x="1.0973%" y="7893" width="0.0122%" height="15" fill="rgb(240,187,13)" fg:x="360" fg:w="4"/><text x="1.3473%" y="7903.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (330 samples, 1.01%)</title><rect x="0.9754%" y="7989" width="1.0059%" height="15" fill="rgb(223,113,26)" fg:x="320" fg:w="330"/><text x="1.2254%" y="7999.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (330 samples, 1.01%)</title><rect x="0.9754%" y="7973" width="1.0059%" height="15" fill="rgb(206,192,2)" fg:x="320" fg:w="330"/><text x="1.2254%" y="7983.50"></text></g><g><title>alloc::alloc::exchange_malloc (292 samples, 0.89%)</title><rect x="1.0912%" y="7957" width="0.8900%" height="15" fill="rgb(241,108,4)" fg:x="358" fg:w="292"/><text x="1.3412%" y="7967.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (292 samples, 0.89%)</title><rect x="1.0912%" y="7941" width="0.8900%" height="15" fill="rgb(247,173,49)" fg:x="358" fg:w="292"/><text x="1.3412%" y="7951.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (292 samples, 0.89%)</title><rect x="1.0912%" y="7925" width="0.8900%" height="15" fill="rgb(224,114,35)" fg:x="358" fg:w="292"/><text x="1.3412%" y="7935.50"></text></g><g><title>alloc::alloc::alloc (292 samples, 0.89%)</title><rect x="1.0912%" y="7909" width="0.8900%" height="15" fill="rgb(245,159,27)" fg:x="358" fg:w="292"/><text x="1.3412%" y="7919.50"></text></g><g><title>malloc (285 samples, 0.87%)</title><rect x="1.1125%" y="7893" width="0.8687%" height="15" fill="rgb(245,172,44)" fg:x="365" fg:w="285"/><text x="1.3625%" y="7903.50"></text></g><g><title>[libc.so.6] (251 samples, 0.77%)</title><rect x="1.2162%" y="7877" width="0.7651%" height="15" fill="rgb(236,23,11)" fg:x="399" fg:w="251"/><text x="1.4662%" y="7887.50"></text></g><g><title>[libc.so.6] (45 samples, 0.14%)</title><rect x="1.8441%" y="7861" width="0.1372%" height="15" fill="rgb(205,117,38)" fg:x="605" fg:w="45"/><text x="2.0941%" y="7871.50"></text></g><g><title>cfree (5 samples, 0.02%)</title><rect x="1.9873%" y="7989" width="0.0152%" height="15" fill="rgb(237,72,25)" fg:x="652" fg:w="5"/><text x="2.2373%" y="7999.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="1.9873%" y="7973" width="0.0152%" height="15" fill="rgb(244,70,9)" fg:x="652" fg:w="5"/><text x="2.2373%" y="7983.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (38 samples, 0.12%)</title><rect x="2.0117%" y="7893" width="0.1158%" height="15" fill="rgb(217,125,39)" fg:x="660" fg:w="38"/><text x="2.2617%" y="7903.50"></text></g><g><title>alloc::alloc::dealloc (38 samples, 0.12%)</title><rect x="2.0117%" y="7877" width="0.1158%" height="15" fill="rgb(235,36,10)" fg:x="660" fg:w="38"/><text x="2.2617%" y="7887.50"></text></g><g><title>cfree (36 samples, 0.11%)</title><rect x="2.0178%" y="7861" width="0.1097%" height="15" fill="rgb(251,123,47)" fg:x="662" fg:w="36"/><text x="2.2678%" y="7871.50"></text></g><g><title>[libc.so.6] (25 samples, 0.08%)</title><rect x="2.0513%" y="7845" width="0.0762%" height="15" fill="rgb(221,13,13)" fg:x="673" fg:w="25"/><text x="2.3013%" y="7855.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (44 samples, 0.13%)</title><rect x="2.0026%" y="7973" width="0.1341%" height="15" fill="rgb(238,131,9)" fg:x="657" fg:w="44"/><text x="2.2526%" y="7983.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u16&gt;]&gt; (43 samples, 0.13%)</title><rect x="2.0056%" y="7957" width="0.1311%" height="15" fill="rgb(211,50,8)" fg:x="658" fg:w="43"/><text x="2.2556%" y="7967.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u16&gt;&gt; (41 samples, 0.12%)</title><rect x="2.0117%" y="7941" width="0.1250%" height="15" fill="rgb(245,182,24)" fg:x="660" fg:w="41"/><text x="2.2617%" y="7951.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u16&gt;&gt; (41 samples, 0.12%)</title><rect x="2.0117%" y="7925" width="0.1250%" height="15" fill="rgb(242,14,37)" fg:x="660" fg:w="41"/><text x="2.2617%" y="7935.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (41 samples, 0.12%)</title><rect x="2.0117%" y="7909" width="0.1250%" height="15" fill="rgb(246,228,12)" fg:x="660" fg:w="41"/><text x="2.2617%" y="7919.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (50 samples, 0.15%)</title><rect x="2.0026%" y="7989" width="0.1524%" height="15" fill="rgb(213,55,15)" fg:x="657" fg:w="50"/><text x="2.2526%" y="7999.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (6 samples, 0.02%)</title><rect x="2.1367%" y="7973" width="0.0183%" height="15" fill="rgb(209,9,3)" fg:x="701" fg:w="6"/><text x="2.3867%" y="7983.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="2.1367%" y="7957" width="0.0183%" height="15" fill="rgb(230,59,30)" fg:x="701" fg:w="6"/><text x="2.3867%" y="7967.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.02%)</title><rect x="2.1367%" y="7941" width="0.0183%" height="15" fill="rgb(209,121,21)" fg:x="701" fg:w="6"/><text x="2.3867%" y="7951.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.02%)</title><rect x="2.1367%" y="7925" width="0.0183%" height="15" fill="rgb(220,109,13)" fg:x="701" fg:w="6"/><text x="2.3867%" y="7935.50"></text></g><g><title>cfree (5 samples, 0.02%)</title><rect x="2.1397%" y="7909" width="0.0152%" height="15" fill="rgb(232,18,1)" fg:x="702" fg:w="5"/><text x="2.3897%" y="7919.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="2.1702%" y="7973" width="0.0183%" height="15" fill="rgb(215,41,42)" fg:x="712" fg:w="6"/><text x="2.4202%" y="7983.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;tetrs::logic::state::State&gt;&gt; (30 samples, 0.09%)</title><rect x="2.1641%" y="7989" width="0.0914%" height="15" fill="rgb(224,123,36)" fg:x="710" fg:w="30"/><text x="2.4141%" y="7999.50"></text></g><g><title>cfree (22 samples, 0.07%)</title><rect x="2.1885%" y="7973" width="0.0671%" height="15" fill="rgb(240,125,3)" fg:x="718" fg:w="22"/><text x="2.4385%" y="7983.50"></text></g><g><title>[libc.so.6] (18 samples, 0.05%)</title><rect x="2.2007%" y="7957" width="0.0549%" height="15" fill="rgb(205,98,50)" fg:x="722" fg:w="18"/><text x="2.4507%" y="7967.50"></text></g><g><title>[libc.so.6] (7 samples, 0.02%)</title><rect x="2.2342%" y="7941" width="0.0213%" height="15" fill="rgb(205,185,37)" fg:x="733" fg:w="7"/><text x="2.4842%" y="7951.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (52 samples, 0.16%)</title><rect x="2.3348%" y="7829" width="0.1585%" height="15" fill="rgb(238,207,15)" fg:x="766" fg:w="52"/><text x="2.5848%" y="7839.50"></text></g><g><title>alloc::alloc::dealloc (52 samples, 0.16%)</title><rect x="2.3348%" y="7813" width="0.1585%" height="15" fill="rgb(213,199,42)" fg:x="766" fg:w="52"/><text x="2.5848%" y="7823.50"></text></g><g><title>cfree (47 samples, 0.14%)</title><rect x="2.3500%" y="7797" width="0.1433%" height="15" fill="rgb(235,201,11)" fg:x="771" fg:w="47"/><text x="2.6000%" y="7807.50"></text></g><g><title>[libc.so.6] (34 samples, 0.10%)</title><rect x="2.3897%" y="7781" width="0.1036%" height="15" fill="rgb(207,46,11)" fg:x="784" fg:w="34"/><text x="2.6397%" y="7791.50"></text></g><g><title>cfree (71 samples, 0.22%)</title><rect x="2.4994%" y="7829" width="0.2164%" height="15" fill="rgb(241,35,35)" fg:x="820" fg:w="71"/><text x="2.7494%" y="7839.50"></text></g><g><title>[libc.so.6] (46 samples, 0.14%)</title><rect x="2.5756%" y="7813" width="0.1402%" height="15" fill="rgb(243,32,47)" fg:x="845" fg:w="46"/><text x="2.8256%" y="7823.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,112 samples, 3.39%)</title><rect x="2.7371%" y="7717" width="3.3894%" height="15" fill="rgb(247,202,23)" fg:x="898" fg:w="1112"/><text x="2.9871%" y="7727.50">&lt;al..</text></g><g><title>alloc::alloc::dealloc (1,112 samples, 3.39%)</title><rect x="2.7371%" y="7701" width="3.3894%" height="15" fill="rgb(219,102,11)" fg:x="898" fg:w="1112"/><text x="2.9871%" y="7711.50">all..</text></g><g><title>cfree (1,035 samples, 3.15%)</title><rect x="2.9718%" y="7685" width="3.1547%" height="15" fill="rgb(243,110,44)" fg:x="975" fg:w="1035"/><text x="3.2218%" y="7695.50">cfr..</text></g><g><title>[libc.so.6] (694 samples, 2.12%)</title><rect x="4.0112%" y="7669" width="2.1153%" height="15" fill="rgb(222,74,54)" fg:x="1316" fg:w="694"/><text x="4.2612%" y="7679.50">[..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,187 samples, 3.62%)</title><rect x="2.7219%" y="7797" width="3.6180%" height="15" fill="rgb(216,99,12)" fg:x="893" fg:w="1187"/><text x="2.9719%" y="7807.50">&lt;all..</text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u16&gt;]&gt; (1,186 samples, 3.61%)</title><rect x="2.7249%" y="7781" width="3.6150%" height="15" fill="rgb(226,22,26)" fg:x="894" fg:w="1186"/><text x="2.9749%" y="7791.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u16&gt;&gt; (1,183 samples, 3.61%)</title><rect x="2.7341%" y="7765" width="3.6058%" height="15" fill="rgb(217,163,10)" fg:x="897" fg:w="1183"/><text x="2.9841%" y="7775.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u16&gt;&gt; (1,183 samples, 3.61%)</title><rect x="2.7341%" y="7749" width="3.6058%" height="15" fill="rgb(213,25,53)" fg:x="897" fg:w="1183"/><text x="2.9841%" y="7759.50">core..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,183 samples, 3.61%)</title><rect x="2.7341%" y="7733" width="3.6058%" height="15" fill="rgb(252,105,26)" fg:x="897" fg:w="1183"/><text x="2.9841%" y="7743.50">&lt;all..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (70 samples, 0.21%)</title><rect x="6.1266%" y="7717" width="0.2134%" height="15" fill="rgb(220,39,43)" fg:x="2010" fg:w="70"/><text x="6.3766%" y="7727.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (5 samples, 0.02%)</title><rect x="6.3247%" y="7701" width="0.0152%" height="15" fill="rgb(229,68,48)" fg:x="2075" fg:w="5"/><text x="6.5747%" y="7711.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (128 samples, 0.39%)</title><rect x="6.3399%" y="7765" width="0.3901%" height="15" fill="rgb(252,8,32)" fg:x="2080" fg:w="128"/><text x="6.5899%" y="7775.50"></text></g><g><title>alloc::alloc::dealloc (128 samples, 0.39%)</title><rect x="6.3399%" y="7749" width="0.3901%" height="15" fill="rgb(223,20,43)" fg:x="2080" fg:w="128"/><text x="6.5899%" y="7759.50"></text></g><g><title>cfree (122 samples, 0.37%)</title><rect x="6.3582%" y="7733" width="0.3719%" height="15" fill="rgb(229,81,49)" fg:x="2086" fg:w="122"/><text x="6.6082%" y="7743.50"></text></g><g><title>[libc.so.6] (99 samples, 0.30%)</title><rect x="6.4283%" y="7717" width="0.3018%" height="15" fill="rgb(236,28,36)" fg:x="2109" fg:w="99"/><text x="6.6783%" y="7727.50"></text></g><g><title>[libc.so.6] (50 samples, 0.15%)</title><rect x="6.5777%" y="7701" width="0.1524%" height="15" fill="rgb(249,185,26)" fg:x="2158" fg:w="50"/><text x="6.8277%" y="7711.50"></text></g><g><title>[libc.so.6] (30 samples, 0.09%)</title><rect x="6.6386%" y="7685" width="0.0914%" height="15" fill="rgb(249,174,33)" fg:x="2178" fg:w="30"/><text x="6.8886%" y="7695.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (1,331 samples, 4.06%)</title><rect x="2.7219%" y="7813" width="4.0569%" height="15" fill="rgb(233,201,37)" fg:x="893" fg:w="1331"/><text x="2.9719%" y="7823.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (144 samples, 0.44%)</title><rect x="6.3399%" y="7797" width="0.4389%" height="15" fill="rgb(221,78,26)" fg:x="2080" fg:w="144"/><text x="6.5899%" y="7807.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (144 samples, 0.44%)</title><rect x="6.3399%" y="7781" width="0.4389%" height="15" fill="rgb(250,127,30)" fg:x="2080" fg:w="144"/><text x="6.5899%" y="7791.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (16 samples, 0.05%)</title><rect x="6.7301%" y="7765" width="0.0488%" height="15" fill="rgb(230,49,44)" fg:x="2208" fg:w="16"/><text x="6.9801%" y="7775.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="6.7971%" y="7781" width="0.0122%" height="15" fill="rgb(229,67,23)" fg:x="2230" fg:w="4"/><text x="7.0471%" y="7791.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.01%)</title><rect x="6.7971%" y="7765" width="0.0122%" height="15" fill="rgb(249,83,47)" fg:x="2230" fg:w="4"/><text x="7.0471%" y="7775.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.01%)</title><rect x="6.7971%" y="7749" width="0.0122%" height="15" fill="rgb(215,43,3)" fg:x="2230" fg:w="4"/><text x="7.0471%" y="7759.50"></text></g><g><title>cfree (4 samples, 0.01%)</title><rect x="6.7971%" y="7733" width="0.0122%" height="15" fill="rgb(238,154,13)" fg:x="2230" fg:w="4"/><text x="7.0471%" y="7743.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="6.7971%" y="7717" width="0.0122%" height="15" fill="rgb(219,56,2)" fg:x="2230" fg:w="4"/><text x="7.0471%" y="7727.50"></text></g><g><title>cfree (10 samples, 0.03%)</title><rect x="6.8093%" y="7781" width="0.0305%" height="15" fill="rgb(233,0,4)" fg:x="2234" fg:w="10"/><text x="7.0593%" y="7791.50"></text></g><g><title>[libc.so.6] (7 samples, 0.02%)</title><rect x="6.8185%" y="7765" width="0.0213%" height="15" fill="rgb(235,30,7)" fg:x="2237" fg:w="7"/><text x="7.0685%" y="7775.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (59 samples, 0.18%)</title><rect x="6.8428%" y="7669" width="0.1798%" height="15" fill="rgb(250,79,13)" fg:x="2245" fg:w="59"/><text x="7.0928%" y="7679.50"></text></g><g><title>alloc::alloc::dealloc (59 samples, 0.18%)</title><rect x="6.8428%" y="7653" width="0.1798%" height="15" fill="rgb(211,146,34)" fg:x="2245" fg:w="59"/><text x="7.0928%" y="7663.50"></text></g><g><title>cfree (58 samples, 0.18%)</title><rect x="6.8459%" y="7637" width="0.1768%" height="15" fill="rgb(228,22,38)" fg:x="2246" fg:w="58"/><text x="7.0959%" y="7647.50"></text></g><g><title>[libc.so.6] (36 samples, 0.11%)</title><rect x="6.9129%" y="7621" width="0.1097%" height="15" fill="rgb(235,168,5)" fg:x="2268" fg:w="36"/><text x="7.1629%" y="7631.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (68 samples, 0.21%)</title><rect x="6.8398%" y="7749" width="0.2073%" height="15" fill="rgb(221,155,16)" fg:x="2244" fg:w="68"/><text x="7.0898%" y="7759.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u16&gt;]&gt; (68 samples, 0.21%)</title><rect x="6.8398%" y="7733" width="0.2073%" height="15" fill="rgb(215,215,53)" fg:x="2244" fg:w="68"/><text x="7.0898%" y="7743.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u16&gt;&gt; (67 samples, 0.20%)</title><rect x="6.8428%" y="7717" width="0.2042%" height="15" fill="rgb(223,4,10)" fg:x="2245" fg:w="67"/><text x="7.0928%" y="7727.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u16&gt;&gt; (67 samples, 0.20%)</title><rect x="6.8428%" y="7701" width="0.2042%" height="15" fill="rgb(234,103,6)" fg:x="2245" fg:w="67"/><text x="7.0928%" y="7711.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (67 samples, 0.20%)</title><rect x="6.8428%" y="7685" width="0.2042%" height="15" fill="rgb(227,97,0)" fg:x="2245" fg:w="67"/><text x="7.0928%" y="7695.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (8 samples, 0.02%)</title><rect x="7.0227%" y="7669" width="0.0244%" height="15" fill="rgb(234,150,53)" fg:x="2304" fg:w="8"/><text x="7.2727%" y="7679.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.04%)</title><rect x="7.0471%" y="7717" width="0.0427%" height="15" fill="rgb(228,201,54)" fg:x="2312" fg:w="14"/><text x="7.2971%" y="7727.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.04%)</title><rect x="7.0471%" y="7701" width="0.0427%" height="15" fill="rgb(222,22,37)" fg:x="2312" fg:w="14"/><text x="7.2971%" y="7711.50"></text></g><g><title>cfree (14 samples, 0.04%)</title><rect x="7.0471%" y="7685" width="0.0427%" height="15" fill="rgb(237,53,32)" fg:x="2312" fg:w="14"/><text x="7.2971%" y="7695.50"></text></g><g><title>[libc.so.6] (13 samples, 0.04%)</title><rect x="7.0501%" y="7669" width="0.0396%" height="15" fill="rgb(233,25,53)" fg:x="2313" fg:w="13"/><text x="7.3001%" y="7679.50"></text></g><g><title>[libc.so.6] (13 samples, 0.04%)</title><rect x="7.0501%" y="7653" width="0.0396%" height="15" fill="rgb(210,40,34)" fg:x="2313" fg:w="13"/><text x="7.3001%" y="7663.50"></text></g><g><title>[libc.so.6] (11 samples, 0.03%)</title><rect x="7.0562%" y="7637" width="0.0335%" height="15" fill="rgb(241,220,44)" fg:x="2315" fg:w="11"/><text x="7.3062%" y="7647.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (86 samples, 0.26%)</title><rect x="6.8398%" y="7765" width="0.2621%" height="15" fill="rgb(235,28,35)" fg:x="2244" fg:w="86"/><text x="7.0898%" y="7775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (18 samples, 0.05%)</title><rect x="7.0471%" y="7749" width="0.0549%" height="15" fill="rgb(210,56,17)" fg:x="2312" fg:w="18"/><text x="7.2971%" y="7759.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.05%)</title><rect x="7.0471%" y="7733" width="0.0549%" height="15" fill="rgb(224,130,29)" fg:x="2312" fg:w="18"/><text x="7.2971%" y="7743.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (4 samples, 0.01%)</title><rect x="7.0897%" y="7717" width="0.0122%" height="15" fill="rgb(235,212,8)" fg:x="2326" fg:w="4"/><text x="7.3397%" y="7727.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;tetrs::logic::state::State&gt;&gt;&gt; (108 samples, 0.33%)</title><rect x="6.7880%" y="7813" width="0.3292%" height="15" fill="rgb(223,33,50)" fg:x="2227" fg:w="108"/><text x="7.0380%" y="7823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;tetrs::logic::state::State&gt;&gt; (105 samples, 0.32%)</title><rect x="6.7971%" y="7797" width="0.3200%" height="15" fill="rgb(219,149,13)" fg:x="2230" fg:w="105"/><text x="7.0471%" y="7807.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (91 samples, 0.28%)</title><rect x="6.8398%" y="7781" width="0.2774%" height="15" fill="rgb(250,156,29)" fg:x="2244" fg:w="91"/><text x="7.0898%" y="7791.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (4 samples, 0.01%)</title><rect x="7.1050%" y="7765" width="0.0122%" height="15" fill="rgb(216,193,19)" fg:x="2331" fg:w="4"/><text x="7.3550%" y="7775.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.01%)</title><rect x="7.2025%" y="7765" width="0.0122%" height="15" fill="rgb(216,135,14)" fg:x="2363" fg:w="4"/><text x="7.4525%" y="7775.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.01%)</title><rect x="7.2025%" y="7749" width="0.0122%" height="15" fill="rgb(241,47,5)" fg:x="2363" fg:w="4"/><text x="7.4525%" y="7759.50"></text></g><g><title>cfree (4 samples, 0.01%)</title><rect x="7.2025%" y="7733" width="0.0122%" height="15" fill="rgb(233,42,35)" fg:x="2363" fg:w="4"/><text x="7.4525%" y="7743.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="7.2025%" y="7717" width="0.0122%" height="15" fill="rgb(231,13,6)" fg:x="2363" fg:w="4"/><text x="7.4525%" y="7727.50"></text></g><g><title>cfree (6 samples, 0.02%)</title><rect x="7.2147%" y="7765" width="0.0183%" height="15" fill="rgb(207,181,40)" fg:x="2367" fg:w="6"/><text x="7.4647%" y="7775.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (76 samples, 0.23%)</title><rect x="7.2421%" y="7653" width="0.2317%" height="15" fill="rgb(254,173,49)" fg:x="2376" fg:w="76"/><text x="7.4921%" y="7663.50"></text></g><g><title>alloc::alloc::dealloc (76 samples, 0.23%)</title><rect x="7.2421%" y="7637" width="0.2317%" height="15" fill="rgb(221,1,38)" fg:x="2376" fg:w="76"/><text x="7.4921%" y="7647.50"></text></g><g><title>cfree (75 samples, 0.23%)</title><rect x="7.2452%" y="7621" width="0.2286%" height="15" fill="rgb(206,124,46)" fg:x="2377" fg:w="75"/><text x="7.4952%" y="7631.50"></text></g><g><title>[libc.so.6] (52 samples, 0.16%)</title><rect x="7.3153%" y="7605" width="0.1585%" height="15" fill="rgb(249,21,11)" fg:x="2400" fg:w="52"/><text x="7.5653%" y="7615.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (83 samples, 0.25%)</title><rect x="7.2391%" y="7733" width="0.2530%" height="15" fill="rgb(222,201,40)" fg:x="2375" fg:w="83"/><text x="7.4891%" y="7743.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u16&gt;]&gt; (82 samples, 0.25%)</title><rect x="7.2421%" y="7717" width="0.2499%" height="15" fill="rgb(235,61,29)" fg:x="2376" fg:w="82"/><text x="7.4921%" y="7727.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u16&gt;&gt; (82 samples, 0.25%)</title><rect x="7.2421%" y="7701" width="0.2499%" height="15" fill="rgb(219,207,3)" fg:x="2376" fg:w="82"/><text x="7.4921%" y="7711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u16&gt;&gt; (82 samples, 0.25%)</title><rect x="7.2421%" y="7685" width="0.2499%" height="15" fill="rgb(222,56,46)" fg:x="2376" fg:w="82"/><text x="7.4921%" y="7695.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (82 samples, 0.25%)</title><rect x="7.2421%" y="7669" width="0.2499%" height="15" fill="rgb(239,76,54)" fg:x="2376" fg:w="82"/><text x="7.4921%" y="7679.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (6 samples, 0.02%)</title><rect x="7.4738%" y="7653" width="0.0183%" height="15" fill="rgb(231,124,27)" fg:x="2452" fg:w="6"/><text x="7.7238%" y="7663.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (16 samples, 0.05%)</title><rect x="7.4921%" y="7701" width="0.0488%" height="15" fill="rgb(249,195,6)" fg:x="2458" fg:w="16"/><text x="7.7421%" y="7711.50"></text></g><g><title>alloc::alloc::dealloc (16 samples, 0.05%)</title><rect x="7.4921%" y="7685" width="0.0488%" height="15" fill="rgb(237,174,47)" fg:x="2458" fg:w="16"/><text x="7.7421%" y="7695.50"></text></g><g><title>cfree (16 samples, 0.05%)</title><rect x="7.4921%" y="7669" width="0.0488%" height="15" fill="rgb(206,201,31)" fg:x="2458" fg:w="16"/><text x="7.7421%" y="7679.50"></text></g><g><title>[libc.so.6] (15 samples, 0.05%)</title><rect x="7.4951%" y="7653" width="0.0457%" height="15" fill="rgb(231,57,52)" fg:x="2459" fg:w="15"/><text x="7.7451%" y="7663.50"></text></g><g><title>[libc.so.6] (9 samples, 0.03%)</title><rect x="7.5134%" y="7637" width="0.0274%" height="15" fill="rgb(248,177,22)" fg:x="2465" fg:w="9"/><text x="7.7634%" y="7647.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="7.5226%" y="7621" width="0.0183%" height="15" fill="rgb(215,211,37)" fg:x="2468" fg:w="6"/><text x="7.7726%" y="7631.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (102 samples, 0.31%)</title><rect x="7.2391%" y="7749" width="0.3109%" height="15" fill="rgb(241,128,51)" fg:x="2375" fg:w="102"/><text x="7.4891%" y="7759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (19 samples, 0.06%)</title><rect x="7.4921%" y="7733" width="0.0579%" height="15" fill="rgb(227,165,31)" fg:x="2458" fg:w="19"/><text x="7.7421%" y="7743.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.06%)</title><rect x="7.4921%" y="7717" width="0.0579%" height="15" fill="rgb(228,167,24)" fg:x="2458" fg:w="19"/><text x="7.7421%" y="7727.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.02%)</title><rect x="7.5530%" y="7605" width="0.0152%" height="15" fill="rgb(228,143,12)" fg:x="2478" fg:w="5"/><text x="7.8030%" y="7615.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.02%)</title><rect x="7.5530%" y="7589" width="0.0152%" height="15" fill="rgb(249,149,8)" fg:x="2478" fg:w="5"/><text x="7.8030%" y="7599.50"></text></g><g><title>cfree (4 samples, 0.01%)</title><rect x="7.5561%" y="7573" width="0.0122%" height="15" fill="rgb(243,35,44)" fg:x="2479" fg:w="4"/><text x="7.8061%" y="7583.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="7.5530%" y="7685" width="0.0183%" height="15" fill="rgb(246,89,9)" fg:x="2478" fg:w="6"/><text x="7.8030%" y="7695.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u16&gt;]&gt; (6 samples, 0.02%)</title><rect x="7.5530%" y="7669" width="0.0183%" height="15" fill="rgb(233,213,13)" fg:x="2478" fg:w="6"/><text x="7.8030%" y="7679.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u16&gt;&gt; (6 samples, 0.02%)</title><rect x="7.5530%" y="7653" width="0.0183%" height="15" fill="rgb(233,141,41)" fg:x="2478" fg:w="6"/><text x="7.8030%" y="7663.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u16&gt;&gt; (6 samples, 0.02%)</title><rect x="7.5530%" y="7637" width="0.0183%" height="15" fill="rgb(239,167,4)" fg:x="2478" fg:w="6"/><text x="7.8030%" y="7647.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="7.5530%" y="7621" width="0.0183%" height="15" fill="rgb(209,217,16)" fg:x="2478" fg:w="6"/><text x="7.8030%" y="7631.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;tetrs::logic::state::State&gt;&gt;&gt; (9 samples, 0.03%)</title><rect x="7.5500%" y="7749" width="0.0274%" height="15" fill="rgb(219,88,35)" fg:x="2477" fg:w="9"/><text x="7.8000%" y="7759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;tetrs::logic::state::State&gt;&gt; (9 samples, 0.03%)</title><rect x="7.5500%" y="7733" width="0.0274%" height="15" fill="rgb(220,193,23)" fg:x="2477" fg:w="9"/><text x="7.8000%" y="7743.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (8 samples, 0.02%)</title><rect x="7.5530%" y="7717" width="0.0244%" height="15" fill="rgb(230,90,52)" fg:x="2478" fg:w="8"/><text x="7.8030%" y="7727.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (8 samples, 0.02%)</title><rect x="7.5530%" y="7701" width="0.0244%" height="15" fill="rgb(252,106,19)" fg:x="2478" fg:w="8"/><text x="7.8030%" y="7711.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (27 samples, 0.08%)</title><rect x="7.5927%" y="7589" width="0.0823%" height="15" fill="rgb(206,74,20)" fg:x="2491" fg:w="27"/><text x="7.8427%" y="7599.50"></text></g><g><title>alloc::alloc::dealloc (27 samples, 0.08%)</title><rect x="7.5927%" y="7573" width="0.0823%" height="15" fill="rgb(230,138,44)" fg:x="2491" fg:w="27"/><text x="7.8427%" y="7583.50"></text></g><g><title>cfree (27 samples, 0.08%)</title><rect x="7.5927%" y="7557" width="0.0823%" height="15" fill="rgb(235,182,43)" fg:x="2491" fg:w="27"/><text x="7.8427%" y="7567.50"></text></g><g><title>[libc.so.6] (20 samples, 0.06%)</title><rect x="7.6140%" y="7541" width="0.0610%" height="15" fill="rgb(242,16,51)" fg:x="2498" fg:w="20"/><text x="7.8640%" y="7551.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.09%)</title><rect x="7.5927%" y="7669" width="0.0945%" height="15" fill="rgb(248,9,4)" fg:x="2491" fg:w="31"/><text x="7.8427%" y="7679.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u16&gt;]&gt; (31 samples, 0.09%)</title><rect x="7.5927%" y="7653" width="0.0945%" height="15" fill="rgb(210,31,22)" fg:x="2491" fg:w="31"/><text x="7.8427%" y="7663.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u16&gt;&gt; (31 samples, 0.09%)</title><rect x="7.5927%" y="7637" width="0.0945%" height="15" fill="rgb(239,54,39)" fg:x="2491" fg:w="31"/><text x="7.8427%" y="7647.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u16&gt;&gt; (31 samples, 0.09%)</title><rect x="7.5927%" y="7621" width="0.0945%" height="15" fill="rgb(230,99,41)" fg:x="2491" fg:w="31"/><text x="7.8427%" y="7631.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.09%)</title><rect x="7.5927%" y="7605" width="0.0945%" height="15" fill="rgb(253,106,12)" fg:x="2491" fg:w="31"/><text x="7.8427%" y="7615.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (4 samples, 0.01%)</title><rect x="7.6750%" y="7589" width="0.0122%" height="15" fill="rgb(213,46,41)" fg:x="2518" fg:w="4"/><text x="7.9250%" y="7599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (37 samples, 0.11%)</title><rect x="7.5927%" y="7685" width="0.1128%" height="15" fill="rgb(215,133,35)" fg:x="2491" fg:w="37"/><text x="7.8427%" y="7695.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (6 samples, 0.02%)</title><rect x="7.6871%" y="7669" width="0.0183%" height="15" fill="rgb(213,28,5)" fg:x="2522" fg:w="6"/><text x="7.9371%" y="7679.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="7.6871%" y="7653" width="0.0183%" height="15" fill="rgb(215,77,49)" fg:x="2522" fg:w="6"/><text x="7.9371%" y="7663.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.02%)</title><rect x="7.6871%" y="7637" width="0.0183%" height="15" fill="rgb(248,100,22)" fg:x="2522" fg:w="6"/><text x="7.9371%" y="7647.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.02%)</title><rect x="7.6871%" y="7621" width="0.0183%" height="15" fill="rgb(208,67,9)" fg:x="2522" fg:w="6"/><text x="7.9371%" y="7631.50"></text></g><g><title>cfree (6 samples, 0.02%)</title><rect x="7.6871%" y="7605" width="0.0183%" height="15" fill="rgb(219,133,21)" fg:x="2522" fg:w="6"/><text x="7.9371%" y="7615.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="7.6902%" y="7589" width="0.0152%" height="15" fill="rgb(246,46,29)" fg:x="2523" fg:w="5"/><text x="7.9402%" y="7599.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="7.6932%" y="7573" width="0.0122%" height="15" fill="rgb(246,185,52)" fg:x="2524" fg:w="4"/><text x="7.9432%" y="7583.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="7.6932%" y="7557" width="0.0122%" height="15" fill="rgb(252,136,11)" fg:x="2524" fg:w="4"/><text x="7.9432%" y="7567.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.02%)</title><rect x="7.7085%" y="7621" width="0.0244%" height="15" fill="rgb(219,138,53)" fg:x="2529" fg:w="8"/><text x="7.9585%" y="7631.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u16&gt;]&gt; (8 samples, 0.02%)</title><rect x="7.7085%" y="7605" width="0.0244%" height="15" fill="rgb(211,51,23)" fg:x="2529" fg:w="8"/><text x="7.9585%" y="7615.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u16&gt;&gt; (8 samples, 0.02%)</title><rect x="7.7085%" y="7589" width="0.0244%" height="15" fill="rgb(247,221,28)" fg:x="2529" fg:w="8"/><text x="7.9585%" y="7599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u16&gt;&gt; (8 samples, 0.02%)</title><rect x="7.7085%" y="7573" width="0.0244%" height="15" fill="rgb(251,222,45)" fg:x="2529" fg:w="8"/><text x="7.9585%" y="7583.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.02%)</title><rect x="7.7085%" y="7557" width="0.0244%" height="15" fill="rgb(217,162,53)" fg:x="2529" fg:w="8"/><text x="7.9585%" y="7567.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.02%)</title><rect x="7.7085%" y="7541" width="0.0244%" height="15" fill="rgb(229,93,14)" fg:x="2529" fg:w="8"/><text x="7.9585%" y="7551.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.02%)</title><rect x="7.7085%" y="7525" width="0.0244%" height="15" fill="rgb(209,67,49)" fg:x="2529" fg:w="8"/><text x="7.9585%" y="7535.50"></text></g><g><title>cfree (8 samples, 0.02%)</title><rect x="7.7085%" y="7509" width="0.0244%" height="15" fill="rgb(213,87,29)" fg:x="2529" fg:w="8"/><text x="7.9585%" y="7519.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="7.7146%" y="7493" width="0.0183%" height="15" fill="rgb(205,151,52)" fg:x="2531" fg:w="6"/><text x="7.9646%" y="7503.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;tetrs::logic::state::State&gt;&gt;&gt; (11 samples, 0.03%)</title><rect x="7.7054%" y="7685" width="0.0335%" height="15" fill="rgb(253,215,39)" fg:x="2528" fg:w="11"/><text x="7.9554%" y="7695.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;tetrs::logic::state::State&gt;&gt; (11 samples, 0.03%)</title><rect x="7.7054%" y="7669" width="0.0335%" height="15" fill="rgb(221,220,41)" fg:x="2528" fg:w="11"/><text x="7.9554%" y="7679.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (10 samples, 0.03%)</title><rect x="7.7085%" y="7653" width="0.0305%" height="15" fill="rgb(218,133,21)" fg:x="2529" fg:w="10"/><text x="7.9585%" y="7663.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (10 samples, 0.03%)</title><rect x="7.7085%" y="7637" width="0.0305%" height="15" fill="rgb(221,193,43)" fg:x="2529" fg:w="10"/><text x="7.9585%" y="7647.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.03%)</title><rect x="7.7542%" y="7525" width="0.0335%" height="15" fill="rgb(240,128,52)" fg:x="2544" fg:w="11"/><text x="8.0042%" y="7535.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.03%)</title><rect x="7.7542%" y="7509" width="0.0335%" height="15" fill="rgb(253,114,12)" fg:x="2544" fg:w="11"/><text x="8.0042%" y="7519.50"></text></g><g><title>cfree (11 samples, 0.03%)</title><rect x="7.7542%" y="7493" width="0.0335%" height="15" fill="rgb(215,223,47)" fg:x="2544" fg:w="11"/><text x="8.0042%" y="7503.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="7.7725%" y="7477" width="0.0152%" height="15" fill="rgb(248,225,23)" fg:x="2550" fg:w="5"/><text x="8.0225%" y="7487.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.04%)</title><rect x="7.7542%" y="7605" width="0.0396%" height="15" fill="rgb(250,108,0)" fg:x="2544" fg:w="13"/><text x="8.0042%" y="7615.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u16&gt;]&gt; (13 samples, 0.04%)</title><rect x="7.7542%" y="7589" width="0.0396%" height="15" fill="rgb(228,208,7)" fg:x="2544" fg:w="13"/><text x="8.0042%" y="7599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u16&gt;&gt; (13 samples, 0.04%)</title><rect x="7.7542%" y="7573" width="0.0396%" height="15" fill="rgb(244,45,10)" fg:x="2544" fg:w="13"/><text x="8.0042%" y="7583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u16&gt;&gt; (13 samples, 0.04%)</title><rect x="7.7542%" y="7557" width="0.0396%" height="15" fill="rgb(207,125,25)" fg:x="2544" fg:w="13"/><text x="8.0042%" y="7567.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.04%)</title><rect x="7.7542%" y="7541" width="0.0396%" height="15" fill="rgb(210,195,18)" fg:x="2544" fg:w="13"/><text x="8.0042%" y="7551.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (20 samples, 0.06%)</title><rect x="7.7542%" y="7621" width="0.0610%" height="15" fill="rgb(249,80,12)" fg:x="2544" fg:w="20"/><text x="8.0042%" y="7631.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (7 samples, 0.02%)</title><rect x="7.7938%" y="7605" width="0.0213%" height="15" fill="rgb(221,65,9)" fg:x="2557" fg:w="7"/><text x="8.0438%" y="7615.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.02%)</title><rect x="7.7938%" y="7589" width="0.0213%" height="15" fill="rgb(235,49,36)" fg:x="2557" fg:w="7"/><text x="8.0438%" y="7599.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.02%)</title><rect x="7.7938%" y="7573" width="0.0213%" height="15" fill="rgb(225,32,20)" fg:x="2557" fg:w="7"/><text x="8.0438%" y="7583.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.02%)</title><rect x="7.7938%" y="7557" width="0.0213%" height="15" fill="rgb(215,141,46)" fg:x="2557" fg:w="7"/><text x="8.0438%" y="7567.50"></text></g><g><title>cfree (7 samples, 0.02%)</title><rect x="7.7938%" y="7541" width="0.0213%" height="15" fill="rgb(250,160,47)" fg:x="2557" fg:w="7"/><text x="8.0438%" y="7551.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="7.7999%" y="7525" width="0.0152%" height="15" fill="rgb(216,222,40)" fg:x="2559" fg:w="5"/><text x="8.0499%" y="7535.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="7.7999%" y="7509" width="0.0152%" height="15" fill="rgb(234,217,39)" fg:x="2559" fg:w="5"/><text x="8.0499%" y="7519.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="7.7999%" y="7493" width="0.0152%" height="15" fill="rgb(207,178,40)" fg:x="2559" fg:w="5"/><text x="8.0499%" y="7503.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.03%)</title><rect x="7.8304%" y="7461" width="0.0335%" height="15" fill="rgb(221,136,13)" fg:x="2569" fg:w="11"/><text x="8.0804%" y="7471.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.03%)</title><rect x="7.8304%" y="7445" width="0.0335%" height="15" fill="rgb(249,199,10)" fg:x="2569" fg:w="11"/><text x="8.0804%" y="7455.50"></text></g><g><title>cfree (9 samples, 0.03%)</title><rect x="7.8365%" y="7429" width="0.0274%" height="15" fill="rgb(249,222,13)" fg:x="2571" fg:w="9"/><text x="8.0865%" y="7439.50"></text></g><g><title>[libc.so.6] (7 samples, 0.02%)</title><rect x="7.8426%" y="7413" width="0.0213%" height="15" fill="rgb(244,185,38)" fg:x="2573" fg:w="7"/><text x="8.0926%" y="7423.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.05%)</title><rect x="7.8304%" y="7541" width="0.0457%" height="15" fill="rgb(236,202,9)" fg:x="2569" fg:w="15"/><text x="8.0804%" y="7551.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u16&gt;]&gt; (15 samples, 0.05%)</title><rect x="7.8304%" y="7525" width="0.0457%" height="15" fill="rgb(250,229,37)" fg:x="2569" fg:w="15"/><text x="8.0804%" y="7535.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u16&gt;&gt; (15 samples, 0.05%)</title><rect x="7.8304%" y="7509" width="0.0457%" height="15" fill="rgb(206,174,23)" fg:x="2569" fg:w="15"/><text x="8.0804%" y="7519.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u16&gt;&gt; (15 samples, 0.05%)</title><rect x="7.8304%" y="7493" width="0.0457%" height="15" fill="rgb(211,33,43)" fg:x="2569" fg:w="15"/><text x="8.0804%" y="7503.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.05%)</title><rect x="7.8304%" y="7477" width="0.0457%" height="15" fill="rgb(245,58,50)" fg:x="2569" fg:w="15"/><text x="8.0804%" y="7487.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (4 samples, 0.01%)</title><rect x="7.8639%" y="7461" width="0.0122%" height="15" fill="rgb(244,68,36)" fg:x="2580" fg:w="4"/><text x="8.1139%" y="7471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (21 samples, 0.06%)</title><rect x="7.8304%" y="7557" width="0.0640%" height="15" fill="rgb(232,229,15)" fg:x="2569" fg:w="21"/><text x="8.0804%" y="7567.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (6 samples, 0.02%)</title><rect x="7.8761%" y="7541" width="0.0183%" height="15" fill="rgb(254,30,23)" fg:x="2584" fg:w="6"/><text x="8.1261%" y="7551.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="7.8761%" y="7525" width="0.0183%" height="15" fill="rgb(235,160,14)" fg:x="2584" fg:w="6"/><text x="8.1261%" y="7535.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.02%)</title><rect x="7.8761%" y="7509" width="0.0183%" height="15" fill="rgb(212,155,44)" fg:x="2584" fg:w="6"/><text x="8.1261%" y="7519.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.02%)</title><rect x="7.8761%" y="7493" width="0.0183%" height="15" fill="rgb(226,2,50)" fg:x="2584" fg:w="6"/><text x="8.1261%" y="7503.50"></text></g><g><title>cfree (6 samples, 0.02%)</title><rect x="7.8761%" y="7477" width="0.0183%" height="15" fill="rgb(234,177,6)" fg:x="2584" fg:w="6"/><text x="8.1261%" y="7487.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="7.8792%" y="7461" width="0.0152%" height="15" fill="rgb(217,24,9)" fg:x="2585" fg:w="5"/><text x="8.1292%" y="7471.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="7.8792%" y="7445" width="0.0152%" height="15" fill="rgb(220,13,46)" fg:x="2585" fg:w="5"/><text x="8.1292%" y="7455.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="7.8792%" y="7429" width="0.0152%" height="15" fill="rgb(239,221,27)" fg:x="2585" fg:w="5"/><text x="8.1292%" y="7439.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.02%)</title><rect x="7.9036%" y="7413" width="0.0244%" height="15" fill="rgb(222,198,25)" fg:x="2593" fg:w="8"/><text x="8.1536%" y="7423.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.02%)</title><rect x="7.9036%" y="7397" width="0.0244%" height="15" fill="rgb(211,99,13)" fg:x="2593" fg:w="8"/><text x="8.1536%" y="7407.50"></text></g><g><title>cfree (8 samples, 0.02%)</title><rect x="7.9036%" y="7381" width="0.0244%" height="15" fill="rgb(232,111,31)" fg:x="2593" fg:w="8"/><text x="8.1536%" y="7391.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="7.9158%" y="7365" width="0.0122%" height="15" fill="rgb(245,82,37)" fg:x="2597" fg:w="4"/><text x="8.1658%" y="7375.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.03%)</title><rect x="7.9036%" y="7493" width="0.0274%" height="15" fill="rgb(227,149,46)" fg:x="2593" fg:w="9"/><text x="8.1536%" y="7503.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u16&gt;]&gt; (9 samples, 0.03%)</title><rect x="7.9036%" y="7477" width="0.0274%" height="15" fill="rgb(218,36,50)" fg:x="2593" fg:w="9"/><text x="8.1536%" y="7487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u16&gt;&gt; (9 samples, 0.03%)</title><rect x="7.9036%" y="7461" width="0.0274%" height="15" fill="rgb(226,80,48)" fg:x="2593" fg:w="9"/><text x="8.1536%" y="7471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u16&gt;&gt; (9 samples, 0.03%)</title><rect x="7.9036%" y="7445" width="0.0274%" height="15" fill="rgb(238,224,15)" fg:x="2593" fg:w="9"/><text x="8.1536%" y="7455.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.03%)</title><rect x="7.9036%" y="7429" width="0.0274%" height="15" fill="rgb(241,136,10)" fg:x="2593" fg:w="9"/><text x="8.1536%" y="7439.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;tetrs::logic::state::State&gt;&gt;&gt; (15 samples, 0.05%)</title><rect x="7.8944%" y="7557" width="0.0457%" height="15" fill="rgb(208,32,45)" fg:x="2590" fg:w="15"/><text x="8.1444%" y="7567.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;tetrs::logic::state::State&gt;&gt; (15 samples, 0.05%)</title><rect x="7.8944%" y="7541" width="0.0457%" height="15" fill="rgb(207,135,9)" fg:x="2590" fg:w="15"/><text x="8.1444%" y="7551.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (12 samples, 0.04%)</title><rect x="7.9036%" y="7525" width="0.0366%" height="15" fill="rgb(206,86,44)" fg:x="2593" fg:w="12"/><text x="8.1536%" y="7535.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="7.9036%" y="7509" width="0.0366%" height="15" fill="rgb(245,177,15)" fg:x="2593" fg:w="12"/><text x="8.1536%" y="7519.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,863 samples, 5.68%)</title><rect x="2.2647%" y="7909" width="5.6785%" height="15" fill="rgb(206,64,50)" fg:x="743" fg:w="1863"/><text x="2.5147%" y="7919.50">&lt;alloc:..</text></g><g><title>core::ptr::drop_in_place&lt;[indexmap::Bucket&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;,i32&gt;]&gt; (1,863 samples, 5.68%)</title><rect x="2.2647%" y="7893" width="5.6785%" height="15" fill="rgb(234,36,40)" fg:x="743" fg:w="1863"/><text x="2.5147%" y="7903.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;indexmap::Bucket&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;,i32&gt;&gt; (1,862 samples, 5.68%)</title><rect x="2.2677%" y="7877" width="5.6754%" height="15" fill="rgb(213,64,8)" fg:x="744" fg:w="1862"/><text x="2.5177%" y="7887.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (1,862 samples, 5.68%)</title><rect x="2.2677%" y="7861" width="5.6754%" height="15" fill="rgb(210,75,36)" fg:x="744" fg:w="1862"/><text x="2.5177%" y="7871.50">core::p..</text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,862 samples, 5.68%)</title><rect x="2.2677%" y="7845" width="5.6754%" height="15" fill="rgb(229,88,21)" fg:x="744" fg:w="1862"/><text x="2.5177%" y="7855.50">&lt;alloc:..</text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (1,715 samples, 5.23%)</title><rect x="2.7158%" y="7829" width="5.2274%" height="15" fill="rgb(252,204,47)" fg:x="891" fg:w="1715"/><text x="2.9658%" y="7839.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (271 samples, 0.83%)</title><rect x="7.1172%" y="7813" width="0.8260%" height="15" fill="rgb(208,77,27)" fg:x="2335" fg:w="271"/><text x="7.3672%" y="7823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (264 samples, 0.80%)</title><rect x="7.1385%" y="7797" width="0.8047%" height="15" fill="rgb(221,76,26)" fg:x="2342" fg:w="264"/><text x="7.3885%" y="7807.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (264 samples, 0.80%)</title><rect x="7.1385%" y="7781" width="0.8047%" height="15" fill="rgb(225,139,18)" fg:x="2342" fg:w="264"/><text x="7.3885%" y="7791.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (233 samples, 0.71%)</title><rect x="7.2330%" y="7765" width="0.7102%" height="15" fill="rgb(230,137,11)" fg:x="2373" fg:w="233"/><text x="7.4830%" y="7775.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (120 samples, 0.37%)</title><rect x="7.5774%" y="7749" width="0.3658%" height="15" fill="rgb(212,28,1)" fg:x="2486" fg:w="120"/><text x="7.8274%" y="7759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (119 samples, 0.36%)</title><rect x="7.5805%" y="7733" width="0.3627%" height="15" fill="rgb(248,164,17)" fg:x="2487" fg:w="119"/><text x="7.8305%" y="7743.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (119 samples, 0.36%)</title><rect x="7.5805%" y="7717" width="0.3627%" height="15" fill="rgb(222,171,42)" fg:x="2487" fg:w="119"/><text x="7.8305%" y="7727.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (115 samples, 0.35%)</title><rect x="7.5927%" y="7701" width="0.3505%" height="15" fill="rgb(243,84,45)" fg:x="2491" fg:w="115"/><text x="7.8427%" y="7711.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (67 samples, 0.20%)</title><rect x="7.7390%" y="7685" width="0.2042%" height="15" fill="rgb(252,49,23)" fg:x="2539" fg:w="67"/><text x="7.9890%" y="7695.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (66 samples, 0.20%)</title><rect x="7.7420%" y="7669" width="0.2012%" height="15" fill="rgb(215,19,7)" fg:x="2540" fg:w="66"/><text x="7.9920%" y="7679.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (66 samples, 0.20%)</title><rect x="7.7420%" y="7653" width="0.2012%" height="15" fill="rgb(238,81,41)" fg:x="2540" fg:w="66"/><text x="7.9920%" y="7663.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (62 samples, 0.19%)</title><rect x="7.7542%" y="7637" width="0.1890%" height="15" fill="rgb(210,199,37)" fg:x="2544" fg:w="62"/><text x="8.0042%" y="7647.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (39 samples, 0.12%)</title><rect x="7.8243%" y="7621" width="0.1189%" height="15" fill="rgb(244,192,49)" fg:x="2567" fg:w="39"/><text x="8.0743%" y="7631.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (39 samples, 0.12%)</title><rect x="7.8243%" y="7605" width="0.1189%" height="15" fill="rgb(226,211,11)" fg:x="2567" fg:w="39"/><text x="8.0743%" y="7615.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (39 samples, 0.12%)</title><rect x="7.8243%" y="7589" width="0.1189%" height="15" fill="rgb(236,162,54)" fg:x="2567" fg:w="39"/><text x="8.0743%" y="7599.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (37 samples, 0.11%)</title><rect x="7.8304%" y="7573" width="0.1128%" height="15" fill="rgb(220,229,9)" fg:x="2569" fg:w="37"/><text x="8.0804%" y="7583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;indexmap::Bucket&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;,i32&gt;&gt;&gt; (1,870 samples, 5.70%)</title><rect x="2.2647%" y="7925" width="5.6998%" height="15" fill="rgb(250,87,22)" fg:x="743" fg:w="1870"/><text x="2.5147%" y="7935.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;indexmap::Bucket&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;,i32&gt;&gt;&gt; (7 samples, 0.02%)</title><rect x="7.9432%" y="7909" width="0.0213%" height="15" fill="rgb(239,43,17)" fg:x="2606" fg:w="7"/><text x="8.1932%" y="7919.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.02%)</title><rect x="7.9432%" y="7893" width="0.0213%" height="15" fill="rgb(231,177,25)" fg:x="2606" fg:w="7"/><text x="8.1932%" y="7903.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.02%)</title><rect x="7.9432%" y="7877" width="0.0213%" height="15" fill="rgb(219,179,1)" fg:x="2606" fg:w="7"/><text x="8.1932%" y="7887.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.02%)</title><rect x="7.9432%" y="7861" width="0.0213%" height="15" fill="rgb(238,219,53)" fg:x="2606" fg:w="7"/><text x="8.1932%" y="7871.50"></text></g><g><title>cfree (7 samples, 0.02%)</title><rect x="7.9432%" y="7845" width="0.0213%" height="15" fill="rgb(232,167,36)" fg:x="2606" fg:w="7"/><text x="8.1932%" y="7855.50"></text></g><g><title>[libc.so.6] (7 samples, 0.02%)</title><rect x="7.9432%" y="7829" width="0.0213%" height="15" fill="rgb(244,19,51)" fg:x="2606" fg:w="7"/><text x="8.1932%" y="7839.50"></text></g><g><title>[libc.so.6] (7 samples, 0.02%)</title><rect x="7.9432%" y="7813" width="0.0213%" height="15" fill="rgb(224,6,22)" fg:x="2606" fg:w="7"/><text x="8.1932%" y="7823.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="7.9462%" y="7797" width="0.0183%" height="15" fill="rgb(224,145,5)" fg:x="2607" fg:w="6"/><text x="8.1962%" y="7807.50"></text></g><g><title>core::ptr::drop_in_place&lt;priority_queue::priority_queue::PriorityQueue&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;,i32&gt;&gt; (1,874 samples, 5.71%)</title><rect x="2.2586%" y="7989" width="5.7120%" height="15" fill="rgb(234,130,49)" fg:x="741" fg:w="1874"/><text x="2.5086%" y="7999.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;priority_queue::store::Store&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;,i32&gt;&gt; (1,874 samples, 5.71%)</title><rect x="2.2586%" y="7973" width="5.7120%" height="15" fill="rgb(254,6,2)" fg:x="741" fg:w="1874"/><text x="2.5086%" y="7983.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;indexmap::map::IndexMap&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;,i32&gt;&gt; (1,872 samples, 5.71%)</title><rect x="2.2647%" y="7957" width="5.7059%" height="15" fill="rgb(208,96,46)" fg:x="743" fg:w="1872"/><text x="2.5147%" y="7967.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;indexmap::map::core::IndexMapCore&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;,i32&gt;&gt; (1,872 samples, 5.71%)</title><rect x="2.2647%" y="7941" width="5.7059%" height="15" fill="rgb(239,3,39)" fg:x="743" fg:w="1872"/><text x="2.5147%" y="7951.50">core::p..</text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="7.9828%" y="7893" width="0.0122%" height="15" fill="rgb(233,210,1)" fg:x="2619" fg:w="4"/><text x="8.2328%" y="7903.50"></text></g><g><title>cfree (4 samples, 0.01%)</title><rect x="8.0590%" y="7813" width="0.0122%" height="15" fill="rgb(244,137,37)" fg:x="2644" fg:w="4"/><text x="8.3090%" y="7823.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.04%)</title><rect x="8.0712%" y="7781" width="0.0427%" height="15" fill="rgb(240,136,2)" fg:x="2648" fg:w="14"/><text x="8.3212%" y="7791.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u16&gt;]&gt; (14 samples, 0.04%)</title><rect x="8.0712%" y="7765" width="0.0427%" height="15" fill="rgb(239,18,37)" fg:x="2648" fg:w="14"/><text x="8.3212%" y="7775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u16&gt;&gt; (14 samples, 0.04%)</title><rect x="8.0712%" y="7749" width="0.0427%" height="15" fill="rgb(218,185,22)" fg:x="2648" fg:w="14"/><text x="8.3212%" y="7759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u16&gt;&gt; (14 samples, 0.04%)</title><rect x="8.0712%" y="7733" width="0.0427%" height="15" fill="rgb(225,218,4)" fg:x="2648" fg:w="14"/><text x="8.3212%" y="7743.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.04%)</title><rect x="8.0712%" y="7717" width="0.0427%" height="15" fill="rgb(230,182,32)" fg:x="2648" fg:w="14"/><text x="8.3212%" y="7727.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.04%)</title><rect x="8.0712%" y="7701" width="0.0427%" height="15" fill="rgb(242,56,43)" fg:x="2648" fg:w="14"/><text x="8.3212%" y="7711.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.04%)</title><rect x="8.0712%" y="7685" width="0.0427%" height="15" fill="rgb(233,99,24)" fg:x="2648" fg:w="14"/><text x="8.3212%" y="7695.50"></text></g><g><title>cfree (14 samples, 0.04%)</title><rect x="8.0712%" y="7669" width="0.0427%" height="15" fill="rgb(234,209,42)" fg:x="2648" fg:w="14"/><text x="8.3212%" y="7679.50"></text></g><g><title>[libc.so.6] (11 samples, 0.03%)</title><rect x="8.0803%" y="7653" width="0.0335%" height="15" fill="rgb(227,7,12)" fg:x="2651" fg:w="11"/><text x="8.3303%" y="7663.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (40 samples, 0.12%)</title><rect x="7.9950%" y="7893" width="0.1219%" height="15" fill="rgb(245,203,43)" fg:x="2623" fg:w="40"/><text x="8.2450%" y="7903.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (40 samples, 0.12%)</title><rect x="7.9950%" y="7877" width="0.1219%" height="15" fill="rgb(238,205,33)" fg:x="2623" fg:w="40"/><text x="8.2450%" y="7887.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::rc::Rc&lt;tetrs::logic::state::State&gt;,())&gt; (40 samples, 0.12%)</title><rect x="7.9950%" y="7861" width="0.1219%" height="15" fill="rgb(231,56,7)" fg:x="2623" fg:w="40"/><text x="8.2450%" y="7871.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (40 samples, 0.12%)</title><rect x="7.9950%" y="7845" width="0.1219%" height="15" fill="rgb(244,186,29)" fg:x="2623" fg:w="40"/><text x="8.2450%" y="7855.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (40 samples, 0.12%)</title><rect x="7.9950%" y="7829" width="0.1219%" height="15" fill="rgb(234,111,31)" fg:x="2623" fg:w="40"/><text x="8.2450%" y="7839.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (15 samples, 0.05%)</title><rect x="8.0712%" y="7813" width="0.0457%" height="15" fill="rgb(241,149,10)" fg:x="2648" fg:w="15"/><text x="8.3212%" y="7823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (15 samples, 0.05%)</title><rect x="8.0712%" y="7797" width="0.0457%" height="15" fill="rgb(249,206,44)" fg:x="2648" fg:w="15"/><text x="8.3212%" y="7807.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (50 samples, 0.15%)</title><rect x="7.9706%" y="7925" width="0.1524%" height="15" fill="rgb(251,153,30)" fg:x="2615" fg:w="50"/><text x="8.2206%" y="7935.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (50 samples, 0.15%)</title><rect x="7.9706%" y="7909" width="0.1524%" height="15" fill="rgb(239,152,38)" fg:x="2615" fg:w="50"/><text x="8.2206%" y="7919.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (52 samples, 0.16%)</title><rect x="7.9706%" y="7989" width="0.1585%" height="15" fill="rgb(249,139,47)" fg:x="2615" fg:w="52"/><text x="8.2206%" y="7999.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;,std::collections::hash::map::RandomState&gt;&gt; (52 samples, 0.16%)</title><rect x="7.9706%" y="7973" width="0.1585%" height="15" fill="rgb(244,64,35)" fg:x="2615" fg:w="52"/><text x="8.2206%" y="7983.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;,(),std::collections::hash::map::RandomState&gt;&gt; (52 samples, 0.16%)</title><rect x="7.9706%" y="7957" width="0.1585%" height="15" fill="rgb(216,46,15)" fg:x="2615" fg:w="52"/><text x="8.2206%" y="7967.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::rc::Rc&lt;tetrs::logic::state::State&gt;,())&gt;&gt; (52 samples, 0.16%)</title><rect x="7.9706%" y="7941" width="0.1585%" height="15" fill="rgb(250,74,19)" fg:x="2615" fg:w="52"/><text x="8.2206%" y="7951.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::erase (6 samples, 0.02%)</title><rect x="8.1565%" y="7925" width="0.0183%" height="15" fill="rgb(249,42,33)" fg:x="2676" fg:w="6"/><text x="8.4065%" y="7935.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::erase_no_drop (6 samples, 0.02%)</title><rect x="8.1565%" y="7909" width="0.0183%" height="15" fill="rgb(242,149,17)" fg:x="2676" fg:w="6"/><text x="8.4065%" y="7919.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::erase (6 samples, 0.02%)</title><rect x="8.1565%" y="7893" width="0.0183%" height="15" fill="rgb(244,29,21)" fg:x="2676" fg:w="6"/><text x="8.4065%" y="7903.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::swap_remove_index (15 samples, 0.05%)</title><rect x="8.1413%" y="7973" width="0.0457%" height="15" fill="rgb(220,130,37)" fg:x="2671" fg:w="15"/><text x="8.3913%" y="7983.50"></text></g><g><title>indexmap::map::core::erase_index (10 samples, 0.03%)</title><rect x="8.1565%" y="7957" width="0.0305%" height="15" fill="rgb(211,67,2)" fg:x="2676" fg:w="10"/><text x="8.4065%" y="7967.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::erase_entry (10 samples, 0.03%)</title><rect x="8.1565%" y="7941" width="0.0305%" height="15" fill="rgb(235,68,52)" fg:x="2676" fg:w="10"/><text x="8.4065%" y="7951.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (4 samples, 0.01%)</title><rect x="8.1748%" y="7925" width="0.0122%" height="15" fill="rgb(246,142,3)" fg:x="2682" fg:w="4"/><text x="8.4248%" y="7935.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::gt (9 samples, 0.03%)</title><rect x="8.2388%" y="7957" width="0.0274%" height="15" fill="rgb(241,25,7)" fg:x="2703" fg:w="9"/><text x="8.4888%" y="7967.50"></text></g><g><title>priority_queue::store::Store&lt;I,P,H&gt;::get_priority_from_position (6 samples, 0.02%)</title><rect x="8.2724%" y="7957" width="0.0183%" height="15" fill="rgb(242,119,39)" fg:x="2714" fg:w="6"/><text x="8.5224%" y="7967.50"></text></g><g><title>priority_queue::priority_queue::PriorityQueue&lt;I,P,H&gt;::heapify (41 samples, 0.12%)</title><rect x="8.1870%" y="7973" width="0.1250%" height="15" fill="rgb(241,98,45)" fg:x="2686" fg:w="41"/><text x="8.4370%" y="7983.50"></text></g><g><title>priority_queue::store::Store&lt;I,P,H&gt;::swap (7 samples, 0.02%)</title><rect x="8.2907%" y="7957" width="0.0213%" height="15" fill="rgb(254,28,30)" fg:x="2720" fg:w="7"/><text x="8.5407%" y="7967.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (7 samples, 0.02%)</title><rect x="8.2907%" y="7941" width="0.0213%" height="15" fill="rgb(241,142,54)" fg:x="2720" fg:w="7"/><text x="8.5407%" y="7951.50"></text></g><g><title>priority_queue::priority_queue::PriorityQueue&lt;I,P,H&gt;::pop (65 samples, 0.20%)</title><rect x="8.1291%" y="7989" width="0.1981%" height="15" fill="rgb(222,85,15)" fg:x="2667" fg:w="65"/><text x="8.3791%" y="7999.50"></text></g><g><title>priority_queue::store::Store&lt;I,P,H&gt;::swap_remove (5 samples, 0.02%)</title><rect x="8.3120%" y="7973" width="0.0152%" height="15" fill="rgb(210,85,47)" fg:x="2727" fg:w="5"/><text x="8.5620%" y="7983.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (44 samples, 0.13%)</title><rect x="8.4187%" y="7909" width="0.1341%" height="15" fill="rgb(224,206,25)" fg:x="2762" fg:w="44"/><text x="8.6687%" y="7919.50"></text></g><g><title>alloc::alloc::Global::grow_impl (44 samples, 0.13%)</title><rect x="8.4187%" y="7893" width="0.1341%" height="15" fill="rgb(243,201,19)" fg:x="2762" fg:w="44"/><text x="8.6687%" y="7903.50"></text></g><g><title>alloc::alloc::realloc (44 samples, 0.13%)</title><rect x="8.4187%" y="7877" width="0.1341%" height="15" fill="rgb(236,59,4)" fg:x="2762" fg:w="44"/><text x="8.6687%" y="7887.50"></text></g><g><title>realloc (41 samples, 0.12%)</title><rect x="8.4278%" y="7861" width="0.1250%" height="15" fill="rgb(254,179,45)" fg:x="2765" fg:w="41"/><text x="8.6778%" y="7871.50"></text></g><g><title>[libc.so.6] (33 samples, 0.10%)</title><rect x="8.4522%" y="7845" width="0.1006%" height="15" fill="rgb(226,14,10)" fg:x="2773" fg:w="33"/><text x="8.7022%" y="7855.50"></text></g><g><title>[libc.so.6] (31 samples, 0.09%)</title><rect x="8.4583%" y="7829" width="0.0945%" height="15" fill="rgb(244,27,41)" fg:x="2775" fg:w="31"/><text x="8.7083%" y="7839.50"></text></g><g><title>alloc::raw_vec::finish_grow (46 samples, 0.14%)</title><rect x="8.4187%" y="7925" width="0.1402%" height="15" fill="rgb(235,35,32)" fg:x="2762" fg:w="46"/><text x="8.6687%" y="7935.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (53 samples, 0.16%)</title><rect x="8.4034%" y="7957" width="0.1615%" height="15" fill="rgb(218,68,31)" fg:x="2757" fg:w="53"/><text x="8.6534%" y="7967.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (52 samples, 0.16%)</title><rect x="8.4065%" y="7941" width="0.1585%" height="15" fill="rgb(207,120,37)" fg:x="2758" fg:w="52"/><text x="8.6565%" y="7951.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (67 samples, 0.20%)</title><rect x="8.3638%" y="7973" width="0.2042%" height="15" fill="rgb(227,98,0)" fg:x="2744" fg:w="67"/><text x="8.6138%" y="7983.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (5 samples, 0.02%)</title><rect x="8.6290%" y="7909" width="0.0152%" height="15" fill="rgb(207,7,3)" fg:x="2831" fg:w="5"/><text x="8.8790%" y="7919.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.02%)</title><rect x="8.6290%" y="7893" width="0.0152%" height="15" fill="rgb(206,98,19)" fg:x="2831" fg:w="5"/><text x="8.8790%" y="7903.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (234 samples, 0.71%)</title><rect x="8.6442%" y="7909" width="0.7132%" height="15" fill="rgb(217,5,26)" fg:x="2836" fg:w="234"/><text x="8.8942%" y="7919.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (190 samples, 0.58%)</title><rect x="8.7783%" y="7893" width="0.5791%" height="15" fill="rgb(235,190,38)" fg:x="2880" fg:w="190"/><text x="9.0283%" y="7903.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (6 samples, 0.02%)</title><rect x="9.4306%" y="7813" width="0.0183%" height="15" fill="rgb(247,86,24)" fg:x="3094" fg:w="6"/><text x="9.6806%" y="7823.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (14 samples, 0.04%)</title><rect x="9.4184%" y="7829" width="0.0427%" height="15" fill="rgb(205,101,16)" fg:x="3090" fg:w="14"/><text x="9.6684%" y="7839.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (4 samples, 0.01%)</title><rect x="9.4489%" y="7813" width="0.0122%" height="15" fill="rgb(246,168,33)" fg:x="3100" fg:w="4"/><text x="9.6989%" y="7823.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (52 samples, 0.16%)</title><rect x="9.3605%" y="7877" width="0.1585%" height="15" fill="rgb(231,114,1)" fg:x="3071" fg:w="52"/><text x="9.6105%" y="7887.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (47 samples, 0.14%)</title><rect x="9.3758%" y="7861" width="0.1433%" height="15" fill="rgb(207,184,53)" fg:x="3076" fg:w="47"/><text x="9.6258%" y="7871.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (47 samples, 0.14%)</title><rect x="9.3758%" y="7845" width="0.1433%" height="15" fill="rgb(224,95,51)" fg:x="3076" fg:w="47"/><text x="9.6258%" y="7855.50"></text></g><g><title>core::hash::sip::u8to64_le (18 samples, 0.05%)</title><rect x="9.4642%" y="7829" width="0.0549%" height="15" fill="rgb(212,188,45)" fg:x="3105" fg:w="18"/><text x="9.7142%" y="7839.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (10 samples, 0.03%)</title><rect x="9.4885%" y="7813" width="0.0305%" height="15" fill="rgb(223,154,38)" fg:x="3113" fg:w="10"/><text x="9.7385%" y="7823.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for char&gt;::hash (62 samples, 0.19%)</title><rect x="9.3575%" y="7909" width="0.1890%" height="15" fill="rgb(251,22,52)" fg:x="3070" fg:w="62"/><text x="9.6075%" y="7919.50"></text></g><g><title>core::hash::Hasher::write_u32 (62 samples, 0.19%)</title><rect x="9.3575%" y="7893" width="0.1890%" height="15" fill="rgb(229,209,22)" fg:x="3070" fg:w="62"/><text x="9.6075%" y="7903.50"></text></g><g><title>core::num::&lt;impl u32&gt;::to_ne_bytes (9 samples, 0.03%)</title><rect x="9.5190%" y="7877" width="0.0274%" height="15" fill="rgb(234,138,34)" fg:x="3123" fg:w="9"/><text x="9.7690%" y="7887.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (118 samples, 0.36%)</title><rect x="12.4451%" y="7813" width="0.3597%" height="15" fill="rgb(212,95,11)" fg:x="4083" fg:w="118"/><text x="12.6951%" y="7823.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (297 samples, 0.91%)</title><rect x="12.2257%" y="7829" width="0.9053%" height="15" fill="rgb(240,179,47)" fg:x="4011" fg:w="297"/><text x="12.4757%" y="7839.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (107 samples, 0.33%)</title><rect x="12.8048%" y="7813" width="0.3261%" height="15" fill="rgb(240,163,11)" fg:x="4201" fg:w="107"/><text x="13.0548%" y="7823.50"></text></g><g><title>core::cmp::min (116 samples, 0.35%)</title><rect x="13.1370%" y="7829" width="0.3536%" height="15" fill="rgb(236,37,12)" fg:x="4310" fg:w="116"/><text x="13.3870%" y="7839.50"></text></g><g><title>core::cmp::Ord::min (116 samples, 0.35%)</title><rect x="13.1370%" y="7813" width="0.3536%" height="15" fill="rgb(232,164,16)" fg:x="4310" fg:w="116"/><text x="13.3870%" y="7823.50"></text></g><g><title>core::cmp::min_by (116 samples, 0.35%)</title><rect x="13.1370%" y="7797" width="0.3536%" height="15" fill="rgb(244,205,15)" fg:x="4310" fg:w="116"/><text x="13.3870%" y="7807.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1,959 samples, 5.97%)</title><rect x="9.7019%" y="7877" width="5.9711%" height="15" fill="rgb(223,117,47)" fg:x="3183" fg:w="1959"/><text x="9.9519%" y="7887.50">&lt;std::co..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1,951 samples, 5.95%)</title><rect x="9.7263%" y="7861" width="5.9467%" height="15" fill="rgb(244,107,35)" fg:x="3191" fg:w="1951"/><text x="9.9763%" y="7871.50">&lt;core::h..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,951 samples, 5.95%)</title><rect x="9.7263%" y="7845" width="5.9467%" height="15" fill="rgb(205,140,8)" fg:x="3191" fg:w="1951"/><text x="9.9763%" y="7855.50">&lt;core::h..</text></g><g><title>core::hash::sip::u8to64_le (716 samples, 2.18%)</title><rect x="13.4906%" y="7829" width="2.1824%" height="15" fill="rgb(228,84,46)" fg:x="4426" fg:w="716"/><text x="13.7406%" y="7839.50">c..</text></g><g><title>core::intrinsics::copy_nonoverlapping (9 samples, 0.03%)</title><rect x="15.6456%" y="7813" width="0.0274%" height="15" fill="rgb(254,188,9)" fg:x="5133" fg:w="9"/><text x="15.8956%" y="7823.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::hash::Hash&gt;::hash (2,405 samples, 7.33%)</title><rect x="8.6016%" y="7941" width="7.3305%" height="15" fill="rgb(206,112,54)" fg:x="2822" fg:w="2405"/><text x="8.8516%" y="7951.50">&lt;alloc::rc..</text></g><g><title>&lt;tetrs::logic::state::State as core::hash::Hash&gt;::hash (2,405 samples, 7.33%)</title><rect x="8.6016%" y="7925" width="7.3305%" height="15" fill="rgb(216,84,49)" fg:x="2822" fg:w="2405"/><text x="8.8516%" y="7935.50">&lt;tetrs::lo..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (2,095 samples, 6.39%)</title><rect x="9.5465%" y="7909" width="6.3856%" height="15" fill="rgb(214,194,35)" fg:x="3132" fg:w="2095"/><text x="9.7965%" y="7919.50">core::ha..</text></g><g><title>core::hash::Hasher::write_u16 (2,095 samples, 6.39%)</title><rect x="9.5465%" y="7893" width="6.3856%" height="15" fill="rgb(249,28,3)" fg:x="3132" fg:w="2095"/><text x="9.7965%" y="7903.50">core::ha..</text></g><g><title>core::num::&lt;impl u16&gt;::to_ne_bytes (85 samples, 0.26%)</title><rect x="15.6730%" y="7877" width="0.2591%" height="15" fill="rgb(222,56,52)" fg:x="5142" fg:w="85"/><text x="15.9230%" y="7887.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (10 samples, 0.03%)</title><rect x="16.1698%" y="7877" width="0.0305%" height="15" fill="rgb(245,217,50)" fg:x="5305" fg:w="10"/><text x="16.4198%" y="7887.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (21 samples, 0.06%)</title><rect x="16.1546%" y="7893" width="0.0640%" height="15" fill="rgb(213,201,24)" fg:x="5300" fg:w="21"/><text x="16.4046%" y="7903.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (6 samples, 0.02%)</title><rect x="16.2003%" y="7877" width="0.0183%" height="15" fill="rgb(248,116,28)" fg:x="5315" fg:w="6"/><text x="16.4503%" y="7887.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (21 samples, 0.06%)</title><rect x="16.2277%" y="7877" width="0.0640%" height="15" fill="rgb(219,72,43)" fg:x="5324" fg:w="21"/><text x="16.4777%" y="7887.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (124 samples, 0.38%)</title><rect x="15.9321%" y="7941" width="0.3780%" height="15" fill="rgb(209,138,14)" fg:x="5227" fg:w="124"/><text x="16.1821%" y="7951.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (124 samples, 0.38%)</title><rect x="15.9321%" y="7925" width="0.3780%" height="15" fill="rgb(222,18,33)" fg:x="5227" fg:w="124"/><text x="16.1821%" y="7935.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (124 samples, 0.38%)</title><rect x="15.9321%" y="7909" width="0.3780%" height="15" fill="rgb(213,199,7)" fg:x="5227" fg:w="124"/><text x="16.1821%" y="7919.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (30 samples, 0.09%)</title><rect x="16.2186%" y="7893" width="0.0914%" height="15" fill="rgb(250,110,10)" fg:x="5321" fg:w="30"/><text x="16.4686%" y="7903.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (6 samples, 0.02%)</title><rect x="16.2918%" y="7877" width="0.0183%" height="15" fill="rgb(248,123,6)" fg:x="5345" fg:w="6"/><text x="16.5418%" y="7887.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (2,532 samples, 7.72%)</title><rect x="8.6016%" y="7957" width="7.7176%" height="15" fill="rgb(206,91,31)" fg:x="2822" fg:w="2532"/><text x="8.8516%" y="7967.50">indexmap::m..</text></g><g><title>&lt;hashbrown::raw::inner::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.06%)</title><rect x="16.3741%" y="7909" width="0.0579%" height="15" fill="rgb(211,154,13)" fg:x="5372" fg:w="19"/><text x="16.6241%" y="7919.50"></text></g><g><title>hashbrown::raw::inner::ProbeSeq::move_next (6 samples, 0.02%)</title><rect x="16.4320%" y="7909" width="0.0183%" height="15" fill="rgb(225,148,7)" fg:x="5391" fg:w="6"/><text x="16.6820%" y="7919.50"></text></g><g><title>&lt;tetrs::logic::state::State as core::cmp::PartialEq&gt;::eq (60 samples, 0.18%)</title><rect x="16.4594%" y="7829" width="0.1829%" height="15" fill="rgb(220,160,43)" fg:x="5400" fg:w="60"/><text x="16.7094%" y="7839.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (58 samples, 0.18%)</title><rect x="16.4655%" y="7813" width="0.1768%" height="15" fill="rgb(213,52,39)" fg:x="5402" fg:w="58"/><text x="16.7155%" y="7823.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (58 samples, 0.18%)</title><rect x="16.4655%" y="7797" width="0.1768%" height="15" fill="rgb(243,137,7)" fg:x="5402" fg:w="58"/><text x="16.7155%" y="7807.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (58 samples, 0.18%)</title><rect x="16.4655%" y="7781" width="0.1768%" height="15" fill="rgb(230,79,13)" fg:x="5402" fg:w="58"/><text x="16.7155%" y="7791.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (52 samples, 0.16%)</title><rect x="16.4838%" y="7765" width="0.1585%" height="15" fill="rgb(247,105,23)" fg:x="5408" fg:w="52"/><text x="16.7338%" y="7775.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (52 samples, 0.16%)</title><rect x="16.4838%" y="7749" width="0.1585%" height="15" fill="rgb(223,179,41)" fg:x="5408" fg:w="52"/><text x="16.7338%" y="7759.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (44 samples, 0.13%)</title><rect x="16.5082%" y="7733" width="0.1341%" height="15" fill="rgb(218,9,34)" fg:x="5416" fg:w="44"/><text x="16.7582%" y="7743.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::_{{closure}} (44 samples, 0.13%)</title><rect x="16.5082%" y="7717" width="0.1341%" height="15" fill="rgb(222,106,8)" fg:x="5416" fg:w="44"/><text x="16.7582%" y="7727.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (44 samples, 0.13%)</title><rect x="16.5082%" y="7701" width="0.1341%" height="15" fill="rgb(211,220,0)" fg:x="5416" fg:w="44"/><text x="16.7582%" y="7711.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (44 samples, 0.13%)</title><rect x="16.5082%" y="7685" width="0.1341%" height="15" fill="rgb(229,52,16)" fg:x="5416" fg:w="44"/><text x="16.7582%" y="7695.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (44 samples, 0.13%)</title><rect x="16.5082%" y="7669" width="0.1341%" height="15" fill="rgb(212,155,18)" fg:x="5416" fg:w="44"/><text x="16.7582%" y="7679.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (44 samples, 0.13%)</title><rect x="16.5082%" y="7653" width="0.1341%" height="15" fill="rgb(242,21,14)" fg:x="5416" fg:w="44"/><text x="16.7582%" y="7663.50"></text></g><g><title>[libc.so.6] (37 samples, 0.11%)</title><rect x="16.5295%" y="7637" width="0.1128%" height="15" fill="rgb(222,19,48)" fg:x="5423" fg:w="37"/><text x="16.7795%" y="7647.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find::_{{closure}} (67 samples, 0.20%)</title><rect x="16.4503%" y="7909" width="0.2042%" height="15" fill="rgb(232,45,27)" fg:x="5397" fg:w="67"/><text x="16.7003%" y="7919.50"></text></g><g><title>indexmap::map::core::equivalent::_{{closure}} (67 samples, 0.20%)</title><rect x="16.4503%" y="7893" width="0.2042%" height="15" fill="rgb(249,103,42)" fg:x="5397" fg:w="67"/><text x="16.7003%" y="7903.50"></text></g><g><title>&lt;Q as indexmap::equivalent::Equivalent&lt;K&gt;&gt;::equivalent (64 samples, 0.20%)</title><rect x="16.4594%" y="7877" width="0.1951%" height="15" fill="rgb(246,81,33)" fg:x="5400" fg:w="64"/><text x="16.7094%" y="7887.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::cmp::PartialEq&gt;::eq (64 samples, 0.20%)</title><rect x="16.4594%" y="7861" width="0.1951%" height="15" fill="rgb(252,33,42)" fg:x="5400" fg:w="64"/><text x="16.7094%" y="7871.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as alloc::rc::RcEqIdent&lt;T,A&gt;&gt;::eq (64 samples, 0.20%)</title><rect x="16.4594%" y="7845" width="0.1951%" height="15" fill="rgb(209,212,41)" fg:x="5400" fg:w="64"/><text x="16.7094%" y="7855.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::ptr_eq (4 samples, 0.01%)</title><rect x="16.6423%" y="7829" width="0.0122%" height="15" fill="rgb(207,154,6)" fg:x="5460" fg:w="4"/><text x="16.8923%" y="7839.50"></text></g><g><title>hashbrown::raw::inner::h2 (12 samples, 0.04%)</title><rect x="16.6545%" y="7909" width="0.0366%" height="15" fill="rgb(223,64,47)" fg:x="5464" fg:w="12"/><text x="16.9045%" y="7919.50"></text></g><g><title>hashbrown::raw::inner::likely (11 samples, 0.03%)</title><rect x="16.6911%" y="7909" width="0.0335%" height="15" fill="rgb(211,161,38)" fg:x="5476" fg:w="11"/><text x="16.9411%" y="7919.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::load (8 samples, 0.02%)</title><rect x="16.7246%" y="7909" width="0.0244%" height="15" fill="rgb(219,138,40)" fg:x="5487" fg:w="8"/><text x="16.9746%" y="7919.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (8 samples, 0.02%)</title><rect x="16.7246%" y="7893" width="0.0244%" height="15" fill="rgb(241,228,46)" fg:x="5487" fg:w="8"/><text x="16.9746%" y="7903.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8 samples, 0.02%)</title><rect x="16.7246%" y="7877" width="0.0244%" height="15" fill="rgb(223,209,38)" fg:x="5487" fg:w="8"/><text x="16.9746%" y="7887.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_byte (4 samples, 0.01%)</title><rect x="16.7490%" y="7909" width="0.0122%" height="15" fill="rgb(236,164,45)" fg:x="5495" fg:w="4"/><text x="16.9990%" y="7919.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (4 samples, 0.01%)</title><rect x="16.7490%" y="7893" width="0.0122%" height="15" fill="rgb(231,15,5)" fg:x="5495" fg:w="4"/><text x="16.9990%" y="7903.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::entry (2,715 samples, 8.28%)</title><rect x="8.5680%" y="7973" width="8.2754%" height="15" fill="rgb(252,35,15)" fg:x="2811" fg:w="2715"/><text x="8.8180%" y="7983.50">indexmap::ma..</text></g><g><title>indexmap::map::core::raw::&lt;impl indexmap::map::core::IndexMapCore&lt;K,V&gt;&gt;::entry (172 samples, 0.52%)</title><rect x="16.3192%" y="7957" width="0.5243%" height="15" fill="rgb(248,181,18)" fg:x="5354" fg:w="172"/><text x="16.5692%" y="7967.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (157 samples, 0.48%)</title><rect x="16.3649%" y="7941" width="0.4785%" height="15" fill="rgb(233,39,42)" fg:x="5369" fg:w="157"/><text x="16.6149%" y="7951.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_inner (157 samples, 0.48%)</title><rect x="16.3649%" y="7925" width="0.4785%" height="15" fill="rgb(238,110,33)" fg:x="5369" fg:w="157"/><text x="16.6149%" y="7935.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_empty (27 samples, 0.08%)</title><rect x="16.7612%" y="7909" width="0.0823%" height="15" fill="rgb(233,195,10)" fg:x="5499" fg:w="27"/><text x="17.0112%" y="7919.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_byte (27 samples, 0.08%)</title><rect x="16.7612%" y="7893" width="0.0823%" height="15" fill="rgb(254,105,3)" fg:x="5499" fg:w="27"/><text x="17.0112%" y="7903.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (27 samples, 0.08%)</title><rect x="16.7612%" y="7877" width="0.0823%" height="15" fill="rgb(221,225,9)" fg:x="5499" fg:w="27"/><text x="17.0112%" y="7887.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (56 samples, 0.17%)</title><rect x="16.8861%" y="7941" width="0.1707%" height="15" fill="rgb(224,227,45)" fg:x="5540" fg:w="56"/><text x="17.1361%" y="7951.50"></text></g><g><title>core::ptr::write (53 samples, 0.16%)</title><rect x="16.8953%" y="7925" width="0.1615%" height="15" fill="rgb(229,198,43)" fg:x="5543" fg:w="53"/><text x="17.1453%" y="7935.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::bucket (4 samples, 0.01%)</title><rect x="17.1056%" y="7925" width="0.0122%" height="15" fill="rgb(206,209,35)" fg:x="5612" fg:w="4"/><text x="17.3556%" y="7935.50"></text></g><g><title>hashbrown::raw::inner::Bucket&lt;T&gt;::from_base_index (4 samples, 0.01%)</title><rect x="17.1056%" y="7909" width="0.0122%" height="15" fill="rgb(245,195,53)" fg:x="5612" fg:w="4"/><text x="17.3556%" y="7919.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (4 samples, 0.01%)</title><rect x="17.1056%" y="7893" width="0.0122%" height="15" fill="rgb(240,92,26)" fg:x="5612" fg:w="4"/><text x="17.3556%" y="7903.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (4 samples, 0.01%)</title><rect x="17.1056%" y="7877" width="0.0122%" height="15" fill="rgb(207,40,23)" fg:x="5612" fg:w="4"/><text x="17.3556%" y="7887.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4 samples, 0.01%)</title><rect x="17.1391%" y="7861" width="0.0122%" height="15" fill="rgb(223,111,35)" fg:x="5623" fg:w="4"/><text x="17.3891%" y="7871.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4 samples, 0.01%)</title><rect x="17.1391%" y="7845" width="0.0122%" height="15" fill="rgb(229,147,28)" fg:x="5623" fg:w="4"/><text x="17.3891%" y="7855.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::inner::RawTableInner&lt;hashbrown::raw::inner::alloc::inner::Global&gt;,hashbrown::raw::inner::RawTableInner&lt;hashbrown::raw::inner::alloc::inner::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (4 samples, 0.01%)</title><rect x="17.1513%" y="7861" width="0.0122%" height="15" fill="rgb(211,29,28)" fg:x="5627" fg:w="4"/><text x="17.4013%" y="7871.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="17.1513%" y="7845" width="0.0122%" height="15" fill="rgb(228,72,33)" fg:x="5627" fg:w="4"/><text x="17.4013%" y="7855.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::prepare_resize::_{{closure}} (4 samples, 0.01%)</title><rect x="17.1513%" y="7829" width="0.0122%" height="15" fill="rgb(205,214,31)" fg:x="5627" fg:w="4"/><text x="17.4013%" y="7839.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (4 samples, 0.01%)</title><rect x="17.1635%" y="7861" width="0.0122%" height="15" fill="rgb(224,111,15)" fg:x="5631" fg:w="4"/><text x="17.4135%" y="7871.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::bucket_ptr (8 samples, 0.02%)</title><rect x="17.1757%" y="7861" width="0.0244%" height="15" fill="rgb(253,21,26)" fg:x="5635" fg:w="8"/><text x="17.4257%" y="7871.50"></text></g><g><title>hashbrown::raw::inner::bitmask::BitMask::lowest_set_bit (4 samples, 0.01%)</title><rect x="17.2702%" y="7829" width="0.0122%" height="15" fill="rgb(245,139,43)" fg:x="5666" fg:w="4"/><text x="17.5202%" y="7839.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_empty_or_deleted (24 samples, 0.07%)</title><rect x="17.2885%" y="7829" width="0.0732%" height="15" fill="rgb(252,170,7)" fg:x="5672" fg:w="24"/><text x="17.5385%" y="7839.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (24 samples, 0.07%)</title><rect x="17.2885%" y="7813" width="0.0732%" height="15" fill="rgb(231,118,14)" fg:x="5672" fg:w="24"/><text x="17.5385%" y="7823.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_insert_slot (67 samples, 0.20%)</title><rect x="17.2001%" y="7845" width="0.2042%" height="15" fill="rgb(238,83,0)" fg:x="5643" fg:w="67"/><text x="17.4501%" y="7855.50"></text></g><g><title>hashbrown::raw::inner::unlikely (14 samples, 0.04%)</title><rect x="17.3616%" y="7829" width="0.0427%" height="15" fill="rgb(221,39,39)" fg:x="5696" fg:w="14"/><text x="17.6116%" y="7839.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::prepare_insert_slot (69 samples, 0.21%)</title><rect x="17.2001%" y="7861" width="0.2103%" height="15" fill="rgb(222,119,46)" fg:x="5643" fg:w="69"/><text x="17.4501%" y="7871.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::new_uninitialized (13 samples, 0.04%)</title><rect x="17.4195%" y="7829" width="0.0396%" height="15" fill="rgb(222,165,49)" fg:x="5715" fg:w="13"/><text x="17.6695%" y="7839.50"></text></g><g><title>hashbrown::raw::inner::alloc::inner::do_alloc (11 samples, 0.03%)</title><rect x="17.4256%" y="7813" width="0.0335%" height="15" fill="rgb(219,113,52)" fg:x="5717" fg:w="11"/><text x="17.6756%" y="7823.50"></text></g><g><title>&lt;hashbrown::raw::inner::alloc::inner::Global as hashbrown::raw::inner::alloc::inner::Allocator&gt;::allocate (11 samples, 0.03%)</title><rect x="17.4256%" y="7797" width="0.0335%" height="15" fill="rgb(214,7,15)" fg:x="5717" fg:w="11"/><text x="17.6756%" y="7807.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.03%)</title><rect x="17.4256%" y="7781" width="0.0335%" height="15" fill="rgb(235,32,4)" fg:x="5717" fg:w="11"/><text x="17.6756%" y="7791.50"></text></g><g><title>malloc (11 samples, 0.03%)</title><rect x="17.4256%" y="7765" width="0.0335%" height="15" fill="rgb(238,90,54)" fg:x="5717" fg:w="11"/><text x="17.6756%" y="7775.50"></text></g><g><title>[libc.so.6] (7 samples, 0.02%)</title><rect x="17.4378%" y="7749" width="0.0213%" height="15" fill="rgb(213,208,19)" fg:x="5721" fg:w="7"/><text x="17.6878%" y="7759.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve (115 samples, 0.35%)</title><rect x="17.1178%" y="7925" width="0.3505%" height="15" fill="rgb(233,156,4)" fg:x="5616" fg:w="115"/><text x="17.3678%" y="7935.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (115 samples, 0.35%)</title><rect x="17.1178%" y="7909" width="0.3505%" height="15" fill="rgb(207,194,5)" fg:x="5616" fg:w="115"/><text x="17.3678%" y="7919.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::reserve_rehash_inner (115 samples, 0.35%)</title><rect x="17.1178%" y="7893" width="0.3505%" height="15" fill="rgb(206,111,30)" fg:x="5616" fg:w="115"/><text x="17.3678%" y="7903.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::resize_inner (113 samples, 0.34%)</title><rect x="17.1239%" y="7877" width="0.3444%" height="15" fill="rgb(243,70,54)" fg:x="5618" fg:w="113"/><text x="17.3739%" y="7887.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::prepare_resize (19 samples, 0.06%)</title><rect x="17.4104%" y="7861" width="0.0579%" height="15" fill="rgb(242,28,8)" fg:x="5712" fg:w="19"/><text x="17.6604%" y="7871.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::fallible_with_capacity (19 samples, 0.06%)</title><rect x="17.4104%" y="7845" width="0.0579%" height="15" fill="rgb(219,106,18)" fg:x="5712" fg:w="19"/><text x="17.6604%" y="7855.50"></text></g><g><title>hashbrown::raw::inner::is_full (7 samples, 0.02%)</title><rect x="17.4988%" y="7909" width="0.0213%" height="15" fill="rgb(244,222,10)" fg:x="5741" fg:w="7"/><text x="17.7488%" y="7919.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_insert_slot (26 samples, 0.08%)</title><rect x="17.4683%" y="7925" width="0.0792%" height="15" fill="rgb(236,179,52)" fg:x="5731" fg:w="26"/><text x="17.7183%" y="7935.50"></text></g><g><title>hashbrown::raw::inner::unlikely (6 samples, 0.02%)</title><rect x="17.5293%" y="7909" width="0.0183%" height="15" fill="rgb(213,23,39)" fg:x="5751" fg:w="6"/><text x="17.7793%" y="7919.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::insert (170 samples, 0.52%)</title><rect x="17.0568%" y="7941" width="0.5182%" height="15" fill="rgb(238,48,10)" fg:x="5596" fg:w="170"/><text x="17.3068%" y="7951.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::record_item_insert_at (9 samples, 0.03%)</title><rect x="17.5475%" y="7925" width="0.0274%" height="15" fill="rgb(251,196,23)" fg:x="5757" fg:w="9"/><text x="17.7975%" y="7935.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::set_ctrl_h2 (5 samples, 0.02%)</title><rect x="17.5597%" y="7909" width="0.0152%" height="15" fill="rgb(250,152,24)" fg:x="5761" fg:w="5"/><text x="17.8097%" y="7919.50"></text></g><g><title>hashbrown::raw::inner::h2 (4 samples, 0.01%)</title><rect x="17.5628%" y="7893" width="0.0122%" height="15" fill="rgb(209,150,17)" fg:x="5762" fg:w="4"/><text x="17.8128%" y="7903.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (85 samples, 0.26%)</title><rect x="17.5811%" y="7845" width="0.2591%" height="15" fill="rgb(234,202,34)" fg:x="5768" fg:w="85"/><text x="17.8311%" y="7855.50"></text></g><g><title>alloc::alloc::Global::grow_impl (85 samples, 0.26%)</title><rect x="17.5811%" y="7829" width="0.2591%" height="15" fill="rgb(253,148,53)" fg:x="5768" fg:w="85"/><text x="17.8311%" y="7839.50"></text></g><g><title>alloc::alloc::realloc (85 samples, 0.26%)</title><rect x="17.5811%" y="7813" width="0.2591%" height="15" fill="rgb(218,129,16)" fg:x="5768" fg:w="85"/><text x="17.8311%" y="7823.50"></text></g><g><title>realloc (85 samples, 0.26%)</title><rect x="17.5811%" y="7797" width="0.2591%" height="15" fill="rgb(216,85,19)" fg:x="5768" fg:w="85"/><text x="17.8311%" y="7807.50"></text></g><g><title>[libc.so.6] (85 samples, 0.26%)</title><rect x="17.5811%" y="7781" width="0.2591%" height="15" fill="rgb(235,228,7)" fg:x="5768" fg:w="85"/><text x="17.8311%" y="7791.50"></text></g><g><title>[libc.so.6] (83 samples, 0.25%)</title><rect x="17.5872%" y="7765" width="0.2530%" height="15" fill="rgb(245,175,0)" fg:x="5770" fg:w="83"/><text x="17.8372%" y="7775.50"></text></g><g><title>[libc.so.6] (51 samples, 0.16%)</title><rect x="17.6847%" y="7749" width="0.1554%" height="15" fill="rgb(208,168,36)" fg:x="5802" fg:w="51"/><text x="17.9347%" y="7759.50"></text></g><g><title>[libc.so.6] (9 samples, 0.03%)</title><rect x="17.8127%" y="7733" width="0.0274%" height="15" fill="rgb(246,171,24)" fg:x="5844" fg:w="9"/><text x="18.0627%" y="7743.50"></text></g><g><title>indexmap::map::core::VacantEntry&lt;K,V&gt;::insert (328 samples, 1.00%)</title><rect x="16.8435%" y="7973" width="0.9998%" height="15" fill="rgb(215,142,24)" fg:x="5526" fg:w="328"/><text x="17.0935%" y="7983.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::push (323 samples, 0.98%)</title><rect x="16.8587%" y="7957" width="0.9845%" height="15" fill="rgb(250,187,7)" fg:x="5531" fg:w="323"/><text x="17.1087%" y="7967.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::reserve_entries (88 samples, 0.27%)</title><rect x="17.5750%" y="7941" width="0.2682%" height="15" fill="rgb(228,66,33)" fg:x="5766" fg:w="88"/><text x="17.8250%" y="7951.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve_exact (88 samples, 0.27%)</title><rect x="17.5750%" y="7925" width="0.2682%" height="15" fill="rgb(234,215,21)" fg:x="5766" fg:w="88"/><text x="17.8250%" y="7935.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (88 samples, 0.27%)</title><rect x="17.5750%" y="7909" width="0.2682%" height="15" fill="rgb(222,191,20)" fg:x="5766" fg:w="88"/><text x="17.8250%" y="7919.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (88 samples, 0.27%)</title><rect x="17.5750%" y="7893" width="0.2682%" height="15" fill="rgb(245,79,54)" fg:x="5766" fg:w="88"/><text x="17.8250%" y="7903.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (88 samples, 0.27%)</title><rect x="17.5750%" y="7877" width="0.2682%" height="15" fill="rgb(240,10,37)" fg:x="5766" fg:w="88"/><text x="17.8250%" y="7887.50"></text></g><g><title>alloc::raw_vec::finish_grow (87 samples, 0.27%)</title><rect x="17.5780%" y="7861" width="0.2652%" height="15" fill="rgb(214,192,32)" fg:x="5767" fg:w="87"/><text x="17.8280%" y="7871.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::lt (23 samples, 0.07%)</title><rect x="18.0109%" y="7957" width="0.0701%" height="15" fill="rgb(209,36,54)" fg:x="5909" fg:w="23"/><text x="18.2609%" y="7967.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i32&gt;::lt (22 samples, 0.07%)</title><rect x="18.0139%" y="7941" width="0.0671%" height="15" fill="rgb(220,10,11)" fg:x="5910" fg:w="22"/><text x="18.2639%" y="7951.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (6 samples, 0.02%)</title><rect x="18.0871%" y="7941" width="0.0183%" height="15" fill="rgb(221,106,17)" fg:x="5934" fg:w="6"/><text x="18.3371%" y="7951.50"></text></g><g><title>priority_queue::priority_queue::PriorityQueue&lt;I,P,H&gt;::push (3,215 samples, 9.80%)</title><rect x="8.3272%" y="7989" width="9.7994%" height="15" fill="rgb(251,142,44)" fg:x="2732" fg:w="3215"/><text x="8.5772%" y="7999.50">priority_queue..</text></g><g><title>priority_queue::priority_queue::PriorityQueue&lt;I,P,H&gt;::bubble_up (93 samples, 0.28%)</title><rect x="17.8432%" y="7973" width="0.2835%" height="15" fill="rgb(238,13,15)" fg:x="5854" fg:w="93"/><text x="18.0932%" y="7983.50"></text></g><g><title>priority_queue::store::Store&lt;I,P,H&gt;::get_priority_from_position (14 samples, 0.04%)</title><rect x="18.0840%" y="7957" width="0.0427%" height="15" fill="rgb(208,107,27)" fg:x="5933" fg:w="14"/><text x="18.3340%" y="7967.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index (7 samples, 0.02%)</title><rect x="18.1053%" y="7941" width="0.0213%" height="15" fill="rgb(205,136,37)" fg:x="5940" fg:w="7"/><text x="18.3553%" y="7951.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (7 samples, 0.02%)</title><rect x="18.1053%" y="7925" width="0.0213%" height="15" fill="rgb(250,205,27)" fg:x="5940" fg:w="7"/><text x="18.3553%" y="7935.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (7 samples, 0.02%)</title><rect x="18.1053%" y="7909" width="0.0213%" height="15" fill="rgb(210,80,43)" fg:x="5940" fg:w="7"/><text x="18.3553%" y="7919.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (8 samples, 0.02%)</title><rect x="18.3492%" y="7845" width="0.0244%" height="15" fill="rgb(247,160,36)" fg:x="6020" fg:w="8"/><text x="18.5992%" y="7855.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (17 samples, 0.05%)</title><rect x="18.3431%" y="7861" width="0.0518%" height="15" fill="rgb(234,13,49)" fg:x="6018" fg:w="17"/><text x="18.5931%" y="7871.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (7 samples, 0.02%)</title><rect x="18.3736%" y="7845" width="0.0213%" height="15" fill="rgb(234,122,0)" fg:x="6028" fg:w="7"/><text x="18.6236%" y="7855.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (24 samples, 0.07%)</title><rect x="18.4040%" y="7845" width="0.0732%" height="15" fill="rgb(207,146,38)" fg:x="6038" fg:w="24"/><text x="18.6540%" y="7855.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (111 samples, 0.34%)</title><rect x="18.1693%" y="7909" width="0.3383%" height="15" fill="rgb(207,177,25)" fg:x="5961" fg:w="111"/><text x="18.4193%" y="7919.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (111 samples, 0.34%)</title><rect x="18.1693%" y="7893" width="0.3383%" height="15" fill="rgb(211,178,42)" fg:x="5961" fg:w="111"/><text x="18.4193%" y="7903.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (111 samples, 0.34%)</title><rect x="18.1693%" y="7877" width="0.3383%" height="15" fill="rgb(230,69,54)" fg:x="5961" fg:w="111"/><text x="18.4193%" y="7887.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (37 samples, 0.11%)</title><rect x="18.3949%" y="7861" width="0.1128%" height="15" fill="rgb(214,135,41)" fg:x="6035" fg:w="37"/><text x="18.6449%" y="7871.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (10 samples, 0.03%)</title><rect x="18.4772%" y="7845" width="0.0305%" height="15" fill="rgb(237,67,25)" fg:x="6062" fg:w="10"/><text x="18.7272%" y="7855.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (10 samples, 0.03%)</title><rect x="18.5077%" y="7909" width="0.0305%" height="15" fill="rgb(222,189,50)" fg:x="6072" fg:w="10"/><text x="18.7577%" y="7919.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (5 samples, 0.02%)</title><rect x="18.5229%" y="7893" width="0.0152%" height="15" fill="rgb(245,148,34)" fg:x="6077" fg:w="5"/><text x="18.7729%" y="7903.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (5 samples, 0.02%)</title><rect x="18.5229%" y="7877" width="0.0152%" height="15" fill="rgb(222,29,6)" fg:x="6077" fg:w="5"/><text x="18.7729%" y="7887.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (5 samples, 0.02%)</title><rect x="18.5229%" y="7861" width="0.0152%" height="15" fill="rgb(221,189,43)" fg:x="6077" fg:w="5"/><text x="18.7729%" y="7871.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (211 samples, 0.64%)</title><rect x="18.5564%" y="7861" width="0.6431%" height="15" fill="rgb(207,36,27)" fg:x="6088" fg:w="211"/><text x="18.8064%" y="7871.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (168 samples, 0.51%)</title><rect x="18.6875%" y="7845" width="0.5121%" height="15" fill="rgb(217,90,24)" fg:x="6131" fg:w="168"/><text x="18.9375%" y="7855.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (6 samples, 0.02%)</title><rect x="19.2849%" y="7765" width="0.0183%" height="15" fill="rgb(224,66,35)" fg:x="6327" fg:w="6"/><text x="19.5349%" y="7775.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (9 samples, 0.03%)</title><rect x="19.2788%" y="7781" width="0.0274%" height="15" fill="rgb(221,13,50)" fg:x="6325" fg:w="9"/><text x="19.5288%" y="7791.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (59 samples, 0.18%)</title><rect x="19.2026%" y="7829" width="0.1798%" height="15" fill="rgb(236,68,49)" fg:x="6300" fg:w="59"/><text x="19.4526%" y="7839.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (55 samples, 0.17%)</title><rect x="19.2148%" y="7813" width="0.1676%" height="15" fill="rgb(229,146,28)" fg:x="6304" fg:w="55"/><text x="19.4648%" y="7823.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (55 samples, 0.17%)</title><rect x="19.2148%" y="7797" width="0.1676%" height="15" fill="rgb(225,31,38)" fg:x="6304" fg:w="55"/><text x="19.4648%" y="7807.50"></text></g><g><title>core::hash::sip::u8to64_le (25 samples, 0.08%)</title><rect x="19.3063%" y="7781" width="0.0762%" height="15" fill="rgb(250,208,3)" fg:x="6334" fg:w="25"/><text x="19.5563%" y="7791.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (11 samples, 0.03%)</title><rect x="19.3489%" y="7765" width="0.0335%" height="15" fill="rgb(246,54,23)" fg:x="6348" fg:w="11"/><text x="19.5989%" y="7775.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for char&gt;::hash (76 samples, 0.23%)</title><rect x="19.1996%" y="7861" width="0.2317%" height="15" fill="rgb(243,76,11)" fg:x="6299" fg:w="76"/><text x="19.4496%" y="7871.50"></text></g><g><title>core::hash::Hasher::write_u32 (76 samples, 0.23%)</title><rect x="19.1996%" y="7845" width="0.2317%" height="15" fill="rgb(245,21,50)" fg:x="6299" fg:w="76"/><text x="19.4496%" y="7855.50"></text></g><g><title>core::num::&lt;impl u32&gt;::to_ne_bytes (16 samples, 0.05%)</title><rect x="19.3825%" y="7829" width="0.0488%" height="15" fill="rgb(228,9,43)" fg:x="6359" fg:w="16"/><text x="19.6325%" y="7839.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (121 samples, 0.37%)</title><rect x="22.3482%" y="7765" width="0.3688%" height="15" fill="rgb(208,100,47)" fg:x="7332" fg:w="121"/><text x="22.5982%" y="7775.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (312 samples, 0.95%)</title><rect x="22.0891%" y="7781" width="0.9510%" height="15" fill="rgb(232,26,8)" fg:x="7247" fg:w="312"/><text x="22.3391%" y="7791.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (106 samples, 0.32%)</title><rect x="22.7170%" y="7765" width="0.3231%" height="15" fill="rgb(216,166,38)" fg:x="7453" fg:w="106"/><text x="22.9670%" y="7775.50"></text></g><g><title>core::cmp::min (116 samples, 0.35%)</title><rect x="23.0401%" y="7781" width="0.3536%" height="15" fill="rgb(251,202,51)" fg:x="7559" fg:w="116"/><text x="23.2901%" y="7791.50"></text></g><g><title>core::cmp::Ord::min (116 samples, 0.35%)</title><rect x="23.0401%" y="7765" width="0.3536%" height="15" fill="rgb(254,216,34)" fg:x="7559" fg:w="116"/><text x="23.2901%" y="7775.50"></text></g><g><title>core::cmp::min_by (116 samples, 0.35%)</title><rect x="23.0401%" y="7749" width="0.3536%" height="15" fill="rgb(251,32,27)" fg:x="7559" fg:w="116"/><text x="23.2901%" y="7759.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2,150 samples, 6.55%)</title><rect x="19.5684%" y="7829" width="6.5533%" height="15" fill="rgb(208,127,28)" fg:x="6420" fg:w="2150"/><text x="19.8184%" y="7839.50">&lt;std::col..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2,128 samples, 6.49%)</title><rect x="19.6355%" y="7813" width="6.4862%" height="15" fill="rgb(224,137,22)" fg:x="6442" fg:w="2128"/><text x="19.8855%" y="7823.50">&lt;core::h..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2,128 samples, 6.49%)</title><rect x="19.6355%" y="7797" width="6.4862%" height="15" fill="rgb(254,70,32)" fg:x="6442" fg:w="2128"/><text x="19.8855%" y="7807.50">&lt;core::h..</text></g><g><title>core::hash::sip::u8to64_le (895 samples, 2.73%)</title><rect x="23.3937%" y="7781" width="2.7280%" height="15" fill="rgb(229,75,37)" fg:x="7675" fg:w="895"/><text x="23.6437%" y="7791.50">co..</text></g><g><title>core::intrinsics::copy_nonoverlapping (24 samples, 0.07%)</title><rect x="26.0485%" y="7765" width="0.0732%" height="15" fill="rgb(252,64,23)" fg:x="8546" fg:w="24"/><text x="26.2985%" y="7775.50"></text></g><g><title>hashbrown::map::make_hash (2,713 samples, 8.27%)</title><rect x="18.1541%" y="7941" width="8.2693%" height="15" fill="rgb(232,162,48)" fg:x="5956" fg:w="2713"/><text x="18.4041%" y="7951.50">hashbrown::m..</text></g><g><title>core::hash::BuildHasher::hash_one (2,712 samples, 8.27%)</title><rect x="18.1572%" y="7925" width="8.2663%" height="15" fill="rgb(246,160,12)" fg:x="5957" fg:w="2712"/><text x="18.4072%" y="7935.50">core::hash::..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2,587 samples, 7.89%)</title><rect x="18.5382%" y="7909" width="7.8853%" height="15" fill="rgb(247,166,0)" fg:x="6082" fg:w="2587"/><text x="18.7882%" y="7919.50">core::hash:..</text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::hash::Hash&gt;::hash (2,587 samples, 7.89%)</title><rect x="18.5382%" y="7893" width="7.8853%" height="15" fill="rgb(249,219,21)" fg:x="6082" fg:w="2587"/><text x="18.7882%" y="7903.50">&lt;alloc::rc:..</text></g><g><title>&lt;tetrs::logic::state::State as core::hash::Hash&gt;::hash (2,587 samples, 7.89%)</title><rect x="18.5382%" y="7877" width="7.8853%" height="15" fill="rgb(205,209,3)" fg:x="6082" fg:w="2587"/><text x="18.7882%" y="7887.50">&lt;tetrs::log..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (2,294 samples, 6.99%)</title><rect x="19.4312%" y="7861" width="6.9922%" height="15" fill="rgb(243,44,1)" fg:x="6375" fg:w="2294"/><text x="19.6812%" y="7871.50">core::has..</text></g><g><title>core::hash::Hasher::write_u16 (2,294 samples, 6.99%)</title><rect x="19.4312%" y="7845" width="6.9922%" height="15" fill="rgb(206,159,16)" fg:x="6375" fg:w="2294"/><text x="19.6812%" y="7855.50">core::has..</text></g><g><title>core::num::&lt;impl u16&gt;::to_ne_bytes (99 samples, 0.30%)</title><rect x="26.1217%" y="7829" width="0.3018%" height="15" fill="rgb(244,77,30)" fg:x="8570" fg:w="99"/><text x="26.3717%" y="7839.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (6 samples, 0.02%)</title><rect x="26.4813%" y="7861" width="0.0183%" height="15" fill="rgb(218,69,12)" fg:x="8688" fg:w="6"/><text x="26.7313%" y="7871.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (6 samples, 0.02%)</title><rect x="26.4813%" y="7845" width="0.0183%" height="15" fill="rgb(212,87,7)" fg:x="8688" fg:w="6"/><text x="26.7313%" y="7855.50"></text></g><g><title>core::mem::swap (5 samples, 0.02%)</title><rect x="26.4996%" y="7861" width="0.0152%" height="15" fill="rgb(245,114,25)" fg:x="8694" fg:w="5"/><text x="26.7496%" y="7871.50"></text></g><g><title>core::mem::swap_simple (5 samples, 0.02%)</title><rect x="26.4996%" y="7845" width="0.0152%" height="15" fill="rgb(210,61,42)" fg:x="8694" fg:w="5"/><text x="26.7496%" y="7855.50"></text></g><g><title>core::ptr::write (5 samples, 0.02%)</title><rect x="26.4996%" y="7829" width="0.0152%" height="15" fill="rgb(211,52,33)" fg:x="8694" fg:w="5"/><text x="26.7496%" y="7839.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (11 samples, 0.03%)</title><rect x="26.8532%" y="7733" width="0.0335%" height="15" fill="rgb(234,58,33)" fg:x="8810" fg:w="11"/><text x="27.1032%" y="7743.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (19 samples, 0.06%)</title><rect x="26.8380%" y="7749" width="0.0579%" height="15" fill="rgb(220,115,36)" fg:x="8805" fg:w="19"/><text x="27.0880%" y="7759.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (38 samples, 0.12%)</title><rect x="26.9020%" y="7733" width="0.1158%" height="15" fill="rgb(243,153,54)" fg:x="8826" fg:w="38"/><text x="27.1520%" y="7743.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (160 samples, 0.49%)</title><rect x="26.5515%" y="7797" width="0.4877%" height="15" fill="rgb(251,47,18)" fg:x="8711" fg:w="160"/><text x="26.8015%" y="7807.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (160 samples, 0.49%)</title><rect x="26.5515%" y="7781" width="0.4877%" height="15" fill="rgb(242,102,42)" fg:x="8711" fg:w="160"/><text x="26.8015%" y="7791.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (160 samples, 0.49%)</title><rect x="26.5515%" y="7765" width="0.4877%" height="15" fill="rgb(234,31,38)" fg:x="8711" fg:w="160"/><text x="26.8015%" y="7775.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (47 samples, 0.14%)</title><rect x="26.8959%" y="7749" width="0.1433%" height="15" fill="rgb(221,117,51)" fg:x="8824" fg:w="47"/><text x="27.1459%" y="7759.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (7 samples, 0.02%)</title><rect x="27.0178%" y="7733" width="0.0213%" height="15" fill="rgb(212,20,18)" fg:x="8864" fg:w="7"/><text x="27.2678%" y="7743.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (5 samples, 0.02%)</title><rect x="27.0391%" y="7797" width="0.0152%" height="15" fill="rgb(245,133,36)" fg:x="8871" fg:w="5"/><text x="27.2891%" y="7807.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (359 samples, 1.09%)</title><rect x="27.0757%" y="7749" width="1.0942%" height="15" fill="rgb(212,6,19)" fg:x="8883" fg:w="359"/><text x="27.3257%" y="7759.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (281 samples, 0.86%)</title><rect x="27.3135%" y="7733" width="0.8565%" height="15" fill="rgb(218,1,36)" fg:x="8961" fg:w="281"/><text x="27.5635%" y="7743.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (5 samples, 0.02%)</title><rect x="28.2858%" y="7653" width="0.0152%" height="15" fill="rgb(246,84,54)" fg:x="9280" fg:w="5"/><text x="28.5358%" y="7663.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (19 samples, 0.06%)</title><rect x="28.2797%" y="7669" width="0.0579%" height="15" fill="rgb(242,110,6)" fg:x="9278" fg:w="19"/><text x="28.5297%" y="7679.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (12 samples, 0.04%)</title><rect x="28.3010%" y="7653" width="0.0366%" height="15" fill="rgb(214,47,5)" fg:x="9285" fg:w="12"/><text x="28.5510%" y="7663.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (63 samples, 0.19%)</title><rect x="28.1882%" y="7717" width="0.1920%" height="15" fill="rgb(218,159,25)" fg:x="9248" fg:w="63"/><text x="28.4382%" y="7727.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (61 samples, 0.19%)</title><rect x="28.1943%" y="7701" width="0.1859%" height="15" fill="rgb(215,211,28)" fg:x="9250" fg:w="61"/><text x="28.4443%" y="7711.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (61 samples, 0.19%)</title><rect x="28.1943%" y="7685" width="0.1859%" height="15" fill="rgb(238,59,32)" fg:x="9250" fg:w="61"/><text x="28.4443%" y="7695.50"></text></g><g><title>core::hash::sip::u8to64_le (14 samples, 0.04%)</title><rect x="28.3376%" y="7669" width="0.0427%" height="15" fill="rgb(226,82,3)" fg:x="9297" fg:w="14"/><text x="28.5876%" y="7679.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for char&gt;::hash (128 samples, 0.39%)</title><rect x="28.1700%" y="7749" width="0.3901%" height="15" fill="rgb(240,164,32)" fg:x="9242" fg:w="128"/><text x="28.4200%" y="7759.50"></text></g><g><title>core::hash::Hasher::write_u32 (127 samples, 0.39%)</title><rect x="28.1730%" y="7733" width="0.3871%" height="15" fill="rgb(232,46,7)" fg:x="9243" fg:w="127"/><text x="28.4230%" y="7743.50"></text></g><g><title>core::num::&lt;impl u32&gt;::to_ne_bytes (59 samples, 0.18%)</title><rect x="28.3803%" y="7717" width="0.1798%" height="15" fill="rgb(229,129,53)" fg:x="9311" fg:w="59"/><text x="28.6303%" y="7727.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (184 samples, 0.56%)</title><rect x="32.5896%" y="7653" width="0.5608%" height="15" fill="rgb(234,188,29)" fg:x="10692" fg:w="184"/><text x="32.8396%" y="7663.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (437 samples, 1.33%)</title><rect x="32.2452%" y="7669" width="1.3320%" height="15" fill="rgb(246,141,4)" fg:x="10579" fg:w="437"/><text x="32.4952%" y="7679.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (140 samples, 0.43%)</title><rect x="33.1505%" y="7653" width="0.4267%" height="15" fill="rgb(229,23,39)" fg:x="10876" fg:w="140"/><text x="33.4005%" y="7663.50"></text></g><g><title>core::cmp::min (131 samples, 0.40%)</title><rect x="33.5802%" y="7669" width="0.3993%" height="15" fill="rgb(206,12,3)" fg:x="11017" fg:w="131"/><text x="33.8302%" y="7679.50"></text></g><g><title>core::cmp::Ord::min (131 samples, 0.40%)</title><rect x="33.5802%" y="7653" width="0.3993%" height="15" fill="rgb(252,226,20)" fg:x="11017" fg:w="131"/><text x="33.8302%" y="7663.50"></text></g><g><title>core::cmp::min_by (131 samples, 0.40%)</title><rect x="33.5802%" y="7637" width="0.3993%" height="15" fill="rgb(216,123,35)" fg:x="11017" fg:w="131"/><text x="33.8302%" y="7647.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2,659 samples, 8.10%)</title><rect x="28.8497%" y="7717" width="8.1047%" height="15" fill="rgb(212,68,40)" fg:x="9465" fg:w="2659"/><text x="29.0997%" y="7727.50">&lt;std::colle..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2,609 samples, 7.95%)</title><rect x="29.0021%" y="7701" width="7.9523%" height="15" fill="rgb(254,125,32)" fg:x="9515" fg:w="2609"/><text x="29.2521%" y="7711.50">&lt;core::hash..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2,609 samples, 7.95%)</title><rect x="29.0021%" y="7685" width="7.9523%" height="15" fill="rgb(253,97,22)" fg:x="9515" fg:w="2609"/><text x="29.2521%" y="7695.50">&lt;core::hash..</text></g><g><title>core::hash::sip::u8to64_le (976 samples, 2.97%)</title><rect x="33.9795%" y="7669" width="2.9749%" height="15" fill="rgb(241,101,14)" fg:x="11148" fg:w="976"/><text x="34.2295%" y="7679.50">cor..</text></g><g><title>core::intrinsics::copy_nonoverlapping (13 samples, 0.04%)</title><rect x="36.9148%" y="7653" width="0.0396%" height="15" fill="rgb(238,103,29)" fg:x="12111" fg:w="13"/><text x="37.1648%" y="7663.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (3,915 samples, 11.93%)</title><rect x="26.5240%" y="7845" width="11.9331%" height="15" fill="rgb(233,195,47)" fg:x="8702" fg:w="3915"/><text x="26.7740%" y="7855.50">hashbrown::map::ma..</text></g><g><title>hashbrown::map::make_hash (3,915 samples, 11.93%)</title><rect x="26.5240%" y="7829" width="11.9331%" height="15" fill="rgb(246,218,30)" fg:x="8702" fg:w="3915"/><text x="26.7740%" y="7839.50">hashbrown::map::ma..</text></g><g><title>core::hash::BuildHasher::hash_one (3,915 samples, 11.93%)</title><rect x="26.5240%" y="7813" width="11.9331%" height="15" fill="rgb(219,145,47)" fg:x="8702" fg:w="3915"/><text x="26.7740%" y="7823.50">core::hash::BuildH..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (3,741 samples, 11.40%)</title><rect x="27.0544%" y="7797" width="11.4027%" height="15" fill="rgb(243,12,26)" fg:x="8876" fg:w="3741"/><text x="27.3044%" y="7807.50">core::hash::impls..</text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::hash::Hash&gt;::hash (3,741 samples, 11.40%)</title><rect x="27.0544%" y="7781" width="11.4027%" height="15" fill="rgb(214,87,16)" fg:x="8876" fg:w="3741"/><text x="27.3044%" y="7791.50">&lt;alloc::rc::Rc&lt;T,..</text></g><g><title>&lt;tetrs::logic::state::State as core::hash::Hash&gt;::hash (3,741 samples, 11.40%)</title><rect x="27.0544%" y="7765" width="11.4027%" height="15" fill="rgb(208,99,42)" fg:x="8876" fg:w="3741"/><text x="27.3044%" y="7775.50">&lt;tetrs::logic::st..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (3,247 samples, 9.90%)</title><rect x="28.5601%" y="7749" width="9.8970%" height="15" fill="rgb(253,99,2)" fg:x="9370" fg:w="3247"/><text x="28.8101%" y="7759.50">core::hash::im..</text></g><g><title>core::hash::Hasher::write_u16 (3,247 samples, 9.90%)</title><rect x="28.5601%" y="7733" width="9.8970%" height="15" fill="rgb(220,168,23)" fg:x="9370" fg:w="3247"/><text x="28.8101%" y="7743.50">core::hash::Ha..</text></g><g><title>core::num::&lt;impl u16&gt;::to_ne_bytes (492 samples, 1.50%)</title><rect x="36.9574%" y="7717" width="1.4996%" height="15" fill="rgb(242,38,24)" fg:x="12125" fg:w="492"/><text x="37.2074%" y="7727.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (3,918 samples, 11.94%)</title><rect x="26.5240%" y="7861" width="11.9422%" height="15" fill="rgb(225,182,9)" fg:x="8702" fg:w="3918"/><text x="26.7740%" y="7871.50">hashbrown::raw::Ra..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket_ptr (6 samples, 0.02%)</title><rect x="38.4662%" y="7861" width="0.0183%" height="15" fill="rgb(243,178,37)" fg:x="12620" fg:w="6"/><text x="38.7162%" y="7871.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (9 samples, 0.03%)</title><rect x="38.5516%" y="7813" width="0.0274%" height="15" fill="rgb(232,139,19)" fg:x="12648" fg:w="9"/><text x="38.8016%" y="7823.50"></text></g><g><title>core::num::nonzero::NonZeroU16::new (9 samples, 0.03%)</title><rect x="38.5516%" y="7797" width="0.0274%" height="15" fill="rgb(225,201,24)" fg:x="12648" fg:w="9"/><text x="38.8016%" y="7807.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot_in_group (39 samples, 0.12%)</title><rect x="38.5272%" y="7829" width="0.1189%" height="15" fill="rgb(221,47,46)" fg:x="12640" fg:w="39"/><text x="38.7772%" y="7839.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (22 samples, 0.07%)</title><rect x="38.5790%" y="7813" width="0.0671%" height="15" fill="rgb(249,23,13)" fg:x="12657" fg:w="22"/><text x="38.8290%" y="7823.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (22 samples, 0.07%)</title><rect x="38.5790%" y="7797" width="0.0671%" height="15" fill="rgb(219,9,5)" fg:x="12657" fg:w="22"/><text x="38.8290%" y="7807.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fix_insert_slot (21 samples, 0.06%)</title><rect x="38.6461%" y="7829" width="0.0640%" height="15" fill="rgb(254,171,16)" fg:x="12679" fg:w="21"/><text x="38.8961%" y="7839.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (82 samples, 0.25%)</title><rect x="38.4845%" y="7845" width="0.2499%" height="15" fill="rgb(230,171,20)" fg:x="12626" fg:w="82"/><text x="38.7345%" y="7855.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (8 samples, 0.02%)</title><rect x="38.7101%" y="7829" width="0.0244%" height="15" fill="rgb(210,71,41)" fg:x="12700" fg:w="8"/><text x="38.9601%" y="7839.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (83 samples, 0.25%)</title><rect x="38.4845%" y="7861" width="0.2530%" height="15" fill="rgb(206,173,20)" fg:x="12626" fg:w="83"/><text x="38.7345%" y="7871.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (31 samples, 0.09%)</title><rect x="38.7406%" y="7813" width="0.0945%" height="15" fill="rgb(233,88,34)" fg:x="12710" fg:w="31"/><text x="38.9906%" y="7823.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (31 samples, 0.09%)</title><rect x="38.7406%" y="7797" width="0.0945%" height="15" fill="rgb(223,209,46)" fg:x="12710" fg:w="31"/><text x="38.9906%" y="7807.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (31 samples, 0.09%)</title><rect x="38.7406%" y="7781" width="0.0945%" height="15" fill="rgb(250,43,18)" fg:x="12710" fg:w="31"/><text x="38.9906%" y="7791.50"></text></g><g><title>alloc::alloc::alloc (31 samples, 0.09%)</title><rect x="38.7406%" y="7765" width="0.0945%" height="15" fill="rgb(208,13,10)" fg:x="12710" fg:w="31"/><text x="38.9906%" y="7775.50"></text></g><g><title>malloc (30 samples, 0.09%)</title><rect x="38.7436%" y="7749" width="0.0914%" height="15" fill="rgb(212,200,36)" fg:x="12711" fg:w="30"/><text x="38.9936%" y="7759.50"></text></g><g><title>[libc.so.6] (17 samples, 0.05%)</title><rect x="38.7832%" y="7733" width="0.0518%" height="15" fill="rgb(225,90,30)" fg:x="12724" fg:w="17"/><text x="39.0332%" y="7743.50"></text></g><g><title>[libc.so.6] (14 samples, 0.04%)</title><rect x="38.7924%" y="7717" width="0.0427%" height="15" fill="rgb(236,182,39)" fg:x="12727" fg:w="14"/><text x="39.0424%" y="7727.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="38.8168%" y="7701" width="0.0183%" height="15" fill="rgb(212,144,35)" fg:x="12735" fg:w="6"/><text x="39.0668%" y="7711.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (33 samples, 0.10%)</title><rect x="38.7375%" y="7829" width="0.1006%" height="15" fill="rgb(228,63,44)" fg:x="12709" fg:w="33"/><text x="38.9875%" y="7839.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (4,072 samples, 12.41%)</title><rect x="26.4387%" y="7877" width="12.4116%" height="15" fill="rgb(228,109,6)" fg:x="8674" fg:w="4072"/><text x="26.6887%" y="7887.50">hashbrown::raw::Raw..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (37 samples, 0.11%)</title><rect x="38.7375%" y="7861" width="0.1128%" height="15" fill="rgb(238,117,24)" fg:x="12709" fg:w="37"/><text x="38.9875%" y="7871.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (37 samples, 0.11%)</title><rect x="38.7375%" y="7845" width="0.1128%" height="15" fill="rgb(242,26,26)" fg:x="12709" fg:w="37"/><text x="38.9875%" y="7855.50"></text></g><g><title>hashbrown::raw::capacity_to_buckets (4 samples, 0.01%)</title><rect x="38.8381%" y="7829" width="0.0122%" height="15" fill="rgb(221,92,48)" fg:x="12742" fg:w="4"/><text x="39.0881%" y="7839.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (4,076 samples, 12.42%)</title><rect x="26.4295%" y="7925" width="12.4238%" height="15" fill="rgb(209,209,32)" fg:x="8671" fg:w="4076"/><text x="26.6795%" y="7935.50">hashbrown::raw::Raw..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4,074 samples, 12.42%)</title><rect x="26.4356%" y="7909" width="12.4177%" height="15" fill="rgb(221,70,22)" fg:x="8673" fg:w="4074"/><text x="26.6856%" y="7919.50">hashbrown::raw::Raw..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (4,074 samples, 12.42%)</title><rect x="26.4356%" y="7893" width="12.4177%" height="15" fill="rgb(248,145,5)" fg:x="8673" fg:w="4074"/><text x="26.6856%" y="7903.50">hashbrown::raw::Raw..</text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.04%)</title><rect x="38.9112%" y="7909" width="0.0366%" height="15" fill="rgb(226,116,26)" fg:x="12766" fg:w="12"/><text x="39.1612%" y="7919.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (43 samples, 0.13%)</title><rect x="38.9570%" y="7893" width="0.1311%" height="15" fill="rgb(244,5,17)" fg:x="12781" fg:w="43"/><text x="39.2070%" y="7903.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (43 samples, 0.13%)</title><rect x="38.9570%" y="7877" width="0.1311%" height="15" fill="rgb(252,159,33)" fg:x="12781" fg:w="43"/><text x="39.2070%" y="7887.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (43 samples, 0.13%)</title><rect x="38.9570%" y="7861" width="0.1311%" height="15" fill="rgb(206,71,0)" fg:x="12781" fg:w="43"/><text x="39.2070%" y="7871.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::cmp::PartialEq&gt;::eq (43 samples, 0.13%)</title><rect x="38.9570%" y="7845" width="0.1311%" height="15" fill="rgb(233,118,54)" fg:x="12781" fg:w="43"/><text x="39.2070%" y="7855.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as alloc::rc::RcEqIdent&lt;T,A&gt;&gt;::eq (43 samples, 0.13%)</title><rect x="38.9570%" y="7829" width="0.1311%" height="15" fill="rgb(234,83,48)" fg:x="12781" fg:w="43"/><text x="39.2070%" y="7839.50"></text></g><g><title>&lt;tetrs::logic::state::State as core::cmp::PartialEq&gt;::eq (43 samples, 0.13%)</title><rect x="38.9570%" y="7813" width="0.1311%" height="15" fill="rgb(228,3,54)" fg:x="12781" fg:w="43"/><text x="39.2070%" y="7823.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (41 samples, 0.12%)</title><rect x="38.9631%" y="7797" width="0.1250%" height="15" fill="rgb(226,155,13)" fg:x="12783" fg:w="41"/><text x="39.2131%" y="7807.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (40 samples, 0.12%)</title><rect x="38.9661%" y="7781" width="0.1219%" height="15" fill="rgb(241,28,37)" fg:x="12784" fg:w="40"/><text x="39.2161%" y="7791.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (40 samples, 0.12%)</title><rect x="38.9661%" y="7765" width="0.1219%" height="15" fill="rgb(233,93,10)" fg:x="12784" fg:w="40"/><text x="39.2161%" y="7775.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (34 samples, 0.10%)</title><rect x="38.9844%" y="7749" width="0.1036%" height="15" fill="rgb(225,113,19)" fg:x="12790" fg:w="34"/><text x="39.2344%" y="7759.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (34 samples, 0.10%)</title><rect x="38.9844%" y="7733" width="0.1036%" height="15" fill="rgb(241,2,18)" fg:x="12790" fg:w="34"/><text x="39.2344%" y="7743.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (32 samples, 0.10%)</title><rect x="38.9905%" y="7717" width="0.0975%" height="15" fill="rgb(228,207,21)" fg:x="12792" fg:w="32"/><text x="39.2405%" y="7727.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::_{{closure}} (32 samples, 0.10%)</title><rect x="38.9905%" y="7701" width="0.0975%" height="15" fill="rgb(213,211,35)" fg:x="12792" fg:w="32"/><text x="39.2405%" y="7711.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (32 samples, 0.10%)</title><rect x="38.9905%" y="7685" width="0.0975%" height="15" fill="rgb(209,83,10)" fg:x="12792" fg:w="32"/><text x="39.2405%" y="7695.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (32 samples, 0.10%)</title><rect x="38.9905%" y="7669" width="0.0975%" height="15" fill="rgb(209,164,1)" fg:x="12792" fg:w="32"/><text x="39.2405%" y="7679.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (32 samples, 0.10%)</title><rect x="38.9905%" y="7653" width="0.0975%" height="15" fill="rgb(213,184,43)" fg:x="12792" fg:w="32"/><text x="39.2405%" y="7663.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (32 samples, 0.10%)</title><rect x="38.9905%" y="7637" width="0.0975%" height="15" fill="rgb(231,61,34)" fg:x="12792" fg:w="32"/><text x="39.2405%" y="7647.50"></text></g><g><title>[libc.so.6] (28 samples, 0.09%)</title><rect x="39.0027%" y="7621" width="0.0853%" height="15" fill="rgb(235,75,3)" fg:x="12796" fg:w="28"/><text x="39.2527%" y="7631.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot::_{{closure}} (45 samples, 0.14%)</title><rect x="38.9570%" y="7909" width="0.1372%" height="15" fill="rgb(220,106,47)" fg:x="12781" fg:w="45"/><text x="39.2070%" y="7919.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (15 samples, 0.05%)</title><rect x="39.1094%" y="7893" width="0.0457%" height="15" fill="rgb(210,196,33)" fg:x="12831" fg:w="15"/><text x="39.3594%" y="7903.50"></text></g><g><title>core::num::nonzero::NonZeroU16::new (15 samples, 0.05%)</title><rect x="39.1094%" y="7877" width="0.0457%" height="15" fill="rgb(229,154,42)" fg:x="12831" fg:w="15"/><text x="39.3594%" y="7887.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot_in_group (24 samples, 0.07%)</title><rect x="39.0941%" y="7909" width="0.0732%" height="15" fill="rgb(228,114,26)" fg:x="12826" fg:w="24"/><text x="39.3441%" y="7919.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (4 samples, 0.01%)</title><rect x="39.1551%" y="7893" width="0.0122%" height="15" fill="rgb(208,144,1)" fg:x="12846" fg:w="4"/><text x="39.4051%" y="7903.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (4 samples, 0.01%)</title><rect x="39.1551%" y="7877" width="0.0122%" height="15" fill="rgb(239,112,37)" fg:x="12846" fg:w="4"/><text x="39.4051%" y="7887.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fix_insert_slot (10 samples, 0.03%)</title><rect x="39.1673%" y="7909" width="0.0305%" height="15" fill="rgb(210,96,50)" fg:x="12850" fg:w="10"/><text x="39.4173%" y="7919.50"></text></g><g><title>hashbrown::raw::h2 (10 samples, 0.03%)</title><rect x="39.1978%" y="7909" width="0.0305%" height="15" fill="rgb(222,178,2)" fg:x="12860" fg:w="10"/><text x="39.4478%" y="7919.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (11 samples, 0.03%)</title><rect x="39.2282%" y="7909" width="0.0335%" height="15" fill="rgb(226,74,18)" fg:x="12870" fg:w="11"/><text x="39.4782%" y="7919.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (11 samples, 0.03%)</title><rect x="39.2282%" y="7893" width="0.0335%" height="15" fill="rgb(225,67,54)" fg:x="12870" fg:w="11"/><text x="39.4782%" y="7903.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (11 samples, 0.03%)</title><rect x="39.2282%" y="7877" width="0.0335%" height="15" fill="rgb(251,92,32)" fg:x="12870" fg:w="11"/><text x="39.4782%" y="7887.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (4,216 samples, 12.85%)</title><rect x="26.4234%" y="7941" width="12.8505%" height="15" fill="rgb(228,149,22)" fg:x="8669" fg:w="4216"/><text x="26.6734%" y="7951.50">hashbrown::raw::Raw..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_or_find_insert_slot_inner (138 samples, 0.42%)</title><rect x="38.8533%" y="7925" width="0.4206%" height="15" fill="rgb(243,54,13)" fg:x="12747" fg:w="138"/><text x="39.1033%" y="7935.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (4 samples, 0.01%)</title><rect x="39.2618%" y="7909" width="0.0122%" height="15" fill="rgb(243,180,28)" fg:x="12881" fg:w="4"/><text x="39.5118%" y="7919.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (4 samples, 0.01%)</title><rect x="39.2618%" y="7893" width="0.0122%" height="15" fill="rgb(208,167,24)" fg:x="12881" fg:w="4"/><text x="39.5118%" y="7903.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (20 samples, 0.06%)</title><rect x="39.2740%" y="7925" width="0.0610%" height="15" fill="rgb(245,73,45)" fg:x="12885" fg:w="20"/><text x="39.5240%" y="7935.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (20 samples, 0.06%)</title><rect x="39.2740%" y="7909" width="0.0610%" height="15" fill="rgb(237,203,48)" fg:x="12885" fg:w="20"/><text x="39.5240%" y="7919.50"></text></g><g><title>core::ptr::write (20 samples, 0.06%)</title><rect x="39.2740%" y="7893" width="0.0610%" height="15" fill="rgb(211,197,16)" fg:x="12885" fg:w="20"/><text x="39.5240%" y="7903.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (6,962 samples, 21.22%)</title><rect x="18.1297%" y="7989" width="21.2204%" height="15" fill="rgb(243,99,51)" fg:x="5948" fg:w="6962"/><text x="18.3797%" y="7999.50">std::collections::hash::set::Hash..</text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (6,962 samples, 21.22%)</title><rect x="18.1297%" y="7973" width="21.2204%" height="15" fill="rgb(215,123,29)" fg:x="5948" fg:w="6962"/><text x="18.3797%" y="7983.50">hashbrown::set::HashSet&lt;T,S,A&gt;::i..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6,961 samples, 21.22%)</title><rect x="18.1328%" y="7957" width="21.2174%" height="15" fill="rgb(239,186,37)" fg:x="5949" fg:w="6961"/><text x="18.3828%" y="7967.50">hashbrown::map::HashMap&lt;K,V,S,A&gt;:..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (25 samples, 0.08%)</title><rect x="39.2740%" y="7941" width="0.0762%" height="15" fill="rgb(252,136,39)" fg:x="12885" fg:w="25"/><text x="39.5240%" y="7951.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::record_item_insert_at (5 samples, 0.02%)</title><rect x="39.3349%" y="7925" width="0.0152%" height="15" fill="rgb(223,213,32)" fg:x="12905" fg:w="5"/><text x="39.5849%" y="7935.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::clone::Clone&gt;::clone (12 samples, 0.04%)</title><rect x="40.2585%" y="7973" width="0.0366%" height="15" fill="rgb(233,115,5)" fg:x="13208" fg:w="12"/><text x="40.5085%" y="7983.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (12 samples, 0.04%)</title><rect x="40.2585%" y="7957" width="0.0366%" height="15" fill="rgb(207,226,44)" fg:x="13208" fg:w="12"/><text x="40.5085%" y="7967.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (16 samples, 0.05%)</title><rect x="40.3194%" y="7957" width="0.0488%" height="15" fill="rgb(208,126,0)" fg:x="13228" fg:w="16"/><text x="40.5694%" y="7967.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (9 samples, 0.03%)</title><rect x="40.3408%" y="7941" width="0.0274%" height="15" fill="rgb(244,66,21)" fg:x="13235" fg:w="9"/><text x="40.5908%" y="7951.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (9 samples, 0.03%)</title><rect x="40.3408%" y="7925" width="0.0274%" height="15" fill="rgb(222,97,12)" fg:x="13235" fg:w="9"/><text x="40.5908%" y="7935.50"></text></g><g><title>__rdl_alloc (57 samples, 0.17%)</title><rect x="40.7797%" y="7749" width="0.1737%" height="15" fill="rgb(219,213,19)" fg:x="13379" fg:w="57"/><text x="41.0297%" y="7759.50"></text></g><g><title>__rust_alloc (47 samples, 0.14%)</title><rect x="40.9534%" y="7749" width="0.1433%" height="15" fill="rgb(252,169,30)" fg:x="13436" fg:w="47"/><text x="41.2034%" y="7759.50"></text></g><g><title>core::ptr::read_volatile (5 samples, 0.02%)</title><rect x="41.0967%" y="7749" width="0.0152%" height="15" fill="rgb(206,32,51)" fg:x="13483" fg:w="5"/><text x="41.3467%" y="7759.50"></text></g><g><title>[libc.so.6] (112 samples, 0.34%)</title><rect x="46.1808%" y="7717" width="0.3414%" height="15" fill="rgb(250,172,42)" fg:x="15151" fg:w="112"/><text x="46.4308%" y="7727.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,928 samples, 5.88%)</title><rect x="40.6517%" y="7797" width="5.8766%" height="15" fill="rgb(209,34,43)" fg:x="13337" fg:w="1928"/><text x="40.9017%" y="7807.50">&lt;alloc:..</text></g><g><title>alloc::alloc::Global::alloc_impl (1,928 samples, 5.88%)</title><rect x="40.6517%" y="7781" width="5.8766%" height="15" fill="rgb(223,11,35)" fg:x="13337" fg:w="1928"/><text x="40.9017%" y="7791.50">alloc::..</text></g><g><title>alloc::alloc::alloc (1,925 samples, 5.87%)</title><rect x="40.6608%" y="7765" width="5.8675%" height="15" fill="rgb(251,219,26)" fg:x="13340" fg:w="1925"/><text x="40.9108%" y="7775.50">alloc::..</text></g><g><title>malloc (1,777 samples, 5.42%)</title><rect x="41.1119%" y="7749" width="5.4164%" height="15" fill="rgb(231,119,3)" fg:x="13488" fg:w="1777"/><text x="41.3619%" y="7759.50">malloc</text></g><g><title>[libc.so.6] (1,120 samples, 3.41%)</title><rect x="43.1145%" y="7733" width="3.4138%" height="15" fill="rgb(216,97,11)" fg:x="14145" fg:w="1120"/><text x="43.3645%" y="7743.50">[li..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,010 samples, 6.13%)</title><rect x="40.4292%" y="7845" width="6.1266%" height="15" fill="rgb(223,59,9)" fg:x="13264" fg:w="2010"/><text x="40.6792%" y="7855.50">alloc::v..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,010 samples, 6.13%)</title><rect x="40.4292%" y="7829" width="6.1266%" height="15" fill="rgb(233,93,31)" fg:x="13264" fg:w="2010"/><text x="40.6792%" y="7839.50">alloc::r..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2,010 samples, 6.13%)</title><rect x="40.4292%" y="7813" width="6.1266%" height="15" fill="rgb(239,81,33)" fg:x="13264" fg:w="2010"/><text x="40.6792%" y="7823.50">alloc::r..</text></g><g><title>core::alloc::layout::Layout::array (9 samples, 0.03%)</title><rect x="46.5283%" y="7797" width="0.0274%" height="15" fill="rgb(213,120,34)" fg:x="15265" fg:w="9"/><text x="46.7783%" y="7807.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (9 samples, 0.03%)</title><rect x="46.5283%" y="7781" width="0.0274%" height="15" fill="rgb(243,49,53)" fg:x="15265" fg:w="9"/><text x="46.7783%" y="7791.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,261 samples, 6.89%)</title><rect x="40.4292%" y="7909" width="6.8916%" height="15" fill="rgb(247,216,33)" fg:x="13264" fg:w="2261"/><text x="40.6792%" y="7919.50">&lt;alloc::v..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,261 samples, 6.89%)</title><rect x="40.4292%" y="7893" width="6.8916%" height="15" fill="rgb(226,26,14)" fg:x="13264" fg:w="2261"/><text x="40.6792%" y="7903.50">alloc::sl..</text></g><g><title>alloc::slice::hack::to_vec (2,261 samples, 6.89%)</title><rect x="40.4292%" y="7877" width="6.8916%" height="15" fill="rgb(215,49,53)" fg:x="13264" fg:w="2261"/><text x="40.6792%" y="7887.50">alloc::sl..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,261 samples, 6.89%)</title><rect x="40.4292%" y="7861" width="6.8916%" height="15" fill="rgb(245,162,40)" fg:x="13264" fg:w="2261"/><text x="40.6792%" y="7871.50">&lt;T as all..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (251 samples, 0.77%)</title><rect x="46.5557%" y="7845" width="0.7651%" height="15" fill="rgb(229,68,17)" fg:x="15274" fg:w="251"/><text x="46.8057%" y="7855.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (251 samples, 0.77%)</title><rect x="46.5557%" y="7829" width="0.7651%" height="15" fill="rgb(213,182,10)" fg:x="15274" fg:w="251"/><text x="46.8057%" y="7839.50"></text></g><g><title>[libc.so.6] (180 samples, 0.55%)</title><rect x="46.7721%" y="7813" width="0.5486%" height="15" fill="rgb(245,125,30)" fg:x="15345" fg:w="180"/><text x="47.0221%" y="7823.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.02%)</title><rect x="47.4701%" y="7893" width="0.0183%" height="15" fill="rgb(232,202,2)" fg:x="15574" fg:w="6"/><text x="47.7201%" y="7903.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (56 samples, 0.17%)</title><rect x="47.3208%" y="7909" width="0.1707%" height="15" fill="rgb(237,140,51)" fg:x="15525" fg:w="56"/><text x="47.5708%" y="7919.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (19 samples, 0.06%)</title><rect x="47.4915%" y="7909" width="0.0579%" height="15" fill="rgb(236,157,25)" fg:x="15581" fg:w="19"/><text x="47.7415%" y="7919.50"></text></g><g><title>__rdl_alloc (4 samples, 0.01%)</title><rect x="47.5799%" y="7813" width="0.0122%" height="15" fill="rgb(219,209,0)" fg:x="15610" fg:w="4"/><text x="47.8299%" y="7823.50"></text></g><g><title>__rust_alloc (11 samples, 0.03%)</title><rect x="47.5921%" y="7813" width="0.0335%" height="15" fill="rgb(240,116,54)" fg:x="15614" fg:w="11"/><text x="47.8421%" y="7823.50"></text></g><g><title>[libc.so.6] (24 samples, 0.07%)</title><rect x="49.4361%" y="7781" width="0.0732%" height="15" fill="rgb(216,10,36)" fg:x="16219" fg:w="24"/><text x="49.6861%" y="7791.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (638 samples, 1.94%)</title><rect x="47.5677%" y="7861" width="1.9446%" height="15" fill="rgb(222,72,44)" fg:x="15606" fg:w="638"/><text x="47.8177%" y="7871.50">&lt;..</text></g><g><title>alloc::alloc::Global::alloc_impl (638 samples, 1.94%)</title><rect x="47.5677%" y="7845" width="1.9446%" height="15" fill="rgb(232,159,9)" fg:x="15606" fg:w="638"/><text x="47.8177%" y="7855.50">a..</text></g><g><title>alloc::alloc::alloc (637 samples, 1.94%)</title><rect x="47.5707%" y="7829" width="1.9416%" height="15" fill="rgb(210,39,32)" fg:x="15607" fg:w="637"/><text x="47.8207%" y="7839.50">a..</text></g><g><title>malloc (616 samples, 1.88%)</title><rect x="47.6347%" y="7813" width="1.8776%" height="15" fill="rgb(216,194,45)" fg:x="15628" fg:w="616"/><text x="47.8847%" y="7823.50">m..</text></g><g><title>[libc.so.6] (468 samples, 1.43%)</title><rect x="48.0858%" y="7797" width="1.4265%" height="15" fill="rgb(218,18,35)" fg:x="15776" fg:w="468"/><text x="48.3358%" y="7807.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (650 samples, 1.98%)</title><rect x="47.5494%" y="7909" width="1.9812%" height="15" fill="rgb(207,83,51)" fg:x="15600" fg:w="650"/><text x="47.7994%" y="7919.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (648 samples, 1.98%)</title><rect x="47.5555%" y="7893" width="1.9751%" height="15" fill="rgb(225,63,43)" fg:x="15602" fg:w="648"/><text x="47.8055%" y="7903.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (648 samples, 1.98%)</title><rect x="47.5555%" y="7877" width="1.9751%" height="15" fill="rgb(207,57,36)" fg:x="15602" fg:w="648"/><text x="47.8055%" y="7887.50">a..</text></g><g><title>core::alloc::layout::Layout::array (6 samples, 0.02%)</title><rect x="49.5123%" y="7861" width="0.0183%" height="15" fill="rgb(216,99,33)" fg:x="16244" fg:w="6"/><text x="49.7623%" y="7871.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (6 samples, 0.02%)</title><rect x="49.5123%" y="7845" width="0.0183%" height="15" fill="rgb(225,42,16)" fg:x="16244" fg:w="6"/><text x="49.7623%" y="7855.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (25 samples, 0.08%)</title><rect x="49.5306%" y="7909" width="0.0762%" height="15" fill="rgb(220,201,45)" fg:x="16250" fg:w="25"/><text x="49.7806%" y="7919.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,077 samples, 9.38%)</title><rect x="40.2950%" y="7973" width="9.3788%" height="15" fill="rgb(225,33,4)" fg:x="13220" fg:w="3077"/><text x="40.5450%" y="7983.50">&lt;alloc::vec::..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,053 samples, 9.31%)</title><rect x="40.3682%" y="7957" width="9.3057%" height="15" fill="rgb(224,33,50)" fg:x="13244" fg:w="3053"/><text x="40.6182%" y="7967.50">alloc::slice:..</text></g><g><title>alloc::slice::hack::to_vec (3,053 samples, 9.31%)</title><rect x="40.3682%" y="7941" width="9.3057%" height="15" fill="rgb(246,198,51)" fg:x="13244" fg:w="3053"/><text x="40.6182%" y="7951.50">alloc::slice:..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,053 samples, 9.31%)</title><rect x="40.3682%" y="7925" width="9.3057%" height="15" fill="rgb(205,22,4)" fg:x="13244" fg:w="3053"/><text x="40.6182%" y="7935.50">&lt;T as alloc::..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (22 samples, 0.07%)</title><rect x="49.6068%" y="7909" width="0.0671%" height="15" fill="rgb(206,3,8)" fg:x="16275" fg:w="22"/><text x="49.8568%" y="7919.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (22 samples, 0.07%)</title><rect x="49.6068%" y="7893" width="0.0671%" height="15" fill="rgb(251,23,15)" fg:x="16275" fg:w="22"/><text x="49.8568%" y="7903.50"></text></g><g><title>[libc.so.6] (18 samples, 0.05%)</title><rect x="49.6190%" y="7877" width="0.0549%" height="15" fill="rgb(252,88,28)" fg:x="16279" fg:w="18"/><text x="49.8690%" y="7887.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (17 samples, 0.05%)</title><rect x="49.6739%" y="7973" width="0.0518%" height="15" fill="rgb(212,127,14)" fg:x="16297" fg:w="17"/><text x="49.9239%" y="7983.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (17 samples, 0.05%)</title><rect x="49.6739%" y="7957" width="0.0518%" height="15" fill="rgb(247,145,37)" fg:x="16297" fg:w="17"/><text x="49.9239%" y="7967.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (17 samples, 0.05%)</title><rect x="49.6739%" y="7941" width="0.0518%" height="15" fill="rgb(209,117,53)" fg:x="16297" fg:w="17"/><text x="49.9239%" y="7951.50"></text></g><g><title>__rdl_alloc (6 samples, 0.02%)</title><rect x="49.7531%" y="7733" width="0.0183%" height="15" fill="rgb(212,90,42)" fg:x="16323" fg:w="6"/><text x="50.0031%" y="7743.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (81 samples, 0.25%)</title><rect x="49.7379%" y="7829" width="0.2469%" height="15" fill="rgb(218,164,37)" fg:x="16318" fg:w="81"/><text x="49.9879%" y="7839.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (81 samples, 0.25%)</title><rect x="49.7379%" y="7813" width="0.2469%" height="15" fill="rgb(246,65,34)" fg:x="16318" fg:w="81"/><text x="49.9879%" y="7823.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (81 samples, 0.25%)</title><rect x="49.7379%" y="7797" width="0.2469%" height="15" fill="rgb(231,100,33)" fg:x="16318" fg:w="81"/><text x="49.9879%" y="7807.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (79 samples, 0.24%)</title><rect x="49.7440%" y="7781" width="0.2408%" height="15" fill="rgb(228,126,14)" fg:x="16320" fg:w="79"/><text x="49.9940%" y="7791.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (79 samples, 0.24%)</title><rect x="49.7440%" y="7765" width="0.2408%" height="15" fill="rgb(215,173,21)" fg:x="16320" fg:w="79"/><text x="49.9940%" y="7775.50"></text></g><g><title>alloc::alloc::alloc (79 samples, 0.24%)</title><rect x="49.7440%" y="7749" width="0.2408%" height="15" fill="rgb(210,6,40)" fg:x="16320" fg:w="79"/><text x="49.9940%" y="7759.50"></text></g><g><title>malloc (67 samples, 0.20%)</title><rect x="49.7805%" y="7733" width="0.2042%" height="15" fill="rgb(212,48,18)" fg:x="16332" fg:w="67"/><text x="50.0305%" y="7743.50"></text></g><g><title>[libc.so.6] (33 samples, 0.10%)</title><rect x="49.8842%" y="7717" width="0.1006%" height="15" fill="rgb(230,214,11)" fg:x="16366" fg:w="33"/><text x="50.1342%" y="7727.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (102 samples, 0.31%)</title><rect x="49.7379%" y="7893" width="0.3109%" height="15" fill="rgb(254,105,39)" fg:x="16318" fg:w="102"/><text x="49.9879%" y="7903.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (102 samples, 0.31%)</title><rect x="49.7379%" y="7877" width="0.3109%" height="15" fill="rgb(245,158,5)" fg:x="16318" fg:w="102"/><text x="49.9879%" y="7887.50"></text></g><g><title>alloc::slice::hack::to_vec (102 samples, 0.31%)</title><rect x="49.7379%" y="7861" width="0.3109%" height="15" fill="rgb(249,208,11)" fg:x="16318" fg:w="102"/><text x="49.9879%" y="7871.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (102 samples, 0.31%)</title><rect x="49.7379%" y="7845" width="0.3109%" height="15" fill="rgb(210,39,28)" fg:x="16318" fg:w="102"/><text x="49.9879%" y="7855.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (21 samples, 0.06%)</title><rect x="49.9848%" y="7829" width="0.0640%" height="15" fill="rgb(211,56,53)" fg:x="16399" fg:w="21"/><text x="50.2348%" y="7839.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (21 samples, 0.06%)</title><rect x="49.9848%" y="7813" width="0.0640%" height="15" fill="rgb(226,201,30)" fg:x="16399" fg:w="21"/><text x="50.2348%" y="7823.50"></text></g><g><title>[libc.so.6] (17 samples, 0.05%)</title><rect x="49.9970%" y="7797" width="0.0518%" height="15" fill="rgb(239,101,34)" fg:x="16403" fg:w="17"/><text x="50.2470%" y="7807.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.02%)</title><rect x="50.0488%" y="7893" width="0.0183%" height="15" fill="rgb(226,209,5)" fg:x="16420" fg:w="6"/><text x="50.2988%" y="7903.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (63 samples, 0.19%)</title><rect x="50.0671%" y="7893" width="0.1920%" height="15" fill="rgb(250,105,47)" fg:x="16426" fg:w="63"/><text x="50.3171%" y="7903.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (62 samples, 0.19%)</title><rect x="50.0701%" y="7877" width="0.1890%" height="15" fill="rgb(230,72,3)" fg:x="16427" fg:w="62"/><text x="50.3201%" y="7887.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (62 samples, 0.19%)</title><rect x="50.0701%" y="7861" width="0.1890%" height="15" fill="rgb(232,218,39)" fg:x="16427" fg:w="62"/><text x="50.3201%" y="7871.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (61 samples, 0.19%)</title><rect x="50.0732%" y="7845" width="0.1859%" height="15" fill="rgb(248,166,6)" fg:x="16428" fg:w="61"/><text x="50.3232%" y="7855.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (61 samples, 0.19%)</title><rect x="50.0732%" y="7829" width="0.1859%" height="15" fill="rgb(247,89,20)" fg:x="16428" fg:w="61"/><text x="50.3232%" y="7839.50"></text></g><g><title>alloc::alloc::alloc (61 samples, 0.19%)</title><rect x="50.0732%" y="7813" width="0.1859%" height="15" fill="rgb(248,130,54)" fg:x="16428" fg:w="61"/><text x="50.3232%" y="7823.50"></text></g><g><title>malloc (58 samples, 0.18%)</title><rect x="50.0823%" y="7797" width="0.1768%" height="15" fill="rgb(234,196,4)" fg:x="16431" fg:w="58"/><text x="50.3323%" y="7807.50"></text></g><g><title>[libc.so.6] (51 samples, 0.16%)</title><rect x="50.1036%" y="7781" width="0.1554%" height="15" fill="rgb(250,143,31)" fg:x="16438" fg:w="51"/><text x="50.3536%" y="7791.50"></text></g><g><title>&lt;tetrs::logic::state::State as core::clone::Clone&gt;::clone (175 samples, 0.53%)</title><rect x="49.7348%" y="7973" width="0.5334%" height="15" fill="rgb(211,110,34)" fg:x="16317" fg:w="175"/><text x="49.9848%" y="7983.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (175 samples, 0.53%)</title><rect x="49.7348%" y="7957" width="0.5334%" height="15" fill="rgb(215,124,48)" fg:x="16317" fg:w="175"/><text x="49.9848%" y="7967.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (174 samples, 0.53%)</title><rect x="49.7379%" y="7941" width="0.5304%" height="15" fill="rgb(216,46,13)" fg:x="16318" fg:w="174"/><text x="49.9879%" y="7951.50"></text></g><g><title>alloc::slice::hack::to_vec (174 samples, 0.53%)</title><rect x="49.7379%" y="7925" width="0.5304%" height="15" fill="rgb(205,184,25)" fg:x="16318" fg:w="174"/><text x="49.9879%" y="7935.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (174 samples, 0.53%)</title><rect x="49.7379%" y="7909" width="0.5304%" height="15" fill="rgb(228,1,10)" fg:x="16318" fg:w="174"/><text x="49.9879%" y="7919.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (8 samples, 0.02%)</title><rect x="50.2682%" y="7973" width="0.0244%" height="15" fill="rgb(213,116,27)" fg:x="16492" fg:w="8"/><text x="50.5182%" y="7983.50"></text></g><g><title>alloc::alloc::exchange_malloc (7 samples, 0.02%)</title><rect x="50.2713%" y="7957" width="0.0213%" height="15" fill="rgb(241,95,50)" fg:x="16493" fg:w="7"/><text x="50.5213%" y="7967.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.02%)</title><rect x="50.2743%" y="7941" width="0.0183%" height="15" fill="rgb(238,48,32)" fg:x="16494" fg:w="6"/><text x="50.5243%" y="7951.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.02%)</title><rect x="50.2743%" y="7925" width="0.0183%" height="15" fill="rgb(235,113,49)" fg:x="16494" fg:w="6"/><text x="50.5243%" y="7935.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.02%)</title><rect x="50.2743%" y="7909" width="0.0183%" height="15" fill="rgb(205,127,43)" fg:x="16494" fg:w="6"/><text x="50.5243%" y="7919.50"></text></g><g><title>malloc (5 samples, 0.02%)</title><rect x="50.2774%" y="7893" width="0.0152%" height="15" fill="rgb(250,162,2)" fg:x="16495" fg:w="5"/><text x="50.5274%" y="7903.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="50.2804%" y="7877" width="0.0122%" height="15" fill="rgb(220,13,41)" fg:x="16496" fg:w="4"/><text x="50.5304%" y="7887.50"></text></g><g><title>__rdl_realloc (4 samples, 0.01%)</title><rect x="50.3597%" y="7861" width="0.0122%" height="15" fill="rgb(249,221,25)" fg:x="16522" fg:w="4"/><text x="50.6097%" y="7871.50"></text></g><g><title>[libc.so.6] (1,400 samples, 4.27%)</title><rect x="51.9629%" y="7813" width="4.2673%" height="15" fill="rgb(215,208,19)" fg:x="17048" fg:w="1400"/><text x="52.2129%" y="7823.50">[libc..</text></g><g><title>[libc.so.6] (384 samples, 1.17%)</title><rect x="55.0597%" y="7797" width="1.1704%" height="15" fill="rgb(236,175,2)" fg:x="18064" fg:w="384"/><text x="55.3097%" y="7807.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,927 samples, 5.87%)</title><rect x="50.3597%" y="7909" width="5.8736%" height="15" fill="rgb(241,52,2)" fg:x="16522" fg:w="1927"/><text x="50.6097%" y="7919.50">&lt;alloc:..</text></g><g><title>alloc::alloc::Global::grow_impl (1,927 samples, 5.87%)</title><rect x="50.3597%" y="7893" width="5.8736%" height="15" fill="rgb(248,140,14)" fg:x="16522" fg:w="1927"/><text x="50.6097%" y="7903.50">alloc::..</text></g><g><title>alloc::alloc::realloc (1,927 samples, 5.87%)</title><rect x="50.3597%" y="7877" width="5.8736%" height="15" fill="rgb(253,22,42)" fg:x="16522" fg:w="1927"/><text x="50.6097%" y="7887.50">alloc::..</text></g><g><title>realloc (1,922 samples, 5.86%)</title><rect x="50.3749%" y="7861" width="5.8583%" height="15" fill="rgb(234,61,47)" fg:x="16527" fg:w="1922"/><text x="50.6249%" y="7871.50">realloc</text></g><g><title>[libc.so.6] (1,909 samples, 5.82%)</title><rect x="50.4145%" y="7845" width="5.8187%" height="15" fill="rgb(208,226,15)" fg:x="16540" fg:w="1909"/><text x="50.6645%" y="7855.50">[libc.s..</text></g><g><title>[libc.so.6] (1,899 samples, 5.79%)</title><rect x="50.4450%" y="7829" width="5.7882%" height="15" fill="rgb(217,221,4)" fg:x="16550" fg:w="1899"/><text x="50.6950%" y="7839.50">[libc.s..</text></g><g><title>alloc::raw_vec::finish_grow (1,939 samples, 5.91%)</title><rect x="50.3414%" y="7925" width="5.9101%" height="15" fill="rgb(212,174,34)" fg:x="16516" fg:w="1939"/><text x="50.5914%" y="7935.50">alloc::r..</text></g><g><title>malloc (6 samples, 0.02%)</title><rect x="56.2332%" y="7909" width="0.0183%" height="15" fill="rgb(253,83,4)" fg:x="18449" fg:w="6"/><text x="56.4832%" y="7919.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1,954 samples, 5.96%)</title><rect x="50.3139%" y="7957" width="5.9559%" height="15" fill="rgb(250,195,49)" fg:x="16507" fg:w="1954"/><text x="50.5639%" y="7967.50">alloc::r..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1,954 samples, 5.96%)</title><rect x="50.3139%" y="7941" width="5.9559%" height="15" fill="rgb(241,192,25)" fg:x="16507" fg:w="1954"/><text x="50.5639%" y="7951.50">alloc::r..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,011 samples, 6.13%)</title><rect x="50.2957%" y="7973" width="6.1296%" height="15" fill="rgb(208,124,10)" fg:x="16501" fg:w="2011"/><text x="50.5457%" y="7983.50">alloc::v..</text></g><g><title>core::ptr::write (46 samples, 0.14%)</title><rect x="56.2851%" y="7957" width="0.1402%" height="15" fill="rgb(222,33,0)" fg:x="18466" fg:w="46"/><text x="56.5351%" y="7967.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::remove (21 samples, 0.06%)</title><rect x="56.4253%" y="7973" width="0.0640%" height="15" fill="rgb(234,209,28)" fg:x="18512" fg:w="21"/><text x="56.6753%" y="7983.50"></text></g><g><title>core::intrinsics::copy (17 samples, 0.05%)</title><rect x="56.4375%" y="7957" width="0.0518%" height="15" fill="rgb(224,11,23)" fg:x="18516" fg:w="17"/><text x="56.6875%" y="7967.50"></text></g><g><title>[libc.so.6] (15 samples, 0.05%)</title><rect x="56.4436%" y="7941" width="0.0457%" height="15" fill="rgb(232,99,1)" fg:x="18518" fg:w="15"/><text x="56.6936%" y="7951.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (5 samples, 0.02%)</title><rect x="56.4893%" y="7973" width="0.0152%" height="15" fill="rgb(237,95,45)" fg:x="18533" fg:w="5"/><text x="56.7393%" y="7983.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (27 samples, 0.08%)</title><rect x="56.6051%" y="7941" width="0.0823%" height="15" fill="rgb(208,109,11)" fg:x="18571" fg:w="27"/><text x="56.8551%" y="7951.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::next (112 samples, 0.34%)</title><rect x="56.5045%" y="7973" width="0.3414%" height="15" fill="rgb(216,190,48)" fg:x="18538" fg:w="112"/><text x="56.7545%" y="7983.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::iter::range::RangeInclusiveIteratorImpl&gt;::spec_next (112 samples, 0.34%)</title><rect x="56.5045%" y="7957" width="0.3414%" height="15" fill="rgb(251,171,36)" fg:x="18538" fg:w="112"/><text x="56.7545%" y="7967.50"></text></g><g><title>core::ops::range::RangeInclusive&lt;Idx&gt;::is_empty (52 samples, 0.16%)</title><rect x="56.6874%" y="7941" width="0.1585%" height="15" fill="rgb(230,62,22)" fg:x="18598" fg:w="52"/><text x="56.9374%" y="7951.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (190 samples, 0.58%)</title><rect x="63.3839%" y="7957" width="0.5791%" height="15" fill="rgb(225,114,35)" fg:x="20795" fg:w="190"/><text x="63.6339%" y="7967.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (190 samples, 0.58%)</title><rect x="63.3839%" y="7941" width="0.5791%" height="15" fill="rgb(215,118,42)" fg:x="20795" fg:w="190"/><text x="63.6339%" y="7951.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (190 samples, 0.58%)</title><rect x="63.3839%" y="7925" width="0.5791%" height="15" fill="rgb(243,119,21)" fg:x="20795" fg:w="190"/><text x="63.6339%" y="7935.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (74 samples, 0.23%)</title><rect x="64.3014%" y="7925" width="0.2256%" height="15" fill="rgb(252,177,53)" fg:x="21096" fg:w="74"/><text x="64.5514%" y="7935.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (74 samples, 0.23%)</title><rect x="64.3014%" y="7909" width="0.2256%" height="15" fill="rgb(237,209,29)" fg:x="21096" fg:w="74"/><text x="64.5514%" y="7919.50"></text></g><g><title>tetrs::logic::bot::can_place (2,649 samples, 8.07%)</title><rect x="56.8459%" y="7973" width="8.0743%" height="15" fill="rgb(212,65,23)" fg:x="18650" fg:w="2649"/><text x="57.0959%" y="7983.50">tetrs::logi..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (313 samples, 0.95%)</title><rect x="63.9661%" y="7957" width="0.9540%" height="15" fill="rgb(230,222,46)" fg:x="20986" fg:w="313"/><text x="64.2161%" y="7967.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (313 samples, 0.95%)</title><rect x="63.9661%" y="7941" width="0.9540%" height="15" fill="rgb(215,135,32)" fg:x="20986" fg:w="313"/><text x="64.2161%" y="7951.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (129 samples, 0.39%)</title><rect x="64.5269%" y="7925" width="0.3932%" height="15" fill="rgb(246,101,22)" fg:x="21170" fg:w="129"/><text x="64.7769%" y="7935.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (22 samples, 0.07%)</title><rect x="65.3652%" y="7957" width="0.0671%" height="15" fill="rgb(206,107,13)" fg:x="21445" fg:w="22"/><text x="65.6152%" y="7967.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (22 samples, 0.07%)</title><rect x="65.3652%" y="7941" width="0.0671%" height="15" fill="rgb(250,100,44)" fg:x="21445" fg:w="22"/><text x="65.6152%" y="7951.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (22 samples, 0.07%)</title><rect x="65.3652%" y="7925" width="0.0671%" height="15" fill="rgb(231,147,38)" fg:x="21445" fg:w="22"/><text x="65.6152%" y="7935.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (10 samples, 0.03%)</title><rect x="65.4322%" y="7957" width="0.0305%" height="15" fill="rgb(229,8,40)" fg:x="21467" fg:w="10"/><text x="65.6822%" y="7967.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (10 samples, 0.03%)</title><rect x="65.4322%" y="7941" width="0.0305%" height="15" fill="rgb(221,135,30)" fg:x="21467" fg:w="10"/><text x="65.6822%" y="7951.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (10 samples, 0.03%)</title><rect x="65.4322%" y="7925" width="0.0305%" height="15" fill="rgb(249,193,18)" fg:x="21467" fg:w="10"/><text x="65.6822%" y="7935.50"></text></g><g><title>tetrs::logic::bot::place_piece (229 samples, 0.70%)</title><rect x="64.9201%" y="7973" width="0.6980%" height="15" fill="rgb(209,133,39)" fg:x="21299" fg:w="229"/><text x="65.1701%" y="7983.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (48 samples, 0.15%)</title><rect x="65.4718%" y="7957" width="0.1463%" height="15" fill="rgb(232,100,14)" fg:x="21480" fg:w="48"/><text x="65.7218%" y="7967.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (48 samples, 0.15%)</title><rect x="65.4718%" y="7941" width="0.1463%" height="15" fill="rgb(224,185,1)" fg:x="21480" fg:w="48"/><text x="65.7218%" y="7951.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (41 samples, 0.12%)</title><rect x="65.4932%" y="7925" width="0.1250%" height="15" fill="rgb(223,139,8)" fg:x="21487" fg:w="41"/><text x="65.7432%" y="7935.50"></text></g><g><title>tetrs::logic::bot::generate_states (8,649 samples, 26.36%)</title><rect x="39.3502%" y="7989" width="26.3625%" height="15" fill="rgb(232,213,38)" fg:x="12910" fg:w="8649"/><text x="39.6002%" y="7999.50">tetrs::logic::bot::generate_states</text></g><g><title>tetrs::logic::id_manager::IdManager::next_unique_id (30 samples, 0.09%)</title><rect x="65.6212%" y="7973" width="0.0914%" height="15" fill="rgb(207,94,22)" fg:x="21529" fg:w="30"/><text x="65.8712%" y="7983.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (6 samples, 0.02%)</title><rect x="65.6943%" y="7957" width="0.0183%" height="15" fill="rgb(219,183,54)" fg:x="21553" fg:w="6"/><text x="65.9443%" y="7967.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (6 samples, 0.02%)</title><rect x="65.6943%" y="7941" width="0.0183%" height="15" fill="rgb(216,185,54)" fg:x="21553" fg:w="6"/><text x="65.9443%" y="7951.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (6 samples, 0.02%)</title><rect x="65.6943%" y="7925" width="0.0183%" height="15" fill="rgb(254,217,39)" fg:x="21553" fg:w="6"/><text x="65.9443%" y="7935.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (27 samples, 0.08%)</title><rect x="66.3558%" y="7973" width="0.0823%" height="15" fill="rgb(240,178,23)" fg:x="21770" fg:w="27"/><text x="66.6058%" y="7983.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (27 samples, 0.08%)</title><rect x="66.3558%" y="7957" width="0.0823%" height="15" fill="rgb(218,11,47)" fg:x="21770" fg:w="27"/><text x="66.6058%" y="7967.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (27 samples, 0.08%)</title><rect x="66.3558%" y="7941" width="0.0823%" height="15" fill="rgb(218,51,51)" fg:x="21770" fg:w="27"/><text x="66.6058%" y="7951.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (19 samples, 0.06%)</title><rect x="66.4442%" y="7941" width="0.0579%" height="15" fill="rgb(238,126,27)" fg:x="21799" fg:w="19"/><text x="66.6942%" y="7951.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (19 samples, 0.06%)</title><rect x="66.4442%" y="7925" width="0.0579%" height="15" fill="rgb(249,202,22)" fg:x="21799" fg:w="19"/><text x="66.6942%" y="7935.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (124 samples, 0.38%)</title><rect x="66.4381%" y="7973" width="0.3780%" height="15" fill="rgb(254,195,49)" fg:x="21797" fg:w="124"/><text x="66.6881%" y="7983.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (124 samples, 0.38%)</title><rect x="66.4381%" y="7957" width="0.3780%" height="15" fill="rgb(208,123,14)" fg:x="21797" fg:w="124"/><text x="66.6881%" y="7967.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (103 samples, 0.31%)</title><rect x="66.5021%" y="7941" width="0.3139%" height="15" fill="rgb(224,200,8)" fg:x="21818" fg:w="103"/><text x="66.7521%" y="7951.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (46 samples, 0.14%)</title><rect x="69.3063%" y="7957" width="0.1402%" height="15" fill="rgb(217,61,36)" fg:x="22738" fg:w="46"/><text x="69.5563%" y="7967.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (7 samples, 0.02%)</title><rect x="69.4251%" y="7941" width="0.0213%" height="15" fill="rgb(206,35,45)" fg:x="22777" fg:w="7"/><text x="69.6751%" y="7951.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (7 samples, 0.02%)</title><rect x="69.4251%" y="7925" width="0.0213%" height="15" fill="rgb(217,65,33)" fg:x="22777" fg:w="7"/><text x="69.6751%" y="7935.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (307 samples, 0.94%)</title><rect x="69.4465%" y="7957" width="0.9357%" height="15" fill="rgb(222,158,48)" fg:x="22784" fg:w="307"/><text x="69.6965%" y="7967.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (307 samples, 0.94%)</title><rect x="69.4465%" y="7941" width="0.9357%" height="15" fill="rgb(254,2,54)" fg:x="22784" fg:w="307"/><text x="69.6965%" y="7951.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (307 samples, 0.94%)</title><rect x="69.4465%" y="7925" width="0.9357%" height="15" fill="rgb(250,143,38)" fg:x="22784" fg:w="307"/><text x="69.6965%" y="7935.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (44 samples, 0.13%)</title><rect x="70.3822%" y="7957" width="0.1341%" height="15" fill="rgb(248,25,0)" fg:x="23091" fg:w="44"/><text x="70.6322%" y="7967.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (44 samples, 0.13%)</title><rect x="70.3822%" y="7941" width="0.1341%" height="15" fill="rgb(206,152,27)" fg:x="23091" fg:w="44"/><text x="70.6322%" y="7951.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (44 samples, 0.13%)</title><rect x="70.3822%" y="7925" width="0.1341%" height="15" fill="rgb(240,77,30)" fg:x="23091" fg:w="44"/><text x="70.6322%" y="7935.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (31 samples, 0.09%)</title><rect x="70.5163%" y="7957" width="0.0945%" height="15" fill="rgb(231,5,3)" fg:x="23135" fg:w="31"/><text x="70.7663%" y="7967.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (31 samples, 0.09%)</title><rect x="70.5163%" y="7941" width="0.0945%" height="15" fill="rgb(207,226,32)" fg:x="23135" fg:w="31"/><text x="70.7663%" y="7951.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (31 samples, 0.09%)</title><rect x="70.5163%" y="7925" width="0.0945%" height="15" fill="rgb(222,207,47)" fg:x="23135" fg:w="31"/><text x="70.7663%" y="7935.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (16 samples, 0.05%)</title><rect x="70.5621%" y="7909" width="0.0488%" height="15" fill="rgb(229,115,45)" fg:x="23150" fg:w="16"/><text x="70.8121%" y="7919.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::all (312 samples, 0.95%)</title><rect x="70.6108%" y="7957" width="0.9510%" height="15" fill="rgb(224,191,6)" fg:x="23166" fg:w="312"/><text x="70.8608%" y="7967.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (90 samples, 0.27%)</title><rect x="71.2875%" y="7941" width="0.2743%" height="15" fill="rgb(230,227,24)" fg:x="23388" fg:w="90"/><text x="71.5375%" y="7951.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (27 samples, 0.08%)</title><rect x="71.4795%" y="7925" width="0.0823%" height="15" fill="rgb(228,80,19)" fg:x="23451" fg:w="27"/><text x="71.7295%" y="7935.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (80 samples, 0.24%)</title><rect x="71.5618%" y="7957" width="0.2438%" height="15" fill="rgb(247,229,0)" fg:x="23478" fg:w="80"/><text x="71.8118%" y="7967.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (80 samples, 0.24%)</title><rect x="71.5618%" y="7941" width="0.2438%" height="15" fill="rgb(237,194,15)" fg:x="23478" fg:w="80"/><text x="71.8118%" y="7951.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (71 samples, 0.22%)</title><rect x="71.5892%" y="7925" width="0.2164%" height="15" fill="rgb(219,203,20)" fg:x="23487" fg:w="71"/><text x="71.8392%" y="7935.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (15 samples, 0.05%)</title><rect x="72.0404%" y="7941" width="0.0457%" height="15" fill="rgb(234,128,8)" fg:x="23635" fg:w="15"/><text x="72.2904%" y="7951.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (15 samples, 0.05%)</title><rect x="72.0404%" y="7925" width="0.0457%" height="15" fill="rgb(248,202,8)" fg:x="23635" fg:w="15"/><text x="72.2904%" y="7935.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (15 samples, 0.05%)</title><rect x="72.0404%" y="7909" width="0.0457%" height="15" fill="rgb(206,104,37)" fg:x="23635" fg:w="15"/><text x="72.2904%" y="7919.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::all (15 samples, 0.05%)</title><rect x="72.0983%" y="7941" width="0.0457%" height="15" fill="rgb(223,8,27)" fg:x="23654" fg:w="15"/><text x="72.3483%" y="7951.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.02%)</title><rect x="72.1257%" y="7925" width="0.0183%" height="15" fill="rgb(216,217,28)" fg:x="23663" fg:w="6"/><text x="72.3757%" y="7935.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (11 samples, 0.03%)</title><rect x="72.1440%" y="7941" width="0.0335%" height="15" fill="rgb(249,199,1)" fg:x="23669" fg:w="11"/><text x="72.3940%" y="7951.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (11 samples, 0.03%)</title><rect x="72.1440%" y="7925" width="0.0335%" height="15" fill="rgb(240,85,17)" fg:x="23669" fg:w="11"/><text x="72.3940%" y="7935.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (10 samples, 0.03%)</title><rect x="72.1470%" y="7909" width="0.0305%" height="15" fill="rgb(206,108,45)" fg:x="23670" fg:w="10"/><text x="72.3970%" y="7919.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (6 samples, 0.02%)</title><rect x="72.2415%" y="7909" width="0.0183%" height="15" fill="rgb(245,210,41)" fg:x="23701" fg:w="6"/><text x="72.4915%" y="7919.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (6 samples, 0.02%)</title><rect x="72.2415%" y="7893" width="0.0183%" height="15" fill="rgb(206,13,37)" fg:x="23701" fg:w="6"/><text x="72.4915%" y="7903.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (6 samples, 0.02%)</title><rect x="72.2415%" y="7877" width="0.0183%" height="15" fill="rgb(250,61,18)" fg:x="23701" fg:w="6"/><text x="72.4915%" y="7887.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (6 samples, 0.02%)</title><rect x="72.2415%" y="7861" width="0.0183%" height="15" fill="rgb(235,172,48)" fg:x="23701" fg:w="6"/><text x="72.4915%" y="7871.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (4 samples, 0.01%)</title><rect x="72.2476%" y="7845" width="0.0122%" height="15" fill="rgb(249,201,17)" fg:x="23703" fg:w="4"/><text x="72.4976%" y="7855.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (4 samples, 0.01%)</title><rect x="72.2476%" y="7829" width="0.0122%" height="15" fill="rgb(219,208,6)" fg:x="23703" fg:w="4"/><text x="72.4976%" y="7839.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (4 samples, 0.01%)</title><rect x="72.2476%" y="7813" width="0.0122%" height="15" fill="rgb(248,31,23)" fg:x="23703" fg:w="4"/><text x="72.4976%" y="7823.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.01%)</title><rect x="72.2598%" y="7861" width="0.0122%" height="15" fill="rgb(245,15,42)" fg:x="23707" fg:w="4"/><text x="72.5098%" y="7871.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.01%)</title><rect x="72.2598%" y="7845" width="0.0122%" height="15" fill="rgb(222,217,39)" fg:x="23707" fg:w="4"/><text x="72.5098%" y="7855.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (4 samples, 0.01%)</title><rect x="72.2598%" y="7829" width="0.0122%" height="15" fill="rgb(210,219,27)" fg:x="23707" fg:w="4"/><text x="72.5098%" y="7839.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4 samples, 0.01%)</title><rect x="72.2598%" y="7813" width="0.0122%" height="15" fill="rgb(252,166,36)" fg:x="23707" fg:w="4"/><text x="72.5098%" y="7823.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4 samples, 0.01%)</title><rect x="72.2598%" y="7797" width="0.0122%" height="15" fill="rgb(245,132,34)" fg:x="23707" fg:w="4"/><text x="72.5098%" y="7807.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (6 samples, 0.02%)</title><rect x="72.2720%" y="7845" width="0.0183%" height="15" fill="rgb(236,54,3)" fg:x="23711" fg:w="6"/><text x="72.5220%" y="7855.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.02%)</title><rect x="72.2720%" y="7829" width="0.0183%" height="15" fill="rgb(241,173,43)" fg:x="23711" fg:w="6"/><text x="72.5220%" y="7839.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (6 samples, 0.02%)</title><rect x="72.2720%" y="7813" width="0.0183%" height="15" fill="rgb(215,190,9)" fg:x="23711" fg:w="6"/><text x="72.5220%" y="7823.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (5 samples, 0.02%)</title><rect x="72.2751%" y="7797" width="0.0152%" height="15" fill="rgb(242,101,16)" fg:x="23712" fg:w="5"/><text x="72.5251%" y="7807.50"></text></g><g><title>tetrs::logic::game::gravity (24 samples, 0.07%)</title><rect x="72.2202%" y="7925" width="0.0732%" height="15" fill="rgb(223,190,21)" fg:x="23694" fg:w="24"/><text x="72.4702%" y="7935.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (11 samples, 0.03%)</title><rect x="72.2598%" y="7909" width="0.0335%" height="15" fill="rgb(215,228,25)" fg:x="23707" fg:w="11"/><text x="72.5098%" y="7919.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (11 samples, 0.03%)</title><rect x="72.2598%" y="7893" width="0.0335%" height="15" fill="rgb(225,36,22)" fg:x="23707" fg:w="11"/><text x="72.5098%" y="7903.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (11 samples, 0.03%)</title><rect x="72.2598%" y="7877" width="0.0335%" height="15" fill="rgb(251,106,46)" fg:x="23707" fg:w="11"/><text x="72.5098%" y="7887.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (7 samples, 0.02%)</title><rect x="72.2720%" y="7861" width="0.0213%" height="15" fill="rgb(208,90,1)" fg:x="23711" fg:w="7"/><text x="72.5220%" y="7871.50"></text></g><g><title>tetrs::logic::game::is_connected (6 samples, 0.02%)</title><rect x="72.2933%" y="7925" width="0.0183%" height="15" fill="rgb(243,10,4)" fg:x="23718" fg:w="6"/><text x="72.5433%" y="7935.50"></text></g><g><title>tetrs::logic::game::clear_rows (56 samples, 0.17%)</title><rect x="72.1775%" y="7941" width="0.1707%" height="15" fill="rgb(212,137,27)" fg:x="23680" fg:w="56"/><text x="72.4275%" y="7951.50"></text></g><g><title>tetrs::logic::id_manager::IdManager::next_unique_id (12 samples, 0.04%)</title><rect x="72.3116%" y="7925" width="0.0366%" height="15" fill="rgb(231,220,49)" fg:x="23724" fg:w="12"/><text x="72.5616%" y="7935.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (11 samples, 0.03%)</title><rect x="72.4854%" y="7925" width="0.0335%" height="15" fill="rgb(237,96,20)" fg:x="23781" fg:w="11"/><text x="72.7354%" y="7935.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (11 samples, 0.03%)</title><rect x="72.4854%" y="7909" width="0.0335%" height="15" fill="rgb(239,229,30)" fg:x="23781" fg:w="11"/><text x="72.7354%" y="7919.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (11 samples, 0.03%)</title><rect x="72.4854%" y="7893" width="0.0335%" height="15" fill="rgb(219,65,33)" fg:x="23781" fg:w="11"/><text x="72.7354%" y="7903.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.02%)</title><rect x="72.5219%" y="7925" width="0.0152%" height="15" fill="rgb(243,134,7)" fg:x="23793" fg:w="5"/><text x="72.7719%" y="7935.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (5 samples, 0.02%)</title><rect x="72.5219%" y="7909" width="0.0152%" height="15" fill="rgb(216,177,54)" fg:x="23793" fg:w="5"/><text x="72.7719%" y="7919.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (5 samples, 0.02%)</title><rect x="72.5219%" y="7893" width="0.0152%" height="15" fill="rgb(211,160,20)" fg:x="23793" fg:w="5"/><text x="72.7719%" y="7903.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.02%)</title><rect x="72.5372%" y="7925" width="0.0152%" height="15" fill="rgb(239,85,39)" fg:x="23798" fg:w="5"/><text x="72.7872%" y="7935.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.01%)</title><rect x="72.5402%" y="7909" width="0.0122%" height="15" fill="rgb(232,125,22)" fg:x="23799" fg:w="4"/><text x="72.7902%" y="7919.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (6 samples, 0.02%)</title><rect x="72.5768%" y="7861" width="0.0183%" height="15" fill="rgb(244,57,34)" fg:x="23811" fg:w="6"/><text x="72.8268%" y="7871.50"></text></g><g><title>alloc::alloc::Global::grow_impl (6 samples, 0.02%)</title><rect x="72.5768%" y="7845" width="0.0183%" height="15" fill="rgb(214,203,32)" fg:x="23811" fg:w="6"/><text x="72.8268%" y="7855.50"></text></g><g><title>alloc::alloc::realloc (6 samples, 0.02%)</title><rect x="72.5768%" y="7829" width="0.0183%" height="15" fill="rgb(207,58,43)" fg:x="23811" fg:w="6"/><text x="72.8268%" y="7839.50"></text></g><g><title>realloc (6 samples, 0.02%)</title><rect x="72.5768%" y="7813" width="0.0183%" height="15" fill="rgb(215,193,15)" fg:x="23811" fg:w="6"/><text x="72.8268%" y="7823.50"></text></g><g><title>alloc::raw_vec::finish_grow (10 samples, 0.03%)</title><rect x="72.5768%" y="7877" width="0.0305%" height="15" fill="rgb(232,15,44)" fg:x="23811" fg:w="10"/><text x="72.8268%" y="7887.50"></text></g><g><title>malloc (4 samples, 0.01%)</title><rect x="72.5951%" y="7861" width="0.0122%" height="15" fill="rgb(212,3,48)" fg:x="23817" fg:w="4"/><text x="72.8451%" y="7871.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (16 samples, 0.05%)</title><rect x="72.5677%" y="7909" width="0.0488%" height="15" fill="rgb(218,128,7)" fg:x="23808" fg:w="16"/><text x="72.8177%" y="7919.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (16 samples, 0.05%)</title><rect x="72.5677%" y="7893" width="0.0488%" height="15" fill="rgb(226,216,39)" fg:x="23808" fg:w="16"/><text x="72.8177%" y="7903.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (25 samples, 0.08%)</title><rect x="72.5524%" y="7925" width="0.0762%" height="15" fill="rgb(243,47,51)" fg:x="23803" fg:w="25"/><text x="72.8024%" y="7935.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.02%)</title><rect x="72.6286%" y="7877" width="0.0213%" height="15" fill="rgb(241,183,40)" fg:x="23828" fg:w="7"/><text x="72.8786%" y="7887.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.02%)</title><rect x="72.6286%" y="7861" width="0.0213%" height="15" fill="rgb(231,217,32)" fg:x="23828" fg:w="7"/><text x="72.8786%" y="7871.50"></text></g><g><title>cfree (6 samples, 0.02%)</title><rect x="72.6317%" y="7845" width="0.0183%" height="15" fill="rgb(229,61,38)" fg:x="23829" fg:w="6"/><text x="72.8817%" y="7855.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="72.6347%" y="7829" width="0.0152%" height="15" fill="rgb(225,210,5)" fg:x="23830" fg:w="5"/><text x="72.8847%" y="7839.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,usize)&gt;&gt; (8 samples, 0.02%)</title><rect x="72.6286%" y="7925" width="0.0244%" height="15" fill="rgb(231,79,45)" fg:x="23828" fg:w="8"/><text x="72.8786%" y="7935.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,usize)&gt;&gt; (8 samples, 0.02%)</title><rect x="72.6286%" y="7909" width="0.0244%" height="15" fill="rgb(224,100,7)" fg:x="23828" fg:w="8"/><text x="72.8786%" y="7919.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.02%)</title><rect x="72.6286%" y="7893" width="0.0244%" height="15" fill="rgb(241,198,18)" fg:x="23828" fg:w="8"/><text x="72.8786%" y="7903.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (14 samples, 0.04%)</title><rect x="72.7018%" y="7765" width="0.0427%" height="15" fill="rgb(252,97,53)" fg:x="23852" fg:w="14"/><text x="72.9518%" y="7775.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (26 samples, 0.08%)</title><rect x="72.6713%" y="7829" width="0.0792%" height="15" fill="rgb(220,88,7)" fg:x="23842" fg:w="26"/><text x="72.9213%" y="7839.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (26 samples, 0.08%)</title><rect x="72.6713%" y="7813" width="0.0792%" height="15" fill="rgb(213,176,14)" fg:x="23842" fg:w="26"/><text x="72.9213%" y="7823.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (26 samples, 0.08%)</title><rect x="72.6713%" y="7797" width="0.0792%" height="15" fill="rgb(246,73,7)" fg:x="23842" fg:w="26"/><text x="72.9213%" y="7807.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (17 samples, 0.05%)</title><rect x="72.6987%" y="7781" width="0.0518%" height="15" fill="rgb(245,64,36)" fg:x="23851" fg:w="17"/><text x="72.9487%" y="7791.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.02%)</title><rect x="72.7536%" y="7781" width="0.0152%" height="15" fill="rgb(245,80,10)" fg:x="23869" fg:w="5"/><text x="73.0036%" y="7791.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (5 samples, 0.02%)</title><rect x="72.7536%" y="7765" width="0.0152%" height="15" fill="rgb(232,107,50)" fg:x="23869" fg:w="5"/><text x="73.0036%" y="7775.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.02%)</title><rect x="72.7536%" y="7749" width="0.0152%" height="15" fill="rgb(253,3,0)" fg:x="23869" fg:w="5"/><text x="73.0036%" y="7759.50"></text></g><g><title>core::hash::sip::u8to64_le (4 samples, 0.01%)</title><rect x="72.7566%" y="7733" width="0.0122%" height="15" fill="rgb(212,99,53)" fg:x="23870" fg:w="4"/><text x="73.0066%" y="7743.50"></text></g><g><title>hashbrown::map::make_hash (35 samples, 0.11%)</title><rect x="72.6652%" y="7861" width="0.1067%" height="15" fill="rgb(249,111,54)" fg:x="23840" fg:w="35"/><text x="72.9152%" y="7871.50"></text></g><g><title>core::hash::BuildHasher::hash_one (35 samples, 0.11%)</title><rect x="72.6652%" y="7845" width="0.1067%" height="15" fill="rgb(249,55,30)" fg:x="23840" fg:w="35"/><text x="72.9152%" y="7855.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (6 samples, 0.02%)</title><rect x="72.7536%" y="7829" width="0.0183%" height="15" fill="rgb(237,47,42)" fg:x="23869" fg:w="6"/><text x="73.0036%" y="7839.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (6 samples, 0.02%)</title><rect x="72.7536%" y="7813" width="0.0183%" height="15" fill="rgb(211,20,18)" fg:x="23869" fg:w="6"/><text x="73.0036%" y="7823.50"></text></g><g><title>core::hash::Hasher::write_u16 (6 samples, 0.02%)</title><rect x="72.7536%" y="7797" width="0.0183%" height="15" fill="rgb(231,203,46)" fg:x="23869" fg:w="6"/><text x="73.0036%" y="7807.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.02%)</title><rect x="72.7871%" y="7813" width="0.0183%" height="15" fill="rgb(237,142,3)" fg:x="23880" fg:w="6"/><text x="73.0371%" y="7823.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (56 samples, 0.17%)</title><rect x="72.6622%" y="7925" width="0.1707%" height="15" fill="rgb(241,107,1)" fg:x="23839" fg:w="56"/><text x="72.9122%" y="7935.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (56 samples, 0.17%)</title><rect x="72.6622%" y="7909" width="0.1707%" height="15" fill="rgb(229,83,13)" fg:x="23839" fg:w="56"/><text x="72.9122%" y="7919.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (56 samples, 0.17%)</title><rect x="72.6622%" y="7893" width="0.1707%" height="15" fill="rgb(241,91,40)" fg:x="23839" fg:w="56"/><text x="72.9122%" y="7903.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (56 samples, 0.17%)</title><rect x="72.6622%" y="7877" width="0.1707%" height="15" fill="rgb(225,3,45)" fg:x="23839" fg:w="56"/><text x="72.9122%" y="7887.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (20 samples, 0.06%)</title><rect x="72.7719%" y="7861" width="0.0610%" height="15" fill="rgb(244,223,14)" fg:x="23875" fg:w="20"/><text x="73.0219%" y="7871.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (20 samples, 0.06%)</title><rect x="72.7719%" y="7845" width="0.0610%" height="15" fill="rgb(224,124,37)" fg:x="23875" fg:w="20"/><text x="73.0219%" y="7855.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (20 samples, 0.06%)</title><rect x="72.7719%" y="7829" width="0.0610%" height="15" fill="rgb(251,171,30)" fg:x="23875" fg:w="20"/><text x="73.0219%" y="7839.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (12 samples, 0.04%)</title><rect x="72.9121%" y="7781" width="0.0366%" height="15" fill="rgb(236,46,54)" fg:x="23921" fg:w="12"/><text x="73.1621%" y="7791.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (29 samples, 0.09%)</title><rect x="72.8786%" y="7845" width="0.0884%" height="15" fill="rgb(245,213,5)" fg:x="23910" fg:w="29"/><text x="73.1286%" y="7855.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (29 samples, 0.09%)</title><rect x="72.8786%" y="7829" width="0.0884%" height="15" fill="rgb(230,144,27)" fg:x="23910" fg:w="29"/><text x="73.1286%" y="7839.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (29 samples, 0.09%)</title><rect x="72.8786%" y="7813" width="0.0884%" height="15" fill="rgb(220,86,6)" fg:x="23910" fg:w="29"/><text x="73.1286%" y="7823.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (20 samples, 0.06%)</title><rect x="72.9060%" y="7797" width="0.0610%" height="15" fill="rgb(240,20,13)" fg:x="23919" fg:w="20"/><text x="73.1560%" y="7807.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (6 samples, 0.02%)</title><rect x="72.9487%" y="7781" width="0.0183%" height="15" fill="rgb(217,89,34)" fg:x="23933" fg:w="6"/><text x="73.1987%" y="7791.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (7 samples, 0.02%)</title><rect x="72.9731%" y="7797" width="0.0213%" height="15" fill="rgb(229,13,5)" fg:x="23941" fg:w="7"/><text x="73.2231%" y="7807.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (6 samples, 0.02%)</title><rect x="72.9761%" y="7781" width="0.0183%" height="15" fill="rgb(244,67,35)" fg:x="23942" fg:w="6"/><text x="73.2261%" y="7791.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.02%)</title><rect x="72.9761%" y="7765" width="0.0183%" height="15" fill="rgb(221,40,2)" fg:x="23942" fg:w="6"/><text x="73.2261%" y="7775.50"></text></g><g><title>hashbrown::map::make_hash (42 samples, 0.13%)</title><rect x="72.8694%" y="7877" width="0.1280%" height="15" fill="rgb(237,157,21)" fg:x="23907" fg:w="42"/><text x="73.1194%" y="7887.50"></text></g><g><title>core::hash::BuildHasher::hash_one (42 samples, 0.13%)</title><rect x="72.8694%" y="7861" width="0.1280%" height="15" fill="rgb(222,94,11)" fg:x="23907" fg:w="42"/><text x="73.1194%" y="7871.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (8 samples, 0.02%)</title><rect x="72.9731%" y="7845" width="0.0244%" height="15" fill="rgb(249,113,6)" fg:x="23941" fg:w="8"/><text x="73.2231%" y="7855.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (8 samples, 0.02%)</title><rect x="72.9731%" y="7829" width="0.0244%" height="15" fill="rgb(238,137,36)" fg:x="23941" fg:w="8"/><text x="73.2231%" y="7839.50"></text></g><g><title>core::hash::Hasher::write_u16 (8 samples, 0.02%)</title><rect x="72.9731%" y="7813" width="0.0244%" height="15" fill="rgb(210,102,26)" fg:x="23941" fg:w="8"/><text x="73.2231%" y="7823.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (11 samples, 0.03%)</title><rect x="73.0279%" y="7733" width="0.0335%" height="15" fill="rgb(218,30,30)" fg:x="23959" fg:w="11"/><text x="73.2779%" y="7743.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (11 samples, 0.03%)</title><rect x="73.0279%" y="7717" width="0.0335%" height="15" fill="rgb(214,67,26)" fg:x="23959" fg:w="11"/><text x="73.2779%" y="7727.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (11 samples, 0.03%)</title><rect x="73.0279%" y="7701" width="0.0335%" height="15" fill="rgb(251,9,53)" fg:x="23959" fg:w="11"/><text x="73.2779%" y="7711.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (5 samples, 0.02%)</title><rect x="73.0462%" y="7685" width="0.0152%" height="15" fill="rgb(228,204,25)" fg:x="23965" fg:w="5"/><text x="73.2962%" y="7695.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (5 samples, 0.02%)</title><rect x="73.0462%" y="7669" width="0.0152%" height="15" fill="rgb(207,153,8)" fg:x="23965" fg:w="5"/><text x="73.2962%" y="7679.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (15 samples, 0.05%)</title><rect x="73.0218%" y="7797" width="0.0457%" height="15" fill="rgb(242,9,16)" fg:x="23957" fg:w="15"/><text x="73.2718%" y="7807.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (15 samples, 0.05%)</title><rect x="73.0218%" y="7781" width="0.0457%" height="15" fill="rgb(217,211,10)" fg:x="23957" fg:w="15"/><text x="73.2718%" y="7791.50"></text></g><g><title>hashbrown::map::make_hash (15 samples, 0.05%)</title><rect x="73.0218%" y="7765" width="0.0457%" height="15" fill="rgb(219,228,52)" fg:x="23957" fg:w="15"/><text x="73.2718%" y="7775.50"></text></g><g><title>core::hash::BuildHasher::hash_one (15 samples, 0.05%)</title><rect x="73.0218%" y="7749" width="0.0457%" height="15" fill="rgb(231,92,29)" fg:x="23957" fg:w="15"/><text x="73.2718%" y="7759.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot_in_group (9 samples, 0.03%)</title><rect x="73.0675%" y="7765" width="0.0274%" height="15" fill="rgb(232,8,23)" fg:x="23972" fg:w="9"/><text x="73.3175%" y="7775.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (5 samples, 0.02%)</title><rect x="73.0797%" y="7749" width="0.0152%" height="15" fill="rgb(216,211,34)" fg:x="23976" fg:w="5"/><text x="73.3297%" y="7759.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (5 samples, 0.02%)</title><rect x="73.0797%" y="7733" width="0.0152%" height="15" fill="rgb(236,151,0)" fg:x="23976" fg:w="5"/><text x="73.3297%" y="7743.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (16 samples, 0.05%)</title><rect x="73.0675%" y="7781" width="0.0488%" height="15" fill="rgb(209,168,3)" fg:x="23972" fg:w="16"/><text x="73.3175%" y="7791.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fix_insert_slot (7 samples, 0.02%)</title><rect x="73.0950%" y="7765" width="0.0213%" height="15" fill="rgb(208,129,28)" fg:x="23981" fg:w="7"/><text x="73.3450%" y="7775.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (18 samples, 0.05%)</title><rect x="73.0675%" y="7797" width="0.0549%" height="15" fill="rgb(229,78,22)" fg:x="23972" fg:w="18"/><text x="73.3175%" y="7807.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (7 samples, 0.02%)</title><rect x="73.1255%" y="7765" width="0.0213%" height="15" fill="rgb(228,187,13)" fg:x="23991" fg:w="7"/><text x="73.3755%" y="7775.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (6 samples, 0.02%)</title><rect x="73.1285%" y="7749" width="0.0183%" height="15" fill="rgb(240,119,24)" fg:x="23992" fg:w="6"/><text x="73.3785%" y="7759.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.02%)</title><rect x="73.1285%" y="7733" width="0.0183%" height="15" fill="rgb(209,194,42)" fg:x="23992" fg:w="6"/><text x="73.3785%" y="7743.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.02%)</title><rect x="73.1285%" y="7717" width="0.0183%" height="15" fill="rgb(247,200,46)" fg:x="23992" fg:w="6"/><text x="73.3785%" y="7727.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.02%)</title><rect x="73.1285%" y="7701" width="0.0183%" height="15" fill="rgb(218,76,16)" fg:x="23992" fg:w="6"/><text x="73.3785%" y="7711.50"></text></g><g><title>malloc (5 samples, 0.02%)</title><rect x="73.1316%" y="7685" width="0.0152%" height="15" fill="rgb(225,21,48)" fg:x="23993" fg:w="5"/><text x="73.3816%" y="7695.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (49 samples, 0.15%)</title><rect x="73.0035%" y="7861" width="0.1494%" height="15" fill="rgb(239,223,50)" fg:x="23951" fg:w="49"/><text x="73.2535%" y="7871.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (49 samples, 0.15%)</title><rect x="73.0035%" y="7845" width="0.1494%" height="15" fill="rgb(244,45,21)" fg:x="23951" fg:w="49"/><text x="73.2535%" y="7855.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (49 samples, 0.15%)</title><rect x="73.0035%" y="7829" width="0.1494%" height="15" fill="rgb(232,33,43)" fg:x="23951" fg:w="49"/><text x="73.2535%" y="7839.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (48 samples, 0.15%)</title><rect x="73.0066%" y="7813" width="0.1463%" height="15" fill="rgb(209,8,3)" fg:x="23952" fg:w="48"/><text x="73.2566%" y="7823.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (10 samples, 0.03%)</title><rect x="73.1224%" y="7797" width="0.0305%" height="15" fill="rgb(214,25,53)" fg:x="23990" fg:w="10"/><text x="73.3724%" y="7807.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (10 samples, 0.03%)</title><rect x="73.1224%" y="7781" width="0.0305%" height="15" fill="rgb(254,186,54)" fg:x="23990" fg:w="10"/><text x="73.3724%" y="7791.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.02%)</title><rect x="73.1559%" y="7845" width="0.0244%" height="15" fill="rgb(208,174,49)" fg:x="24001" fg:w="8"/><text x="73.4059%" y="7855.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fix_insert_slot (7 samples, 0.02%)</title><rect x="73.1925%" y="7845" width="0.0213%" height="15" fill="rgb(233,191,51)" fg:x="24013" fg:w="7"/><text x="73.4425%" y="7855.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_bucket_full (6 samples, 0.02%)</title><rect x="73.1956%" y="7829" width="0.0183%" height="15" fill="rgb(222,134,10)" fg:x="24014" fg:w="6"/><text x="73.4456%" y="7839.50"></text></g><g><title>hashbrown::raw::is_full (6 samples, 0.02%)</title><rect x="73.1956%" y="7813" width="0.0183%" height="15" fill="rgb(230,226,20)" fg:x="24014" fg:w="6"/><text x="73.4456%" y="7823.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (77 samples, 0.23%)</title><rect x="72.9974%" y="7877" width="0.2347%" height="15" fill="rgb(251,111,25)" fg:x="23949" fg:w="77"/><text x="73.2474%" y="7887.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_or_find_insert_slot_inner (26 samples, 0.08%)</title><rect x="73.1529%" y="7861" width="0.0792%" height="15" fill="rgb(224,40,46)" fg:x="24000" fg:w="26"/><text x="73.4029%" y="7871.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (5 samples, 0.02%)</title><rect x="73.2169%" y="7845" width="0.0152%" height="15" fill="rgb(236,108,47)" fg:x="24021" fg:w="5"/><text x="73.4669%" y="7855.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (5 samples, 0.02%)</title><rect x="73.2169%" y="7829" width="0.0152%" height="15" fill="rgb(234,93,0)" fg:x="24021" fg:w="5"/><text x="73.4669%" y="7839.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (137 samples, 0.42%)</title><rect x="72.8328%" y="7925" width="0.4176%" height="15" fill="rgb(224,213,32)" fg:x="23895" fg:w="137"/><text x="73.0828%" y="7935.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (137 samples, 0.42%)</title><rect x="72.8328%" y="7909" width="0.4176%" height="15" fill="rgb(251,11,48)" fg:x="23895" fg:w="137"/><text x="73.0828%" y="7919.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (133 samples, 0.41%)</title><rect x="72.8450%" y="7893" width="0.4054%" height="15" fill="rgb(236,173,5)" fg:x="23899" fg:w="133"/><text x="73.0950%" y="7903.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (6 samples, 0.02%)</title><rect x="73.2321%" y="7877" width="0.0183%" height="15" fill="rgb(230,95,12)" fg:x="24026" fg:w="6"/><text x="73.4821%" y="7887.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::record_item_insert_at (6 samples, 0.02%)</title><rect x="73.2321%" y="7861" width="0.0183%" height="15" fill="rgb(232,209,1)" fg:x="24026" fg:w="6"/><text x="73.4821%" y="7871.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (4 samples, 0.01%)</title><rect x="73.2382%" y="7845" width="0.0122%" height="15" fill="rgb(232,6,1)" fg:x="24028" fg:w="4"/><text x="73.4882%" y="7855.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl (4 samples, 0.01%)</title><rect x="73.2382%" y="7829" width="0.0122%" height="15" fill="rgb(210,224,50)" fg:x="24028" fg:w="4"/><text x="73.4882%" y="7839.50"></text></g><g><title>tetrs::logic::game::gravity (297 samples, 0.91%)</title><rect x="72.3513%" y="7941" width="0.9053%" height="15" fill="rgb(228,127,35)" fg:x="23737" fg:w="297"/><text x="72.6013%" y="7951.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (7 samples, 0.02%)</title><rect x="73.3632%" y="7925" width="0.0213%" height="15" fill="rgb(245,102,45)" fg:x="24069" fg:w="7"/><text x="73.6132%" y="7935.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (7 samples, 0.02%)</title><rect x="73.3632%" y="7909" width="0.0213%" height="15" fill="rgb(214,1,49)" fg:x="24069" fg:w="7"/><text x="73.6132%" y="7919.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (7 samples, 0.02%)</title><rect x="73.3632%" y="7893" width="0.0213%" height="15" fill="rgb(226,163,40)" fg:x="24069" fg:w="7"/><text x="73.6132%" y="7903.50"></text></g><g><title>alloc::alloc::exchange_malloc (27 samples, 0.08%)</title><rect x="73.3845%" y="7925" width="0.0823%" height="15" fill="rgb(239,212,28)" fg:x="24076" fg:w="27"/><text x="73.6345%" y="7935.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (23 samples, 0.07%)</title><rect x="73.3967%" y="7909" width="0.0701%" height="15" fill="rgb(220,20,13)" fg:x="24080" fg:w="23"/><text x="73.6467%" y="7919.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (23 samples, 0.07%)</title><rect x="73.3967%" y="7893" width="0.0701%" height="15" fill="rgb(210,164,35)" fg:x="24080" fg:w="23"/><text x="73.6467%" y="7903.50"></text></g><g><title>alloc::alloc::alloc (23 samples, 0.07%)</title><rect x="73.3967%" y="7877" width="0.0701%" height="15" fill="rgb(248,109,41)" fg:x="24080" fg:w="23"/><text x="73.6467%" y="7887.50"></text></g><g><title>malloc (14 samples, 0.04%)</title><rect x="73.4242%" y="7861" width="0.0427%" height="15" fill="rgb(238,23,50)" fg:x="24089" fg:w="14"/><text x="73.6742%" y="7871.50"></text></g><g><title>__rust_dealloc (5 samples, 0.02%)</title><rect x="73.4760%" y="7797" width="0.0152%" height="15" fill="rgb(211,48,49)" fg:x="24106" fg:w="5"/><text x="73.7260%" y="7807.50"></text></g><g><title>tetrs::logic::game::is_connected (103 samples, 0.31%)</title><rect x="73.2565%" y="7941" width="0.3139%" height="15" fill="rgb(223,36,21)" fg:x="24034" fg:w="103"/><text x="73.5065%" y="7951.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(i8,i8)&gt;&gt; (34 samples, 0.10%)</title><rect x="73.4668%" y="7925" width="0.1036%" height="15" fill="rgb(207,123,46)" fg:x="24103" fg:w="34"/><text x="73.7168%" y="7935.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 0.10%)</title><rect x="73.4668%" y="7909" width="0.1036%" height="15" fill="rgb(240,218,32)" fg:x="24103" fg:w="34"/><text x="73.7168%" y="7919.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(i8,i8),alloc::alloc::Global&gt;&gt; (34 samples, 0.10%)</title><rect x="73.4668%" y="7893" width="0.1036%" height="15" fill="rgb(252,5,43)" fg:x="24103" fg:w="34"/><text x="73.7168%" y="7903.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 0.10%)</title><rect x="73.4668%" y="7877" width="0.1036%" height="15" fill="rgb(252,84,19)" fg:x="24103" fg:w="34"/><text x="73.7168%" y="7887.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(i8,i8)&gt;&gt; (34 samples, 0.10%)</title><rect x="73.4668%" y="7861" width="0.1036%" height="15" fill="rgb(243,152,39)" fg:x="24103" fg:w="34"/><text x="73.7168%" y="7871.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 0.10%)</title><rect x="73.4668%" y="7845" width="0.1036%" height="15" fill="rgb(234,160,15)" fg:x="24103" fg:w="34"/><text x="73.7168%" y="7855.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (34 samples, 0.10%)</title><rect x="73.4668%" y="7829" width="0.1036%" height="15" fill="rgb(237,34,20)" fg:x="24103" fg:w="34"/><text x="73.7168%" y="7839.50"></text></g><g><title>alloc::alloc::dealloc (34 samples, 0.10%)</title><rect x="73.4668%" y="7813" width="0.1036%" height="15" fill="rgb(229,97,13)" fg:x="24103" fg:w="34"/><text x="73.7168%" y="7823.50"></text></g><g><title>cfree (26 samples, 0.08%)</title><rect x="73.4912%" y="7797" width="0.0792%" height="15" fill="rgb(234,71,50)" fg:x="24111" fg:w="26"/><text x="73.7412%" y="7807.50"></text></g><g><title>[libc.so.6] (14 samples, 0.04%)</title><rect x="73.5278%" y="7781" width="0.0427%" height="15" fill="rgb(253,155,4)" fg:x="24123" fg:w="14"/><text x="73.7778%" y="7791.50"></text></g><g><title>tetrs::logic::game::clear_rows (685 samples, 2.09%)</title><rect x="71.8057%" y="7957" width="2.0879%" height="15" fill="rgb(222,185,37)" fg:x="23558" fg:w="685"/><text x="72.0557%" y="7967.50">t..</text></g><g><title>tetrs::logic::id_manager::IdManager::next_unique_id (106 samples, 0.32%)</title><rect x="73.5705%" y="7941" width="0.3231%" height="15" fill="rgb(251,177,13)" fg:x="24137" fg:w="106"/><text x="73.8205%" y="7951.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (12 samples, 0.04%)</title><rect x="73.8570%" y="7925" width="0.0366%" height="15" fill="rgb(250,179,40)" fg:x="24231" fg:w="12"/><text x="74.1070%" y="7935.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (12 samples, 0.04%)</title><rect x="73.8570%" y="7909" width="0.0366%" height="15" fill="rgb(242,44,2)" fg:x="24231" fg:w="12"/><text x="74.1070%" y="7919.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (12 samples, 0.04%)</title><rect x="73.8570%" y="7893" width="0.0366%" height="15" fill="rgb(216,177,13)" fg:x="24231" fg:w="12"/><text x="74.1070%" y="7903.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (203 samples, 0.62%)</title><rect x="75.3353%" y="7941" width="0.6188%" height="15" fill="rgb(216,106,43)" fg:x="24716" fg:w="203"/><text x="75.5853%" y="7951.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (203 samples, 0.62%)</title><rect x="75.3353%" y="7925" width="0.6188%" height="15" fill="rgb(216,183,2)" fg:x="24716" fg:w="203"/><text x="75.5853%" y="7935.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (203 samples, 0.62%)</title><rect x="75.3353%" y="7909" width="0.6188%" height="15" fill="rgb(249,75,3)" fg:x="24716" fg:w="203"/><text x="75.5853%" y="7919.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::backward_unchecked (8 samples, 0.02%)</title><rect x="75.9632%" y="7893" width="0.0244%" height="15" fill="rgb(219,67,39)" fg:x="24922" fg:w="8"/><text x="76.2132%" y="7903.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_sub (8 samples, 0.02%)</title><rect x="75.9632%" y="7877" width="0.0244%" height="15" fill="rgb(253,228,2)" fg:x="24922" fg:w="8"/><text x="76.2132%" y="7887.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.07%)</title><rect x="75.9601%" y="7941" width="0.0671%" height="15" fill="rgb(235,138,27)" fg:x="24921" fg:w="22"/><text x="76.2101%" y="7951.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (22 samples, 0.07%)</title><rect x="75.9601%" y="7925" width="0.0671%" height="15" fill="rgb(236,97,51)" fg:x="24921" fg:w="22"/><text x="76.2101%" y="7935.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (22 samples, 0.07%)</title><rect x="75.9601%" y="7909" width="0.0671%" height="15" fill="rgb(240,80,30)" fg:x="24921" fg:w="22"/><text x="76.2101%" y="7919.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (13 samples, 0.04%)</title><rect x="75.9876%" y="7893" width="0.0396%" height="15" fill="rgb(230,178,19)" fg:x="24930" fg:w="13"/><text x="76.2376%" y="7903.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (38 samples, 0.12%)</title><rect x="76.0272%" y="7941" width="0.1158%" height="15" fill="rgb(210,190,27)" fg:x="24943" fg:w="38"/><text x="76.2772%" y="7951.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (31 samples, 0.09%)</title><rect x="76.0485%" y="7925" width="0.0945%" height="15" fill="rgb(222,107,31)" fg:x="24950" fg:w="31"/><text x="76.2985%" y="7935.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (22 samples, 0.07%)</title><rect x="76.5088%" y="7893" width="0.0671%" height="15" fill="rgb(216,127,34)" fg:x="25101" fg:w="22"/><text x="76.7588%" y="7903.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (10 samples, 0.03%)</title><rect x="76.5758%" y="7893" width="0.0305%" height="15" fill="rgb(234,116,52)" fg:x="25123" fg:w="10"/><text x="76.8258%" y="7903.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (4 samples, 0.01%)</title><rect x="76.5941%" y="7877" width="0.0122%" height="15" fill="rgb(222,124,15)" fg:x="25129" fg:w="4"/><text x="76.8441%" y="7887.50"></text></g><g><title>__rdl_realloc (29 samples, 0.09%)</title><rect x="76.6917%" y="7829" width="0.0884%" height="15" fill="rgb(231,179,28)" fg:x="25161" fg:w="29"/><text x="76.9417%" y="7839.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (23 samples, 0.07%)</title><rect x="76.7099%" y="7813" width="0.0701%" height="15" fill="rgb(226,93,45)" fg:x="25167" fg:w="23"/><text x="76.9599%" y="7823.50"></text></g><g><title>__rust_realloc (5 samples, 0.02%)</title><rect x="76.7801%" y="7829" width="0.0152%" height="15" fill="rgb(215,8,51)" fg:x="25190" fg:w="5"/><text x="77.0301%" y="7839.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (477 samples, 1.45%)</title><rect x="76.6764%" y="7877" width="1.4539%" height="15" fill="rgb(223,106,5)" fg:x="25156" fg:w="477"/><text x="76.9264%" y="7887.50"></text></g><g><title>alloc::alloc::Global::grow_impl (477 samples, 1.45%)</title><rect x="76.6764%" y="7861" width="1.4539%" height="15" fill="rgb(250,191,5)" fg:x="25156" fg:w="477"/><text x="76.9264%" y="7871.50"></text></g><g><title>alloc::alloc::realloc (473 samples, 1.44%)</title><rect x="76.6886%" y="7845" width="1.4417%" height="15" fill="rgb(242,132,44)" fg:x="25160" fg:w="473"/><text x="76.9386%" y="7855.50"></text></g><g><title>realloc (438 samples, 1.34%)</title><rect x="76.7953%" y="7829" width="1.3350%" height="15" fill="rgb(251,152,29)" fg:x="25195" fg:w="438"/><text x="77.0453%" y="7839.50"></text></g><g><title>[libc.so.6] (359 samples, 1.09%)</title><rect x="77.0361%" y="7813" width="1.0942%" height="15" fill="rgb(218,179,5)" fg:x="25274" fg:w="359"/><text x="77.2861%" y="7823.50"></text></g><g><title>[libc.so.6] (293 samples, 0.89%)</title><rect x="77.2373%" y="7797" width="0.8931%" height="15" fill="rgb(227,67,19)" fg:x="25340" fg:w="293"/><text x="77.4873%" y="7807.50"></text></g><g><title>[libc.so.6] (24 samples, 0.07%)</title><rect x="78.0572%" y="7781" width="0.0732%" height="15" fill="rgb(233,119,31)" fg:x="25609" fg:w="24"/><text x="78.3072%" y="7791.50"></text></g><g><title>__rdl_alloc (6 samples, 0.02%)</title><rect x="78.1303%" y="7877" width="0.0183%" height="15" fill="rgb(241,120,22)" fg:x="25633" fg:w="6"/><text x="78.3803%" y="7887.50"></text></g><g><title>__rust_alloc (6 samples, 0.02%)</title><rect x="78.1486%" y="7877" width="0.0183%" height="15" fill="rgb(224,102,30)" fg:x="25639" fg:w="6"/><text x="78.3986%" y="7887.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (9 samples, 0.03%)</title><rect x="78.1669%" y="7877" width="0.0274%" height="15" fill="rgb(210,164,37)" fg:x="25645" fg:w="9"/><text x="78.4169%" y="7887.50"></text></g><g><title>alloc::raw_vec::finish_grow (555 samples, 1.69%)</title><rect x="76.6063%" y="7893" width="1.6917%" height="15" fill="rgb(226,191,16)" fg:x="25133" fg:w="555"/><text x="76.8563%" y="7903.50"></text></g><g><title>malloc (34 samples, 0.10%)</title><rect x="78.1943%" y="7877" width="0.1036%" height="15" fill="rgb(214,40,45)" fg:x="25654" fg:w="34"/><text x="78.4443%" y="7887.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="78.2797%" y="7861" width="0.0183%" height="15" fill="rgb(244,29,26)" fg:x="25682" fg:w="6"/><text x="78.5297%" y="7871.50"></text></g><g><title>core::cmp::max (15 samples, 0.05%)</title><rect x="78.3041%" y="7893" width="0.0457%" height="15" fill="rgb(216,16,5)" fg:x="25690" fg:w="15"/><text x="78.5541%" y="7903.50"></text></g><g><title>core::cmp::Ord::max (15 samples, 0.05%)</title><rect x="78.3041%" y="7877" width="0.0457%" height="15" fill="rgb(249,76,35)" fg:x="25690" fg:w="15"/><text x="78.5541%" y="7887.50"></text></g><g><title>core::cmp::max_by (15 samples, 0.05%)</title><rect x="78.3041%" y="7861" width="0.0457%" height="15" fill="rgb(207,11,44)" fg:x="25690" fg:w="15"/><text x="78.5541%" y="7871.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (629 samples, 1.92%)</title><rect x="76.4661%" y="7925" width="1.9172%" height="15" fill="rgb(228,190,49)" fg:x="25087" fg:w="629"/><text x="76.7161%" y="7935.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (623 samples, 1.90%)</title><rect x="76.4844%" y="7909" width="1.8989%" height="15" fill="rgb(214,173,12)" fg:x="25093" fg:w="623"/><text x="76.7344%" y="7919.50">a..</text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (11 samples, 0.03%)</title><rect x="78.3498%" y="7893" width="0.0335%" height="15" fill="rgb(218,26,35)" fg:x="25705" fg:w="11"/><text x="78.5998%" y="7903.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (11 samples, 0.03%)</title><rect x="78.3498%" y="7877" width="0.0335%" height="15" fill="rgb(220,200,19)" fg:x="25705" fg:w="11"/><text x="78.5998%" y="7887.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (35 samples, 0.11%)</title><rect x="78.3894%" y="7925" width="0.1067%" height="15" fill="rgb(239,95,49)" fg:x="25718" fg:w="35"/><text x="78.6394%" y="7935.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (832 samples, 2.54%)</title><rect x="76.1430%" y="7941" width="2.5360%" height="15" fill="rgb(235,85,53)" fg:x="24981" fg:w="832"/><text x="76.3930%" y="7951.50">al..</text></g><g><title>core::ptr::write (60 samples, 0.18%)</title><rect x="78.4961%" y="7925" width="0.1829%" height="15" fill="rgb(233,133,31)" fg:x="25753" fg:w="60"/><text x="78.7461%" y="7935.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (7 samples, 0.02%)</title><rect x="78.6790%" y="7941" width="0.0213%" height="15" fill="rgb(218,25,20)" fg:x="25813" fg:w="7"/><text x="78.9290%" y="7951.50"></text></g><g><title>__rust_dealloc (4 samples, 0.01%)</title><rect x="78.7003%" y="7861" width="0.0122%" height="15" fill="rgb(252,210,38)" fg:x="25820" fg:w="4"/><text x="78.9503%" y="7871.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (112 samples, 0.34%)</title><rect x="78.7003%" y="7893" width="0.3414%" height="15" fill="rgb(242,134,21)" fg:x="25820" fg:w="112"/><text x="78.9503%" y="7903.50"></text></g><g><title>alloc::alloc::dealloc (112 samples, 0.34%)</title><rect x="78.7003%" y="7877" width="0.3414%" height="15" fill="rgb(213,28,48)" fg:x="25820" fg:w="112"/><text x="78.9503%" y="7887.50"></text></g><g><title>cfree (108 samples, 0.33%)</title><rect x="78.7125%" y="7861" width="0.3292%" height="15" fill="rgb(250,196,2)" fg:x="25824" fg:w="108"/><text x="78.9625%" y="7871.50"></text></g><g><title>[libc.so.6] (101 samples, 0.31%)</title><rect x="78.7338%" y="7845" width="0.3079%" height="15" fill="rgb(227,5,17)" fg:x="25831" fg:w="101"/><text x="78.9838%" y="7855.50"></text></g><g><title>[libc.so.6] (67 samples, 0.20%)</title><rect x="78.8375%" y="7829" width="0.2042%" height="15" fill="rgb(221,226,24)" fg:x="25865" fg:w="67"/><text x="79.0875%" y="7839.50"></text></g><g><title>[libc.so.6] (56 samples, 0.17%)</title><rect x="78.8710%" y="7813" width="0.1707%" height="15" fill="rgb(211,5,48)" fg:x="25876" fg:w="56"/><text x="79.1210%" y="7823.50"></text></g><g><title>[libc.so.6] (24 samples, 0.07%)</title><rect x="78.9685%" y="7797" width="0.0732%" height="15" fill="rgb(219,150,6)" fg:x="25908" fg:w="24"/><text x="79.2185%" y="7807.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,usize)&gt;&gt; (114 samples, 0.35%)</title><rect x="78.7003%" y="7941" width="0.3475%" height="15" fill="rgb(251,46,16)" fg:x="25820" fg:w="114"/><text x="78.9503%" y="7951.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,usize)&gt;&gt; (114 samples, 0.35%)</title><rect x="78.7003%" y="7925" width="0.3475%" height="15" fill="rgb(220,204,40)" fg:x="25820" fg:w="114"/><text x="78.9503%" y="7935.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (114 samples, 0.35%)</title><rect x="78.7003%" y="7909" width="0.3475%" height="15" fill="rgb(211,85,2)" fg:x="25820" fg:w="114"/><text x="78.9503%" y="7919.50"></text></g><g><title>__rdl_dealloc (5 samples, 0.02%)</title><rect x="79.0630%" y="7797" width="0.0152%" height="15" fill="rgb(229,17,7)" fg:x="25939" fg:w="5"/><text x="79.3130%" y="7807.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (5 samples, 0.02%)</title><rect x="79.0630%" y="7781" width="0.0152%" height="15" fill="rgb(239,72,28)" fg:x="25939" fg:w="5"/><text x="79.3130%" y="7791.50"></text></g><g><title>__rust_dealloc (4 samples, 0.01%)</title><rect x="79.0783%" y="7797" width="0.0122%" height="15" fill="rgb(230,47,54)" fg:x="25944" fg:w="4"/><text x="79.3283%" y="7807.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;u16&gt;&gt; (60 samples, 0.18%)</title><rect x="79.0478%" y="7941" width="0.1829%" height="15" fill="rgb(214,50,8)" fg:x="25934" fg:w="60"/><text x="79.2978%" y="7951.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;u16,std::collections::hash::map::RandomState&gt;&gt; (60 samples, 0.18%)</title><rect x="79.0478%" y="7925" width="0.1829%" height="15" fill="rgb(216,198,43)" fg:x="25934" fg:w="60"/><text x="79.2978%" y="7935.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;u16,(),std::collections::hash::map::RandomState&gt;&gt; (60 samples, 0.18%)</title><rect x="79.0478%" y="7909" width="0.1829%" height="15" fill="rgb(234,20,35)" fg:x="25934" fg:w="60"/><text x="79.2978%" y="7919.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u16,())&gt;&gt; (60 samples, 0.18%)</title><rect x="79.0478%" y="7893" width="0.1829%" height="15" fill="rgb(254,45,19)" fg:x="25934" fg:w="60"/><text x="79.2978%" y="7903.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (60 samples, 0.18%)</title><rect x="79.0478%" y="7877" width="0.1829%" height="15" fill="rgb(219,14,44)" fg:x="25934" fg:w="60"/><text x="79.2978%" y="7887.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (59 samples, 0.18%)</title><rect x="79.0508%" y="7861" width="0.1798%" height="15" fill="rgb(217,220,26)" fg:x="25935" fg:w="59"/><text x="79.3008%" y="7871.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (59 samples, 0.18%)</title><rect x="79.0508%" y="7845" width="0.1798%" height="15" fill="rgb(213,158,28)" fg:x="25935" fg:w="59"/><text x="79.3008%" y="7855.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (59 samples, 0.18%)</title><rect x="79.0508%" y="7829" width="0.1798%" height="15" fill="rgb(252,51,52)" fg:x="25935" fg:w="59"/><text x="79.3008%" y="7839.50"></text></g><g><title>alloc::alloc::dealloc (56 samples, 0.17%)</title><rect x="79.0600%" y="7813" width="0.1707%" height="15" fill="rgb(246,89,16)" fg:x="25938" fg:w="56"/><text x="79.3100%" y="7823.50"></text></g><g><title>cfree (46 samples, 0.14%)</title><rect x="79.0905%" y="7797" width="0.1402%" height="15" fill="rgb(216,158,49)" fg:x="25948" fg:w="46"/><text x="79.3405%" y="7807.50"></text></g><g><title>[libc.so.6] (32 samples, 0.10%)</title><rect x="79.1331%" y="7781" width="0.0975%" height="15" fill="rgb(236,107,19)" fg:x="25962" fg:w="32"/><text x="79.3831%" y="7791.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::clear (5 samples, 0.02%)</title><rect x="79.2307%" y="7941" width="0.0152%" height="15" fill="rgb(228,185,30)" fg:x="25994" fg:w="5"/><text x="79.4807%" y="7951.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::clear (5 samples, 0.02%)</title><rect x="79.2307%" y="7925" width="0.0152%" height="15" fill="rgb(246,134,8)" fg:x="25994" fg:w="5"/><text x="79.4807%" y="7935.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (5 samples, 0.02%)</title><rect x="79.2307%" y="7909" width="0.0152%" height="15" fill="rgb(214,143,50)" fg:x="25994" fg:w="5"/><text x="79.4807%" y="7919.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (5 samples, 0.02%)</title><rect x="79.2307%" y="7893" width="0.0152%" height="15" fill="rgb(228,75,8)" fg:x="25994" fg:w="5"/><text x="79.4807%" y="7903.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (7 samples, 0.02%)</title><rect x="79.7336%" y="7781" width="0.0213%" height="15" fill="rgb(207,175,4)" fg:x="26159" fg:w="7"/><text x="79.9836%" y="7791.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (47 samples, 0.14%)</title><rect x="79.6757%" y="7797" width="0.1433%" height="15" fill="rgb(205,108,24)" fg:x="26140" fg:w="47"/><text x="79.9257%" y="7807.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (21 samples, 0.06%)</title><rect x="79.7549%" y="7781" width="0.0640%" height="15" fill="rgb(244,120,49)" fg:x="26166" fg:w="21"/><text x="80.0049%" y="7791.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (172 samples, 0.52%)</title><rect x="79.9561%" y="7781" width="0.5243%" height="15" fill="rgb(223,47,38)" fg:x="26232" fg:w="172"/><text x="80.2061%" y="7791.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (380 samples, 1.16%)</title><rect x="79.3892%" y="7845" width="1.1583%" height="15" fill="rgb(229,179,11)" fg:x="26046" fg:w="380"/><text x="79.6392%" y="7855.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (380 samples, 1.16%)</title><rect x="79.3892%" y="7829" width="1.1583%" height="15" fill="rgb(231,122,1)" fg:x="26046" fg:w="380"/><text x="79.6392%" y="7839.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (380 samples, 1.16%)</title><rect x="79.3892%" y="7813" width="1.1583%" height="15" fill="rgb(245,119,9)" fg:x="26046" fg:w="380"/><text x="79.6392%" y="7823.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (239 samples, 0.73%)</title><rect x="79.8189%" y="7797" width="0.7285%" height="15" fill="rgb(241,163,25)" fg:x="26187" fg:w="239"/><text x="80.0689%" y="7807.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (22 samples, 0.07%)</title><rect x="80.4804%" y="7781" width="0.0671%" height="15" fill="rgb(217,214,3)" fg:x="26404" fg:w="22"/><text x="80.7304%" y="7791.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (14 samples, 0.04%)</title><rect x="80.5474%" y="7845" width="0.0427%" height="15" fill="rgb(240,86,28)" fg:x="26426" fg:w="14"/><text x="80.7974%" y="7855.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (74 samples, 0.23%)</title><rect x="80.6236%" y="7797" width="0.2256%" height="15" fill="rgb(215,47,9)" fg:x="26451" fg:w="74"/><text x="80.8736%" y="7807.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (74 samples, 0.23%)</title><rect x="80.6236%" y="7781" width="0.2256%" height="15" fill="rgb(252,25,45)" fg:x="26451" fg:w="74"/><text x="80.8736%" y="7791.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (74 samples, 0.23%)</title><rect x="80.6236%" y="7765" width="0.2256%" height="15" fill="rgb(251,164,9)" fg:x="26451" fg:w="74"/><text x="80.8736%" y="7775.50"></text></g><g><title>core::hash::sip::u8to64_le (45 samples, 0.14%)</title><rect x="80.7120%" y="7749" width="0.1372%" height="15" fill="rgb(233,194,0)" fg:x="26480" fg:w="45"/><text x="80.9620%" y="7759.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.01%)</title><rect x="80.8370%" y="7733" width="0.0122%" height="15" fill="rgb(249,111,24)" fg:x="26521" fg:w="4"/><text x="81.0870%" y="7743.50"></text></g><g><title>hashbrown::map::make_hash (523 samples, 1.59%)</title><rect x="79.2947%" y="7877" width="1.5941%" height="15" fill="rgb(250,223,3)" fg:x="26015" fg:w="523"/><text x="79.5447%" y="7887.50"></text></g><g><title>core::hash::BuildHasher::hash_one (523 samples, 1.59%)</title><rect x="79.2947%" y="7861" width="1.5941%" height="15" fill="rgb(236,178,37)" fg:x="26015" fg:w="523"/><text x="79.5447%" y="7871.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (98 samples, 0.30%)</title><rect x="80.5901%" y="7845" width="0.2987%" height="15" fill="rgb(241,158,50)" fg:x="26440" fg:w="98"/><text x="80.8401%" y="7855.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (98 samples, 0.30%)</title><rect x="80.5901%" y="7829" width="0.2987%" height="15" fill="rgb(213,121,41)" fg:x="26440" fg:w="98"/><text x="80.8401%" y="7839.50"></text></g><g><title>core::hash::Hasher::write_u16 (98 samples, 0.30%)</title><rect x="80.5901%" y="7813" width="0.2987%" height="15" fill="rgb(240,92,3)" fg:x="26440" fg:w="98"/><text x="80.8401%" y="7823.50"></text></g><g><title>core::num::&lt;impl u16&gt;::to_ne_bytes (13 samples, 0.04%)</title><rect x="80.8492%" y="7797" width="0.0396%" height="15" fill="rgb(205,123,3)" fg:x="26525" fg:w="13"/><text x="81.0992%" y="7807.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (17 samples, 0.05%)</title><rect x="81.4984%" y="7813" width="0.0518%" height="15" fill="rgb(205,97,47)" fg:x="26738" fg:w="17"/><text x="81.7484%" y="7823.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (92 samples, 0.28%)</title><rect x="81.2790%" y="7829" width="0.2804%" height="15" fill="rgb(247,152,14)" fg:x="26666" fg:w="92"/><text x="81.5290%" y="7839.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (50 samples, 0.15%)</title><rect x="81.5594%" y="7829" width="0.1524%" height="15" fill="rgb(248,195,53)" fg:x="26758" fg:w="50"/><text x="81.8094%" y="7839.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (50 samples, 0.15%)</title><rect x="81.5594%" y="7813" width="0.1524%" height="15" fill="rgb(226,201,16)" fg:x="26758" fg:w="50"/><text x="81.8094%" y="7823.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (50 samples, 0.15%)</title><rect x="81.5594%" y="7797" width="0.1524%" height="15" fill="rgb(205,98,0)" fg:x="26758" fg:w="50"/><text x="81.8094%" y="7807.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (50 samples, 0.15%)</title><rect x="81.5594%" y="7781" width="0.1524%" height="15" fill="rgb(214,191,48)" fg:x="26758" fg:w="50"/><text x="81.8094%" y="7791.50"></text></g><g><title>hashbrown::raw::h2 (121 samples, 0.37%)</title><rect x="81.7118%" y="7829" width="0.3688%" height="15" fill="rgb(237,112,39)" fg:x="26808" fg:w="121"/><text x="81.9618%" y="7839.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (57 samples, 0.17%)</title><rect x="82.0806%" y="7829" width="0.1737%" height="15" fill="rgb(247,203,27)" fg:x="26929" fg:w="57"/><text x="82.3306%" y="7839.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (57 samples, 0.17%)</title><rect x="82.0806%" y="7813" width="0.1737%" height="15" fill="rgb(235,124,28)" fg:x="26929" fg:w="57"/><text x="82.3306%" y="7823.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (992 samples, 3.02%)</title><rect x="79.2459%" y="7941" width="3.0237%" height="15" fill="rgb(208,207,46)" fg:x="25999" fg:w="992"/><text x="79.4959%" y="7951.50">std..</text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (992 samples, 3.02%)</title><rect x="79.2459%" y="7925" width="3.0237%" height="15" fill="rgb(234,176,4)" fg:x="25999" fg:w="992"/><text x="79.4959%" y="7935.50">has..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (992 samples, 3.02%)</title><rect x="79.2459%" y="7909" width="3.0237%" height="15" fill="rgb(230,133,28)" fg:x="25999" fg:w="992"/><text x="79.4959%" y="7919.50">has..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (992 samples, 3.02%)</title><rect x="79.2459%" y="7893" width="3.0237%" height="15" fill="rgb(211,137,40)" fg:x="25999" fg:w="992"/><text x="79.4959%" y="7903.50">has..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (453 samples, 1.38%)</title><rect x="80.8888%" y="7877" width="1.3808%" height="15" fill="rgb(254,35,13)" fg:x="26538" fg:w="453"/><text x="81.1388%" y="7887.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (453 samples, 1.38%)</title><rect x="80.8888%" y="7861" width="1.3808%" height="15" fill="rgb(225,49,51)" fg:x="26538" fg:w="453"/><text x="81.1388%" y="7871.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (453 samples, 1.38%)</title><rect x="80.8888%" y="7845" width="1.3808%" height="15" fill="rgb(251,10,15)" fg:x="26538" fg:w="453"/><text x="81.1388%" y="7855.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (5 samples, 0.02%)</title><rect x="82.2543%" y="7829" width="0.0152%" height="15" fill="rgb(228,207,15)" fg:x="26986" fg:w="5"/><text x="82.5043%" y="7839.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (5 samples, 0.02%)</title><rect x="82.2543%" y="7813" width="0.0152%" height="15" fill="rgb(241,99,19)" fg:x="26986" fg:w="5"/><text x="82.5043%" y="7823.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (5 samples, 0.02%)</title><rect x="82.2543%" y="7797" width="0.0152%" height="15" fill="rgb(207,104,49)" fg:x="26986" fg:w="5"/><text x="82.5043%" y="7807.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (22 samples, 0.07%)</title><rect x="83.1565%" y="7797" width="0.0671%" height="15" fill="rgb(234,99,18)" fg:x="27282" fg:w="22"/><text x="83.4065%" y="7807.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (63 samples, 0.19%)</title><rect x="83.0986%" y="7813" width="0.1920%" height="15" fill="rgb(213,191,49)" fg:x="27263" fg:w="63"/><text x="83.3486%" y="7823.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (22 samples, 0.07%)</title><rect x="83.2236%" y="7797" width="0.0671%" height="15" fill="rgb(210,226,19)" fg:x="27304" fg:w="22"/><text x="83.4736%" y="7807.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (160 samples, 0.49%)</title><rect x="83.4126%" y="7797" width="0.4877%" height="15" fill="rgb(229,97,18)" fg:x="27366" fg:w="160"/><text x="83.6626%" y="7807.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (442 samples, 1.35%)</title><rect x="82.6414%" y="7861" width="1.3472%" height="15" fill="rgb(211,167,15)" fg:x="27113" fg:w="442"/><text x="82.8914%" y="7871.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (442 samples, 1.35%)</title><rect x="82.6414%" y="7845" width="1.3472%" height="15" fill="rgb(210,169,34)" fg:x="27113" fg:w="442"/><text x="82.8914%" y="7855.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (442 samples, 1.35%)</title><rect x="82.6414%" y="7829" width="1.3472%" height="15" fill="rgb(241,121,31)" fg:x="27113" fg:w="442"/><text x="82.8914%" y="7839.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (229 samples, 0.70%)</title><rect x="83.2907%" y="7813" width="0.6980%" height="15" fill="rgb(232,40,11)" fg:x="27326" fg:w="229"/><text x="83.5407%" y="7823.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (29 samples, 0.09%)</title><rect x="83.9003%" y="7797" width="0.0884%" height="15" fill="rgb(205,86,26)" fg:x="27526" fg:w="29"/><text x="84.1503%" y="7807.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (50 samples, 0.15%)</title><rect x="83.9887%" y="7861" width="0.1524%" height="15" fill="rgb(231,126,28)" fg:x="27555" fg:w="50"/><text x="84.2387%" y="7871.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (29 samples, 0.09%)</title><rect x="84.0527%" y="7845" width="0.0884%" height="15" fill="rgb(219,221,18)" fg:x="27576" fg:w="29"/><text x="84.3027%" y="7855.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (29 samples, 0.09%)</title><rect x="84.0527%" y="7829" width="0.0884%" height="15" fill="rgb(211,40,0)" fg:x="27576" fg:w="29"/><text x="84.3027%" y="7839.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (29 samples, 0.09%)</title><rect x="84.0527%" y="7813" width="0.0884%" height="15" fill="rgb(239,85,43)" fg:x="27576" fg:w="29"/><text x="84.3027%" y="7823.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (118 samples, 0.36%)</title><rect x="84.1715%" y="7813" width="0.3597%" height="15" fill="rgb(231,55,21)" fg:x="27615" fg:w="118"/><text x="84.4215%" y="7823.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (112 samples, 0.34%)</title><rect x="84.1898%" y="7797" width="0.3414%" height="15" fill="rgb(225,184,43)" fg:x="27621" fg:w="112"/><text x="84.4398%" y="7807.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (112 samples, 0.34%)</title><rect x="84.1898%" y="7781" width="0.3414%" height="15" fill="rgb(251,158,41)" fg:x="27621" fg:w="112"/><text x="84.4398%" y="7791.50"></text></g><g><title>core::hash::sip::u8to64_le (46 samples, 0.14%)</title><rect x="84.3910%" y="7765" width="0.1402%" height="15" fill="rgb(234,159,37)" fg:x="27687" fg:w="46"/><text x="84.6410%" y="7775.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.02%)</title><rect x="84.5160%" y="7749" width="0.0152%" height="15" fill="rgb(216,204,22)" fg:x="27728" fg:w="5"/><text x="84.7660%" y="7759.50"></text></g><g><title>hashbrown::map::make_hash (672 samples, 2.05%)</title><rect x="82.5195%" y="7893" width="2.0483%" height="15" fill="rgb(214,17,3)" fg:x="27073" fg:w="672"/><text x="82.7695%" y="7903.50">h..</text></g><g><title>core::hash::BuildHasher::hash_one (668 samples, 2.04%)</title><rect x="82.5317%" y="7877" width="2.0361%" height="15" fill="rgb(212,111,17)" fg:x="27077" fg:w="668"/><text x="82.7817%" y="7887.50">c..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (140 samples, 0.43%)</title><rect x="84.1411%" y="7861" width="0.4267%" height="15" fill="rgb(221,157,24)" fg:x="27605" fg:w="140"/><text x="84.3911%" y="7871.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (137 samples, 0.42%)</title><rect x="84.1502%" y="7845" width="0.4176%" height="15" fill="rgb(252,16,13)" fg:x="27608" fg:w="137"/><text x="84.4002%" y="7855.50"></text></g><g><title>core::hash::Hasher::write_u16 (137 samples, 0.42%)</title><rect x="84.1502%" y="7829" width="0.4176%" height="15" fill="rgb(221,62,2)" fg:x="27608" fg:w="137"/><text x="84.4002%" y="7839.50"></text></g><g><title>core::num::&lt;impl u16&gt;::to_ne_bytes (12 samples, 0.04%)</title><rect x="84.5312%" y="7813" width="0.0366%" height="15" fill="rgb(247,87,22)" fg:x="27733" fg:w="12"/><text x="84.7812%" y="7823.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.01%)</title><rect x="84.7629%" y="7813" width="0.0122%" height="15" fill="rgb(215,73,9)" fg:x="27809" fg:w="4"/><text x="85.0129%" y="7823.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4 samples, 0.01%)</title><rect x="84.7751%" y="7813" width="0.0122%" height="15" fill="rgb(207,175,33)" fg:x="27813" fg:w="4"/><text x="85.0251%" y="7823.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4 samples, 0.01%)</title><rect x="84.7751%" y="7797" width="0.0122%" height="15" fill="rgb(243,129,54)" fg:x="27813" fg:w="4"/><text x="85.0251%" y="7807.50"></text></g><g><title>__rust_dealloc (5 samples, 0.02%)</title><rect x="84.8147%" y="7717" width="0.0152%" height="15" fill="rgb(227,119,45)" fg:x="27826" fg:w="5"/><text x="85.0647%" y="7727.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (31 samples, 0.09%)</title><rect x="84.8055%" y="7749" width="0.0945%" height="15" fill="rgb(205,109,36)" fg:x="27823" fg:w="31"/><text x="85.0555%" y="7759.50"></text></g><g><title>alloc::alloc::dealloc (31 samples, 0.09%)</title><rect x="84.8055%" y="7733" width="0.0945%" height="15" fill="rgb(205,6,39)" fg:x="27823" fg:w="31"/><text x="85.0555%" y="7743.50"></text></g><g><title>cfree (23 samples, 0.07%)</title><rect x="84.8299%" y="7717" width="0.0701%" height="15" fill="rgb(221,32,16)" fg:x="27831" fg:w="23"/><text x="85.0799%" y="7727.50"></text></g><g><title>[libc.so.6] (17 samples, 0.05%)</title><rect x="84.8482%" y="7701" width="0.0518%" height="15" fill="rgb(228,144,50)" fg:x="27837" fg:w="17"/><text x="85.0982%" y="7711.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;,hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (36 samples, 0.11%)</title><rect x="84.7933%" y="7813" width="0.1097%" height="15" fill="rgb(229,201,53)" fg:x="27819" fg:w="36"/><text x="85.0433%" y="7823.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.11%)</title><rect x="84.7933%" y="7797" width="0.1097%" height="15" fill="rgb(249,153,27)" fg:x="27819" fg:w="36"/><text x="85.0433%" y="7807.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize::_{{closure}} (36 samples, 0.11%)</title><rect x="84.7933%" y="7781" width="0.1097%" height="15" fill="rgb(227,106,25)" fg:x="27819" fg:w="36"/><text x="85.0433%" y="7791.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (32 samples, 0.10%)</title><rect x="84.8055%" y="7765" width="0.0975%" height="15" fill="rgb(230,65,29)" fg:x="27823" fg:w="32"/><text x="85.0555%" y="7775.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (12 samples, 0.04%)</title><rect x="85.1073%" y="7685" width="0.0366%" height="15" fill="rgb(221,57,46)" fg:x="27922" fg:w="12"/><text x="85.3573%" y="7695.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (31 samples, 0.09%)</title><rect x="85.0799%" y="7701" width="0.0945%" height="15" fill="rgb(229,161,17)" fg:x="27913" fg:w="31"/><text x="85.3299%" y="7711.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (10 samples, 0.03%)</title><rect x="85.1439%" y="7685" width="0.0305%" height="15" fill="rgb(222,213,11)" fg:x="27934" fg:w="10"/><text x="85.3939%" y="7695.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (66 samples, 0.20%)</title><rect x="85.2231%" y="7685" width="0.2012%" height="15" fill="rgb(235,35,13)" fg:x="27960" fg:w="66"/><text x="85.4731%" y="7695.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (181 samples, 0.55%)</title><rect x="84.9579%" y="7749" width="0.5517%" height="15" fill="rgb(233,158,34)" fg:x="27873" fg:w="181"/><text x="85.2079%" y="7759.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (181 samples, 0.55%)</title><rect x="84.9579%" y="7733" width="0.5517%" height="15" fill="rgb(215,151,48)" fg:x="27873" fg:w="181"/><text x="85.2079%" y="7743.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (181 samples, 0.55%)</title><rect x="84.9579%" y="7717" width="0.5517%" height="15" fill="rgb(229,84,14)" fg:x="27873" fg:w="181"/><text x="85.2079%" y="7727.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (110 samples, 0.34%)</title><rect x="85.1743%" y="7701" width="0.3353%" height="15" fill="rgb(229,68,14)" fg:x="27944" fg:w="110"/><text x="85.4243%" y="7711.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (28 samples, 0.09%)</title><rect x="85.4243%" y="7685" width="0.0853%" height="15" fill="rgb(243,106,26)" fg:x="28026" fg:w="28"/><text x="85.6743%" y="7695.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (13 samples, 0.04%)</title><rect x="85.5096%" y="7749" width="0.0396%" height="15" fill="rgb(206,45,38)" fg:x="28054" fg:w="13"/><text x="85.7596%" y="7759.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (5 samples, 0.02%)</title><rect x="85.5340%" y="7733" width="0.0152%" height="15" fill="rgb(226,6,15)" fg:x="28062" fg:w="5"/><text x="85.7840%" y="7743.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (5 samples, 0.02%)</title><rect x="85.5340%" y="7717" width="0.0152%" height="15" fill="rgb(232,22,54)" fg:x="28062" fg:w="5"/><text x="85.7840%" y="7727.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (5 samples, 0.02%)</title><rect x="85.5340%" y="7701" width="0.0152%" height="15" fill="rgb(229,222,32)" fg:x="28062" fg:w="5"/><text x="85.7840%" y="7711.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (38 samples, 0.12%)</title><rect x="85.5736%" y="7701" width="0.1158%" height="15" fill="rgb(228,62,29)" fg:x="28075" fg:w="38"/><text x="85.8236%" y="7711.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (37 samples, 0.11%)</title><rect x="85.5767%" y="7685" width="0.1128%" height="15" fill="rgb(251,103,34)" fg:x="28076" fg:w="37"/><text x="85.8267%" y="7695.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (37 samples, 0.11%)</title><rect x="85.5767%" y="7669" width="0.1128%" height="15" fill="rgb(233,12,30)" fg:x="28076" fg:w="37"/><text x="85.8267%" y="7679.50"></text></g><g><title>core::hash::sip::u8to64_le (25 samples, 0.08%)</title><rect x="85.6133%" y="7653" width="0.0762%" height="15" fill="rgb(238,52,0)" fg:x="28088" fg:w="25"/><text x="85.8633%" y="7663.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (259 samples, 0.79%)</title><rect x="84.9031%" y="7797" width="0.7894%" height="15" fill="rgb(223,98,5)" fg:x="27855" fg:w="259"/><text x="85.1531%" y="7807.50"></text></g><g><title>hashbrown::map::make_hash (259 samples, 0.79%)</title><rect x="84.9031%" y="7781" width="0.7894%" height="15" fill="rgb(228,75,37)" fg:x="27855" fg:w="259"/><text x="85.1531%" y="7791.50"></text></g><g><title>core::hash::BuildHasher::hash_one (256 samples, 0.78%)</title><rect x="84.9122%" y="7765" width="0.7803%" height="15" fill="rgb(205,115,49)" fg:x="27858" fg:w="256"/><text x="85.1622%" y="7775.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (47 samples, 0.14%)</title><rect x="85.5493%" y="7749" width="0.1433%" height="15" fill="rgb(250,154,43)" fg:x="28067" fg:w="47"/><text x="85.7993%" y="7759.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (45 samples, 0.14%)</title><rect x="85.5554%" y="7733" width="0.1372%" height="15" fill="rgb(226,43,29)" fg:x="28069" fg:w="45"/><text x="85.8054%" y="7743.50"></text></g><g><title>core::hash::Hasher::write_u16 (45 samples, 0.14%)</title><rect x="85.5554%" y="7717" width="0.1372%" height="15" fill="rgb(249,228,39)" fg:x="28069" fg:w="45"/><text x="85.8054%" y="7727.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (264 samples, 0.80%)</title><rect x="84.9031%" y="7813" width="0.8047%" height="15" fill="rgb(216,79,43)" fg:x="27855" fg:w="264"/><text x="85.1531%" y="7823.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (5 samples, 0.02%)</title><rect x="85.6925%" y="7797" width="0.0152%" height="15" fill="rgb(228,95,12)" fg:x="28114" fg:w="5"/><text x="85.9425%" y="7807.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (5 samples, 0.02%)</title><rect x="85.6925%" y="7781" width="0.0152%" height="15" fill="rgb(249,221,15)" fg:x="28114" fg:w="5"/><text x="85.9425%" y="7791.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (5 samples, 0.02%)</title><rect x="85.6925%" y="7765" width="0.0152%" height="15" fill="rgb(233,34,13)" fg:x="28114" fg:w="5"/><text x="85.9425%" y="7775.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (5 samples, 0.02%)</title><rect x="85.6925%" y="7749" width="0.0152%" height="15" fill="rgb(214,103,39)" fg:x="28114" fg:w="5"/><text x="85.9425%" y="7759.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (63 samples, 0.19%)</title><rect x="85.8144%" y="7765" width="0.1920%" height="15" fill="rgb(251,126,39)" fg:x="28154" fg:w="63"/><text x="86.0644%" y="7775.50"></text></g><g><title>core::num::nonzero::NonZeroU16::new (63 samples, 0.19%)</title><rect x="85.8144%" y="7749" width="0.1920%" height="15" fill="rgb(214,216,36)" fg:x="28154" fg:w="63"/><text x="86.0644%" y="7759.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot_in_group (165 samples, 0.50%)</title><rect x="85.7169%" y="7781" width="0.5029%" height="15" fill="rgb(220,221,8)" fg:x="28122" fg:w="165"/><text x="85.9669%" y="7791.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (70 samples, 0.21%)</title><rect x="86.0065%" y="7765" width="0.2134%" height="15" fill="rgb(240,216,3)" fg:x="28217" fg:w="70"/><text x="86.2565%" y="7775.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (70 samples, 0.21%)</title><rect x="86.0065%" y="7749" width="0.2134%" height="15" fill="rgb(232,218,17)" fg:x="28217" fg:w="70"/><text x="86.2565%" y="7759.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fix_insert_slot (69 samples, 0.21%)</title><rect x="86.2198%" y="7781" width="0.2103%" height="15" fill="rgb(229,163,45)" fg:x="28287" fg:w="69"/><text x="86.4698%" y="7791.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_bucket_full (9 samples, 0.03%)</title><rect x="86.4027%" y="7765" width="0.0274%" height="15" fill="rgb(231,110,42)" fg:x="28347" fg:w="9"/><text x="86.6527%" y="7775.50"></text></g><g><title>hashbrown::raw::is_full (9 samples, 0.03%)</title><rect x="86.4027%" y="7749" width="0.0274%" height="15" fill="rgb(208,170,48)" fg:x="28347" fg:w="9"/><text x="86.6527%" y="7759.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (4 samples, 0.01%)</title><rect x="86.4301%" y="7781" width="0.0122%" height="15" fill="rgb(239,116,25)" fg:x="28356" fg:w="4"/><text x="86.6801%" y="7791.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (243 samples, 0.74%)</title><rect x="85.7169%" y="7797" width="0.7407%" height="15" fill="rgb(219,200,50)" fg:x="28122" fg:w="243"/><text x="85.9669%" y="7807.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (5 samples, 0.02%)</title><rect x="86.4423%" y="7781" width="0.0152%" height="15" fill="rgb(245,200,0)" fg:x="28360" fg:w="5"/><text x="86.6923%" y="7791.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (5 samples, 0.02%)</title><rect x="86.4423%" y="7765" width="0.0152%" height="15" fill="rgb(245,119,33)" fg:x="28360" fg:w="5"/><text x="86.6923%" y="7775.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.02%)</title><rect x="86.4423%" y="7749" width="0.0152%" height="15" fill="rgb(231,125,12)" fg:x="28360" fg:w="5"/><text x="86.6923%" y="7759.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl (4 samples, 0.01%)</title><rect x="86.4576%" y="7781" width="0.0122%" height="15" fill="rgb(216,96,41)" fg:x="28365" fg:w="4"/><text x="86.7076%" y="7791.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (256 samples, 0.78%)</title><rect x="85.7169%" y="7813" width="0.7803%" height="15" fill="rgb(248,43,45)" fg:x="28122" fg:w="256"/><text x="85.9669%" y="7823.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (13 samples, 0.04%)</title><rect x="86.4576%" y="7797" width="0.0396%" height="15" fill="rgb(217,222,7)" fg:x="28365" fg:w="13"/><text x="86.7076%" y="7807.50"></text></g><g><title>hashbrown::raw::h2 (9 samples, 0.03%)</title><rect x="86.4698%" y="7781" width="0.0274%" height="15" fill="rgb(233,28,6)" fg:x="28369" fg:w="9"/><text x="86.7198%" y="7791.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (31 samples, 0.09%)</title><rect x="86.4972%" y="7781" width="0.0945%" height="15" fill="rgb(231,218,15)" fg:x="28378" fg:w="31"/><text x="86.7472%" y="7791.50"></text></g><g><title>core::intrinsics::write_bytes (31 samples, 0.09%)</title><rect x="86.4972%" y="7765" width="0.0945%" height="15" fill="rgb(226,171,48)" fg:x="28378" fg:w="31"/><text x="86.7472%" y="7775.50"></text></g><g><title>[libc.so.6] (28 samples, 0.09%)</title><rect x="86.5063%" y="7749" width="0.0853%" height="15" fill="rgb(235,201,9)" fg:x="28381" fg:w="28"/><text x="86.7563%" y="7759.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (26 samples, 0.08%)</title><rect x="86.5917%" y="7765" width="0.0792%" height="15" fill="rgb(217,80,15)" fg:x="28409" fg:w="26"/><text x="86.8417%" y="7775.50"></text></g><g><title>__rdl_alloc (7 samples, 0.02%)</title><rect x="86.7106%" y="7701" width="0.0213%" height="15" fill="rgb(219,152,8)" fg:x="28448" fg:w="7"/><text x="86.9606%" y="7711.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (100 samples, 0.30%)</title><rect x="86.6709%" y="7765" width="0.3048%" height="15" fill="rgb(243,107,38)" fg:x="28435" fg:w="100"/><text x="86.9209%" y="7775.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (100 samples, 0.30%)</title><rect x="86.6709%" y="7749" width="0.3048%" height="15" fill="rgb(231,17,5)" fg:x="28435" fg:w="100"/><text x="86.9209%" y="7759.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (100 samples, 0.30%)</title><rect x="86.6709%" y="7733" width="0.3048%" height="15" fill="rgb(209,25,54)" fg:x="28435" fg:w="100"/><text x="86.9209%" y="7743.50"></text></g><g><title>alloc::alloc::alloc (97 samples, 0.30%)</title><rect x="86.6801%" y="7717" width="0.2957%" height="15" fill="rgb(219,0,2)" fg:x="28438" fg:w="97"/><text x="86.9301%" y="7727.50"></text></g><g><title>malloc (76 samples, 0.23%)</title><rect x="86.7441%" y="7701" width="0.2317%" height="15" fill="rgb(246,9,5)" fg:x="28459" fg:w="76"/><text x="86.9941%" y="7711.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (132 samples, 0.40%)</title><rect x="86.5917%" y="7781" width="0.4023%" height="15" fill="rgb(226,159,4)" fg:x="28409" fg:w="132"/><text x="86.8417%" y="7791.50"></text></g><g><title>hashbrown::raw::bucket_mask_to_capacity (6 samples, 0.02%)</title><rect x="86.9757%" y="7765" width="0.0183%" height="15" fill="rgb(219,175,34)" fg:x="28535" fg:w="6"/><text x="87.2257%" y="7775.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (758 samples, 2.31%)</title><rect x="84.7080%" y="7829" width="2.3104%" height="15" fill="rgb(236,10,46)" fg:x="27791" fg:w="758"/><text x="84.9580%" y="7839.50">h..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (171 samples, 0.52%)</title><rect x="86.4972%" y="7813" width="0.5212%" height="15" fill="rgb(240,211,16)" fg:x="28378" fg:w="171"/><text x="86.7472%" y="7823.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (171 samples, 0.52%)</title><rect x="86.4972%" y="7797" width="0.5212%" height="15" fill="rgb(205,3,43)" fg:x="28378" fg:w="171"/><text x="86.7472%" y="7807.50"></text></g><g><title>hashbrown::raw::capacity_to_buckets (8 samples, 0.02%)</title><rect x="86.9940%" y="7781" width="0.0244%" height="15" fill="rgb(245,7,22)" fg:x="28541" fg:w="8"/><text x="87.2440%" y="7791.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (788 samples, 2.40%)</title><rect x="84.6287%" y="7877" width="2.4019%" height="15" fill="rgb(239,132,32)" fg:x="27765" fg:w="788"/><text x="84.8787%" y="7887.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (781 samples, 2.38%)</title><rect x="84.6501%" y="7861" width="2.3805%" height="15" fill="rgb(228,202,34)" fg:x="27772" fg:w="781"/><text x="84.9001%" y="7871.50">ha..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (776 samples, 2.37%)</title><rect x="84.6653%" y="7845" width="2.3653%" height="15" fill="rgb(254,200,22)" fg:x="27777" fg:w="776"/><text x="84.9153%" y="7855.50">ha..</text></g><g><title>hashbrown::raw::bucket_mask_to_capacity (4 samples, 0.01%)</title><rect x="87.0184%" y="7829" width="0.0122%" height="15" fill="rgb(219,10,39)" fg:x="28549" fg:w="4"/><text x="87.2684%" y="7839.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (19 samples, 0.06%)</title><rect x="87.3232%" y="7845" width="0.0579%" height="15" fill="rgb(226,210,39)" fg:x="28649" fg:w="19"/><text x="87.5732%" y="7855.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (102 samples, 0.31%)</title><rect x="87.1220%" y="7861" width="0.3109%" height="15" fill="rgb(208,219,16)" fg:x="28583" fg:w="102"/><text x="87.3720%" y="7871.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (17 samples, 0.05%)</title><rect x="87.3811%" y="7845" width="0.0518%" height="15" fill="rgb(216,158,51)" fg:x="28668" fg:w="17"/><text x="87.6311%" y="7855.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (12 samples, 0.04%)</title><rect x="87.4329%" y="7861" width="0.0366%" height="15" fill="rgb(233,14,44)" fg:x="28685" fg:w="12"/><text x="87.6829%" y="7871.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (12 samples, 0.04%)</title><rect x="87.4329%" y="7845" width="0.0366%" height="15" fill="rgb(237,97,39)" fg:x="28685" fg:w="12"/><text x="87.6829%" y="7855.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot::_{{closure}} (12 samples, 0.04%)</title><rect x="87.4695%" y="7861" width="0.0366%" height="15" fill="rgb(218,198,43)" fg:x="28697" fg:w="12"/><text x="87.7195%" y="7871.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (12 samples, 0.04%)</title><rect x="87.4695%" y="7845" width="0.0366%" height="15" fill="rgb(231,104,20)" fg:x="28697" fg:w="12"/><text x="87.7195%" y="7855.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (12 samples, 0.04%)</title><rect x="87.4695%" y="7829" width="0.0366%" height="15" fill="rgb(254,36,13)" fg:x="28697" fg:w="12"/><text x="87.7195%" y="7839.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (12 samples, 0.04%)</title><rect x="87.4695%" y="7813" width="0.0366%" height="15" fill="rgb(248,14,50)" fg:x="28697" fg:w="12"/><text x="87.7195%" y="7823.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u16&gt;::eq (6 samples, 0.02%)</title><rect x="87.4878%" y="7797" width="0.0183%" height="15" fill="rgb(217,107,29)" fg:x="28703" fg:w="6"/><text x="87.7378%" y="7807.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (7 samples, 0.02%)</title><rect x="87.5610%" y="7845" width="0.0213%" height="15" fill="rgb(251,169,33)" fg:x="28727" fg:w="7"/><text x="87.8110%" y="7855.50"></text></g><g><title>core::num::nonzero::NonZeroU16::new (5 samples, 0.02%)</title><rect x="87.5671%" y="7829" width="0.0152%" height="15" fill="rgb(217,108,32)" fg:x="28729" fg:w="5"/><text x="87.8171%" y="7839.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot_in_group (28 samples, 0.09%)</title><rect x="87.5061%" y="7861" width="0.0853%" height="15" fill="rgb(219,66,42)" fg:x="28709" fg:w="28"/><text x="87.7561%" y="7871.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_bucket_full (60 samples, 0.18%)</title><rect x="87.6311%" y="7845" width="0.1829%" height="15" fill="rgb(206,180,7)" fg:x="28750" fg:w="60"/><text x="87.8811%" y="7855.50"></text></g><g><title>hashbrown::raw::is_full (60 samples, 0.18%)</title><rect x="87.6311%" y="7829" width="0.1829%" height="15" fill="rgb(208,226,31)" fg:x="28750" fg:w="60"/><text x="87.8811%" y="7839.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fix_insert_slot (84 samples, 0.26%)</title><rect x="87.5914%" y="7861" width="0.2560%" height="15" fill="rgb(218,26,49)" fg:x="28737" fg:w="84"/><text x="87.8414%" y="7871.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (11 samples, 0.03%)</title><rect x="87.8139%" y="7845" width="0.0335%" height="15" fill="rgb(233,197,48)" fg:x="28810" fg:w="11"/><text x="88.0639%" y="7855.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (11 samples, 0.03%)</title><rect x="87.8139%" y="7829" width="0.0335%" height="15" fill="rgb(252,181,51)" fg:x="28810" fg:w="11"/><text x="88.0639%" y="7839.50"></text></g><g><title>hashbrown::raw::h2 (95 samples, 0.29%)</title><rect x="87.8475%" y="7861" width="0.2896%" height="15" fill="rgb(253,90,19)" fg:x="28821" fg:w="95"/><text x="88.0975%" y="7871.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (95 samples, 0.29%)</title><rect x="88.1370%" y="7861" width="0.2896%" height="15" fill="rgb(215,171,30)" fg:x="28916" fg:w="95"/><text x="88.3870%" y="7871.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (95 samples, 0.29%)</title><rect x="88.1370%" y="7845" width="0.2896%" height="15" fill="rgb(214,222,9)" fg:x="28916" fg:w="95"/><text x="88.3870%" y="7855.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (1,276 samples, 3.89%)</title><rect x="84.5708%" y="7893" width="3.8893%" height="15" fill="rgb(223,3,22)" fg:x="27746" fg:w="1276"/><text x="84.8208%" y="7903.50">hash..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_or_find_insert_slot_inner (469 samples, 1.43%)</title><rect x="87.0306%" y="7877" width="1.4295%" height="15" fill="rgb(225,196,46)" fg:x="28553" fg:w="469"/><text x="87.2806%" y="7887.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (11 samples, 0.03%)</title><rect x="88.4266%" y="7861" width="0.0335%" height="15" fill="rgb(209,110,37)" fg:x="29011" fg:w="11"/><text x="88.6766%" y="7871.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (11 samples, 0.03%)</title><rect x="88.4266%" y="7845" width="0.0335%" height="15" fill="rgb(249,89,12)" fg:x="29011" fg:w="11"/><text x="88.6766%" y="7855.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (11 samples, 0.03%)</title><rect x="88.4266%" y="7829" width="0.0335%" height="15" fill="rgb(226,27,33)" fg:x="29011" fg:w="11"/><text x="88.6766%" y="7839.50"></text></g><g><title>core::convert::num::&lt;impl core::convert::From&lt;bool&gt; for usize&gt;::from (6 samples, 0.02%)</title><rect x="88.5119%" y="7861" width="0.0183%" height="15" fill="rgb(213,82,22)" fg:x="29039" fg:w="6"/><text x="88.7619%" y="7871.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (16 samples, 0.05%)</title><rect x="88.5302%" y="7861" width="0.0488%" height="15" fill="rgb(248,140,0)" fg:x="29045" fg:w="16"/><text x="88.7802%" y="7871.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl (16 samples, 0.05%)</title><rect x="88.5302%" y="7845" width="0.0488%" height="15" fill="rgb(228,106,3)" fg:x="29045" fg:w="16"/><text x="88.7802%" y="7855.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (14 samples, 0.04%)</title><rect x="88.5363%" y="7829" width="0.0427%" height="15" fill="rgb(209,23,37)" fg:x="29047" fg:w="14"/><text x="88.7863%" y="7839.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (2,071 samples, 6.31%)</title><rect x="82.2696%" y="7941" width="6.3125%" height="15" fill="rgb(241,93,50)" fg:x="26991" fg:w="2071"/><text x="82.5196%" y="7951.50">std::col..</text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (2,071 samples, 6.31%)</title><rect x="82.2696%" y="7925" width="6.3125%" height="15" fill="rgb(253,46,43)" fg:x="26991" fg:w="2071"/><text x="82.5196%" y="7935.50">hashbrow..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2,050 samples, 6.25%)</title><rect x="82.3336%" y="7909" width="6.2485%" height="15" fill="rgb(226,206,43)" fg:x="27012" fg:w="2050"/><text x="82.5836%" y="7919.50">hashbrow..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (40 samples, 0.12%)</title><rect x="88.4601%" y="7893" width="0.1219%" height="15" fill="rgb(217,54,7)" fg:x="29022" fg:w="40"/><text x="88.7101%" y="7903.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::record_item_insert_at (38 samples, 0.12%)</title><rect x="88.4662%" y="7877" width="0.1158%" height="15" fill="rgb(223,5,52)" fg:x="29024" fg:w="38"/><text x="88.7162%" y="7887.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (6 samples, 0.02%)</title><rect x="88.5821%" y="7877" width="0.0183%" height="15" fill="rgb(206,52,46)" fg:x="29062" fg:w="6"/><text x="88.8321%" y="7887.50"></text></g><g><title>std::collections::hash::map::RandomState::new (6 samples, 0.02%)</title><rect x="88.5821%" y="7861" width="0.0183%" height="15" fill="rgb(253,136,11)" fg:x="29062" fg:w="6"/><text x="88.8321%" y="7871.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (6 samples, 0.02%)</title><rect x="88.5821%" y="7845" width="0.0183%" height="15" fill="rgb(208,106,33)" fg:x="29062" fg:w="6"/><text x="88.8321%" y="7855.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6 samples, 0.02%)</title><rect x="88.5821%" y="7829" width="0.0183%" height="15" fill="rgb(206,54,4)" fg:x="29062" fg:w="6"/><text x="88.8321%" y="7839.50"></text></g><g><title>std::collections::hash::map::RandomState::new::_{{closure}} (4 samples, 0.01%)</title><rect x="88.5881%" y="7813" width="0.0122%" height="15" fill="rgb(213,3,15)" fg:x="29064" fg:w="4"/><text x="88.8381%" y="7823.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (4 samples, 0.01%)</title><rect x="88.5881%" y="7797" width="0.0122%" height="15" fill="rgb(252,211,39)" fg:x="29064" fg:w="4"/><text x="88.8381%" y="7807.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (4 samples, 0.01%)</title><rect x="88.5881%" y="7781" width="0.0122%" height="15" fill="rgb(223,6,36)" fg:x="29064" fg:w="4"/><text x="88.8381%" y="7791.50"></text></g><g><title>core::mem::replace (4 samples, 0.01%)</title><rect x="88.5881%" y="7765" width="0.0122%" height="15" fill="rgb(252,169,45)" fg:x="29064" fg:w="4"/><text x="88.8381%" y="7775.50"></text></g><g><title>core::ptr::write (4 samples, 0.01%)</title><rect x="88.5881%" y="7749" width="0.0122%" height="15" fill="rgb(212,48,26)" fg:x="29064" fg:w="4"/><text x="88.8381%" y="7759.50"></text></g><g><title>tetrs::logic::game::gravity (4,826 samples, 14.71%)</title><rect x="73.8997%" y="7957" width="14.7098%" height="15" fill="rgb(251,102,48)" fg:x="24245" fg:w="4826"/><text x="74.1497%" y="7967.50">tetrs::logic::game::gr..</text></g><g><title>std::collections::hash::set::HashSet&lt;T&gt;::new (9 samples, 0.03%)</title><rect x="88.5821%" y="7941" width="0.0274%" height="15" fill="rgb(243,208,16)" fg:x="29062" fg:w="9"/><text x="88.8321%" y="7951.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::default::Default&gt;::default (9 samples, 0.03%)</title><rect x="88.5821%" y="7925" width="0.0274%" height="15" fill="rgb(219,96,24)" fg:x="29062" fg:w="9"/><text x="88.8321%" y="7935.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::default::Default&gt;::default (9 samples, 0.03%)</title><rect x="88.5821%" y="7909" width="0.0274%" height="15" fill="rgb(219,33,29)" fg:x="29062" fg:w="9"/><text x="88.8321%" y="7919.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::default::Default&gt;::default (9 samples, 0.03%)</title><rect x="88.5821%" y="7893" width="0.0274%" height="15" fill="rgb(223,176,5)" fg:x="29062" fg:w="9"/><text x="88.8321%" y="7903.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (94 samples, 0.29%)</title><rect x="90.5968%" y="7941" width="0.2865%" height="15" fill="rgb(228,140,14)" fg:x="29723" fg:w="94"/><text x="90.8468%" y="7951.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (94 samples, 0.29%)</title><rect x="90.5968%" y="7925" width="0.2865%" height="15" fill="rgb(217,179,31)" fg:x="29723" fg:w="94"/><text x="90.8468%" y="7935.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (94 samples, 0.29%)</title><rect x="90.5968%" y="7909" width="0.2865%" height="15" fill="rgb(230,9,30)" fg:x="29723" fg:w="94"/><text x="90.8468%" y="7919.50"></text></g><g><title>__rdl_alloc (36 samples, 0.11%)</title><rect x="91.0449%" y="7877" width="0.1097%" height="15" fill="rgb(230,136,20)" fg:x="29870" fg:w="36"/><text x="91.2949%" y="7887.50"></text></g><g><title>__rust_alloc (42 samples, 0.13%)</title><rect x="91.1546%" y="7877" width="0.1280%" height="15" fill="rgb(215,210,22)" fg:x="29906" fg:w="42"/><text x="91.4046%" y="7887.50"></text></g><g><title>core::ptr::read_volatile (54 samples, 0.16%)</title><rect x="91.2826%" y="7877" width="0.1646%" height="15" fill="rgb(218,43,5)" fg:x="29948" fg:w="54"/><text x="91.5326%" y="7887.50"></text></g><g><title>alloc::alloc::exchange_malloc (548 samples, 1.67%)</title><rect x="90.8833%" y="7941" width="1.6703%" height="15" fill="rgb(216,11,5)" fg:x="29817" fg:w="548"/><text x="91.1333%" y="7951.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (513 samples, 1.56%)</title><rect x="90.9900%" y="7925" width="1.5636%" height="15" fill="rgb(209,82,29)" fg:x="29852" fg:w="513"/><text x="91.2400%" y="7935.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (513 samples, 1.56%)</title><rect x="90.9900%" y="7909" width="1.5636%" height="15" fill="rgb(244,115,12)" fg:x="29852" fg:w="513"/><text x="91.2400%" y="7919.50"></text></g><g><title>alloc::alloc::alloc (513 samples, 1.56%)</title><rect x="90.9900%" y="7893" width="1.5636%" height="15" fill="rgb(222,82,18)" fg:x="29852" fg:w="513"/><text x="91.2400%" y="7903.50"></text></g><g><title>malloc (363 samples, 1.11%)</title><rect x="91.4472%" y="7877" width="1.1064%" height="15" fill="rgb(249,227,8)" fg:x="30002" fg:w="363"/><text x="91.6972%" y="7887.50"></text></g><g><title>[libc.so.6] (23 samples, 0.07%)</title><rect x="92.4835%" y="7861" width="0.0701%" height="15" fill="rgb(253,141,45)" fg:x="30342" fg:w="23"/><text x="92.7335%" y="7871.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="92.5415%" y="7845" width="0.0122%" height="15" fill="rgb(234,184,4)" fg:x="30361" fg:w="4"/><text x="92.7915%" y="7855.50"></text></g><g><title>__rdl_dealloc (35 samples, 0.11%)</title><rect x="92.6878%" y="7813" width="0.1067%" height="15" fill="rgb(218,194,23)" fg:x="30409" fg:w="35"/><text x="92.9378%" y="7823.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (35 samples, 0.11%)</title><rect x="92.6878%" y="7797" width="0.1067%" height="15" fill="rgb(235,66,41)" fg:x="30409" fg:w="35"/><text x="92.9378%" y="7807.50"></text></g><g><title>__rust_dealloc (58 samples, 0.18%)</title><rect x="92.7944%" y="7813" width="0.1768%" height="15" fill="rgb(245,217,1)" fg:x="30444" fg:w="58"/><text x="93.0444%" y="7823.50"></text></g><g><title>tetrs::logic::game::is_connected (2,069 samples, 6.31%)</title><rect x="88.6095%" y="7957" width="6.3064%" height="15" fill="rgb(229,91,1)" fg:x="29071" fg:w="2069"/><text x="88.8595%" y="7967.50">tetrs::l..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(i8,i8)&gt;&gt; (775 samples, 2.36%)</title><rect x="92.5536%" y="7941" width="2.3622%" height="15" fill="rgb(207,101,30)" fg:x="30365" fg:w="775"/><text x="92.8036%" y="7951.50">co..</text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (775 samples, 2.36%)</title><rect x="92.5536%" y="7925" width="2.3622%" height="15" fill="rgb(223,82,49)" fg:x="30365" fg:w="775"/><text x="92.8036%" y="7935.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(i8,i8),alloc::alloc::Global&gt;&gt; (775 samples, 2.36%)</title><rect x="92.5536%" y="7909" width="2.3622%" height="15" fill="rgb(218,167,17)" fg:x="30365" fg:w="775"/><text x="92.8036%" y="7919.50">co..</text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (775 samples, 2.36%)</title><rect x="92.5536%" y="7893" width="2.3622%" height="15" fill="rgb(208,103,14)" fg:x="30365" fg:w="775"/><text x="92.8036%" y="7903.50">&lt;&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(i8,i8)&gt;&gt; (775 samples, 2.36%)</title><rect x="92.5536%" y="7877" width="2.3622%" height="15" fill="rgb(238,20,8)" fg:x="30365" fg:w="775"/><text x="92.8036%" y="7887.50">co..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (775 samples, 2.36%)</title><rect x="92.5536%" y="7861" width="2.3622%" height="15" fill="rgb(218,80,54)" fg:x="30365" fg:w="775"/><text x="92.8036%" y="7871.50">&lt;a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (775 samples, 2.36%)</title><rect x="92.5536%" y="7845" width="2.3622%" height="15" fill="rgb(240,144,17)" fg:x="30365" fg:w="775"/><text x="92.8036%" y="7855.50">&lt;a..</text></g><g><title>alloc::alloc::dealloc (775 samples, 2.36%)</title><rect x="92.5536%" y="7829" width="2.3622%" height="15" fill="rgb(245,27,50)" fg:x="30365" fg:w="775"/><text x="92.8036%" y="7839.50">al..</text></g><g><title>cfree (638 samples, 1.94%)</title><rect x="92.9712%" y="7813" width="1.9446%" height="15" fill="rgb(251,51,7)" fg:x="30502" fg:w="638"/><text x="93.2212%" y="7823.50">c..</text></g><g><title>[libc.so.6] (403 samples, 1.23%)</title><rect x="93.6875%" y="7797" width="1.2284%" height="15" fill="rgb(245,217,29)" fg:x="30737" fg:w="403"/><text x="93.9375%" y="7807.50"></text></g><g><title>tetrs::logic::bot::search (32,451 samples, 98.91%)</title><rect x="0.2621%" y="8005" width="98.9119%" height="15" fill="rgb(221,176,29)" fg:x="86" fg:w="32451"/><text x="0.5121%" y="8015.50">tetrs::logic::bot::search</text></g><g><title>tetrs::logic::bot::heuristic (10,978 samples, 33.46%)</title><rect x="65.7126%" y="7989" width="33.4614%" height="15" fill="rgb(212,180,24)" fg:x="21559" fg:w="10978"/><text x="65.9626%" y="7999.50">tetrs::logic::bot::heuristic</text></g><g><title>tetrs::logic::game::clear_rows (10,616 samples, 32.36%)</title><rect x="66.8160%" y="7973" width="32.3580%" height="15" fill="rgb(254,24,2)" fg:x="21921" fg:w="10616"/><text x="67.0660%" y="7983.50">tetrs::logic::game::clear_rows</text></g><g><title>tetrs::logic::id_manager::IdManager::next_unique_id (1,397 samples, 4.26%)</title><rect x="94.9159%" y="7957" width="4.2581%" height="15" fill="rgb(230,100,2)" fg:x="31140" fg:w="1397"/><text x="95.1659%" y="7967.50">tetrs..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (168 samples, 0.51%)</title><rect x="98.6619%" y="7941" width="0.5121%" height="15" fill="rgb(219,142,25)" fg:x="32369" fg:w="168"/><text x="98.9119%" y="7951.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (168 samples, 0.51%)</title><rect x="98.6619%" y="7925" width="0.5121%" height="15" fill="rgb(240,73,43)" fg:x="32369" fg:w="168"/><text x="98.9119%" y="7935.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (168 samples, 0.51%)</title><rect x="98.6619%" y="7909" width="0.5121%" height="15" fill="rgb(214,114,15)" fg:x="32369" fg:w="168"/><text x="98.9119%" y="7919.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (5 samples, 0.02%)</title><rect x="99.1892%" y="7989" width="0.0152%" height="15" fill="rgb(207,130,4)" fg:x="32542" fg:w="5"/><text x="99.4392%" y="7999.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (5 samples, 0.02%)</title><rect x="99.1892%" y="7973" width="0.0152%" height="15" fill="rgb(221,25,40)" fg:x="32542" fg:w="5"/><text x="99.4392%" y="7983.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (5 samples, 0.02%)</title><rect x="99.1892%" y="7957" width="0.0152%" height="15" fill="rgb(241,184,7)" fg:x="32542" fg:w="5"/><text x="99.4392%" y="7967.50"></text></g><g><title>tetrs::logic::game::clear_rows (7 samples, 0.02%)</title><rect x="99.2349%" y="7973" width="0.0213%" height="15" fill="rgb(235,159,4)" fg:x="32557" fg:w="7"/><text x="99.4849%" y="7983.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (6 samples, 0.02%)</title><rect x="99.2715%" y="7957" width="0.0183%" height="15" fill="rgb(214,87,48)" fg:x="32569" fg:w="6"/><text x="99.5215%" y="7967.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (6 samples, 0.02%)</title><rect x="99.2715%" y="7941" width="0.0183%" height="15" fill="rgb(246,198,24)" fg:x="32569" fg:w="6"/><text x="99.5215%" y="7951.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (6 samples, 0.02%)</title><rect x="99.2715%" y="7925" width="0.0183%" height="15" fill="rgb(209,66,40)" fg:x="32569" fg:w="6"/><text x="99.5215%" y="7935.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (6 samples, 0.02%)</title><rect x="99.2715%" y="7909" width="0.0183%" height="15" fill="rgb(233,147,39)" fg:x="32569" fg:w="6"/><text x="99.5215%" y="7919.50"></text></g><g><title>hashbrown::map::make_hash (6 samples, 0.02%)</title><rect x="99.2898%" y="7909" width="0.0183%" height="15" fill="rgb(231,145,52)" fg:x="32575" fg:w="6"/><text x="99.5398%" y="7919.50"></text></g><g><title>core::hash::BuildHasher::hash_one (6 samples, 0.02%)</title><rect x="99.2898%" y="7893" width="0.0183%" height="15" fill="rgb(206,20,26)" fg:x="32575" fg:w="6"/><text x="99.5398%" y="7903.50"></text></g><g><title>tetrs::logic::game::gravity (22 samples, 0.07%)</title><rect x="99.2563%" y="7973" width="0.0671%" height="15" fill="rgb(238,220,4)" fg:x="32564" fg:w="22"/><text x="99.5063%" y="7983.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (11 samples, 0.03%)</title><rect x="99.2898%" y="7957" width="0.0335%" height="15" fill="rgb(252,195,42)" fg:x="32575" fg:w="11"/><text x="99.5398%" y="7967.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (11 samples, 0.03%)</title><rect x="99.2898%" y="7941" width="0.0335%" height="15" fill="rgb(209,10,6)" fg:x="32575" fg:w="11"/><text x="99.5398%" y="7951.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (11 samples, 0.03%)</title><rect x="99.2898%" y="7925" width="0.0335%" height="15" fill="rgb(229,3,52)" fg:x="32575" fg:w="11"/><text x="99.5398%" y="7935.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (5 samples, 0.02%)</title><rect x="99.3081%" y="7909" width="0.0152%" height="15" fill="rgb(253,49,37)" fg:x="32581" fg:w="5"/><text x="99.5581%" y="7919.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_or_find_insert_slot_inner (4 samples, 0.01%)</title><rect x="99.3111%" y="7893" width="0.0122%" height="15" fill="rgb(240,103,49)" fg:x="32582" fg:w="4"/><text x="99.5611%" y="7903.50"></text></g><g><title>tetrs::logic::game::is_connected (8 samples, 0.02%)</title><rect x="99.3233%" y="7973" width="0.0244%" height="15" fill="rgb(250,182,30)" fg:x="32586" fg:w="8"/><text x="99.5733%" y="7983.50"></text></g><g><title>tetrs::logic::game::clear_rows (59 samples, 0.18%)</title><rect x="99.2106%" y="7989" width="0.1798%" height="15" fill="rgb(248,8,30)" fg:x="32549" fg:w="59"/><text x="99.4606%" y="7999.50"></text></g><g><title>tetrs::logic::id_manager::IdManager::next_unique_id (14 samples, 0.04%)</title><rect x="99.3477%" y="7973" width="0.0427%" height="15" fill="rgb(237,120,30)" fg:x="32594" fg:w="14"/><text x="99.5977%" y="7983.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (33 samples, 0.10%)</title><rect x="99.4331%" y="7973" width="0.1006%" height="15" fill="rgb(221,146,34)" fg:x="32622" fg:w="33"/><text x="99.6831%" y="7983.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (33 samples, 0.10%)</title><rect x="99.4331%" y="7957" width="0.1006%" height="15" fill="rgb(242,55,13)" fg:x="32622" fg:w="33"/><text x="99.6831%" y="7967.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (33 samples, 0.10%)</title><rect x="99.4331%" y="7941" width="0.1006%" height="15" fill="rgb(242,112,31)" fg:x="32622" fg:w="33"/><text x="99.6831%" y="7951.50"></text></g><g><title>alloc::raw_vec::finish_grow (33 samples, 0.10%)</title><rect x="99.4331%" y="7925" width="0.1006%" height="15" fill="rgb(249,192,27)" fg:x="32622" fg:w="33"/><text x="99.6831%" y="7935.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (33 samples, 0.10%)</title><rect x="99.4331%" y="7909" width="0.1006%" height="15" fill="rgb(208,204,44)" fg:x="32622" fg:w="33"/><text x="99.6831%" y="7919.50"></text></g><g><title>alloc::alloc::Global::grow_impl (33 samples, 0.10%)</title><rect x="99.4331%" y="7893" width="0.1006%" height="15" fill="rgb(208,93,54)" fg:x="32622" fg:w="33"/><text x="99.6831%" y="7903.50"></text></g><g><title>alloc::alloc::realloc (33 samples, 0.10%)</title><rect x="99.4331%" y="7877" width="0.1006%" height="15" fill="rgb(242,1,31)" fg:x="32622" fg:w="33"/><text x="99.6831%" y="7887.50"></text></g><g><title>realloc (33 samples, 0.10%)</title><rect x="99.4331%" y="7861" width="0.1006%" height="15" fill="rgb(241,83,25)" fg:x="32622" fg:w="33"/><text x="99.6831%" y="7871.50"></text></g><g><title>[libc.so.6] (33 samples, 0.10%)</title><rect x="99.4331%" y="7845" width="0.1006%" height="15" fill="rgb(205,169,50)" fg:x="32622" fg:w="33"/><text x="99.6831%" y="7855.50"></text></g><g><title>[libc.so.6] (33 samples, 0.10%)</title><rect x="99.4331%" y="7829" width="0.1006%" height="15" fill="rgb(239,186,37)" fg:x="32622" fg:w="33"/><text x="99.6831%" y="7839.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (4 samples, 0.01%)</title><rect x="99.5397%" y="7877" width="0.0122%" height="15" fill="rgb(205,221,10)" fg:x="32657" fg:w="4"/><text x="99.7897%" y="7887.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4 samples, 0.01%)</title><rect x="99.5397%" y="7861" width="0.0122%" height="15" fill="rgb(218,196,15)" fg:x="32657" fg:w="4"/><text x="99.7897%" y="7871.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4 samples, 0.01%)</title><rect x="99.5397%" y="7845" width="0.0122%" height="15" fill="rgb(218,196,35)" fg:x="32657" fg:w="4"/><text x="99.7897%" y="7855.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (4 samples, 0.01%)</title><rect x="99.5397%" y="7829" width="0.0122%" height="15" fill="rgb(233,63,24)" fg:x="32657" fg:w="4"/><text x="99.7897%" y="7839.50"></text></g><g><title>hashbrown::map::make_hash (5 samples, 0.02%)</title><rect x="99.5397%" y="7909" width="0.0152%" height="15" fill="rgb(225,8,4)" fg:x="32657" fg:w="5"/><text x="99.7897%" y="7919.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5 samples, 0.02%)</title><rect x="99.5397%" y="7893" width="0.0152%" height="15" fill="rgb(234,105,35)" fg:x="32657" fg:w="5"/><text x="99.7897%" y="7903.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (13 samples, 0.04%)</title><rect x="99.5397%" y="7973" width="0.0396%" height="15" fill="rgb(236,21,32)" fg:x="32657" fg:w="13"/><text x="99.7897%" y="7983.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (13 samples, 0.04%)</title><rect x="99.5397%" y="7957" width="0.0396%" height="15" fill="rgb(228,109,6)" fg:x="32657" fg:w="13"/><text x="99.7897%" y="7967.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (13 samples, 0.04%)</title><rect x="99.5397%" y="7941" width="0.0396%" height="15" fill="rgb(229,215,31)" fg:x="32657" fg:w="13"/><text x="99.7897%" y="7951.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (13 samples, 0.04%)</title><rect x="99.5397%" y="7925" width="0.0396%" height="15" fill="rgb(221,52,54)" fg:x="32657" fg:w="13"/><text x="99.7897%" y="7935.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (8 samples, 0.02%)</title><rect x="99.5550%" y="7909" width="0.0244%" height="15" fill="rgb(252,129,43)" fg:x="32662" fg:w="8"/><text x="99.8050%" y="7919.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (8 samples, 0.02%)</title><rect x="99.5550%" y="7893" width="0.0244%" height="15" fill="rgb(248,183,27)" fg:x="32662" fg:w="8"/><text x="99.8050%" y="7903.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (8 samples, 0.02%)</title><rect x="99.5550%" y="7877" width="0.0244%" height="15" fill="rgb(250,0,22)" fg:x="32662" fg:w="8"/><text x="99.8050%" y="7887.50"></text></g><g><title>hashbrown::map::make_hash (5 samples, 0.02%)</title><rect x="99.5794%" y="7925" width="0.0152%" height="15" fill="rgb(213,166,10)" fg:x="32670" fg:w="5"/><text x="99.8294%" y="7935.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5 samples, 0.02%)</title><rect x="99.5794%" y="7909" width="0.0152%" height="15" fill="rgb(207,163,36)" fg:x="32670" fg:w="5"/><text x="99.8294%" y="7919.50"></text></g><g><title>tetrs::logic::game::gravity (78 samples, 0.24%)</title><rect x="99.3904%" y="7989" width="0.2377%" height="15" fill="rgb(208,122,22)" fg:x="32608" fg:w="78"/><text x="99.6404%" y="7999.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (16 samples, 0.05%)</title><rect x="99.5794%" y="7973" width="0.0488%" height="15" fill="rgb(207,104,49)" fg:x="32670" fg:w="16"/><text x="99.8294%" y="7983.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (16 samples, 0.05%)</title><rect x="99.5794%" y="7957" width="0.0488%" height="15" fill="rgb(248,211,50)" fg:x="32670" fg:w="16"/><text x="99.8294%" y="7967.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (16 samples, 0.05%)</title><rect x="99.5794%" y="7941" width="0.0488%" height="15" fill="rgb(217,13,45)" fg:x="32670" fg:w="16"/><text x="99.8294%" y="7951.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (11 samples, 0.03%)</title><rect x="99.5946%" y="7925" width="0.0335%" height="15" fill="rgb(211,216,49)" fg:x="32675" fg:w="11"/><text x="99.8446%" y="7935.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_or_find_insert_slot_inner (8 samples, 0.02%)</title><rect x="99.6038%" y="7909" width="0.0244%" height="15" fill="rgb(221,58,53)" fg:x="32678" fg:w="8"/><text x="99.8538%" y="7919.50"></text></g><g><title>alloc::alloc::exchange_malloc (5 samples, 0.02%)</title><rect x="99.6495%" y="7973" width="0.0152%" height="15" fill="rgb(220,112,41)" fg:x="32693" fg:w="5"/><text x="99.8995%" y="7983.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.02%)</title><rect x="99.6495%" y="7957" width="0.0152%" height="15" fill="rgb(236,38,28)" fg:x="32693" fg:w="5"/><text x="99.8995%" y="7967.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.02%)</title><rect x="99.6495%" y="7941" width="0.0152%" height="15" fill="rgb(227,195,22)" fg:x="32693" fg:w="5"/><text x="99.8995%" y="7951.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.02%)</title><rect x="99.6495%" y="7925" width="0.0152%" height="15" fill="rgb(214,55,33)" fg:x="32693" fg:w="5"/><text x="99.8995%" y="7935.50"></text></g><g><title>tetrs::logic::game::is_connected (19 samples, 0.06%)</title><rect x="99.6281%" y="7989" width="0.0579%" height="15" fill="rgb(248,80,13)" fg:x="32686" fg:w="19"/><text x="99.8781%" y="7999.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(i8,i8)&gt;&gt; (7 samples, 0.02%)</title><rect x="99.6647%" y="7973" width="0.0213%" height="15" fill="rgb(238,52,6)" fg:x="32698" fg:w="7"/><text x="99.9147%" y="7983.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.02%)</title><rect x="99.6647%" y="7957" width="0.0213%" height="15" fill="rgb(224,198,47)" fg:x="32698" fg:w="7"/><text x="99.9147%" y="7967.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(i8,i8),alloc::alloc::Global&gt;&gt; (7 samples, 0.02%)</title><rect x="99.6647%" y="7941" width="0.0213%" height="15" fill="rgb(233,171,20)" fg:x="32698" fg:w="7"/><text x="99.9147%" y="7951.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.02%)</title><rect x="99.6647%" y="7925" width="0.0213%" height="15" fill="rgb(241,30,25)" fg:x="32698" fg:w="7"/><text x="99.9147%" y="7935.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(i8,i8)&gt;&gt; (7 samples, 0.02%)</title><rect x="99.6647%" y="7909" width="0.0213%" height="15" fill="rgb(207,171,38)" fg:x="32698" fg:w="7"/><text x="99.9147%" y="7919.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.02%)</title><rect x="99.6647%" y="7893" width="0.0213%" height="15" fill="rgb(234,70,1)" fg:x="32698" fg:w="7"/><text x="99.9147%" y="7903.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.02%)</title><rect x="99.6647%" y="7877" width="0.0213%" height="15" fill="rgb(232,178,18)" fg:x="32698" fg:w="7"/><text x="99.9147%" y="7887.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.02%)</title><rect x="99.6647%" y="7861" width="0.0213%" height="15" fill="rgb(241,78,40)" fg:x="32698" fg:w="7"/><text x="99.9147%" y="7871.50"></text></g><g><title>cfree (5 samples, 0.02%)</title><rect x="99.6708%" y="7845" width="0.0152%" height="15" fill="rgb(222,35,25)" fg:x="32700" fg:w="5"/><text x="99.9208%" y="7855.50"></text></g><g><title>tetrs::logic::game::clear_rows (175 samples, 0.53%)</title><rect x="99.1740%" y="8005" width="0.5334%" height="15" fill="rgb(207,92,16)" fg:x="32537" fg:w="175"/><text x="99.4240%" y="8015.50"></text></g><g><title>tetrs::logic::id_manager::IdManager::next_unique_id (7 samples, 0.02%)</title><rect x="99.6861%" y="7989" width="0.0213%" height="15" fill="rgb(216,59,51)" fg:x="32705" fg:w="7"/><text x="99.9361%" y="7999.50"></text></g><g><title>&lt;macroquad::Stage as miniquad::event::EventHandler&gt;::draw::maybe_unwind (32,637 samples, 99.48%)</title><rect x="0.2408%" y="8085" width="99.4788%" height="15" fill="rgb(213,80,28)" fg:x="79" fg:w="32637"/><text x="0.4908%" y="8095.50">&lt;macroquad::Stage as miniquad::event::EventHandler&gt;::draw::maybe_unwind</text></g><g><title>&lt;macroquad::Stage as miniquad::event::EventHandler&gt;::draw::_{{closure}} (32,637 samples, 99.48%)</title><rect x="0.2408%" y="8069" width="99.4788%" height="15" fill="rgb(220,93,7)" fg:x="79" fg:w="32637"/><text x="0.4908%" y="8079.50">&lt;macroquad::Stage as miniquad::event::EventHandler&gt;::draw::_{{closure}}</text></g><g><title>macroquad::exec::resume (32,637 samples, 99.48%)</title><rect x="0.2408%" y="8053" width="99.4788%" height="15" fill="rgb(225,24,44)" fg:x="79" fg:w="32637"/><text x="0.4908%" y="8063.50">macroquad::exec::resume</text></g><g><title>tetrs::amain::_{{closure}} (32,637 samples, 99.48%)</title><rect x="0.2408%" y="8037" width="99.4788%" height="15" fill="rgb(243,74,40)" fg:x="79" fg:w="32637"/><text x="0.4908%" y="8047.50">tetrs::amain::_{{closure}}</text></g><g><title>tetrs::test_bot (32,637 samples, 99.48%)</title><rect x="0.2408%" y="8021" width="99.4788%" height="15" fill="rgb(228,39,7)" fg:x="79" fg:w="32637"/><text x="0.4908%" y="8031.50">tetrs::test_bot</text></g><g><title>tetrs::logic::next_shapes::NextShapes::get_next_stack (4 samples, 0.01%)</title><rect x="99.7074%" y="8005" width="0.0122%" height="15" fill="rgb(227,79,8)" fg:x="32712" fg:w="4"/><text x="99.9574%" y="8015.50"></text></g><g><title>&lt;macroquad::Stage as miniquad::event::EventHandler&gt;::draw (32,640 samples, 99.49%)</title><rect x="0.2408%" y="8101" width="99.4879%" height="15" fill="rgb(236,58,11)" fg:x="79" fg:w="32640"/><text x="0.4908%" y="8111.50">&lt;macroquad::Stage as miniquad::event::EventHandler&gt;::draw</text></g><g><title>[ld-linux-x86-64.so.2] (7 samples, 0.02%)</title><rect x="99.7501%" y="7797" width="0.0213%" height="15" fill="rgb(249,63,35)" fg:x="32726" fg:w="7"/><text x="100.0001%" y="7807.50"></text></g><g><title>[ld-linux-x86-64.so.2] (6 samples, 0.02%)</title><rect x="99.7531%" y="7781" width="0.0183%" height="15" fill="rgb(252,114,16)" fg:x="32727" fg:w="6"/><text x="100.0031%" y="7791.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (10 samples, 0.03%)</title><rect x="99.7501%" y="7989" width="0.0305%" height="15" fill="rgb(254,151,24)" fg:x="32726" fg:w="10"/><text x="100.0001%" y="7999.50"></text></g><g><title>dlopen (10 samples, 0.03%)</title><rect x="99.7501%" y="7973" width="0.0305%" height="15" fill="rgb(253,54,39)" fg:x="32726" fg:w="10"/><text x="100.0001%" y="7983.50"></text></g><g><title>[libc.so.6] (10 samples, 0.03%)</title><rect x="99.7501%" y="7957" width="0.0305%" height="15" fill="rgb(243,25,45)" fg:x="32726" fg:w="10"/><text x="100.0001%" y="7967.50"></text></g><g><title>[ld-linux-x86-64.so.2] (10 samples, 0.03%)</title><rect x="99.7501%" y="7941" width="0.0305%" height="15" fill="rgb(234,134,9)" fg:x="32726" fg:w="10"/><text x="100.0001%" y="7951.50"></text></g><g><title>_dl_catch_exception (10 samples, 0.03%)</title><rect x="99.7501%" y="7925" width="0.0305%" height="15" fill="rgb(227,166,31)" fg:x="32726" fg:w="10"/><text x="100.0001%" y="7935.50"></text></g><g><title>[libc.so.6] (10 samples, 0.03%)</title><rect x="99.7501%" y="7909" width="0.0305%" height="15" fill="rgb(245,143,41)" fg:x="32726" fg:w="10"/><text x="100.0001%" y="7919.50"></text></g><g><title>[ld-linux-x86-64.so.2] (10 samples, 0.03%)</title><rect x="99.7501%" y="7893" width="0.0305%" height="15" fill="rgb(238,181,32)" fg:x="32726" fg:w="10"/><text x="100.0001%" y="7903.50"></text></g><g><title>_dl_catch_exception (10 samples, 0.03%)</title><rect x="99.7501%" y="7877" width="0.0305%" height="15" fill="rgb(224,113,18)" fg:x="32726" fg:w="10"/><text x="100.0001%" y="7887.50"></text></g><g><title>[ld-linux-x86-64.so.2] (10 samples, 0.03%)</title><rect x="99.7501%" y="7861" width="0.0305%" height="15" fill="rgb(240,229,28)" fg:x="32726" fg:w="10"/><text x="100.0001%" y="7871.50"></text></g><g><title>_dl_catch_exception (10 samples, 0.03%)</title><rect x="99.7501%" y="7845" width="0.0305%" height="15" fill="rgb(250,185,3)" fg:x="32726" fg:w="10"/><text x="100.0001%" y="7855.50"></text></g><g><title>[ld-linux-x86-64.so.2] (10 samples, 0.03%)</title><rect x="99.7501%" y="7829" width="0.0305%" height="15" fill="rgb(212,59,25)" fg:x="32726" fg:w="10"/><text x="100.0001%" y="7839.50"></text></g><g><title>[ld-linux-x86-64.so.2] (10 samples, 0.03%)</title><rect x="99.7501%" y="7813" width="0.0305%" height="15" fill="rgb(221,87,20)" fg:x="32726" fg:w="10"/><text x="100.0001%" y="7823.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (17 samples, 0.05%)</title><rect x="99.7379%" y="8005" width="0.0518%" height="15" fill="rgb(213,74,28)" fg:x="32722" fg:w="17"/><text x="99.9879%" y="8015.50"></text></g><g><title>[radeonsi_dri.so] (34 samples, 0.10%)</title><rect x="99.7897%" y="7893" width="0.1036%" height="15" fill="rgb(224,132,34)" fg:x="32739" fg:w="34"/><text x="100.0397%" y="7903.50"></text></g><g><title>[radeonsi_dri.so] (34 samples, 0.10%)</title><rect x="99.7897%" y="7877" width="0.1036%" height="15" fill="rgb(222,101,24)" fg:x="32739" fg:w="34"/><text x="100.0397%" y="7887.50"></text></g><g><title>[radeonsi_dri.so] (19 samples, 0.06%)</title><rect x="99.8354%" y="7861" width="0.0579%" height="15" fill="rgb(254,142,4)" fg:x="32754" fg:w="19"/><text x="100.0854%" y="7871.50"></text></g><g><title>pthread_setaffinity_np (19 samples, 0.06%)</title><rect x="99.8354%" y="7845" width="0.0579%" height="15" fill="rgb(230,229,49)" fg:x="32754" fg:w="19"/><text x="100.0854%" y="7855.50"></text></g><g><title>[unknown] (18 samples, 0.05%)</title><rect x="99.8385%" y="7829" width="0.0549%" height="15" fill="rgb(238,70,47)" fg:x="32755" fg:w="18"/><text x="100.0885%" y="7839.50"></text></g><g><title>[unknown] (18 samples, 0.05%)</title><rect x="99.8385%" y="7813" width="0.0549%" height="15" fill="rgb(231,160,17)" fg:x="32755" fg:w="18"/><text x="100.0885%" y="7823.50"></text></g><g><title>[unknown] (18 samples, 0.05%)</title><rect x="99.8385%" y="7797" width="0.0549%" height="15" fill="rgb(218,68,53)" fg:x="32755" fg:w="18"/><text x="100.0885%" y="7807.50"></text></g><g><title>[unknown] (18 samples, 0.05%)</title><rect x="99.8385%" y="7781" width="0.0549%" height="15" fill="rgb(236,111,10)" fg:x="32755" fg:w="18"/><text x="100.0885%" y="7791.50"></text></g><g><title>[unknown] (17 samples, 0.05%)</title><rect x="99.8415%" y="7765" width="0.0518%" height="15" fill="rgb(224,34,41)" fg:x="32756" fg:w="17"/><text x="100.0915%" y="7775.50"></text></g><g><title>[unknown] (16 samples, 0.05%)</title><rect x="99.8446%" y="7749" width="0.0488%" height="15" fill="rgb(241,118,19)" fg:x="32757" fg:w="16"/><text x="100.0946%" y="7759.50"></text></g><g><title>[libc.so.6] (35 samples, 0.11%)</title><rect x="99.7897%" y="7909" width="0.1067%" height="15" fill="rgb(238,129,25)" fg:x="32739" fg:w="35"/><text x="100.0397%" y="7919.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (53 samples, 0.16%)</title><rect x="99.7379%" y="8085" width="0.1615%" height="15" fill="rgb(238,22,31)" fg:x="32722" fg:w="53"/><text x="99.9879%" y="8095.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (53 samples, 0.16%)</title><rect x="99.7379%" y="8069" width="0.1615%" height="15" fill="rgb(222,174,48)" fg:x="32722" fg:w="53"/><text x="99.9879%" y="8079.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (53 samples, 0.16%)</title><rect x="99.7379%" y="8053" width="0.1615%" height="15" fill="rgb(206,152,40)" fg:x="32722" fg:w="53"/><text x="99.9879%" y="8063.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (53 samples, 0.16%)</title><rect x="99.7379%" y="8037" width="0.1615%" height="15" fill="rgb(218,99,54)" fg:x="32722" fg:w="53"/><text x="99.9879%" y="8047.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (53 samples, 0.16%)</title><rect x="99.7379%" y="8021" width="0.1615%" height="15" fill="rgb(220,174,26)" fg:x="32722" fg:w="53"/><text x="99.9879%" y="8031.50"></text></g><g><title>[radeonsi_dri.so] (36 samples, 0.11%)</title><rect x="99.7897%" y="8005" width="0.1097%" height="15" fill="rgb(245,116,9)" fg:x="32739" fg:w="36"/><text x="100.0397%" y="8015.50"></text></g><g><title>[radeonsi_dri.so] (36 samples, 0.11%)</title><rect x="99.7897%" y="7989" width="0.1097%" height="15" fill="rgb(209,72,35)" fg:x="32739" fg:w="36"/><text x="100.0397%" y="7999.50"></text></g><g><title>[radeonsi_dri.so] (36 samples, 0.11%)</title><rect x="99.7897%" y="7973" width="0.1097%" height="15" fill="rgb(226,126,21)" fg:x="32739" fg:w="36"/><text x="100.0397%" y="7983.50"></text></g><g><title>[radeonsi_dri.so] (36 samples, 0.11%)</title><rect x="99.7897%" y="7957" width="0.1097%" height="15" fill="rgb(227,192,1)" fg:x="32739" fg:w="36"/><text x="100.0397%" y="7967.50"></text></g><g><title>amdgpu_winsys_create (36 samples, 0.11%)</title><rect x="99.7897%" y="7941" width="0.1097%" height="15" fill="rgb(237,180,29)" fg:x="32739" fg:w="36"/><text x="100.0397%" y="7951.50"></text></g><g><title>[radeonsi_dri.so] (36 samples, 0.11%)</title><rect x="99.7897%" y="7925" width="0.1097%" height="15" fill="rgb(230,197,35)" fg:x="32739" fg:w="36"/><text x="100.0397%" y="7935.50"></text></g><g><title>miniquad::native::linux_x11::glx_main_loop (32,697 samples, 99.66%)</title><rect x="0.2408%" y="8117" width="99.6617%" height="15" fill="rgb(246,193,31)" fg:x="79" fg:w="32697"/><text x="0.4908%" y="8127.50">miniquad::native::linux_x11::glx_main_loop</text></g><g><title>miniquad::native::linux_x11::glx::Glx::init (54 samples, 0.16%)</title><rect x="99.7379%" y="8101" width="0.1646%" height="15" fill="rgb(241,36,4)" fg:x="32722" fg:w="54"/><text x="99.9879%" y="8111.50"></text></g><g><title>[unknown] (32,716 samples, 99.72%)</title><rect x="0.1859%" y="8197" width="99.7196%" height="15" fill="rgb(241,130,17)" fg:x="61" fg:w="32716"/><text x="0.4359%" y="8207.50">[unknown]</text></g><g><title>tetrs::main (32,698 samples, 99.66%)</title><rect x="0.2408%" y="8181" width="99.6647%" height="15" fill="rgb(206,137,32)" fg:x="79" fg:w="32698"/><text x="0.4908%" y="8191.50">tetrs::main</text></g><g><title>macroquad::Window::from_config (32,698 samples, 99.66%)</title><rect x="0.2408%" y="8165" width="99.6647%" height="15" fill="rgb(237,228,51)" fg:x="79" fg:w="32698"/><text x="0.4908%" y="8175.50">macroquad::Window::from_config</text></g><g><title>miniquad::start (32,698 samples, 99.66%)</title><rect x="0.2408%" y="8149" width="99.6647%" height="15" fill="rgb(243,6,42)" fg:x="79" fg:w="32698"/><text x="0.4908%" y="8159.50">miniquad::start</text></g><g><title>miniquad::native::linux_x11::run (32,698 samples, 99.66%)</title><rect x="0.2408%" y="8133" width="99.6647%" height="15" fill="rgb(251,74,28)" fg:x="79" fg:w="32698"/><text x="0.4908%" y="8143.50">miniquad::native::linux_x11::run</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (10 samples, 0.03%)</title><rect x="99.9086%" y="245" width="0.0305%" height="15" fill="rgb(218,20,49)" fg:x="32778" fg:w="10"/><text x="100.1586%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.03%)</title><rect x="99.9086%" y="229" width="0.0305%" height="15" fill="rgb(238,28,14)" fg:x="32778" fg:w="10"/><text x="100.1586%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u16&gt;]&gt; (10 samples, 0.03%)</title><rect x="99.9086%" y="213" width="0.0305%" height="15" fill="rgb(229,40,46)" fg:x="32778" fg:w="10"/><text x="100.1586%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u16&gt;&gt; (10 samples, 0.03%)</title><rect x="99.9086%" y="197" width="0.0305%" height="15" fill="rgb(244,195,20)" fg:x="32778" fg:w="10"/><text x="100.1586%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u16&gt;&gt; (10 samples, 0.03%)</title><rect x="99.9086%" y="181" width="0.0305%" height="15" fill="rgb(253,56,35)" fg:x="32778" fg:w="10"/><text x="100.1586%" y="191.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.03%)</title><rect x="99.9086%" y="165" width="0.0305%" height="15" fill="rgb(210,149,44)" fg:x="32778" fg:w="10"/><text x="100.1586%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10 samples, 0.03%)</title><rect x="99.9086%" y="149" width="0.0305%" height="15" fill="rgb(240,135,12)" fg:x="32778" fg:w="10"/><text x="100.1586%" y="159.50"></text></g><g><title>alloc::alloc::dealloc (10 samples, 0.03%)</title><rect x="99.9086%" y="133" width="0.0305%" height="15" fill="rgb(251,24,50)" fg:x="32778" fg:w="10"/><text x="100.1586%" y="143.50"></text></g><g><title>cfree (10 samples, 0.03%)</title><rect x="99.9086%" y="117" width="0.0305%" height="15" fill="rgb(243,200,47)" fg:x="32778" fg:w="10"/><text x="100.1586%" y="127.50"></text></g><g><title>[libc.so.6] (10 samples, 0.03%)</title><rect x="99.9086%" y="101" width="0.0305%" height="15" fill="rgb(224,166,26)" fg:x="32778" fg:w="10"/><text x="100.1586%" y="111.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (5 samples, 0.02%)</title><rect x="99.9390%" y="181" width="0.0152%" height="15" fill="rgb(233,0,47)" fg:x="32788" fg:w="5"/><text x="100.1890%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="99.9390%" y="165" width="0.0152%" height="15" fill="rgb(253,80,5)" fg:x="32788" fg:w="5"/><text x="100.1890%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u16&gt;]&gt; (5 samples, 0.02%)</title><rect x="99.9390%" y="149" width="0.0152%" height="15" fill="rgb(214,133,25)" fg:x="32788" fg:w="5"/><text x="100.1890%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u16&gt;&gt; (5 samples, 0.02%)</title><rect x="99.9390%" y="133" width="0.0152%" height="15" fill="rgb(209,27,14)" fg:x="32788" fg:w="5"/><text x="100.1890%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u16&gt;&gt; (5 samples, 0.02%)</title><rect x="99.9390%" y="117" width="0.0152%" height="15" fill="rgb(219,102,51)" fg:x="32788" fg:w="5"/><text x="100.1890%" y="127.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="99.9390%" y="101" width="0.0152%" height="15" fill="rgb(237,18,16)" fg:x="32788" fg:w="5"/><text x="100.1890%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.02%)</title><rect x="99.9390%" y="85" width="0.0152%" height="15" fill="rgb(241,85,17)" fg:x="32788" fg:w="5"/><text x="100.1890%" y="95.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.02%)</title><rect x="99.9390%" y="69" width="0.0152%" height="15" fill="rgb(236,90,42)" fg:x="32788" fg:w="5"/><text x="100.1890%" y="79.50"></text></g><g><title>cfree (5 samples, 0.02%)</title><rect x="99.9390%" y="53" width="0.0152%" height="15" fill="rgb(249,57,21)" fg:x="32788" fg:w="5"/><text x="100.1890%" y="63.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="99.9573%" y="101" width="0.0152%" height="15" fill="rgb(243,12,36)" fg:x="32794" fg:w="5"/><text x="100.2073%" y="111.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u16&gt;]&gt; (5 samples, 0.02%)</title><rect x="99.9573%" y="85" width="0.0152%" height="15" fill="rgb(253,128,47)" fg:x="32794" fg:w="5"/><text x="100.2073%" y="95.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u16&gt;&gt; (5 samples, 0.02%)</title><rect x="99.9573%" y="69" width="0.0152%" height="15" fill="rgb(207,33,20)" fg:x="32794" fg:w="5"/><text x="100.2073%" y="79.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u16&gt;&gt; (5 samples, 0.02%)</title><rect x="99.9573%" y="53" width="0.0152%" height="15" fill="rgb(233,215,35)" fg:x="32794" fg:w="5"/><text x="100.2073%" y="63.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="99.9573%" y="37" width="0.0152%" height="15" fill="rgb(249,188,52)" fg:x="32794" fg:w="5"/><text x="100.2073%" y="47.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (6 samples, 0.02%)</title><rect x="99.9573%" y="117" width="0.0183%" height="15" fill="rgb(225,12,32)" fg:x="32794" fg:w="6"/><text x="100.2073%" y="127.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="8197" width="0.0823%" height="15" fill="rgb(247,98,14)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="8207.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="8181" width="0.0823%" height="15" fill="rgb(247,219,48)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="8191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="8165" width="0.0823%" height="15" fill="rgb(253,60,48)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="8175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="8149" width="0.0823%" height="15" fill="rgb(245,15,52)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="8159.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="8133" width="0.0823%" height="15" fill="rgb(220,133,28)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="8143.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="8117" width="0.0823%" height="15" fill="rgb(217,180,4)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="8127.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="8101" width="0.0823%" height="15" fill="rgb(251,24,1)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="8111.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="8085" width="0.0823%" height="15" fill="rgb(212,185,49)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="8095.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="8069" width="0.0823%" height="15" fill="rgb(215,175,22)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="8079.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="8053" width="0.0823%" height="15" fill="rgb(250,205,14)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="8063.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="8037" width="0.0823%" height="15" fill="rgb(225,211,22)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="8047.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="8021" width="0.0823%" height="15" fill="rgb(251,179,42)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="8031.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="8005" width="0.0823%" height="15" fill="rgb(208,216,51)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="8015.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="7989" width="0.0823%" height="15" fill="rgb(235,36,11)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="7999.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="7973" width="0.0823%" height="15" fill="rgb(213,189,28)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="7983.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="7957" width="0.0823%" height="15" fill="rgb(227,203,42)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="7967.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="7941" width="0.0823%" height="15" fill="rgb(244,72,36)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="7951.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="7925" width="0.0823%" height="15" fill="rgb(213,53,17)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="7935.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="7909" width="0.0823%" height="15" fill="rgb(207,167,3)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="7919.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="7893" width="0.0823%" height="15" fill="rgb(216,98,30)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="7903.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="7877" width="0.0823%" height="15" fill="rgb(236,123,15)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="7887.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="7861" width="0.0823%" height="15" fill="rgb(248,81,50)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="7871.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="7845" width="0.0823%" height="15" fill="rgb(214,120,4)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="7855.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="7829" width="0.0823%" height="15" fill="rgb(208,179,34)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="7839.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="7813" width="0.0823%" height="15" fill="rgb(227,140,7)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="7823.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="7797" width="0.0823%" height="15" fill="rgb(214,22,6)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="7807.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="7781" width="0.0823%" height="15" fill="rgb(207,137,27)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="7791.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="7765" width="0.0823%" height="15" fill="rgb(210,8,46)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="7775.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="7749" width="0.0823%" height="15" fill="rgb(240,16,54)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="7759.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="7733" width="0.0823%" height="15" fill="rgb(211,209,29)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="7743.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="7717" width="0.0823%" height="15" fill="rgb(226,228,24)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="7727.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="7701" width="0.0823%" height="15" fill="rgb(222,84,9)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="7711.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="7685" width="0.0823%" height="15" fill="rgb(234,203,30)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="7695.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="7669" width="0.0823%" height="15" fill="rgb(238,109,14)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="7679.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="7653" width="0.0823%" height="15" fill="rgb(233,206,34)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="7663.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="7637" width="0.0823%" height="15" fill="rgb(220,167,47)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="7647.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="7621" width="0.0823%" height="15" fill="rgb(238,105,10)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="7631.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="7605" width="0.0823%" height="15" fill="rgb(213,227,17)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="7615.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="7589" width="0.0823%" height="15" fill="rgb(217,132,38)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="7599.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="7573" width="0.0823%" height="15" fill="rgb(242,146,4)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="7583.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="7557" width="0.0823%" height="15" fill="rgb(212,61,9)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="7567.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="7541" width="0.0823%" height="15" fill="rgb(247,126,22)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="7551.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="7525" width="0.0823%" height="15" fill="rgb(220,196,2)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="7535.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="7509" width="0.0823%" height="15" fill="rgb(208,46,4)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="7519.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="7493" width="0.0823%" height="15" fill="rgb(252,104,46)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="7503.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="7477" width="0.0823%" height="15" fill="rgb(237,152,48)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="7487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="7461" width="0.0823%" height="15" fill="rgb(221,59,37)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="7471.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="7445" width="0.0823%" height="15" fill="rgb(209,202,51)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="7455.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="7429" width="0.0823%" height="15" fill="rgb(228,81,30)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="7439.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="7413" width="0.0823%" height="15" fill="rgb(227,42,39)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="7423.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="7397" width="0.0823%" height="15" fill="rgb(221,26,2)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="7407.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="7381" width="0.0823%" height="15" fill="rgb(254,61,31)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="7391.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="7365" width="0.0823%" height="15" fill="rgb(222,173,38)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="7375.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="7349" width="0.0823%" height="15" fill="rgb(218,50,12)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="7359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="7333" width="0.0823%" height="15" fill="rgb(223,88,40)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="7343.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="7317" width="0.0823%" height="15" fill="rgb(237,54,19)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="7327.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="7301" width="0.0823%" height="15" fill="rgb(251,129,25)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="7311.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="7285" width="0.0823%" height="15" fill="rgb(238,97,19)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="7295.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="7269" width="0.0823%" height="15" fill="rgb(240,169,18)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="7279.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="7253" width="0.0823%" height="15" fill="rgb(230,187,49)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="7263.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="7237" width="0.0823%" height="15" fill="rgb(209,44,26)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="7247.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="7221" width="0.0823%" height="15" fill="rgb(244,0,6)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="7231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="7205" width="0.0823%" height="15" fill="rgb(248,18,21)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="7215.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="7189" width="0.0823%" height="15" fill="rgb(245,180,19)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="7199.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="7173" width="0.0823%" height="15" fill="rgb(252,118,36)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="7183.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="7157" width="0.0823%" height="15" fill="rgb(210,224,19)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="7167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="7141" width="0.0823%" height="15" fill="rgb(218,30,24)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="7151.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="7125" width="0.0823%" height="15" fill="rgb(219,75,50)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="7135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="7109" width="0.0823%" height="15" fill="rgb(234,72,50)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="7119.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="7093" width="0.0823%" height="15" fill="rgb(219,100,48)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="7103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="7077" width="0.0823%" height="15" fill="rgb(253,5,41)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="7087.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="7061" width="0.0823%" height="15" fill="rgb(247,181,11)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="7071.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="7045" width="0.0823%" height="15" fill="rgb(222,223,25)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="7055.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="7029" width="0.0823%" height="15" fill="rgb(214,198,28)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="7039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="7013" width="0.0823%" height="15" fill="rgb(230,46,43)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="7023.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="6997" width="0.0823%" height="15" fill="rgb(233,65,53)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="7007.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="6981" width="0.0823%" height="15" fill="rgb(221,121,27)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="6991.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="6965" width="0.0823%" height="15" fill="rgb(247,70,47)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="6975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="6949" width="0.0823%" height="15" fill="rgb(228,85,35)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="6959.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="6933" width="0.0823%" height="15" fill="rgb(209,50,18)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="6943.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="6917" width="0.0823%" height="15" fill="rgb(250,19,35)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="6927.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="6901" width="0.0823%" height="15" fill="rgb(253,107,29)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="6911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="6885" width="0.0823%" height="15" fill="rgb(252,179,29)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="6895.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="6869" width="0.0823%" height="15" fill="rgb(238,194,6)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="6879.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="6853" width="0.0823%" height="15" fill="rgb(238,164,29)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="6863.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="6837" width="0.0823%" height="15" fill="rgb(224,25,9)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="6847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="6821" width="0.0823%" height="15" fill="rgb(244,153,23)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="6831.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="6805" width="0.0823%" height="15" fill="rgb(212,203,14)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="6815.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="6789" width="0.0823%" height="15" fill="rgb(220,164,20)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="6799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="6773" width="0.0823%" height="15" fill="rgb(222,203,48)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="6783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="6757" width="0.0823%" height="15" fill="rgb(215,159,22)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="6767.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="6741" width="0.0823%" height="15" fill="rgb(216,183,47)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="6751.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="6725" width="0.0823%" height="15" fill="rgb(229,195,25)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="6735.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="6709" width="0.0823%" height="15" fill="rgb(224,132,51)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="6719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="6693" width="0.0823%" height="15" fill="rgb(240,63,7)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="6703.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="6677" width="0.0823%" height="15" fill="rgb(249,182,41)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="6687.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="6661" width="0.0823%" height="15" fill="rgb(243,47,26)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="6671.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="6645" width="0.0823%" height="15" fill="rgb(233,48,2)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="6655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="6629" width="0.0823%" height="15" fill="rgb(244,165,34)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="6639.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="6613" width="0.0823%" height="15" fill="rgb(207,89,7)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="6623.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="6597" width="0.0823%" height="15" fill="rgb(244,117,36)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="6607.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="6581" width="0.0823%" height="15" fill="rgb(226,144,34)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="6591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="6565" width="0.0823%" height="15" fill="rgb(213,23,19)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="6575.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="6549" width="0.0823%" height="15" fill="rgb(217,75,12)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="6559.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="6533" width="0.0823%" height="15" fill="rgb(224,159,17)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="6543.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="6517" width="0.0823%" height="15" fill="rgb(217,118,1)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="6527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="6501" width="0.0823%" height="15" fill="rgb(232,180,48)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="6511.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="6485" width="0.0823%" height="15" fill="rgb(230,27,33)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="6495.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="6469" width="0.0823%" height="15" fill="rgb(205,31,21)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="6479.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="6453" width="0.0823%" height="15" fill="rgb(253,59,4)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="6463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="6437" width="0.0823%" height="15" fill="rgb(224,201,9)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="6447.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="6421" width="0.0823%" height="15" fill="rgb(229,206,30)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="6431.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="6405" width="0.0823%" height="15" fill="rgb(212,67,47)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="6415.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="6389" width="0.0823%" height="15" fill="rgb(211,96,50)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="6399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="6373" width="0.0823%" height="15" fill="rgb(252,114,18)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="6383.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="6357" width="0.0823%" height="15" fill="rgb(223,58,37)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="6367.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="6341" width="0.0823%" height="15" fill="rgb(237,70,4)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="6351.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="6325" width="0.0823%" height="15" fill="rgb(244,85,46)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="6335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="6309" width="0.0823%" height="15" fill="rgb(223,39,52)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="6319.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="6293" width="0.0823%" height="15" fill="rgb(218,200,14)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="6303.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="6277" width="0.0823%" height="15" fill="rgb(208,171,16)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="6287.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="6261" width="0.0823%" height="15" fill="rgb(234,200,18)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="6271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="6245" width="0.0823%" height="15" fill="rgb(228,45,11)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="6255.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="6229" width="0.0823%" height="15" fill="rgb(237,182,11)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="6239.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="6213" width="0.0823%" height="15" fill="rgb(241,175,49)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="6223.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="6197" width="0.0823%" height="15" fill="rgb(247,38,35)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="6207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="6181" width="0.0823%" height="15" fill="rgb(228,39,49)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="6191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="6165" width="0.0823%" height="15" fill="rgb(226,101,26)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="6175.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="6149" width="0.0823%" height="15" fill="rgb(206,141,19)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="6159.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="6133" width="0.0823%" height="15" fill="rgb(211,200,13)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="6143.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="6117" width="0.0823%" height="15" fill="rgb(241,121,6)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="6127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="6101" width="0.0823%" height="15" fill="rgb(234,221,29)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="6111.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="6085" width="0.0823%" height="15" fill="rgb(229,136,5)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="6095.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="6069" width="0.0823%" height="15" fill="rgb(238,36,11)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="6079.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="6053" width="0.0823%" height="15" fill="rgb(251,55,41)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="6063.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="6037" width="0.0823%" height="15" fill="rgb(242,34,40)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="6047.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="6021" width="0.0823%" height="15" fill="rgb(215,42,17)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="6031.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="6005" width="0.0823%" height="15" fill="rgb(207,44,46)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="6015.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="5989" width="0.0823%" height="15" fill="rgb(211,206,28)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="5999.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="5973" width="0.0823%" height="15" fill="rgb(237,167,16)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="5983.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="5957" width="0.0823%" height="15" fill="rgb(233,66,6)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="5967.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="5941" width="0.0823%" height="15" fill="rgb(246,123,29)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="5951.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="5925" width="0.0823%" height="15" fill="rgb(209,62,40)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="5935.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="5909" width="0.0823%" height="15" fill="rgb(218,4,25)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="5919.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="5893" width="0.0823%" height="15" fill="rgb(253,91,49)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="5903.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="5877" width="0.0823%" height="15" fill="rgb(228,155,29)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="5887.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="5861" width="0.0823%" height="15" fill="rgb(243,57,37)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="5871.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="5845" width="0.0823%" height="15" fill="rgb(244,167,17)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="5855.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="5829" width="0.0823%" height="15" fill="rgb(207,181,38)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="5839.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="5813" width="0.0823%" height="15" fill="rgb(211,8,23)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="5823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="5797" width="0.0823%" height="15" fill="rgb(235,11,44)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="5807.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="5781" width="0.0823%" height="15" fill="rgb(248,18,52)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="5791.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="5765" width="0.0823%" height="15" fill="rgb(208,4,7)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="5775.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="5749" width="0.0823%" height="15" fill="rgb(240,17,39)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="5759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="5733" width="0.0823%" height="15" fill="rgb(207,170,3)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="5743.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="5717" width="0.0823%" height="15" fill="rgb(236,100,52)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="5727.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="5701" width="0.0823%" height="15" fill="rgb(246,78,51)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="5711.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="5685" width="0.0823%" height="15" fill="rgb(211,17,15)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="5695.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="5669" width="0.0823%" height="15" fill="rgb(209,59,46)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="5679.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="5653" width="0.0823%" height="15" fill="rgb(210,92,25)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="5663.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="5637" width="0.0823%" height="15" fill="rgb(238,174,52)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="5647.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="5621" width="0.0823%" height="15" fill="rgb(230,73,7)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="5631.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="5605" width="0.0823%" height="15" fill="rgb(243,124,40)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="5615.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="5589" width="0.0823%" height="15" fill="rgb(244,170,11)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="5599.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="5573" width="0.0823%" height="15" fill="rgb(207,114,54)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="5583.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="5557" width="0.0823%" height="15" fill="rgb(205,42,20)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="5567.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="5541" width="0.0823%" height="15" fill="rgb(230,30,28)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="5551.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="5525" width="0.0823%" height="15" fill="rgb(205,73,54)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="5535.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="5509" width="0.0823%" height="15" fill="rgb(254,227,23)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="5519.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="5493" width="0.0823%" height="15" fill="rgb(228,202,34)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="5503.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="5477" width="0.0823%" height="15" fill="rgb(222,225,37)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="5487.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="5461" width="0.0823%" height="15" fill="rgb(221,14,54)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="5471.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="5445" width="0.0823%" height="15" fill="rgb(254,102,2)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="5455.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="5429" width="0.0823%" height="15" fill="rgb(232,104,17)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="5439.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="5413" width="0.0823%" height="15" fill="rgb(250,220,14)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="5423.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="5397" width="0.0823%" height="15" fill="rgb(241,158,9)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="5407.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="5381" width="0.0823%" height="15" fill="rgb(246,9,43)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="5391.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="5365" width="0.0823%" height="15" fill="rgb(206,73,33)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="5375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="5349" width="0.0823%" height="15" fill="rgb(222,79,8)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="5359.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="5333" width="0.0823%" height="15" fill="rgb(234,8,54)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="5343.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="5317" width="0.0823%" height="15" fill="rgb(209,134,38)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="5327.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="5301" width="0.0823%" height="15" fill="rgb(230,127,29)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="5311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="5285" width="0.0823%" height="15" fill="rgb(242,44,41)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="5295.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="5269" width="0.0823%" height="15" fill="rgb(222,56,43)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="5279.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="5253" width="0.0823%" height="15" fill="rgb(238,39,47)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="5263.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="5237" width="0.0823%" height="15" fill="rgb(226,79,43)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="5247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="5221" width="0.0823%" height="15" fill="rgb(242,105,53)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="5231.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="5205" width="0.0823%" height="15" fill="rgb(251,132,46)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="5215.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="5189" width="0.0823%" height="15" fill="rgb(231,77,14)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="5199.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="5173" width="0.0823%" height="15" fill="rgb(240,135,9)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="5183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="5157" width="0.0823%" height="15" fill="rgb(248,109,14)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="5167.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="5141" width="0.0823%" height="15" fill="rgb(227,146,52)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="5151.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="5125" width="0.0823%" height="15" fill="rgb(232,54,3)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="5135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="5109" width="0.0823%" height="15" fill="rgb(229,201,43)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="5119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="5093" width="0.0823%" height="15" fill="rgb(252,161,33)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="5103.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="5077" width="0.0823%" height="15" fill="rgb(226,146,40)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="5087.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="5061" width="0.0823%" height="15" fill="rgb(219,47,25)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="5071.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="5045" width="0.0823%" height="15" fill="rgb(250,135,13)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="5055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="5029" width="0.0823%" height="15" fill="rgb(219,229,18)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="5039.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="5013" width="0.0823%" height="15" fill="rgb(217,152,27)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="5023.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="4997" width="0.0823%" height="15" fill="rgb(225,71,47)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="5007.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="4981" width="0.0823%" height="15" fill="rgb(220,139,14)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="4991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="4965" width="0.0823%" height="15" fill="rgb(247,54,32)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="4975.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="4949" width="0.0823%" height="15" fill="rgb(252,131,39)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="4959.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="4933" width="0.0823%" height="15" fill="rgb(210,108,39)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="4943.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="4917" width="0.0823%" height="15" fill="rgb(205,23,29)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="4927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="4901" width="0.0823%" height="15" fill="rgb(246,139,46)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="4911.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="4885" width="0.0823%" height="15" fill="rgb(250,81,26)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="4895.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="4869" width="0.0823%" height="15" fill="rgb(214,104,7)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="4879.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="4853" width="0.0823%" height="15" fill="rgb(233,189,8)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="4863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="4837" width="0.0823%" height="15" fill="rgb(228,141,17)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="4847.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="4821" width="0.0823%" height="15" fill="rgb(247,157,1)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="4831.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="4805" width="0.0823%" height="15" fill="rgb(249,225,5)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="4815.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="4789" width="0.0823%" height="15" fill="rgb(242,55,13)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="4799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="4773" width="0.0823%" height="15" fill="rgb(230,49,50)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="4783.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="4757" width="0.0823%" height="15" fill="rgb(241,111,38)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="4767.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="4741" width="0.0823%" height="15" fill="rgb(252,155,4)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="4751.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="4725" width="0.0823%" height="15" fill="rgb(212,69,32)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="4735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="4709" width="0.0823%" height="15" fill="rgb(243,107,47)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="4719.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="4693" width="0.0823%" height="15" fill="rgb(247,130,12)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="4703.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="4677" width="0.0823%" height="15" fill="rgb(233,74,16)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="4687.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="4661" width="0.0823%" height="15" fill="rgb(208,58,18)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="4671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="4645" width="0.0823%" height="15" fill="rgb(242,225,1)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="4655.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="4629" width="0.0823%" height="15" fill="rgb(249,39,40)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="4639.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="4613" width="0.0823%" height="15" fill="rgb(207,72,44)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="4623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="4597" width="0.0823%" height="15" fill="rgb(215,193,12)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="4607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="4581" width="0.0823%" height="15" fill="rgb(248,41,39)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="4591.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="4565" width="0.0823%" height="15" fill="rgb(253,85,4)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="4575.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="4549" width="0.0823%" height="15" fill="rgb(243,70,31)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="4559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="4533" width="0.0823%" height="15" fill="rgb(253,195,26)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="4543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="4517" width="0.0823%" height="15" fill="rgb(243,42,11)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="4527.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="4501" width="0.0823%" height="15" fill="rgb(239,66,17)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="4511.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="4485" width="0.0823%" height="15" fill="rgb(217,132,21)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="4495.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="4469" width="0.0823%" height="15" fill="rgb(252,202,21)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="4479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="4453" width="0.0823%" height="15" fill="rgb(233,98,36)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="4463.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="4437" width="0.0823%" height="15" fill="rgb(216,153,54)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="4447.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="4421" width="0.0823%" height="15" fill="rgb(250,99,7)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="4431.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="4405" width="0.0823%" height="15" fill="rgb(207,56,50)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="4415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="4389" width="0.0823%" height="15" fill="rgb(244,61,34)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="4399.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="4373" width="0.0823%" height="15" fill="rgb(241,50,38)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="4383.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="4357" width="0.0823%" height="15" fill="rgb(212,166,30)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="4367.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="4341" width="0.0823%" height="15" fill="rgb(249,127,32)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="4351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="4325" width="0.0823%" height="15" fill="rgb(209,103,0)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="4335.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="4309" width="0.0823%" height="15" fill="rgb(238,209,51)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="4319.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="4293" width="0.0823%" height="15" fill="rgb(237,56,23)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="4303.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="4277" width="0.0823%" height="15" fill="rgb(215,153,46)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="4287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="4261" width="0.0823%" height="15" fill="rgb(224,49,31)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="4271.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="4245" width="0.0823%" height="15" fill="rgb(250,18,42)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="4255.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="4229" width="0.0823%" height="15" fill="rgb(215,176,39)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="4239.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="4213" width="0.0823%" height="15" fill="rgb(223,77,29)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="4223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="4197" width="0.0823%" height="15" fill="rgb(234,94,52)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="4207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="4181" width="0.0823%" height="15" fill="rgb(220,154,50)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="4191.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="4165" width="0.0823%" height="15" fill="rgb(212,11,10)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="4175.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="4149" width="0.0823%" height="15" fill="rgb(205,166,19)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="4159.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="4133" width="0.0823%" height="15" fill="rgb(244,198,16)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="4143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="4117" width="0.0823%" height="15" fill="rgb(219,69,12)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="4127.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="4101" width="0.0823%" height="15" fill="rgb(245,30,7)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="4111.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="4085" width="0.0823%" height="15" fill="rgb(218,221,48)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="4095.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="4069" width="0.0823%" height="15" fill="rgb(216,66,15)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="4079.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="4053" width="0.0823%" height="15" fill="rgb(226,122,50)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="4063.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="4037" width="0.0823%" height="15" fill="rgb(239,156,16)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="4047.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="4021" width="0.0823%" height="15" fill="rgb(224,27,38)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="4031.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="4005" width="0.0823%" height="15" fill="rgb(224,39,27)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="4015.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="3989" width="0.0823%" height="15" fill="rgb(215,92,29)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="3999.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="3973" width="0.0823%" height="15" fill="rgb(207,159,16)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="3983.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="3957" width="0.0823%" height="15" fill="rgb(238,163,47)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="3967.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="3941" width="0.0823%" height="15" fill="rgb(219,91,49)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="3951.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="3925" width="0.0823%" height="15" fill="rgb(227,167,31)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="3935.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="3909" width="0.0823%" height="15" fill="rgb(234,80,54)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="3919.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="3893" width="0.0823%" height="15" fill="rgb(212,114,2)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="3903.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="3877" width="0.0823%" height="15" fill="rgb(234,50,24)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="3887.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="3861" width="0.0823%" height="15" fill="rgb(221,68,8)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="3871.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="3845" width="0.0823%" height="15" fill="rgb(254,180,31)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="3855.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="3829" width="0.0823%" height="15" fill="rgb(247,130,50)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="3839.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="3813" width="0.0823%" height="15" fill="rgb(211,109,4)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="3823.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="3797" width="0.0823%" height="15" fill="rgb(238,50,21)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="3807.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="3781" width="0.0823%" height="15" fill="rgb(225,57,45)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="3791.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="3765" width="0.0823%" height="15" fill="rgb(209,196,50)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="3775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="3749" width="0.0823%" height="15" fill="rgb(242,140,13)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="3759.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="3733" width="0.0823%" height="15" fill="rgb(217,111,7)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="3743.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="3717" width="0.0823%" height="15" fill="rgb(253,193,51)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="3727.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="3701" width="0.0823%" height="15" fill="rgb(252,70,29)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="3711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="3685" width="0.0823%" height="15" fill="rgb(232,127,12)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="3695.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="3669" width="0.0823%" height="15" fill="rgb(211,180,21)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="3679.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="3653" width="0.0823%" height="15" fill="rgb(229,72,13)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="3663.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="3637" width="0.0823%" height="15" fill="rgb(240,211,49)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="3647.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="3621" width="0.0823%" height="15" fill="rgb(219,149,40)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="3631.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="3605" width="0.0823%" height="15" fill="rgb(210,127,46)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="3615.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="3589" width="0.0823%" height="15" fill="rgb(220,106,7)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="3599.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="3573" width="0.0823%" height="15" fill="rgb(249,31,22)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="3583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="3557" width="0.0823%" height="15" fill="rgb(253,1,49)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="3567.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="3541" width="0.0823%" height="15" fill="rgb(227,144,33)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="3551.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="3525" width="0.0823%" height="15" fill="rgb(249,163,44)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="3535.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="3509" width="0.0823%" height="15" fill="rgb(234,15,39)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="3519.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="3493" width="0.0823%" height="15" fill="rgb(207,66,16)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="3503.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="3477" width="0.0823%" height="15" fill="rgb(233,112,24)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="3487.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="3461" width="0.0823%" height="15" fill="rgb(230,90,22)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="3471.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="3445" width="0.0823%" height="15" fill="rgb(229,61,13)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="3455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="3429" width="0.0823%" height="15" fill="rgb(225,57,24)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="3439.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="3413" width="0.0823%" height="15" fill="rgb(208,169,48)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="3423.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="3397" width="0.0823%" height="15" fill="rgb(244,218,51)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="3407.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="3381" width="0.0823%" height="15" fill="rgb(214,148,10)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="3391.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="3365" width="0.0823%" height="15" fill="rgb(225,174,27)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="3375.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="3349" width="0.0823%" height="15" fill="rgb(230,96,26)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="3359.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="3333" width="0.0823%" height="15" fill="rgb(232,10,30)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="3343.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="3317" width="0.0823%" height="15" fill="rgb(222,8,50)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="3327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="3301" width="0.0823%" height="15" fill="rgb(213,81,27)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="3311.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="3285" width="0.0823%" height="15" fill="rgb(245,50,10)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="3295.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="3269" width="0.0823%" height="15" fill="rgb(216,100,18)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="3279.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="3253" width="0.0823%" height="15" fill="rgb(236,147,54)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="3263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="3237" width="0.0823%" height="15" fill="rgb(205,143,26)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="3247.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="3221" width="0.0823%" height="15" fill="rgb(236,26,9)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="3231.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="3205" width="0.0823%" height="15" fill="rgb(221,165,53)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="3215.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="3189" width="0.0823%" height="15" fill="rgb(214,110,17)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="3199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="3173" width="0.0823%" height="15" fill="rgb(237,197,12)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="3183.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="3157" width="0.0823%" height="15" fill="rgb(205,84,17)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="3167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="3141" width="0.0823%" height="15" fill="rgb(237,18,45)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="3151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="3125" width="0.0823%" height="15" fill="rgb(221,87,14)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="3135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="3109" width="0.0823%" height="15" fill="rgb(238,186,15)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="3119.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="3093" width="0.0823%" height="15" fill="rgb(208,115,11)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="3103.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="3077" width="0.0823%" height="15" fill="rgb(254,175,0)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="3087.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="3061" width="0.0823%" height="15" fill="rgb(227,24,42)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="3071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="3045" width="0.0823%" height="15" fill="rgb(223,211,37)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="3055.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="3029" width="0.0823%" height="15" fill="rgb(235,49,27)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="3039.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="3013" width="0.0823%" height="15" fill="rgb(254,97,51)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="3023.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="2997" width="0.0823%" height="15" fill="rgb(249,51,40)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="3007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="2981" width="0.0823%" height="15" fill="rgb(210,128,45)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="2991.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="2965" width="0.0823%" height="15" fill="rgb(224,137,50)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="2975.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="2949" width="0.0823%" height="15" fill="rgb(242,15,9)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="2959.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="2933" width="0.0823%" height="15" fill="rgb(233,187,41)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="2943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="2917" width="0.0823%" height="15" fill="rgb(227,2,29)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="2927.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="2901" width="0.0823%" height="15" fill="rgb(222,70,3)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="2911.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="2885" width="0.0823%" height="15" fill="rgb(213,11,42)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="2895.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="2869" width="0.0823%" height="15" fill="rgb(225,150,9)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="2879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="2853" width="0.0823%" height="15" fill="rgb(230,162,45)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="2863.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="2837" width="0.0823%" height="15" fill="rgb(222,14,52)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="2847.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="2821" width="0.0823%" height="15" fill="rgb(254,198,14)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="2831.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="2805" width="0.0823%" height="15" fill="rgb(220,217,30)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="2815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="2789" width="0.0823%" height="15" fill="rgb(215,146,41)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="2799.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="2773" width="0.0823%" height="15" fill="rgb(217,27,36)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="2783.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="2757" width="0.0823%" height="15" fill="rgb(219,218,39)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="2767.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="2741" width="0.0823%" height="15" fill="rgb(219,4,42)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="2751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="2725" width="0.0823%" height="15" fill="rgb(249,119,36)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="2735.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="2709" width="0.0823%" height="15" fill="rgb(209,23,33)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="2719.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="2693" width="0.0823%" height="15" fill="rgb(211,10,0)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="2703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="2677" width="0.0823%" height="15" fill="rgb(208,99,37)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="2687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="2661" width="0.0823%" height="15" fill="rgb(213,132,31)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="2671.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="2645" width="0.0823%" height="15" fill="rgb(243,129,40)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="2655.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="2629" width="0.0823%" height="15" fill="rgb(210,66,33)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="2639.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="2613" width="0.0823%" height="15" fill="rgb(209,189,4)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="2623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="2597" width="0.0823%" height="15" fill="rgb(214,107,37)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="2607.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="2581" width="0.0823%" height="15" fill="rgb(245,88,54)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="2591.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="2565" width="0.0823%" height="15" fill="rgb(205,146,20)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="2575.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="2549" width="0.0823%" height="15" fill="rgb(220,161,25)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="2559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="2533" width="0.0823%" height="15" fill="rgb(215,152,15)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="2543.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="2517" width="0.0823%" height="15" fill="rgb(233,192,44)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="2527.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="2501" width="0.0823%" height="15" fill="rgb(240,170,46)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="2511.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="2485" width="0.0823%" height="15" fill="rgb(207,104,33)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="2495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="2469" width="0.0823%" height="15" fill="rgb(219,21,39)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="2479.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="2453" width="0.0823%" height="15" fill="rgb(214,133,29)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="2463.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="2437" width="0.0823%" height="15" fill="rgb(226,93,6)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="2447.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="2421" width="0.0823%" height="15" fill="rgb(252,222,34)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="2431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="2405" width="0.0823%" height="15" fill="rgb(252,92,48)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="2415.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="2389" width="0.0823%" height="15" fill="rgb(245,223,24)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="2399.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="2373" width="0.0823%" height="15" fill="rgb(205,176,3)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="2383.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="2357" width="0.0823%" height="15" fill="rgb(235,151,15)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="2367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="2341" width="0.0823%" height="15" fill="rgb(237,209,11)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="2351.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="2325" width="0.0823%" height="15" fill="rgb(243,227,24)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="2335.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="2309" width="0.0823%" height="15" fill="rgb(239,193,16)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="2319.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="2293" width="0.0823%" height="15" fill="rgb(231,27,9)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="2303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="2277" width="0.0823%" height="15" fill="rgb(219,169,10)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="2287.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="2261" width="0.0823%" height="15" fill="rgb(244,229,43)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="2271.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="2245" width="0.0823%" height="15" fill="rgb(254,38,20)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="2255.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="2229" width="0.0823%" height="15" fill="rgb(250,47,30)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="2239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="2213" width="0.0823%" height="15" fill="rgb(224,124,36)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="2223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="2197" width="0.0823%" height="15" fill="rgb(246,68,51)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="2207.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="2181" width="0.0823%" height="15" fill="rgb(253,43,49)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="2191.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="2165" width="0.0823%" height="15" fill="rgb(219,54,36)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="2175.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="2149" width="0.0823%" height="15" fill="rgb(227,133,34)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="2159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="2133" width="0.0823%" height="15" fill="rgb(247,227,15)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="2143.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="2117" width="0.0823%" height="15" fill="rgb(229,96,14)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="2127.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="2101" width="0.0823%" height="15" fill="rgb(220,79,17)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="2111.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="2085" width="0.0823%" height="15" fill="rgb(205,131,53)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="2095.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="2069" width="0.0823%" height="15" fill="rgb(209,50,29)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="2079.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="2053" width="0.0823%" height="15" fill="rgb(245,86,46)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="2063.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="2037" width="0.0823%" height="15" fill="rgb(235,66,46)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="2047.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="2021" width="0.0823%" height="15" fill="rgb(232,148,31)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="2031.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="2005" width="0.0823%" height="15" fill="rgb(217,149,8)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="2015.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="1989" width="0.0823%" height="15" fill="rgb(209,183,11)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="1999.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="1973" width="0.0823%" height="15" fill="rgb(208,55,20)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="1957" width="0.0823%" height="15" fill="rgb(218,39,14)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="1967.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="1941" width="0.0823%" height="15" fill="rgb(216,169,33)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="1925" width="0.0823%" height="15" fill="rgb(233,80,24)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="1935.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="1909" width="0.0823%" height="15" fill="rgb(213,179,31)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="1893" width="0.0823%" height="15" fill="rgb(209,19,5)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="1903.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="1877" width="0.0823%" height="15" fill="rgb(219,18,35)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="1861" width="0.0823%" height="15" fill="rgb(209,169,16)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="1845" width="0.0823%" height="15" fill="rgb(245,90,51)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="1829" width="0.0823%" height="15" fill="rgb(220,99,45)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="1839.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="1813" width="0.0823%" height="15" fill="rgb(249,89,25)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="1797" width="0.0823%" height="15" fill="rgb(239,193,0)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="1781" width="0.0823%" height="15" fill="rgb(231,126,1)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="1765" width="0.0823%" height="15" fill="rgb(243,166,3)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="1775.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="1749" width="0.0823%" height="15" fill="rgb(223,22,34)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="1733" width="0.0823%" height="15" fill="rgb(251,52,51)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="1717" width="0.0823%" height="15" fill="rgb(221,165,28)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="1701" width="0.0823%" height="15" fill="rgb(218,121,47)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="1711.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="1685" width="0.0823%" height="15" fill="rgb(209,120,9)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="1669" width="0.0823%" height="15" fill="rgb(236,68,12)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="1653" width="0.0823%" height="15" fill="rgb(225,194,26)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="1637" width="0.0823%" height="15" fill="rgb(231,84,39)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="1647.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="1621" width="0.0823%" height="15" fill="rgb(210,11,45)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="1605" width="0.0823%" height="15" fill="rgb(224,54,52)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="1589" width="0.0823%" height="15" fill="rgb(238,102,14)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="1573" width="0.0823%" height="15" fill="rgb(243,160,52)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="1583.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="1557" width="0.0823%" height="15" fill="rgb(216,114,19)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="1541" width="0.0823%" height="15" fill="rgb(244,166,37)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="1525" width="0.0823%" height="15" fill="rgb(246,29,44)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="1509" width="0.0823%" height="15" fill="rgb(215,56,53)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="1519.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="1493" width="0.0823%" height="15" fill="rgb(217,60,2)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="1477" width="0.0823%" height="15" fill="rgb(207,26,24)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="1461" width="0.0823%" height="15" fill="rgb(252,210,15)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="1445" width="0.0823%" height="15" fill="rgb(253,209,26)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="1455.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="1429" width="0.0823%" height="15" fill="rgb(238,170,14)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="1413" width="0.0823%" height="15" fill="rgb(216,178,15)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="1397" width="0.0823%" height="15" fill="rgb(250,197,2)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="1381" width="0.0823%" height="15" fill="rgb(212,70,42)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="1391.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="1365" width="0.0823%" height="15" fill="rgb(227,213,9)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="1349" width="0.0823%" height="15" fill="rgb(245,99,25)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="1333" width="0.0823%" height="15" fill="rgb(250,82,29)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="1317" width="0.0823%" height="15" fill="rgb(241,226,54)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="1327.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="1301" width="0.0823%" height="15" fill="rgb(221,99,41)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="1285" width="0.0823%" height="15" fill="rgb(213,90,21)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="1269" width="0.0823%" height="15" fill="rgb(205,208,24)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="1253" width="0.0823%" height="15" fill="rgb(246,31,12)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="1263.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="1237" width="0.0823%" height="15" fill="rgb(213,154,6)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="1221" width="0.0823%" height="15" fill="rgb(222,163,29)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="1205" width="0.0823%" height="15" fill="rgb(227,201,8)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="1189" width="0.0823%" height="15" fill="rgb(233,9,32)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="1199.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="1173" width="0.0823%" height="15" fill="rgb(217,54,24)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="1157" width="0.0823%" height="15" fill="rgb(235,192,0)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="1141" width="0.0823%" height="15" fill="rgb(235,45,9)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="1125" width="0.0823%" height="15" fill="rgb(246,42,40)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="1135.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="1109" width="0.0823%" height="15" fill="rgb(248,111,24)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="1093" width="0.0823%" height="15" fill="rgb(249,65,22)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="1077" width="0.0823%" height="15" fill="rgb(238,111,51)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="1061" width="0.0823%" height="15" fill="rgb(250,118,22)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="1071.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="1045" width="0.0823%" height="15" fill="rgb(234,84,26)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="1029" width="0.0823%" height="15" fill="rgb(243,172,12)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="1013" width="0.0823%" height="15" fill="rgb(236,150,49)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="997" width="0.0823%" height="15" fill="rgb(225,197,26)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="1007.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="981" width="0.0823%" height="15" fill="rgb(214,17,42)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="965" width="0.0823%" height="15" fill="rgb(224,165,40)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="949" width="0.0823%" height="15" fill="rgb(246,100,4)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="933" width="0.0823%" height="15" fill="rgb(222,103,0)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="943.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="917" width="0.0823%" height="15" fill="rgb(227,189,26)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="901" width="0.0823%" height="15" fill="rgb(214,202,17)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="885" width="0.0823%" height="15" fill="rgb(229,111,3)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="869" width="0.0823%" height="15" fill="rgb(229,172,15)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="879.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="853" width="0.0823%" height="15" fill="rgb(230,224,35)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="837" width="0.0823%" height="15" fill="rgb(251,141,6)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="821" width="0.0823%" height="15" fill="rgb(225,208,6)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="805" width="0.0823%" height="15" fill="rgb(246,181,16)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="815.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="789" width="0.0823%" height="15" fill="rgb(227,129,36)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="773" width="0.0823%" height="15" fill="rgb(248,117,24)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="757" width="0.0823%" height="15" fill="rgb(214,185,35)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="741" width="0.0823%" height="15" fill="rgb(236,150,34)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="751.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="725" width="0.0823%" height="15" fill="rgb(243,228,27)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="709" width="0.0823%" height="15" fill="rgb(245,77,44)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="693" width="0.0823%" height="15" fill="rgb(235,214,42)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="677" width="0.0823%" height="15" fill="rgb(221,74,3)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="687.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="661" width="0.0823%" height="15" fill="rgb(206,121,29)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="645" width="0.0823%" height="15" fill="rgb(249,131,53)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="629" width="0.0823%" height="15" fill="rgb(236,170,29)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="613" width="0.0823%" height="15" fill="rgb(247,96,15)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="623.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="597" width="0.0823%" height="15" fill="rgb(211,210,7)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="581" width="0.0823%" height="15" fill="rgb(240,88,50)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="565" width="0.0823%" height="15" fill="rgb(209,229,26)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="549" width="0.0823%" height="15" fill="rgb(210,68,23)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="559.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="533" width="0.0823%" height="15" fill="rgb(229,180,13)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="517" width="0.0823%" height="15" fill="rgb(236,53,44)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="501" width="0.0823%" height="15" fill="rgb(244,214,29)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="485" width="0.0823%" height="15" fill="rgb(220,75,29)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="495.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="469" width="0.0823%" height="15" fill="rgb(214,183,37)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="453" width="0.0823%" height="15" fill="rgb(239,117,29)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="437" width="0.0823%" height="15" fill="rgb(237,171,35)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="421" width="0.0823%" height="15" fill="rgb(229,178,53)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="431.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="405" width="0.0823%" height="15" fill="rgb(210,102,19)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="389" width="0.0823%" height="15" fill="rgb(235,127,22)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="373" width="0.0823%" height="15" fill="rgb(244,31,31)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="357" width="0.0823%" height="15" fill="rgb(231,43,21)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="367.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="341" width="0.0823%" height="15" fill="rgb(217,131,35)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="325" width="0.0823%" height="15" fill="rgb(221,149,4)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="309" width="0.0823%" height="15" fill="rgb(232,170,28)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="293" width="0.0823%" height="15" fill="rgb(238,56,10)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="303.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="99.9086%" y="277" width="0.0823%" height="15" fill="rgb(235,196,14)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (27 samples, 0.08%)</title><rect x="99.9086%" y="261" width="0.0823%" height="15" fill="rgb(216,45,48)" fg:x="32778" fg:w="27"/><text x="100.1586%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (17 samples, 0.05%)</title><rect x="99.9390%" y="245" width="0.0518%" height="15" fill="rgb(238,213,17)" fg:x="32788" fg:w="17"/><text x="100.1890%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (17 samples, 0.05%)</title><rect x="99.9390%" y="229" width="0.0518%" height="15" fill="rgb(212,13,2)" fg:x="32788" fg:w="17"/><text x="100.1890%" y="239.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.05%)</title><rect x="99.9390%" y="213" width="0.0518%" height="15" fill="rgb(240,114,20)" fg:x="32788" fg:w="17"/><text x="100.1890%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (17 samples, 0.05%)</title><rect x="99.9390%" y="197" width="0.0518%" height="15" fill="rgb(228,41,40)" fg:x="32788" fg:w="17"/><text x="100.1890%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9543%" y="181" width="0.0366%" height="15" fill="rgb(244,132,35)" fg:x="32793" fg:w="12"/><text x="100.2043%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9543%" y="165" width="0.0366%" height="15" fill="rgb(253,189,4)" fg:x="32793" fg:w="12"/><text x="100.2043%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9543%" y="149" width="0.0366%" height="15" fill="rgb(224,37,19)" fg:x="32793" fg:w="12"/><text x="100.2043%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::State&gt; (11 samples, 0.03%)</title><rect x="99.9573%" y="133" width="0.0335%" height="15" fill="rgb(235,223,18)" fg:x="32794" fg:w="11"/><text x="100.2073%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt;&gt; (5 samples, 0.02%)</title><rect x="99.9756%" y="117" width="0.0152%" height="15" fill="rgb(235,163,25)" fg:x="32800" fg:w="5"/><text x="100.2256%" y="127.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::State&gt;&gt; (5 samples, 0.02%)</title><rect x="99.9756%" y="101" width="0.0152%" height="15" fill="rgb(217,145,28)" fg:x="32800" fg:w="5"/><text x="100.2256%" y="111.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="99.9756%" y="85" width="0.0152%" height="15" fill="rgb(223,223,32)" fg:x="32800" fg:w="5"/><text x="100.2256%" y="95.50"></text></g><g><title>all (32,808 samples, 100%)</title><rect x="0.0000%" y="8229" width="100.0000%" height="15" fill="rgb(227,189,39)" fg:x="0" fg:w="32808"/><text x="0.2500%" y="8239.50"></text></g><g><title>tetrs (32,788 samples, 99.94%)</title><rect x="0.0610%" y="8213" width="99.9390%" height="15" fill="rgb(248,10,22)" fg:x="20" fg:w="32788"/><text x="0.3110%" y="8223.50">tetrs</text></g></svg></svg>