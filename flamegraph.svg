<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="8262" onload="init(evt)" viewBox="0 0 1200 8262" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="8262" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="8245.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="8245.00"> </text><svg id="frames" x="10" width="1180" total_samples="29218"><g><title>[ld-linux-x86-64.so.2] (6 samples, 0.02%)</title><rect x="0.0000%" y="8165" width="0.0205%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="6"/><text x="0.2500%" y="8175.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="0.0068%" y="8149" width="0.0137%" height="15" fill="rgb(217,0,24)" fg:x="2" fg:w="4"/><text x="0.2568%" y="8159.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="0.0068%" y="8133" width="0.0137%" height="15" fill="rgb(221,193,54)" fg:x="2" fg:w="4"/><text x="0.2568%" y="8143.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="0.0068%" y="8117" width="0.0137%" height="15" fill="rgb(248,212,6)" fg:x="2" fg:w="4"/><text x="0.2568%" y="8127.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="0.0068%" y="8101" width="0.0137%" height="15" fill="rgb(208,68,35)" fg:x="2" fg:w="4"/><text x="0.2568%" y="8111.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="0.0068%" y="8085" width="0.0137%" height="15" fill="rgb(232,128,0)" fg:x="2" fg:w="4"/><text x="0.2568%" y="8095.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="0.0068%" y="8069" width="0.0137%" height="15" fill="rgb(207,160,47)" fg:x="2" fg:w="4"/><text x="0.2568%" y="8079.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="0.0068%" y="8053" width="0.0137%" height="15" fill="rgb(228,23,34)" fg:x="2" fg:w="4"/><text x="0.2568%" y="8063.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="0.0068%" y="8037" width="0.0137%" height="15" fill="rgb(218,30,26)" fg:x="2" fg:w="4"/><text x="0.2568%" y="8047.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="0.0103%" y="8021" width="0.0103%" height="15" fill="rgb(220,122,19)" fg:x="3" fg:w="3"/><text x="0.2603%" y="8031.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="0.0103%" y="8005" width="0.0103%" height="15" fill="rgb(250,228,42)" fg:x="3" fg:w="3"/><text x="0.2603%" y="8015.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="0.0103%" y="7989" width="0.0103%" height="15" fill="rgb(240,193,28)" fg:x="3" fg:w="3"/><text x="0.2603%" y="7999.50"></text></g><g><title>[ld-linux-x86-64.so.2] (7 samples, 0.02%)</title><rect x="0.0000%" y="8181" width="0.0240%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="7"/><text x="0.2500%" y="8191.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (4 samples, 0.01%)</title><rect x="0.0376%" y="7893" width="0.0137%" height="15" fill="rgb(206,188,39)" fg:x="11" fg:w="4"/><text x="0.2876%" y="7903.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (4 samples, 0.01%)</title><rect x="0.0376%" y="7877" width="0.0137%" height="15" fill="rgb(217,207,13)" fg:x="11" fg:w="4"/><text x="0.2876%" y="7887.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="0.0376%" y="7861" width="0.0137%" height="15" fill="rgb(231,73,38)" fg:x="11" fg:w="4"/><text x="0.2876%" y="7871.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (4 samples, 0.01%)</title><rect x="0.0376%" y="7845" width="0.0137%" height="15" fill="rgb(225,20,46)" fg:x="11" fg:w="4"/><text x="0.2876%" y="7855.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (4 samples, 0.01%)</title><rect x="0.0376%" y="7829" width="0.0137%" height="15" fill="rgb(210,31,41)" fg:x="11" fg:w="4"/><text x="0.2876%" y="7839.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (4 samples, 0.01%)</title><rect x="0.0376%" y="7813" width="0.0137%" height="15" fill="rgb(221,200,47)" fg:x="11" fg:w="4"/><text x="0.2876%" y="7823.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="0.0376%" y="7797" width="0.0137%" height="15" fill="rgb(226,26,5)" fg:x="11" fg:w="4"/><text x="0.2876%" y="7807.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (4 samples, 0.01%)</title><rect x="0.0376%" y="7781" width="0.0137%" height="15" fill="rgb(249,33,26)" fg:x="11" fg:w="4"/><text x="0.2876%" y="7791.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (4 samples, 0.01%)</title><rect x="0.0376%" y="7765" width="0.0137%" height="15" fill="rgb(235,183,28)" fg:x="11" fg:w="4"/><text x="0.2876%" y="7775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (4 samples, 0.01%)</title><rect x="0.0376%" y="7749" width="0.0137%" height="15" fill="rgb(221,5,38)" fg:x="11" fg:w="4"/><text x="0.2876%" y="7759.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="0.0376%" y="7733" width="0.0137%" height="15" fill="rgb(247,18,42)" fg:x="11" fg:w="4"/><text x="0.2876%" y="7743.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (4 samples, 0.01%)</title><rect x="0.0376%" y="7717" width="0.0137%" height="15" fill="rgb(241,131,45)" fg:x="11" fg:w="4"/><text x="0.2876%" y="7727.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (4 samples, 0.01%)</title><rect x="0.0376%" y="7701" width="0.0137%" height="15" fill="rgb(249,31,29)" fg:x="11" fg:w="4"/><text x="0.2876%" y="7711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (4 samples, 0.01%)</title><rect x="0.0376%" y="7685" width="0.0137%" height="15" fill="rgb(225,111,53)" fg:x="11" fg:w="4"/><text x="0.2876%" y="7695.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="0.0376%" y="7669" width="0.0137%" height="15" fill="rgb(238,160,17)" fg:x="11" fg:w="4"/><text x="0.2876%" y="7679.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (4 samples, 0.01%)</title><rect x="0.0376%" y="7653" width="0.0137%" height="15" fill="rgb(214,148,48)" fg:x="11" fg:w="4"/><text x="0.2876%" y="7663.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (4 samples, 0.01%)</title><rect x="0.0376%" y="7637" width="0.0137%" height="15" fill="rgb(232,36,49)" fg:x="11" fg:w="4"/><text x="0.2876%" y="7647.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (4 samples, 0.01%)</title><rect x="0.0376%" y="7621" width="0.0137%" height="15" fill="rgb(209,103,24)" fg:x="11" fg:w="4"/><text x="0.2876%" y="7631.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="0.0376%" y="7605" width="0.0137%" height="15" fill="rgb(229,88,8)" fg:x="11" fg:w="4"/><text x="0.2876%" y="7615.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (4 samples, 0.01%)</title><rect x="0.0376%" y="7589" width="0.0137%" height="15" fill="rgb(213,181,19)" fg:x="11" fg:w="4"/><text x="0.2876%" y="7599.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (4 samples, 0.01%)</title><rect x="0.0376%" y="7573" width="0.0137%" height="15" fill="rgb(254,191,54)" fg:x="11" fg:w="4"/><text x="0.2876%" y="7583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (4 samples, 0.01%)</title><rect x="0.0376%" y="7557" width="0.0137%" height="15" fill="rgb(241,83,37)" fg:x="11" fg:w="4"/><text x="0.2876%" y="7567.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="0.0376%" y="7541" width="0.0137%" height="15" fill="rgb(233,36,39)" fg:x="11" fg:w="4"/><text x="0.2876%" y="7551.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (4 samples, 0.01%)</title><rect x="0.0376%" y="7525" width="0.0137%" height="15" fill="rgb(226,3,54)" fg:x="11" fg:w="4"/><text x="0.2876%" y="7535.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (4 samples, 0.01%)</title><rect x="0.0376%" y="7509" width="0.0137%" height="15" fill="rgb(245,192,40)" fg:x="11" fg:w="4"/><text x="0.2876%" y="7519.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (4 samples, 0.01%)</title><rect x="0.0376%" y="7493" width="0.0137%" height="15" fill="rgb(238,167,29)" fg:x="11" fg:w="4"/><text x="0.2876%" y="7503.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="0.0376%" y="7477" width="0.0137%" height="15" fill="rgb(232,182,51)" fg:x="11" fg:w="4"/><text x="0.2876%" y="7487.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (4 samples, 0.01%)</title><rect x="0.0376%" y="7461" width="0.0137%" height="15" fill="rgb(231,60,39)" fg:x="11" fg:w="4"/><text x="0.2876%" y="7471.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (4 samples, 0.01%)</title><rect x="0.0376%" y="7445" width="0.0137%" height="15" fill="rgb(208,69,12)" fg:x="11" fg:w="4"/><text x="0.2876%" y="7455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (4 samples, 0.01%)</title><rect x="0.0376%" y="7429" width="0.0137%" height="15" fill="rgb(235,93,37)" fg:x="11" fg:w="4"/><text x="0.2876%" y="7439.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="0.0376%" y="7413" width="0.0137%" height="15" fill="rgb(213,116,39)" fg:x="11" fg:w="4"/><text x="0.2876%" y="7423.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (4 samples, 0.01%)</title><rect x="0.0376%" y="7397" width="0.0137%" height="15" fill="rgb(222,207,29)" fg:x="11" fg:w="4"/><text x="0.2876%" y="7407.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (4 samples, 0.01%)</title><rect x="0.0376%" y="7381" width="0.0137%" height="15" fill="rgb(206,96,30)" fg:x="11" fg:w="4"/><text x="0.2876%" y="7391.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (4 samples, 0.01%)</title><rect x="0.0376%" y="7365" width="0.0137%" height="15" fill="rgb(218,138,4)" fg:x="11" fg:w="4"/><text x="0.2876%" y="7375.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="0.0376%" y="7349" width="0.0137%" height="15" fill="rgb(250,191,14)" fg:x="11" fg:w="4"/><text x="0.2876%" y="7359.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (3 samples, 0.01%)</title><rect x="0.0411%" y="7333" width="0.0103%" height="15" fill="rgb(239,60,40)" fg:x="12" fg:w="3"/><text x="0.2911%" y="7343.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (3 samples, 0.01%)</title><rect x="0.0411%" y="7317" width="0.0103%" height="15" fill="rgb(206,27,48)" fg:x="12" fg:w="3"/><text x="0.2911%" y="7327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (3 samples, 0.01%)</title><rect x="0.0411%" y="7301" width="0.0103%" height="15" fill="rgb(225,35,8)" fg:x="12" fg:w="3"/><text x="0.2911%" y="7311.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="0.0411%" y="7285" width="0.0103%" height="15" fill="rgb(250,213,24)" fg:x="12" fg:w="3"/><text x="0.2911%" y="7295.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (3 samples, 0.01%)</title><rect x="0.0411%" y="7269" width="0.0103%" height="15" fill="rgb(247,123,22)" fg:x="12" fg:w="3"/><text x="0.2911%" y="7279.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (3 samples, 0.01%)</title><rect x="0.0411%" y="7253" width="0.0103%" height="15" fill="rgb(231,138,38)" fg:x="12" fg:w="3"/><text x="0.2911%" y="7263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (3 samples, 0.01%)</title><rect x="0.0411%" y="7237" width="0.0103%" height="15" fill="rgb(231,145,46)" fg:x="12" fg:w="3"/><text x="0.2911%" y="7247.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="0.0411%" y="7221" width="0.0103%" height="15" fill="rgb(251,118,11)" fg:x="12" fg:w="3"/><text x="0.2911%" y="7231.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (3 samples, 0.01%)</title><rect x="0.0411%" y="7205" width="0.0103%" height="15" fill="rgb(217,147,25)" fg:x="12" fg:w="3"/><text x="0.2911%" y="7215.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (3 samples, 0.01%)</title><rect x="0.0411%" y="7189" width="0.0103%" height="15" fill="rgb(247,81,37)" fg:x="12" fg:w="3"/><text x="0.2911%" y="7199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (3 samples, 0.01%)</title><rect x="0.0411%" y="7173" width="0.0103%" height="15" fill="rgb(209,12,38)" fg:x="12" fg:w="3"/><text x="0.2911%" y="7183.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="0.0411%" y="7157" width="0.0103%" height="15" fill="rgb(227,1,9)" fg:x="12" fg:w="3"/><text x="0.2911%" y="7167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (3 samples, 0.01%)</title><rect x="0.0411%" y="7141" width="0.0103%" height="15" fill="rgb(248,47,43)" fg:x="12" fg:w="3"/><text x="0.2911%" y="7151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (3 samples, 0.01%)</title><rect x="0.0411%" y="7125" width="0.0103%" height="15" fill="rgb(221,10,30)" fg:x="12" fg:w="3"/><text x="0.2911%" y="7135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (3 samples, 0.01%)</title><rect x="0.0411%" y="7109" width="0.0103%" height="15" fill="rgb(210,229,1)" fg:x="12" fg:w="3"/><text x="0.2911%" y="7119.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="0.0411%" y="7093" width="0.0103%" height="15" fill="rgb(222,148,37)" fg:x="12" fg:w="3"/><text x="0.2911%" y="7103.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (3 samples, 0.01%)</title><rect x="0.0411%" y="7077" width="0.0103%" height="15" fill="rgb(234,67,33)" fg:x="12" fg:w="3"/><text x="0.2911%" y="7087.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (3 samples, 0.01%)</title><rect x="0.0411%" y="7061" width="0.0103%" height="15" fill="rgb(247,98,35)" fg:x="12" fg:w="3"/><text x="0.2911%" y="7071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (3 samples, 0.01%)</title><rect x="0.0411%" y="7045" width="0.0103%" height="15" fill="rgb(247,138,52)" fg:x="12" fg:w="3"/><text x="0.2911%" y="7055.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="0.0411%" y="7029" width="0.0103%" height="15" fill="rgb(213,79,30)" fg:x="12" fg:w="3"/><text x="0.2911%" y="7039.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (3 samples, 0.01%)</title><rect x="0.0411%" y="7013" width="0.0103%" height="15" fill="rgb(246,177,23)" fg:x="12" fg:w="3"/><text x="0.2911%" y="7023.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (3 samples, 0.01%)</title><rect x="0.0411%" y="6997" width="0.0103%" height="15" fill="rgb(230,62,27)" fg:x="12" fg:w="3"/><text x="0.2911%" y="7007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (3 samples, 0.01%)</title><rect x="0.0411%" y="6981" width="0.0103%" height="15" fill="rgb(216,154,8)" fg:x="12" fg:w="3"/><text x="0.2911%" y="6991.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="0.0411%" y="6965" width="0.0103%" height="15" fill="rgb(244,35,45)" fg:x="12" fg:w="3"/><text x="0.2911%" y="6975.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (3 samples, 0.01%)</title><rect x="0.0411%" y="6949" width="0.0103%" height="15" fill="rgb(251,115,12)" fg:x="12" fg:w="3"/><text x="0.2911%" y="6959.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (3 samples, 0.01%)</title><rect x="0.0411%" y="6933" width="0.0103%" height="15" fill="rgb(240,54,50)" fg:x="12" fg:w="3"/><text x="0.2911%" y="6943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (3 samples, 0.01%)</title><rect x="0.0411%" y="6917" width="0.0103%" height="15" fill="rgb(233,84,52)" fg:x="12" fg:w="3"/><text x="0.2911%" y="6927.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="0.0411%" y="6901" width="0.0103%" height="15" fill="rgb(207,117,47)" fg:x="12" fg:w="3"/><text x="0.2911%" y="6911.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (3 samples, 0.01%)</title><rect x="0.0411%" y="6885" width="0.0103%" height="15" fill="rgb(249,43,39)" fg:x="12" fg:w="3"/><text x="0.2911%" y="6895.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (3 samples, 0.01%)</title><rect x="0.0411%" y="6869" width="0.0103%" height="15" fill="rgb(209,38,44)" fg:x="12" fg:w="3"/><text x="0.2911%" y="6879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (3 samples, 0.01%)</title><rect x="0.0411%" y="6853" width="0.0103%" height="15" fill="rgb(236,212,23)" fg:x="12" fg:w="3"/><text x="0.2911%" y="6863.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="0.0411%" y="6837" width="0.0103%" height="15" fill="rgb(242,79,21)" fg:x="12" fg:w="3"/><text x="0.2911%" y="6847.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (3 samples, 0.01%)</title><rect x="0.0411%" y="6821" width="0.0103%" height="15" fill="rgb(211,96,35)" fg:x="12" fg:w="3"/><text x="0.2911%" y="6831.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (3 samples, 0.01%)</title><rect x="0.0411%" y="6805" width="0.0103%" height="15" fill="rgb(253,215,40)" fg:x="12" fg:w="3"/><text x="0.2911%" y="6815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (3 samples, 0.01%)</title><rect x="0.0411%" y="6789" width="0.0103%" height="15" fill="rgb(211,81,21)" fg:x="12" fg:w="3"/><text x="0.2911%" y="6799.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="0.0411%" y="6773" width="0.0103%" height="15" fill="rgb(208,190,38)" fg:x="12" fg:w="3"/><text x="0.2911%" y="6783.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (3 samples, 0.01%)</title><rect x="0.0411%" y="6757" width="0.0103%" height="15" fill="rgb(235,213,38)" fg:x="12" fg:w="3"/><text x="0.2911%" y="6767.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (3 samples, 0.01%)</title><rect x="0.0411%" y="6741" width="0.0103%" height="15" fill="rgb(237,122,38)" fg:x="12" fg:w="3"/><text x="0.2911%" y="6751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (3 samples, 0.01%)</title><rect x="0.0411%" y="6725" width="0.0103%" height="15" fill="rgb(244,218,35)" fg:x="12" fg:w="3"/><text x="0.2911%" y="6735.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="0.0411%" y="6709" width="0.0103%" height="15" fill="rgb(240,68,47)" fg:x="12" fg:w="3"/><text x="0.2911%" y="6719.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (3 samples, 0.01%)</title><rect x="0.0411%" y="6693" width="0.0103%" height="15" fill="rgb(210,16,53)" fg:x="12" fg:w="3"/><text x="0.2911%" y="6703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (3 samples, 0.01%)</title><rect x="0.0411%" y="6677" width="0.0103%" height="15" fill="rgb(235,124,12)" fg:x="12" fg:w="3"/><text x="0.2911%" y="6687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (3 samples, 0.01%)</title><rect x="0.0411%" y="6661" width="0.0103%" height="15" fill="rgb(224,169,11)" fg:x="12" fg:w="3"/><text x="0.2911%" y="6671.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="0.0411%" y="6645" width="0.0103%" height="15" fill="rgb(250,166,2)" fg:x="12" fg:w="3"/><text x="0.2911%" y="6655.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (3 samples, 0.01%)</title><rect x="0.0411%" y="6629" width="0.0103%" height="15" fill="rgb(242,216,29)" fg:x="12" fg:w="3"/><text x="0.2911%" y="6639.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (3 samples, 0.01%)</title><rect x="0.0411%" y="6613" width="0.0103%" height="15" fill="rgb(230,116,27)" fg:x="12" fg:w="3"/><text x="0.2911%" y="6623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (3 samples, 0.01%)</title><rect x="0.0411%" y="6597" width="0.0103%" height="15" fill="rgb(228,99,48)" fg:x="12" fg:w="3"/><text x="0.2911%" y="6607.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="0.0411%" y="6581" width="0.0103%" height="15" fill="rgb(253,11,6)" fg:x="12" fg:w="3"/><text x="0.2911%" y="6591.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (3 samples, 0.01%)</title><rect x="0.0411%" y="6565" width="0.0103%" height="15" fill="rgb(247,143,39)" fg:x="12" fg:w="3"/><text x="0.2911%" y="6575.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (3 samples, 0.01%)</title><rect x="0.0411%" y="6549" width="0.0103%" height="15" fill="rgb(236,97,10)" fg:x="12" fg:w="3"/><text x="0.2911%" y="6559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (3 samples, 0.01%)</title><rect x="0.0411%" y="6533" width="0.0103%" height="15" fill="rgb(233,208,19)" fg:x="12" fg:w="3"/><text x="0.2911%" y="6543.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="0.0411%" y="6517" width="0.0103%" height="15" fill="rgb(216,164,2)" fg:x="12" fg:w="3"/><text x="0.2911%" y="6527.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (3 samples, 0.01%)</title><rect x="0.0411%" y="6501" width="0.0103%" height="15" fill="rgb(220,129,5)" fg:x="12" fg:w="3"/><text x="0.2911%" y="6511.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (7 samples, 0.02%)</title><rect x="0.0513%" y="7893" width="0.0240%" height="15" fill="rgb(242,17,10)" fg:x="15" fg:w="7"/><text x="0.3013%" y="7903.50"></text></g><g><title>clock_gettime (7 samples, 0.02%)</title><rect x="0.0513%" y="7877" width="0.0240%" height="15" fill="rgb(242,107,0)" fg:x="15" fg:w="7"/><text x="0.3013%" y="7887.50"></text></g><g><title>__vdso_clock_gettime (5 samples, 0.02%)</title><rect x="0.0582%" y="7861" width="0.0171%" height="15" fill="rgb(251,28,31)" fg:x="17" fg:w="5"/><text x="0.3082%" y="7871.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::clone::Clone&gt;::clone (16 samples, 0.05%)</title><rect x="0.1711%" y="7877" width="0.0548%" height="15" fill="rgb(233,223,10)" fg:x="50" fg:w="16"/><text x="0.4211%" y="7887.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (16 samples, 0.05%)</title><rect x="0.1711%" y="7861" width="0.0548%" height="15" fill="rgb(215,21,27)" fg:x="50" fg:w="16"/><text x="0.4211%" y="7871.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.08%)</title><rect x="0.2259%" y="7877" width="0.0787%" height="15" fill="rgb(232,23,21)" fg:x="66" fg:w="23"/><text x="0.4759%" y="7887.50"></text></g><g><title>core::ptr::read (16 samples, 0.05%)</title><rect x="0.2498%" y="7861" width="0.0548%" height="15" fill="rgb(244,5,23)" fg:x="73" fg:w="16"/><text x="0.4998%" y="7871.50"></text></g><g><title>__rdl_alloc (3 samples, 0.01%)</title><rect x="0.3354%" y="7637" width="0.0103%" height="15" fill="rgb(226,81,46)" fg:x="98" fg:w="3"/><text x="0.5854%" y="7647.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (71 samples, 0.24%)</title><rect x="0.3217%" y="7733" width="0.2430%" height="15" fill="rgb(247,70,30)" fg:x="94" fg:w="71"/><text x="0.5717%" y="7743.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (71 samples, 0.24%)</title><rect x="0.3217%" y="7717" width="0.2430%" height="15" fill="rgb(212,68,19)" fg:x="94" fg:w="71"/><text x="0.5717%" y="7727.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (71 samples, 0.24%)</title><rect x="0.3217%" y="7701" width="0.2430%" height="15" fill="rgb(240,187,13)" fg:x="94" fg:w="71"/><text x="0.5717%" y="7711.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (69 samples, 0.24%)</title><rect x="0.3286%" y="7685" width="0.2362%" height="15" fill="rgb(223,113,26)" fg:x="96" fg:w="69"/><text x="0.5786%" y="7695.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (69 samples, 0.24%)</title><rect x="0.3286%" y="7669" width="0.2362%" height="15" fill="rgb(206,192,2)" fg:x="96" fg:w="69"/><text x="0.5786%" y="7679.50"></text></g><g><title>alloc::alloc::alloc (68 samples, 0.23%)</title><rect x="0.3320%" y="7653" width="0.2327%" height="15" fill="rgb(241,108,4)" fg:x="97" fg:w="68"/><text x="0.5820%" y="7663.50"></text></g><g><title>malloc (60 samples, 0.21%)</title><rect x="0.3594%" y="7637" width="0.2054%" height="15" fill="rgb(247,173,49)" fg:x="105" fg:w="60"/><text x="0.6094%" y="7647.50"></text></g><g><title>[libc.so.6] (50 samples, 0.17%)</title><rect x="0.3936%" y="7621" width="0.1711%" height="15" fill="rgb(224,114,35)" fg:x="115" fg:w="50"/><text x="0.6436%" y="7631.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="0.5476%" y="7605" width="0.0171%" height="15" fill="rgb(245,159,27)" fg:x="160" fg:w="5"/><text x="0.7976%" y="7615.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (90 samples, 0.31%)</title><rect x="0.3217%" y="7797" width="0.3080%" height="15" fill="rgb(245,172,44)" fg:x="94" fg:w="90"/><text x="0.5717%" y="7807.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (90 samples, 0.31%)</title><rect x="0.3217%" y="7781" width="0.3080%" height="15" fill="rgb(236,23,11)" fg:x="94" fg:w="90"/><text x="0.5717%" y="7791.50"></text></g><g><title>alloc::slice::hack::to_vec (90 samples, 0.31%)</title><rect x="0.3217%" y="7765" width="0.3080%" height="15" fill="rgb(205,117,38)" fg:x="94" fg:w="90"/><text x="0.5717%" y="7775.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (90 samples, 0.31%)</title><rect x="0.3217%" y="7749" width="0.3080%" height="15" fill="rgb(237,72,25)" fg:x="94" fg:w="90"/><text x="0.5717%" y="7759.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (19 samples, 0.07%)</title><rect x="0.5647%" y="7733" width="0.0650%" height="15" fill="rgb(244,70,9)" fg:x="165" fg:w="19"/><text x="0.8147%" y="7743.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (19 samples, 0.07%)</title><rect x="0.5647%" y="7717" width="0.0650%" height="15" fill="rgb(217,125,39)" fg:x="165" fg:w="19"/><text x="0.8147%" y="7727.50"></text></g><g><title>[libc.so.6] (13 samples, 0.04%)</title><rect x="0.5853%" y="7701" width="0.0445%" height="15" fill="rgb(235,36,10)" fg:x="171" fg:w="13"/><text x="0.8353%" y="7711.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (21 samples, 0.07%)</title><rect x="0.6332%" y="7797" width="0.0719%" height="15" fill="rgb(251,123,47)" fg:x="185" fg:w="21"/><text x="0.8832%" y="7807.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (21 samples, 0.07%)</title><rect x="0.6332%" y="7781" width="0.0719%" height="15" fill="rgb(221,13,13)" fg:x="185" fg:w="21"/><text x="0.8832%" y="7791.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (21 samples, 0.07%)</title><rect x="0.6332%" y="7765" width="0.0719%" height="15" fill="rgb(238,131,9)" fg:x="185" fg:w="21"/><text x="0.8832%" y="7775.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (21 samples, 0.07%)</title><rect x="0.6332%" y="7749" width="0.0719%" height="15" fill="rgb(211,50,8)" fg:x="185" fg:w="21"/><text x="0.8832%" y="7759.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (21 samples, 0.07%)</title><rect x="0.6332%" y="7733" width="0.0719%" height="15" fill="rgb(245,182,24)" fg:x="185" fg:w="21"/><text x="0.8832%" y="7743.50"></text></g><g><title>alloc::alloc::alloc (21 samples, 0.07%)</title><rect x="0.6332%" y="7717" width="0.0719%" height="15" fill="rgb(242,14,37)" fg:x="185" fg:w="21"/><text x="0.8832%" y="7727.50"></text></g><g><title>malloc (20 samples, 0.07%)</title><rect x="0.6366%" y="7701" width="0.0685%" height="15" fill="rgb(246,228,12)" fg:x="186" fg:w="20"/><text x="0.8866%" y="7711.50"></text></g><g><title>[libc.so.6] (17 samples, 0.06%)</title><rect x="0.6469%" y="7685" width="0.0582%" height="15" fill="rgb(213,55,15)" fg:x="189" fg:w="17"/><text x="0.8969%" y="7695.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (115 samples, 0.39%)</title><rect x="0.3149%" y="7861" width="0.3936%" height="15" fill="rgb(209,9,3)" fg:x="92" fg:w="115"/><text x="0.5649%" y="7871.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (114 samples, 0.39%)</title><rect x="0.3183%" y="7845" width="0.3902%" height="15" fill="rgb(230,59,30)" fg:x="93" fg:w="114"/><text x="0.5683%" y="7855.50"></text></g><g><title>alloc::slice::hack::to_vec (114 samples, 0.39%)</title><rect x="0.3183%" y="7829" width="0.3902%" height="15" fill="rgb(209,121,21)" fg:x="93" fg:w="114"/><text x="0.5683%" y="7839.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (114 samples, 0.39%)</title><rect x="0.3183%" y="7813" width="0.3902%" height="15" fill="rgb(220,109,13)" fg:x="93" fg:w="114"/><text x="0.5683%" y="7823.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (13 samples, 0.04%)</title><rect x="0.7119%" y="7669" width="0.0445%" height="15" fill="rgb(232,18,1)" fg:x="208" fg:w="13"/><text x="0.9619%" y="7679.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (13 samples, 0.04%)</title><rect x="0.7119%" y="7653" width="0.0445%" height="15" fill="rgb(215,41,42)" fg:x="208" fg:w="13"/><text x="0.9619%" y="7663.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (13 samples, 0.04%)</title><rect x="0.7119%" y="7637" width="0.0445%" height="15" fill="rgb(224,123,36)" fg:x="208" fg:w="13"/><text x="0.9619%" y="7647.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.04%)</title><rect x="0.7119%" y="7621" width="0.0445%" height="15" fill="rgb(240,125,3)" fg:x="208" fg:w="13"/><text x="0.9619%" y="7631.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.04%)</title><rect x="0.7119%" y="7605" width="0.0445%" height="15" fill="rgb(205,98,50)" fg:x="208" fg:w="13"/><text x="0.9619%" y="7615.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.04%)</title><rect x="0.7119%" y="7589" width="0.0445%" height="15" fill="rgb(205,185,37)" fg:x="208" fg:w="13"/><text x="0.9619%" y="7599.50"></text></g><g><title>malloc (12 samples, 0.04%)</title><rect x="0.7153%" y="7573" width="0.0411%" height="15" fill="rgb(238,207,15)" fg:x="209" fg:w="12"/><text x="0.9653%" y="7583.50"></text></g><g><title>[libc.so.6] (10 samples, 0.03%)</title><rect x="0.7222%" y="7557" width="0.0342%" height="15" fill="rgb(213,199,42)" fg:x="211" fg:w="10"/><text x="0.9722%" y="7567.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (14 samples, 0.05%)</title><rect x="0.7119%" y="7733" width="0.0479%" height="15" fill="rgb(235,201,11)" fg:x="208" fg:w="14"/><text x="0.9619%" y="7743.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (14 samples, 0.05%)</title><rect x="0.7119%" y="7717" width="0.0479%" height="15" fill="rgb(207,46,11)" fg:x="208" fg:w="14"/><text x="0.9619%" y="7727.50"></text></g><g><title>alloc::slice::hack::to_vec (14 samples, 0.05%)</title><rect x="0.7119%" y="7701" width="0.0479%" height="15" fill="rgb(241,35,35)" fg:x="208" fg:w="14"/><text x="0.9619%" y="7711.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (14 samples, 0.05%)</title><rect x="0.7119%" y="7685" width="0.0479%" height="15" fill="rgb(243,32,47)" fg:x="208" fg:w="14"/><text x="0.9619%" y="7695.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.01%)</title><rect x="0.7598%" y="7733" width="0.0103%" height="15" fill="rgb(247,202,23)" fg:x="222" fg:w="3"/><text x="1.0098%" y="7743.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.01%)</title><rect x="0.7598%" y="7717" width="0.0103%" height="15" fill="rgb(219,102,11)" fg:x="222" fg:w="3"/><text x="1.0098%" y="7727.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.01%)</title><rect x="0.7598%" y="7701" width="0.0103%" height="15" fill="rgb(243,110,44)" fg:x="222" fg:w="3"/><text x="1.0098%" y="7711.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.01%)</title><rect x="0.7598%" y="7685" width="0.0103%" height="15" fill="rgb(222,74,54)" fg:x="222" fg:w="3"/><text x="1.0098%" y="7695.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.01%)</title><rect x="0.7598%" y="7669" width="0.0103%" height="15" fill="rgb(216,99,12)" fg:x="222" fg:w="3"/><text x="1.0098%" y="7679.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.01%)</title><rect x="0.7598%" y="7653" width="0.0103%" height="15" fill="rgb(226,22,26)" fg:x="222" fg:w="3"/><text x="1.0098%" y="7663.50"></text></g><g><title>malloc (3 samples, 0.01%)</title><rect x="0.7598%" y="7637" width="0.0103%" height="15" fill="rgb(217,163,10)" fg:x="222" fg:w="3"/><text x="1.0098%" y="7647.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (19 samples, 0.07%)</title><rect x="0.7085%" y="7845" width="0.0650%" height="15" fill="rgb(213,25,53)" fg:x="207" fg:w="19"/><text x="0.9585%" y="7855.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (19 samples, 0.07%)</title><rect x="0.7085%" y="7829" width="0.0650%" height="15" fill="rgb(252,105,26)" fg:x="207" fg:w="19"/><text x="0.9585%" y="7839.50"></text></g><g><title>&lt;tetrs::logic::state::GameState as core::clone::Clone&gt;::clone (19 samples, 0.07%)</title><rect x="0.7085%" y="7813" width="0.0650%" height="15" fill="rgb(220,39,43)" fg:x="207" fg:w="19"/><text x="0.9585%" y="7823.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (19 samples, 0.07%)</title><rect x="0.7085%" y="7797" width="0.0650%" height="15" fill="rgb(229,68,48)" fg:x="207" fg:w="19"/><text x="0.9585%" y="7807.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (19 samples, 0.07%)</title><rect x="0.7085%" y="7781" width="0.0650%" height="15" fill="rgb(252,8,32)" fg:x="207" fg:w="19"/><text x="0.9585%" y="7791.50"></text></g><g><title>alloc::slice::hack::to_vec (19 samples, 0.07%)</title><rect x="0.7085%" y="7765" width="0.0650%" height="15" fill="rgb(223,20,43)" fg:x="207" fg:w="19"/><text x="0.9585%" y="7775.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (19 samples, 0.07%)</title><rect x="0.7085%" y="7749" width="0.0650%" height="15" fill="rgb(229,81,49)" fg:x="207" fg:w="19"/><text x="0.9585%" y="7759.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (21 samples, 0.07%)</title><rect x="0.7085%" y="7861" width="0.0719%" height="15" fill="rgb(236,28,36)" fg:x="207" fg:w="21"/><text x="0.9585%" y="7871.50"></text></g><g><title>&lt;tetrs::logic::state::GameState as core::clone::Clone&gt;::clone (140 samples, 0.48%)</title><rect x="0.3046%" y="7877" width="0.4792%" height="15" fill="rgb(249,185,26)" fg:x="89" fg:w="140"/><text x="0.5546%" y="7887.50"></text></g><g><title>__rdl_alloc (4 samples, 0.01%)</title><rect x="0.8591%" y="7781" width="0.0137%" height="15" fill="rgb(249,174,33)" fg:x="251" fg:w="4"/><text x="1.1091%" y="7791.50"></text></g><g><title>__rust_alloc (7 samples, 0.02%)</title><rect x="0.8727%" y="7781" width="0.0240%" height="15" fill="rgb(233,201,37)" fg:x="255" fg:w="7"/><text x="1.1227%" y="7791.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (296 samples, 1.01%)</title><rect x="0.7838%" y="7877" width="1.0131%" height="15" fill="rgb(221,78,26)" fg:x="229" fg:w="296"/><text x="1.0338%" y="7887.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (296 samples, 1.01%)</title><rect x="0.7838%" y="7861" width="1.0131%" height="15" fill="rgb(250,127,30)" fg:x="229" fg:w="296"/><text x="1.0338%" y="7871.50"></text></g><g><title>alloc::alloc::exchange_malloc (284 samples, 0.97%)</title><rect x="0.8248%" y="7845" width="0.9720%" height="15" fill="rgb(230,49,44)" fg:x="241" fg:w="284"/><text x="1.0748%" y="7855.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (277 samples, 0.95%)</title><rect x="0.8488%" y="7829" width="0.9480%" height="15" fill="rgb(229,67,23)" fg:x="248" fg:w="277"/><text x="1.0988%" y="7839.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (277 samples, 0.95%)</title><rect x="0.8488%" y="7813" width="0.9480%" height="15" fill="rgb(249,83,47)" fg:x="248" fg:w="277"/><text x="1.0988%" y="7823.50"></text></g><g><title>alloc::alloc::alloc (277 samples, 0.95%)</title><rect x="0.8488%" y="7797" width="0.9480%" height="15" fill="rgb(215,43,3)" fg:x="248" fg:w="277"/><text x="1.0988%" y="7807.50"></text></g><g><title>malloc (261 samples, 0.89%)</title><rect x="0.9036%" y="7781" width="0.8933%" height="15" fill="rgb(238,154,13)" fg:x="264" fg:w="261"/><text x="1.1536%" y="7791.50"></text></g><g><title>[libc.so.6] (238 samples, 0.81%)</title><rect x="0.9823%" y="7765" width="0.8146%" height="15" fill="rgb(219,56,2)" fg:x="287" fg:w="238"/><text x="1.2323%" y="7775.50"></text></g><g><title>[libc.so.6] (34 samples, 0.12%)</title><rect x="1.6805%" y="7749" width="0.1164%" height="15" fill="rgb(233,0,4)" fg:x="491" fg:w="34"/><text x="1.9305%" y="7759.50"></text></g><g><title>cfree (3 samples, 0.01%)</title><rect x="1.8037%" y="7877" width="0.0103%" height="15" fill="rgb(235,30,7)" fg:x="527" fg:w="3"/><text x="2.0537%" y="7887.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="1.8037%" y="7861" width="0.0103%" height="15" fill="rgb(250,79,13)" fg:x="527" fg:w="3"/><text x="2.0537%" y="7871.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 0.14%)</title><rect x="1.8208%" y="7861" width="0.1437%" height="15" fill="rgb(211,146,34)" fg:x="532" fg:w="42"/><text x="2.0708%" y="7871.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u16&gt;]&gt; (41 samples, 0.14%)</title><rect x="1.8242%" y="7845" width="0.1403%" height="15" fill="rgb(228,22,38)" fg:x="533" fg:w="41"/><text x="2.0742%" y="7855.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u16&gt;&gt; (41 samples, 0.14%)</title><rect x="1.8242%" y="7829" width="0.1403%" height="15" fill="rgb(235,168,5)" fg:x="533" fg:w="41"/><text x="2.0742%" y="7839.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u16&gt;&gt; (41 samples, 0.14%)</title><rect x="1.8242%" y="7813" width="0.1403%" height="15" fill="rgb(221,155,16)" fg:x="533" fg:w="41"/><text x="2.0742%" y="7823.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (41 samples, 0.14%)</title><rect x="1.8242%" y="7797" width="0.1403%" height="15" fill="rgb(215,215,53)" fg:x="533" fg:w="41"/><text x="2.0742%" y="7807.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (41 samples, 0.14%)</title><rect x="1.8242%" y="7781" width="0.1403%" height="15" fill="rgb(223,4,10)" fg:x="533" fg:w="41"/><text x="2.0742%" y="7791.50"></text></g><g><title>alloc::alloc::dealloc (41 samples, 0.14%)</title><rect x="1.8242%" y="7765" width="0.1403%" height="15" fill="rgb(234,103,6)" fg:x="533" fg:w="41"/><text x="2.0742%" y="7775.50"></text></g><g><title>cfree (40 samples, 0.14%)</title><rect x="1.8276%" y="7749" width="0.1369%" height="15" fill="rgb(227,97,0)" fg:x="534" fg:w="40"/><text x="2.0776%" y="7759.50"></text></g><g><title>[libc.so.6] (30 samples, 0.10%)</title><rect x="1.8619%" y="7733" width="0.1027%" height="15" fill="rgb(234,150,53)" fg:x="544" fg:w="30"/><text x="2.1119%" y="7743.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (50 samples, 0.17%)</title><rect x="1.8208%" y="7877" width="0.1711%" height="15" fill="rgb(228,201,54)" fg:x="532" fg:w="50"/><text x="2.0708%" y="7887.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (8 samples, 0.03%)</title><rect x="1.9645%" y="7861" width="0.0274%" height="15" fill="rgb(222,22,37)" fg:x="574" fg:w="8"/><text x="2.2145%" y="7871.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.03%)</title><rect x="1.9645%" y="7845" width="0.0274%" height="15" fill="rgb(237,53,32)" fg:x="574" fg:w="8"/><text x="2.2145%" y="7855.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.03%)</title><rect x="1.9645%" y="7829" width="0.0274%" height="15" fill="rgb(233,25,53)" fg:x="574" fg:w="8"/><text x="2.2145%" y="7839.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.03%)</title><rect x="1.9645%" y="7813" width="0.0274%" height="15" fill="rgb(210,40,34)" fg:x="574" fg:w="8"/><text x="2.2145%" y="7823.50"></text></g><g><title>cfree (5 samples, 0.02%)</title><rect x="1.9748%" y="7797" width="0.0171%" height="15" fill="rgb(241,220,44)" fg:x="577" fg:w="5"/><text x="2.2248%" y="7807.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="1.9817%" y="7781" width="0.0103%" height="15" fill="rgb(235,28,35)" fg:x="579" fg:w="3"/><text x="2.2317%" y="7791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;char&gt;&gt; (4 samples, 0.01%)</title><rect x="1.9919%" y="7877" width="0.0137%" height="15" fill="rgb(210,56,17)" fg:x="582" fg:w="4"/><text x="2.2419%" y="7887.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;char&gt;&gt; (4 samples, 0.01%)</title><rect x="1.9919%" y="7861" width="0.0137%" height="15" fill="rgb(224,130,29)" fg:x="582" fg:w="4"/><text x="2.2419%" y="7871.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="1.9919%" y="7845" width="0.0137%" height="15" fill="rgb(235,212,8)" fg:x="582" fg:w="4"/><text x="2.2419%" y="7855.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.01%)</title><rect x="1.9919%" y="7829" width="0.0137%" height="15" fill="rgb(223,33,50)" fg:x="582" fg:w="4"/><text x="2.2419%" y="7839.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.01%)</title><rect x="1.9919%" y="7813" width="0.0137%" height="15" fill="rgb(219,149,13)" fg:x="582" fg:w="4"/><text x="2.2419%" y="7823.50"></text></g><g><title>cfree (3 samples, 0.01%)</title><rect x="1.9953%" y="7797" width="0.0103%" height="15" fill="rgb(250,156,29)" fg:x="583" fg:w="3"/><text x="2.2453%" y="7807.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="1.9953%" y="7781" width="0.0103%" height="15" fill="rgb(216,193,19)" fg:x="583" fg:w="3"/><text x="2.2453%" y="7791.50"></text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_raw_mut_slice (3 samples, 0.01%)</title><rect x="2.0125%" y="7845" width="0.0103%" height="15" fill="rgb(216,135,14)" fg:x="588" fg:w="3"/><text x="2.2625%" y="7855.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (3 samples, 0.01%)</title><rect x="2.0125%" y="7829" width="0.0103%" height="15" fill="rgb(241,47,5)" fg:x="588" fg:w="3"/><text x="2.2625%" y="7839.50"></text></g><g><title>core::iter::traits::exact_size::ExactSizeIterator::len (3 samples, 0.01%)</title><rect x="2.0125%" y="7813" width="0.0103%" height="15" fill="rgb(233,42,35)" fg:x="588" fg:w="3"/><text x="2.2625%" y="7823.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (3 samples, 0.01%)</title><rect x="2.0125%" y="7797" width="0.0103%" height="15" fill="rgb(231,13,6)" fg:x="588" fg:w="3"/><text x="2.2625%" y="7807.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (3 samples, 0.01%)</title><rect x="2.0125%" y="7781" width="0.0103%" height="15" fill="rgb(207,181,40)" fg:x="588" fg:w="3"/><text x="2.2625%" y="7791.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="2.0090%" y="7861" width="0.0205%" height="15" fill="rgb(254,173,49)" fg:x="587" fg:w="6"/><text x="2.2590%" y="7871.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;tetrs::logic::state::GameState&gt;&gt; (18 samples, 0.06%)</title><rect x="2.0056%" y="7877" width="0.0616%" height="15" fill="rgb(221,1,38)" fg:x="586" fg:w="18"/><text x="2.2556%" y="7887.50"></text></g><g><title>cfree (11 samples, 0.04%)</title><rect x="2.0296%" y="7861" width="0.0376%" height="15" fill="rgb(206,124,46)" fg:x="593" fg:w="11"/><text x="2.2796%" y="7871.50"></text></g><g><title>[libc.so.6] (10 samples, 0.03%)</title><rect x="2.0330%" y="7845" width="0.0342%" height="15" fill="rgb(249,21,11)" fg:x="594" fg:w="10"/><text x="2.2830%" y="7855.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="2.0570%" y="7829" width="0.0103%" height="15" fill="rgb(222,201,40)" fg:x="601" fg:w="3"/><text x="2.3070%" y="7839.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;priority_queue::store::Index&gt;&gt; (6 samples, 0.02%)</title><rect x="2.0706%" y="7845" width="0.0205%" height="15" fill="rgb(235,61,29)" fg:x="605" fg:w="6"/><text x="2.3206%" y="7855.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;priority_queue::store::Index&gt;&gt; (6 samples, 0.02%)</title><rect x="2.0706%" y="7829" width="0.0205%" height="15" fill="rgb(219,207,3)" fg:x="605" fg:w="6"/><text x="2.3206%" y="7839.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="2.0706%" y="7813" width="0.0205%" height="15" fill="rgb(222,56,46)" fg:x="605" fg:w="6"/><text x="2.3206%" y="7823.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.02%)</title><rect x="2.0706%" y="7797" width="0.0205%" height="15" fill="rgb(239,76,54)" fg:x="605" fg:w="6"/><text x="2.3206%" y="7807.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.02%)</title><rect x="2.0706%" y="7781" width="0.0205%" height="15" fill="rgb(231,124,27)" fg:x="605" fg:w="6"/><text x="2.3206%" y="7791.50"></text></g><g><title>cfree (5 samples, 0.02%)</title><rect x="2.0741%" y="7765" width="0.0171%" height="15" fill="rgb(249,195,6)" fg:x="606" fg:w="5"/><text x="2.3241%" y="7775.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="2.0741%" y="7749" width="0.0171%" height="15" fill="rgb(237,174,47)" fg:x="606" fg:w="5"/><text x="2.3241%" y="7759.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="2.0775%" y="7733" width="0.0137%" height="15" fill="rgb(206,201,31)" fg:x="607" fg:w="4"/><text x="2.3275%" y="7743.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (35 samples, 0.12%)</title><rect x="2.1528%" y="7717" width="0.1198%" height="15" fill="rgb(231,57,52)" fg:x="629" fg:w="35"/><text x="2.4028%" y="7727.50"></text></g><g><title>alloc::alloc::dealloc (35 samples, 0.12%)</title><rect x="2.1528%" y="7701" width="0.1198%" height="15" fill="rgb(248,177,22)" fg:x="629" fg:w="35"/><text x="2.4028%" y="7711.50"></text></g><g><title>cfree (30 samples, 0.10%)</title><rect x="2.1699%" y="7685" width="0.1027%" height="15" fill="rgb(215,211,37)" fg:x="634" fg:w="30"/><text x="2.4199%" y="7695.50"></text></g><g><title>[libc.so.6] (23 samples, 0.08%)</title><rect x="2.1939%" y="7669" width="0.0787%" height="15" fill="rgb(241,128,51)" fg:x="641" fg:w="23"/><text x="2.4439%" y="7679.50"></text></g><g><title>alloc::rc::RcInnerPtr::dec_strong (3 samples, 0.01%)</title><rect x="2.2760%" y="7717" width="0.0103%" height="15" fill="rgb(227,165,31)" fg:x="665" fg:w="3"/><text x="2.5260%" y="7727.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (3 samples, 0.01%)</title><rect x="2.2760%" y="7701" width="0.0103%" height="15" fill="rgb(228,167,24)" fg:x="665" fg:w="3"/><text x="2.5260%" y="7711.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (3 samples, 0.01%)</title><rect x="2.2760%" y="7685" width="0.0103%" height="15" fill="rgb(228,143,12)" fg:x="665" fg:w="3"/><text x="2.5260%" y="7695.50"></text></g><g><title>core::mem::replace (3 samples, 0.01%)</title><rect x="2.2760%" y="7669" width="0.0103%" height="15" fill="rgb(249,149,8)" fg:x="665" fg:w="3"/><text x="2.5260%" y="7679.50"></text></g><g><title>core::ptr::write (3 samples, 0.01%)</title><rect x="2.2760%" y="7653" width="0.0103%" height="15" fill="rgb(243,35,44)" fg:x="665" fg:w="3"/><text x="2.5260%" y="7663.50"></text></g><g><title>cfree (49 samples, 0.17%)</title><rect x="2.2863%" y="7717" width="0.1677%" height="15" fill="rgb(246,89,9)" fg:x="668" fg:w="49"/><text x="2.5363%" y="7727.50"></text></g><g><title>[libc.so.6] (24 samples, 0.08%)</title><rect x="2.3718%" y="7701" width="0.0821%" height="15" fill="rgb(233,213,13)" fg:x="693" fg:w="24"/><text x="2.6218%" y="7711.50"></text></g><g><title>__rdl_dealloc (6 samples, 0.02%)</title><rect x="2.6114%" y="7573" width="0.0205%" height="15" fill="rgb(233,141,41)" fg:x="763" fg:w="6"/><text x="2.8614%" y="7583.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (6 samples, 0.02%)</title><rect x="2.6114%" y="7557" width="0.0205%" height="15" fill="rgb(239,167,4)" fg:x="763" fg:w="6"/><text x="2.8614%" y="7567.50"></text></g><g><title>__rust_dealloc (8 samples, 0.03%)</title><rect x="2.6319%" y="7573" width="0.0274%" height="15" fill="rgb(209,217,16)" fg:x="769" fg:w="8"/><text x="2.8819%" y="7583.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (857 samples, 2.93%)</title><rect x="2.5190%" y="7605" width="2.9331%" height="15" fill="rgb(219,88,35)" fg:x="736" fg:w="857"/><text x="2.7690%" y="7615.50">&lt;a..</text></g><g><title>alloc::alloc::dealloc (857 samples, 2.93%)</title><rect x="2.5190%" y="7589" width="2.9331%" height="15" fill="rgb(220,193,23)" fg:x="736" fg:w="857"/><text x="2.7690%" y="7599.50">al..</text></g><g><title>cfree (816 samples, 2.79%)</title><rect x="2.6593%" y="7573" width="2.7928%" height="15" fill="rgb(230,90,52)" fg:x="777" fg:w="816"/><text x="2.9093%" y="7583.50">cf..</text></g><g><title>[libc.so.6] (537 samples, 1.84%)</title><rect x="3.6142%" y="7557" width="1.8379%" height="15" fill="rgb(252,106,19)" fg:x="1056" fg:w="537"/><text x="3.8642%" y="7567.50">[..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (914 samples, 3.13%)</title><rect x="2.4642%" y="7685" width="3.1282%" height="15" fill="rgb(206,74,20)" fg:x="720" fg:w="914"/><text x="2.7142%" y="7695.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u16&gt;]&gt; (914 samples, 3.13%)</title><rect x="2.4642%" y="7669" width="3.1282%" height="15" fill="rgb(230,138,44)" fg:x="720" fg:w="914"/><text x="2.7142%" y="7679.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u16&gt;&gt; (899 samples, 3.08%)</title><rect x="2.5156%" y="7653" width="3.0769%" height="15" fill="rgb(235,182,43)" fg:x="735" fg:w="899"/><text x="2.7656%" y="7663.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u16&gt;&gt; (899 samples, 3.08%)</title><rect x="2.5156%" y="7637" width="3.0769%" height="15" fill="rgb(242,16,51)" fg:x="735" fg:w="899"/><text x="2.7656%" y="7647.50">cor..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (899 samples, 3.08%)</title><rect x="2.5156%" y="7621" width="3.0769%" height="15" fill="rgb(248,9,4)" fg:x="735" fg:w="899"/><text x="2.7656%" y="7631.50">&lt;al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (41 samples, 0.14%)</title><rect x="5.4521%" y="7605" width="0.1403%" height="15" fill="rgb(210,31,22)" fg:x="1593" fg:w="41"/><text x="5.7021%" y="7615.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (8 samples, 0.03%)</title><rect x="5.5651%" y="7589" width="0.0274%" height="15" fill="rgb(239,54,39)" fg:x="1626" fg:w="8"/><text x="5.8151%" y="7599.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (110 samples, 0.38%)</title><rect x="5.5924%" y="7653" width="0.3765%" height="15" fill="rgb(230,99,41)" fg:x="1634" fg:w="110"/><text x="5.8424%" y="7663.50"></text></g><g><title>alloc::alloc::dealloc (110 samples, 0.38%)</title><rect x="5.5924%" y="7637" width="0.3765%" height="15" fill="rgb(253,106,12)" fg:x="1634" fg:w="110"/><text x="5.8424%" y="7647.50"></text></g><g><title>cfree (105 samples, 0.36%)</title><rect x="5.6096%" y="7621" width="0.3594%" height="15" fill="rgb(213,46,41)" fg:x="1639" fg:w="105"/><text x="5.8596%" y="7631.50"></text></g><g><title>[libc.so.6] (78 samples, 0.27%)</title><rect x="5.7020%" y="7605" width="0.2670%" height="15" fill="rgb(215,133,35)" fg:x="1666" fg:w="78"/><text x="5.9520%" y="7615.50"></text></g><g><title>[libc.so.6] (21 samples, 0.07%)</title><rect x="5.8970%" y="7589" width="0.0719%" height="15" fill="rgb(213,28,5)" fg:x="1723" fg:w="21"/><text x="6.1470%" y="7599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (1,037 samples, 3.55%)</title><rect x="2.4642%" y="7701" width="3.5492%" height="15" fill="rgb(215,77,49)" fg:x="720" fg:w="1037"/><text x="2.7142%" y="7711.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (123 samples, 0.42%)</title><rect x="5.5924%" y="7685" width="0.4210%" height="15" fill="rgb(248,100,22)" fg:x="1634" fg:w="123"/><text x="5.8424%" y="7695.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (123 samples, 0.42%)</title><rect x="5.5924%" y="7669" width="0.4210%" height="15" fill="rgb(208,67,9)" fg:x="1634" fg:w="123"/><text x="5.8424%" y="7679.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (13 samples, 0.04%)</title><rect x="5.9689%" y="7653" width="0.0445%" height="15" fill="rgb(219,133,21)" fg:x="1744" fg:w="13"/><text x="6.2189%" y="7663.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;char&gt;&gt; (5 samples, 0.02%)</title><rect x="6.0134%" y="7701" width="0.0171%" height="15" fill="rgb(246,46,29)" fg:x="1757" fg:w="5"/><text x="6.2634%" y="7711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;char&gt;&gt; (5 samples, 0.02%)</title><rect x="6.0134%" y="7685" width="0.0171%" height="15" fill="rgb(246,185,52)" fg:x="1757" fg:w="5"/><text x="6.2634%" y="7695.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="6.0134%" y="7669" width="0.0171%" height="15" fill="rgb(252,136,11)" fg:x="1757" fg:w="5"/><text x="6.2634%" y="7679.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (4 samples, 0.01%)</title><rect x="6.0168%" y="7653" width="0.0137%" height="15" fill="rgb(219,138,53)" fg:x="1758" fg:w="4"/><text x="6.2668%" y="7663.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.02%)</title><rect x="6.0374%" y="7669" width="0.0240%" height="15" fill="rgb(211,51,23)" fg:x="1764" fg:w="7"/><text x="6.2874%" y="7679.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.02%)</title><rect x="6.0374%" y="7653" width="0.0240%" height="15" fill="rgb(247,221,28)" fg:x="1764" fg:w="7"/><text x="6.2874%" y="7663.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.02%)</title><rect x="6.0374%" y="7637" width="0.0240%" height="15" fill="rgb(251,222,45)" fg:x="1764" fg:w="7"/><text x="6.2874%" y="7647.50"></text></g><g><title>cfree (6 samples, 0.02%)</title><rect x="6.0408%" y="7621" width="0.0205%" height="15" fill="rgb(217,162,53)" fg:x="1765" fg:w="6"/><text x="6.2908%" y="7631.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="6.0408%" y="7605" width="0.0205%" height="15" fill="rgb(229,93,14)" fg:x="1765" fg:w="6"/><text x="6.2908%" y="7615.50"></text></g><g><title>cfree (7 samples, 0.02%)</title><rect x="6.0613%" y="7669" width="0.0240%" height="15" fill="rgb(209,67,49)" fg:x="1771" fg:w="7"/><text x="6.3113%" y="7679.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="6.0716%" y="7653" width="0.0137%" height="15" fill="rgb(213,87,29)" fg:x="1774" fg:w="4"/><text x="6.3216%" y="7663.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (50 samples, 0.17%)</title><rect x="6.0990%" y="7557" width="0.1711%" height="15" fill="rgb(205,151,52)" fg:x="1782" fg:w="50"/><text x="6.3490%" y="7567.50"></text></g><g><title>alloc::alloc::dealloc (50 samples, 0.17%)</title><rect x="6.0990%" y="7541" width="0.1711%" height="15" fill="rgb(253,215,39)" fg:x="1782" fg:w="50"/><text x="6.3490%" y="7551.50"></text></g><g><title>cfree (50 samples, 0.17%)</title><rect x="6.0990%" y="7525" width="0.1711%" height="15" fill="rgb(221,220,41)" fg:x="1782" fg:w="50"/><text x="6.3490%" y="7535.50"></text></g><g><title>[libc.so.6] (29 samples, 0.10%)</title><rect x="6.1709%" y="7509" width="0.0993%" height="15" fill="rgb(218,133,21)" fg:x="1803" fg:w="29"/><text x="6.4209%" y="7519.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (55 samples, 0.19%)</title><rect x="6.0921%" y="7637" width="0.1882%" height="15" fill="rgb(221,193,43)" fg:x="1780" fg:w="55"/><text x="6.3421%" y="7647.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u16&gt;]&gt; (55 samples, 0.19%)</title><rect x="6.0921%" y="7621" width="0.1882%" height="15" fill="rgb(240,128,52)" fg:x="1780" fg:w="55"/><text x="6.3421%" y="7631.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u16&gt;&gt; (53 samples, 0.18%)</title><rect x="6.0990%" y="7605" width="0.1814%" height="15" fill="rgb(253,114,12)" fg:x="1782" fg:w="53"/><text x="6.3490%" y="7615.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u16&gt;&gt; (53 samples, 0.18%)</title><rect x="6.0990%" y="7589" width="0.1814%" height="15" fill="rgb(215,223,47)" fg:x="1782" fg:w="53"/><text x="6.3490%" y="7599.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (53 samples, 0.18%)</title><rect x="6.0990%" y="7573" width="0.1814%" height="15" fill="rgb(248,225,23)" fg:x="1782" fg:w="53"/><text x="6.3490%" y="7583.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (3 samples, 0.01%)</title><rect x="6.2701%" y="7557" width="0.0103%" height="15" fill="rgb(250,108,0)" fg:x="1832" fg:w="3"/><text x="6.5201%" y="7567.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.04%)</title><rect x="6.2804%" y="7605" width="0.0376%" height="15" fill="rgb(228,208,7)" fg:x="1835" fg:w="11"/><text x="6.5304%" y="7615.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.04%)</title><rect x="6.2804%" y="7589" width="0.0376%" height="15" fill="rgb(244,45,10)" fg:x="1835" fg:w="11"/><text x="6.5304%" y="7599.50"></text></g><g><title>cfree (9 samples, 0.03%)</title><rect x="6.2872%" y="7573" width="0.0308%" height="15" fill="rgb(207,125,25)" fg:x="1837" fg:w="9"/><text x="6.5372%" y="7583.50"></text></g><g><title>[libc.so.6] (9 samples, 0.03%)</title><rect x="6.2872%" y="7557" width="0.0308%" height="15" fill="rgb(210,195,18)" fg:x="1837" fg:w="9"/><text x="6.5372%" y="7567.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="6.3009%" y="7541" width="0.0171%" height="15" fill="rgb(249,80,12)" fg:x="1841" fg:w="5"/><text x="6.5509%" y="7551.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (68 samples, 0.23%)</title><rect x="6.0921%" y="7653" width="0.2327%" height="15" fill="rgb(221,65,9)" fg:x="1780" fg:w="68"/><text x="6.3421%" y="7663.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (13 samples, 0.04%)</title><rect x="6.2804%" y="7637" width="0.0445%" height="15" fill="rgb(235,49,36)" fg:x="1835" fg:w="13"/><text x="6.5304%" y="7647.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.04%)</title><rect x="6.2804%" y="7621" width="0.0445%" height="15" fill="rgb(225,32,20)" fg:x="1835" fg:w="13"/><text x="6.5304%" y="7631.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (93 samples, 0.32%)</title><rect x="6.0305%" y="7701" width="0.3183%" height="15" fill="rgb(215,141,46)" fg:x="1762" fg:w="93"/><text x="6.2805%" y="7711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;tetrs::logic::state::GameState&gt;&gt; (91 samples, 0.31%)</title><rect x="6.0374%" y="7685" width="0.3115%" height="15" fill="rgb(250,160,47)" fg:x="1764" fg:w="91"/><text x="6.2874%" y="7695.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (77 samples, 0.26%)</title><rect x="6.0853%" y="7669" width="0.2635%" height="15" fill="rgb(216,222,40)" fg:x="1778" fg:w="77"/><text x="6.3353%" y="7679.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (7 samples, 0.02%)</title><rect x="6.3249%" y="7653" width="0.0240%" height="15" fill="rgb(234,217,39)" fg:x="1848" fg:w="7"/><text x="6.5749%" y="7663.50"></text></g><g><title>cfree (6 samples, 0.02%)</title><rect x="6.4515%" y="7653" width="0.0205%" height="15" fill="rgb(207,178,40)" fg:x="1885" fg:w="6"/><text x="6.7015%" y="7663.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="6.4549%" y="7637" width="0.0171%" height="15" fill="rgb(221,136,13)" fg:x="1886" fg:w="5"/><text x="6.7049%" y="7647.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (56 samples, 0.19%)</title><rect x="6.4755%" y="7541" width="0.1917%" height="15" fill="rgb(249,199,10)" fg:x="1892" fg:w="56"/><text x="6.7255%" y="7551.50"></text></g><g><title>alloc::alloc::dealloc (56 samples, 0.19%)</title><rect x="6.4755%" y="7525" width="0.1917%" height="15" fill="rgb(249,222,13)" fg:x="1892" fg:w="56"/><text x="6.7255%" y="7535.50"></text></g><g><title>cfree (54 samples, 0.18%)</title><rect x="6.4823%" y="7509" width="0.1848%" height="15" fill="rgb(244,185,38)" fg:x="1894" fg:w="54"/><text x="6.7323%" y="7519.50"></text></g><g><title>[libc.so.6] (30 samples, 0.10%)</title><rect x="6.5644%" y="7493" width="0.1027%" height="15" fill="rgb(236,202,9)" fg:x="1918" fg:w="30"/><text x="6.8144%" y="7503.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (60 samples, 0.21%)</title><rect x="6.4720%" y="7621" width="0.2054%" height="15" fill="rgb(250,229,37)" fg:x="1891" fg:w="60"/><text x="6.7220%" y="7631.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u16&gt;]&gt; (60 samples, 0.21%)</title><rect x="6.4720%" y="7605" width="0.2054%" height="15" fill="rgb(206,174,23)" fg:x="1891" fg:w="60"/><text x="6.7220%" y="7615.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u16&gt;&gt; (59 samples, 0.20%)</title><rect x="6.4755%" y="7589" width="0.2019%" height="15" fill="rgb(211,33,43)" fg:x="1892" fg:w="59"/><text x="6.7255%" y="7599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u16&gt;&gt; (59 samples, 0.20%)</title><rect x="6.4755%" y="7573" width="0.2019%" height="15" fill="rgb(245,58,50)" fg:x="1892" fg:w="59"/><text x="6.7255%" y="7583.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (59 samples, 0.20%)</title><rect x="6.4755%" y="7557" width="0.2019%" height="15" fill="rgb(244,68,36)" fg:x="1892" fg:w="59"/><text x="6.7255%" y="7567.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (3 samples, 0.01%)</title><rect x="6.6671%" y="7541" width="0.0103%" height="15" fill="rgb(232,229,15)" fg:x="1948" fg:w="3"/><text x="6.9171%" y="7551.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (77 samples, 0.26%)</title><rect x="6.4720%" y="7637" width="0.2635%" height="15" fill="rgb(254,30,23)" fg:x="1891" fg:w="77"/><text x="6.7220%" y="7647.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (17 samples, 0.06%)</title><rect x="6.6774%" y="7621" width="0.0582%" height="15" fill="rgb(235,160,14)" fg:x="1951" fg:w="17"/><text x="6.9274%" y="7631.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.06%)</title><rect x="6.6774%" y="7605" width="0.0582%" height="15" fill="rgb(212,155,44)" fg:x="1951" fg:w="17"/><text x="6.9274%" y="7615.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (17 samples, 0.06%)</title><rect x="6.6774%" y="7589" width="0.0582%" height="15" fill="rgb(226,2,50)" fg:x="1951" fg:w="17"/><text x="6.9274%" y="7599.50"></text></g><g><title>alloc::alloc::dealloc (17 samples, 0.06%)</title><rect x="6.6774%" y="7573" width="0.0582%" height="15" fill="rgb(234,177,6)" fg:x="1951" fg:w="17"/><text x="6.9274%" y="7583.50"></text></g><g><title>cfree (16 samples, 0.05%)</title><rect x="6.6808%" y="7557" width="0.0548%" height="15" fill="rgb(217,24,9)" fg:x="1952" fg:w="16"/><text x="6.9308%" y="7567.50"></text></g><g><title>[libc.so.6] (15 samples, 0.05%)</title><rect x="6.6842%" y="7541" width="0.0513%" height="15" fill="rgb(220,13,46)" fg:x="1953" fg:w="15"/><text x="6.9342%" y="7551.50"></text></g><g><title>[libc.so.6] (9 samples, 0.03%)</title><rect x="6.7048%" y="7525" width="0.0308%" height="15" fill="rgb(239,221,27)" fg:x="1959" fg:w="9"/><text x="6.9548%" y="7535.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10 samples, 0.03%)</title><rect x="6.7493%" y="7493" width="0.0342%" height="15" fill="rgb(222,198,25)" fg:x="1972" fg:w="10"/><text x="6.9993%" y="7503.50"></text></g><g><title>alloc::alloc::dealloc (10 samples, 0.03%)</title><rect x="6.7493%" y="7477" width="0.0342%" height="15" fill="rgb(211,99,13)" fg:x="1972" fg:w="10"/><text x="6.9993%" y="7487.50"></text></g><g><title>cfree (8 samples, 0.03%)</title><rect x="6.7561%" y="7461" width="0.0274%" height="15" fill="rgb(232,111,31)" fg:x="1974" fg:w="8"/><text x="7.0061%" y="7471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (11 samples, 0.04%)</title><rect x="6.7493%" y="7589" width="0.0376%" height="15" fill="rgb(245,82,37)" fg:x="1972" fg:w="11"/><text x="6.9993%" y="7599.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.04%)</title><rect x="6.7493%" y="7573" width="0.0376%" height="15" fill="rgb(227,149,46)" fg:x="1972" fg:w="11"/><text x="6.9993%" y="7583.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u16&gt;]&gt; (11 samples, 0.04%)</title><rect x="6.7493%" y="7557" width="0.0376%" height="15" fill="rgb(218,36,50)" fg:x="1972" fg:w="11"/><text x="6.9993%" y="7567.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u16&gt;&gt; (11 samples, 0.04%)</title><rect x="6.7493%" y="7541" width="0.0376%" height="15" fill="rgb(226,80,48)" fg:x="1972" fg:w="11"/><text x="6.9993%" y="7551.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u16&gt;&gt; (11 samples, 0.04%)</title><rect x="6.7493%" y="7525" width="0.0376%" height="15" fill="rgb(238,224,15)" fg:x="1972" fg:w="11"/><text x="6.9993%" y="7535.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.04%)</title><rect x="6.7493%" y="7509" width="0.0376%" height="15" fill="rgb(241,136,10)" fg:x="1972" fg:w="11"/><text x="6.9993%" y="7519.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (15 samples, 0.05%)</title><rect x="6.7390%" y="7637" width="0.0513%" height="15" fill="rgb(208,32,45)" fg:x="1969" fg:w="15"/><text x="6.9890%" y="7647.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;tetrs::logic::state::GameState&gt;&gt; (15 samples, 0.05%)</title><rect x="6.7390%" y="7621" width="0.0513%" height="15" fill="rgb(207,135,9)" fg:x="1969" fg:w="15"/><text x="6.9890%" y="7631.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="6.7493%" y="7605" width="0.0411%" height="15" fill="rgb(206,86,44)" fg:x="1972" fg:w="12"/><text x="6.9993%" y="7615.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.10%)</title><rect x="6.8040%" y="7557" width="0.0958%" height="15" fill="rgb(245,177,15)" fg:x="1988" fg:w="28"/><text x="7.0540%" y="7567.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u16&gt;]&gt; (28 samples, 0.10%)</title><rect x="6.8040%" y="7541" width="0.0958%" height="15" fill="rgb(206,64,50)" fg:x="1988" fg:w="28"/><text x="7.0540%" y="7551.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u16&gt;&gt; (27 samples, 0.09%)</title><rect x="6.8074%" y="7525" width="0.0924%" height="15" fill="rgb(234,36,40)" fg:x="1989" fg:w="27"/><text x="7.0574%" y="7535.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u16&gt;&gt; (27 samples, 0.09%)</title><rect x="6.8074%" y="7509" width="0.0924%" height="15" fill="rgb(213,64,8)" fg:x="1989" fg:w="27"/><text x="7.0574%" y="7519.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.09%)</title><rect x="6.8074%" y="7493" width="0.0924%" height="15" fill="rgb(210,75,36)" fg:x="1989" fg:w="27"/><text x="7.0574%" y="7503.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (27 samples, 0.09%)</title><rect x="6.8074%" y="7477" width="0.0924%" height="15" fill="rgb(229,88,21)" fg:x="1989" fg:w="27"/><text x="7.0574%" y="7487.50"></text></g><g><title>alloc::alloc::dealloc (27 samples, 0.09%)</title><rect x="6.8074%" y="7461" width="0.0924%" height="15" fill="rgb(252,204,47)" fg:x="1989" fg:w="27"/><text x="7.0574%" y="7471.50"></text></g><g><title>cfree (27 samples, 0.09%)</title><rect x="6.8074%" y="7445" width="0.0924%" height="15" fill="rgb(208,77,27)" fg:x="1989" fg:w="27"/><text x="7.0574%" y="7455.50"></text></g><g><title>[libc.so.6] (16 samples, 0.05%)</title><rect x="6.8451%" y="7429" width="0.0548%" height="15" fill="rgb(221,76,26)" fg:x="2000" fg:w="16"/><text x="7.0951%" y="7439.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (32 samples, 0.11%)</title><rect x="6.8040%" y="7573" width="0.1095%" height="15" fill="rgb(225,139,18)" fg:x="1988" fg:w="32"/><text x="7.0540%" y="7583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (4 samples, 0.01%)</title><rect x="6.8999%" y="7557" width="0.0137%" height="15" fill="rgb(230,137,11)" fg:x="2016" fg:w="4"/><text x="7.1499%" y="7567.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="6.8999%" y="7541" width="0.0137%" height="15" fill="rgb(212,28,1)" fg:x="2016" fg:w="4"/><text x="7.1499%" y="7551.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (3 samples, 0.01%)</title><rect x="6.9135%" y="7573" width="0.0103%" height="15" fill="rgb(248,164,17)" fg:x="2020" fg:w="3"/><text x="7.1635%" y="7583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;tetrs::logic::state::GameState&gt;&gt; (3 samples, 0.01%)</title><rect x="6.9135%" y="7557" width="0.0103%" height="15" fill="rgb(222,171,42)" fg:x="2020" fg:w="3"/><text x="7.1635%" y="7567.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (3 samples, 0.01%)</title><rect x="6.9135%" y="7541" width="0.0103%" height="15" fill="rgb(243,84,45)" fg:x="2020" fg:w="3"/><text x="7.1635%" y="7551.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (3 samples, 0.01%)</title><rect x="6.9135%" y="7525" width="0.0103%" height="15" fill="rgb(252,49,23)" fg:x="2020" fg:w="3"/><text x="7.1635%" y="7535.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="6.9135%" y="7509" width="0.0103%" height="15" fill="rgb(215,19,7)" fg:x="2020" fg:w="3"/><text x="7.1635%" y="7519.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u16&gt;]&gt; (3 samples, 0.01%)</title><rect x="6.9135%" y="7493" width="0.0103%" height="15" fill="rgb(238,81,41)" fg:x="2020" fg:w="3"/><text x="7.1635%" y="7503.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u16&gt;&gt; (3 samples, 0.01%)</title><rect x="6.9135%" y="7477" width="0.0103%" height="15" fill="rgb(210,199,37)" fg:x="2020" fg:w="3"/><text x="7.1635%" y="7487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u16&gt;&gt; (3 samples, 0.01%)</title><rect x="6.9135%" y="7461" width="0.0103%" height="15" fill="rgb(244,192,49)" fg:x="2020" fg:w="3"/><text x="7.1635%" y="7471.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="6.9135%" y="7445" width="0.0103%" height="15" fill="rgb(226,211,11)" fg:x="2020" fg:w="3"/><text x="7.1635%" y="7455.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.01%)</title><rect x="6.9135%" y="7429" width="0.0103%" height="15" fill="rgb(236,162,54)" fg:x="2020" fg:w="3"/><text x="7.1635%" y="7439.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.01%)</title><rect x="6.9135%" y="7413" width="0.0103%" height="15" fill="rgb(220,229,9)" fg:x="2020" fg:w="3"/><text x="7.1635%" y="7423.50"></text></g><g><title>cfree (3 samples, 0.01%)</title><rect x="6.9135%" y="7397" width="0.0103%" height="15" fill="rgb(250,87,22)" fg:x="2020" fg:w="3"/><text x="7.1635%" y="7407.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.03%)</title><rect x="6.9272%" y="7493" width="0.0308%" height="15" fill="rgb(239,43,17)" fg:x="2024" fg:w="9"/><text x="7.1772%" y="7503.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u16&gt;]&gt; (9 samples, 0.03%)</title><rect x="6.9272%" y="7477" width="0.0308%" height="15" fill="rgb(231,177,25)" fg:x="2024" fg:w="9"/><text x="7.1772%" y="7487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u16&gt;&gt; (9 samples, 0.03%)</title><rect x="6.9272%" y="7461" width="0.0308%" height="15" fill="rgb(219,179,1)" fg:x="2024" fg:w="9"/><text x="7.1772%" y="7471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u16&gt;&gt; (9 samples, 0.03%)</title><rect x="6.9272%" y="7445" width="0.0308%" height="15" fill="rgb(238,219,53)" fg:x="2024" fg:w="9"/><text x="7.1772%" y="7455.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.03%)</title><rect x="6.9272%" y="7429" width="0.0308%" height="15" fill="rgb(232,167,36)" fg:x="2024" fg:w="9"/><text x="7.1772%" y="7439.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9 samples, 0.03%)</title><rect x="6.9272%" y="7413" width="0.0308%" height="15" fill="rgb(244,19,51)" fg:x="2024" fg:w="9"/><text x="7.1772%" y="7423.50"></text></g><g><title>alloc::alloc::dealloc (9 samples, 0.03%)</title><rect x="6.9272%" y="7397" width="0.0308%" height="15" fill="rgb(224,6,22)" fg:x="2024" fg:w="9"/><text x="7.1772%" y="7407.50"></text></g><g><title>cfree (9 samples, 0.03%)</title><rect x="6.9272%" y="7381" width="0.0308%" height="15" fill="rgb(224,145,5)" fg:x="2024" fg:w="9"/><text x="7.1772%" y="7391.50"></text></g><g><title>[libc.so.6] (8 samples, 0.03%)</title><rect x="6.9307%" y="7365" width="0.0274%" height="15" fill="rgb(234,130,49)" fg:x="2025" fg:w="8"/><text x="7.1807%" y="7375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="6.9272%" y="7509" width="0.0411%" height="15" fill="rgb(254,6,2)" fg:x="2024" fg:w="12"/><text x="7.1772%" y="7519.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (3 samples, 0.01%)</title><rect x="6.9580%" y="7493" width="0.0103%" height="15" fill="rgb(208,96,46)" fg:x="2033" fg:w="3"/><text x="7.2080%" y="7503.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="6.9580%" y="7477" width="0.0103%" height="15" fill="rgb(239,3,39)" fg:x="2033" fg:w="3"/><text x="7.2080%" y="7487.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.01%)</title><rect x="6.9580%" y="7461" width="0.0103%" height="15" fill="rgb(233,210,1)" fg:x="2033" fg:w="3"/><text x="7.2080%" y="7471.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.01%)</title><rect x="6.9580%" y="7445" width="0.0103%" height="15" fill="rgb(244,137,37)" fg:x="2033" fg:w="3"/><text x="7.2080%" y="7455.50"></text></g><g><title>cfree (3 samples, 0.01%)</title><rect x="6.9580%" y="7429" width="0.0103%" height="15" fill="rgb(240,136,2)" fg:x="2033" fg:w="3"/><text x="7.2080%" y="7439.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.03%)</title><rect x="6.9820%" y="7429" width="0.0308%" height="15" fill="rgb(239,18,37)" fg:x="2040" fg:w="9"/><text x="7.2320%" y="7439.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u16&gt;]&gt; (9 samples, 0.03%)</title><rect x="6.9820%" y="7413" width="0.0308%" height="15" fill="rgb(218,185,22)" fg:x="2040" fg:w="9"/><text x="7.2320%" y="7423.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u16&gt;&gt; (9 samples, 0.03%)</title><rect x="6.9820%" y="7397" width="0.0308%" height="15" fill="rgb(225,218,4)" fg:x="2040" fg:w="9"/><text x="7.2320%" y="7407.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u16&gt;&gt; (9 samples, 0.03%)</title><rect x="6.9820%" y="7381" width="0.0308%" height="15" fill="rgb(230,182,32)" fg:x="2040" fg:w="9"/><text x="7.2320%" y="7391.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.03%)</title><rect x="6.9820%" y="7365" width="0.0308%" height="15" fill="rgb(242,56,43)" fg:x="2040" fg:w="9"/><text x="7.2320%" y="7375.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9 samples, 0.03%)</title><rect x="6.9820%" y="7349" width="0.0308%" height="15" fill="rgb(233,99,24)" fg:x="2040" fg:w="9"/><text x="7.2320%" y="7359.50"></text></g><g><title>alloc::alloc::dealloc (9 samples, 0.03%)</title><rect x="6.9820%" y="7333" width="0.0308%" height="15" fill="rgb(234,209,42)" fg:x="2040" fg:w="9"/><text x="7.2320%" y="7343.50"></text></g><g><title>cfree (8 samples, 0.03%)</title><rect x="6.9854%" y="7317" width="0.0274%" height="15" fill="rgb(227,7,12)" fg:x="2041" fg:w="8"/><text x="7.2354%" y="7327.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="6.9923%" y="7301" width="0.0205%" height="15" fill="rgb(245,203,43)" fg:x="2043" fg:w="6"/><text x="7.2423%" y="7311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (11 samples, 0.04%)</title><rect x="6.9820%" y="7445" width="0.0376%" height="15" fill="rgb(238,205,33)" fg:x="2040" fg:w="11"/><text x="7.2320%" y="7455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (9 samples, 0.03%)</title><rect x="7.0231%" y="7397" width="0.0308%" height="15" fill="rgb(231,56,7)" fg:x="2052" fg:w="9"/><text x="7.2731%" y="7407.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.03%)</title><rect x="7.0231%" y="7381" width="0.0308%" height="15" fill="rgb(244,186,29)" fg:x="2052" fg:w="9"/><text x="7.2731%" y="7391.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u16&gt;]&gt; (9 samples, 0.03%)</title><rect x="7.0231%" y="7365" width="0.0308%" height="15" fill="rgb(234,111,31)" fg:x="2052" fg:w="9"/><text x="7.2731%" y="7375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u16&gt;&gt; (9 samples, 0.03%)</title><rect x="7.0231%" y="7349" width="0.0308%" height="15" fill="rgb(241,149,10)" fg:x="2052" fg:w="9"/><text x="7.2731%" y="7359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u16&gt;&gt; (9 samples, 0.03%)</title><rect x="7.0231%" y="7333" width="0.0308%" height="15" fill="rgb(249,206,44)" fg:x="2052" fg:w="9"/><text x="7.2731%" y="7343.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.03%)</title><rect x="7.0231%" y="7317" width="0.0308%" height="15" fill="rgb(251,153,30)" fg:x="2052" fg:w="9"/><text x="7.2731%" y="7327.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9 samples, 0.03%)</title><rect x="7.0231%" y="7301" width="0.0308%" height="15" fill="rgb(239,152,38)" fg:x="2052" fg:w="9"/><text x="7.2731%" y="7311.50"></text></g><g><title>alloc::alloc::dealloc (9 samples, 0.03%)</title><rect x="7.0231%" y="7285" width="0.0308%" height="15" fill="rgb(249,139,47)" fg:x="2052" fg:w="9"/><text x="7.2731%" y="7295.50"></text></g><g><title>cfree (9 samples, 0.03%)</title><rect x="7.0231%" y="7269" width="0.0308%" height="15" fill="rgb(244,64,35)" fg:x="2052" fg:w="9"/><text x="7.2731%" y="7279.50"></text></g><g><title>[libc.so.6] (8 samples, 0.03%)</title><rect x="7.0265%" y="7253" width="0.0274%" height="15" fill="rgb(216,46,15)" fg:x="2053" fg:w="8"/><text x="7.2765%" y="7263.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,451 samples, 4.97%)</title><rect x="2.0912%" y="7797" width="4.9661%" height="15" fill="rgb(250,74,19)" fg:x="611" fg:w="1451"/><text x="2.3412%" y="7807.50">&lt;alloc..</text></g><g><title>core::ptr::drop_in_place&lt;[indexmap::Bucket&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;,i32&gt;]&gt; (1,451 samples, 4.97%)</title><rect x="2.0912%" y="7781" width="4.9661%" height="15" fill="rgb(249,42,33)" fg:x="611" fg:w="1451"/><text x="2.3412%" y="7791.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;indexmap::Bucket&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;,i32&gt;&gt; (1,448 samples, 4.96%)</title><rect x="2.1014%" y="7765" width="4.9558%" height="15" fill="rgb(242,149,17)" fg:x="614" fg:w="1448"/><text x="2.3514%" y="7775.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1,448 samples, 4.96%)</title><rect x="2.1014%" y="7749" width="4.9558%" height="15" fill="rgb(244,29,21)" fg:x="614" fg:w="1448"/><text x="2.3514%" y="7759.50">core::..</text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,448 samples, 4.96%)</title><rect x="2.1014%" y="7733" width="4.9558%" height="15" fill="rgb(220,130,37)" fg:x="614" fg:w="1448"/><text x="2.3514%" y="7743.50">&lt;alloc..</text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1,345 samples, 4.60%)</title><rect x="2.4540%" y="7717" width="4.6033%" height="15" fill="rgb(211,67,2)" fg:x="717" fg:w="1345"/><text x="2.7040%" y="7727.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (207 samples, 0.71%)</title><rect x="6.3488%" y="7701" width="0.7085%" height="15" fill="rgb(235,68,52)" fg:x="1855" fg:w="207"/><text x="6.5988%" y="7711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (199 samples, 0.68%)</title><rect x="6.3762%" y="7685" width="0.6811%" height="15" fill="rgb(246,142,3)" fg:x="1863" fg:w="199"/><text x="6.6262%" y="7695.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (199 samples, 0.68%)</title><rect x="6.3762%" y="7669" width="0.6811%" height="15" fill="rgb(241,25,7)" fg:x="1863" fg:w="199"/><text x="6.6262%" y="7679.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (171 samples, 0.59%)</title><rect x="6.4720%" y="7653" width="0.5853%" height="15" fill="rgb(242,119,39)" fg:x="1891" fg:w="171"/><text x="6.7220%" y="7663.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (78 samples, 0.27%)</title><rect x="6.7903%" y="7637" width="0.2670%" height="15" fill="rgb(241,98,45)" fg:x="1984" fg:w="78"/><text x="7.0403%" y="7647.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (77 samples, 0.26%)</title><rect x="6.7938%" y="7621" width="0.2635%" height="15" fill="rgb(254,28,30)" fg:x="1985" fg:w="77"/><text x="7.0438%" y="7631.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (77 samples, 0.26%)</title><rect x="6.7938%" y="7605" width="0.2635%" height="15" fill="rgb(241,142,54)" fg:x="1985" fg:w="77"/><text x="7.0438%" y="7615.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (74 samples, 0.25%)</title><rect x="6.8040%" y="7589" width="0.2533%" height="15" fill="rgb(222,85,15)" fg:x="1988" fg:w="74"/><text x="7.0540%" y="7599.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (39 samples, 0.13%)</title><rect x="6.9238%" y="7573" width="0.1335%" height="15" fill="rgb(210,85,47)" fg:x="2023" fg:w="39"/><text x="7.1738%" y="7583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (39 samples, 0.13%)</title><rect x="6.9238%" y="7557" width="0.1335%" height="15" fill="rgb(224,206,25)" fg:x="2023" fg:w="39"/><text x="7.1738%" y="7567.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (39 samples, 0.13%)</title><rect x="6.9238%" y="7541" width="0.1335%" height="15" fill="rgb(243,201,19)" fg:x="2023" fg:w="39"/><text x="7.1738%" y="7551.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (38 samples, 0.13%)</title><rect x="6.9272%" y="7525" width="0.1301%" height="15" fill="rgb(236,59,4)" fg:x="2024" fg:w="38"/><text x="7.1772%" y="7535.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (23 samples, 0.08%)</title><rect x="6.9786%" y="7509" width="0.0787%" height="15" fill="rgb(254,179,45)" fg:x="2039" fg:w="23"/><text x="7.2286%" y="7519.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (23 samples, 0.08%)</title><rect x="6.9786%" y="7493" width="0.0787%" height="15" fill="rgb(226,14,10)" fg:x="2039" fg:w="23"/><text x="7.2286%" y="7503.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.08%)</title><rect x="6.9786%" y="7477" width="0.0787%" height="15" fill="rgb(244,27,41)" fg:x="2039" fg:w="23"/><text x="7.2286%" y="7487.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (22 samples, 0.08%)</title><rect x="6.9820%" y="7461" width="0.0753%" height="15" fill="rgb(235,35,32)" fg:x="2040" fg:w="22"/><text x="7.2320%" y="7471.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (11 samples, 0.04%)</title><rect x="7.0196%" y="7445" width="0.0376%" height="15" fill="rgb(218,68,31)" fg:x="2051" fg:w="11"/><text x="7.2696%" y="7455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;tetrs::logic::state::GameState&gt;&gt; (11 samples, 0.04%)</title><rect x="7.0196%" y="7429" width="0.0376%" height="15" fill="rgb(207,120,37)" fg:x="2051" fg:w="11"/><text x="7.2696%" y="7439.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (10 samples, 0.03%)</title><rect x="7.0231%" y="7413" width="0.0342%" height="15" fill="rgb(227,98,0)" fg:x="2052" fg:w="10"/><text x="7.2731%" y="7423.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.02%)</title><rect x="7.0573%" y="7765" width="0.0240%" height="15" fill="rgb(207,7,3)" fg:x="2062" fg:w="7"/><text x="7.3073%" y="7775.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.02%)</title><rect x="7.0573%" y="7749" width="0.0240%" height="15" fill="rgb(206,98,19)" fg:x="2062" fg:w="7"/><text x="7.3073%" y="7759.50"></text></g><g><title>cfree (7 samples, 0.02%)</title><rect x="7.0573%" y="7733" width="0.0240%" height="15" fill="rgb(217,5,26)" fg:x="2062" fg:w="7"/><text x="7.3073%" y="7743.50"></text></g><g><title>[libc.so.6] (7 samples, 0.02%)</title><rect x="7.0573%" y="7717" width="0.0240%" height="15" fill="rgb(235,190,38)" fg:x="2062" fg:w="7"/><text x="7.3073%" y="7727.50"></text></g><g><title>[libc.so.6] (7 samples, 0.02%)</title><rect x="7.0573%" y="7701" width="0.0240%" height="15" fill="rgb(247,86,24)" fg:x="2062" fg:w="7"/><text x="7.3073%" y="7711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;indexmap::Bucket&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;,i32&gt;&gt;&gt; (1,460 samples, 5.00%)</title><rect x="2.0912%" y="7813" width="4.9969%" height="15" fill="rgb(205,101,16)" fg:x="611" fg:w="1460"/><text x="2.3412%" y="7823.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;indexmap::Bucket&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;,i32&gt;&gt;&gt; (9 samples, 0.03%)</title><rect x="7.0573%" y="7797" width="0.0308%" height="15" fill="rgb(246,168,33)" fg:x="2062" fg:w="9"/><text x="7.3073%" y="7807.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.03%)</title><rect x="7.0573%" y="7781" width="0.0308%" height="15" fill="rgb(231,114,1)" fg:x="2062" fg:w="9"/><text x="7.3073%" y="7791.50"></text></g><g><title>core::ptr::drop_in_place&lt;priority_queue::priority_queue::PriorityQueue&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;,i32&gt;&gt; (1,468 samples, 5.02%)</title><rect x="2.0706%" y="7877" width="5.0243%" height="15" fill="rgb(207,184,53)" fg:x="605" fg:w="1468"/><text x="2.3206%" y="7887.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;priority_queue::store::Store&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;,i32&gt;&gt; (1,468 samples, 5.02%)</title><rect x="2.0706%" y="7861" width="5.0243%" height="15" fill="rgb(224,95,51)" fg:x="605" fg:w="1468"/><text x="2.3206%" y="7871.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;indexmap::map::IndexMap&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;,i32&gt;&gt; (1,462 samples, 5.00%)</title><rect x="2.0912%" y="7845" width="5.0038%" height="15" fill="rgb(212,188,45)" fg:x="611" fg:w="1462"/><text x="2.3412%" y="7855.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;indexmap::map::core::IndexMapCore&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;,i32&gt;&gt; (1,462 samples, 5.00%)</title><rect x="2.0912%" y="7829" width="5.0038%" height="15" fill="rgb(223,154,38)" fg:x="611" fg:w="1462"/><text x="2.3412%" y="7839.50">core::..</text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (3 samples, 0.01%)</title><rect x="7.1086%" y="7749" width="0.0103%" height="15" fill="rgb(251,22,52)" fg:x="2077" fg:w="3"/><text x="7.3586%" y="7759.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (3 samples, 0.01%)</title><rect x="7.1086%" y="7733" width="0.0103%" height="15" fill="rgb(229,209,22)" fg:x="2077" fg:w="3"/><text x="7.3586%" y="7743.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (3 samples, 0.01%)</title><rect x="7.1086%" y="7717" width="0.0103%" height="15" fill="rgb(234,138,34)" fg:x="2077" fg:w="3"/><text x="7.3586%" y="7727.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="7.1086%" y="7781" width="0.0137%" height="15" fill="rgb(212,95,11)" fg:x="2077" fg:w="4"/><text x="7.3586%" y="7791.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (4 samples, 0.01%)</title><rect x="7.1086%" y="7765" width="0.0137%" height="15" fill="rgb(240,179,47)" fg:x="2077" fg:w="4"/><text x="7.3586%" y="7775.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.07%)</title><rect x="7.0949%" y="7813" width="0.0650%" height="15" fill="rgb(240,163,11)" fg:x="2073" fg:w="19"/><text x="7.3449%" y="7823.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (19 samples, 0.07%)</title><rect x="7.0949%" y="7797" width="0.0650%" height="15" fill="rgb(236,37,12)" fg:x="2073" fg:w="19"/><text x="7.3449%" y="7807.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (11 samples, 0.04%)</title><rect x="7.1223%" y="7781" width="0.0376%" height="15" fill="rgb(232,164,16)" fg:x="2081" fg:w="11"/><text x="7.3723%" y="7791.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (11 samples, 0.04%)</title><rect x="7.1223%" y="7765" width="0.0376%" height="15" fill="rgb(244,205,15)" fg:x="2081" fg:w="11"/><text x="7.3723%" y="7775.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;,())&gt; (11 samples, 0.04%)</title><rect x="7.1223%" y="7749" width="0.0376%" height="15" fill="rgb(223,117,47)" fg:x="2081" fg:w="11"/><text x="7.3723%" y="7759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (11 samples, 0.04%)</title><rect x="7.1223%" y="7733" width="0.0376%" height="15" fill="rgb(244,107,35)" fg:x="2081" fg:w="11"/><text x="7.3723%" y="7743.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.04%)</title><rect x="7.1223%" y="7717" width="0.0376%" height="15" fill="rgb(205,140,8)" fg:x="2081" fg:w="11"/><text x="7.3723%" y="7727.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (3 samples, 0.01%)</title><rect x="7.1497%" y="7701" width="0.0103%" height="15" fill="rgb(228,84,46)" fg:x="2089" fg:w="3"/><text x="7.3997%" y="7711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (3 samples, 0.01%)</title><rect x="7.1497%" y="7685" width="0.0103%" height="15" fill="rgb(254,188,9)" fg:x="2089" fg:w="3"/><text x="7.3997%" y="7695.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="7.1497%" y="7669" width="0.0103%" height="15" fill="rgb(206,112,54)" fg:x="2089" fg:w="3"/><text x="7.3997%" y="7679.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u16&gt;]&gt; (3 samples, 0.01%)</title><rect x="7.1497%" y="7653" width="0.0103%" height="15" fill="rgb(216,84,49)" fg:x="2089" fg:w="3"/><text x="7.3997%" y="7663.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u16&gt;&gt; (3 samples, 0.01%)</title><rect x="7.1497%" y="7637" width="0.0103%" height="15" fill="rgb(214,194,35)" fg:x="2089" fg:w="3"/><text x="7.3997%" y="7647.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u16&gt;&gt; (3 samples, 0.01%)</title><rect x="7.1497%" y="7621" width="0.0103%" height="15" fill="rgb(249,28,3)" fg:x="2089" fg:w="3"/><text x="7.3997%" y="7631.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="7.1497%" y="7605" width="0.0103%" height="15" fill="rgb(222,56,52)" fg:x="2089" fg:w="3"/><text x="7.3997%" y="7615.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.01%)</title><rect x="7.1497%" y="7589" width="0.0103%" height="15" fill="rgb(245,217,50)" fg:x="2089" fg:w="3"/><text x="7.3997%" y="7599.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.01%)</title><rect x="7.1497%" y="7573" width="0.0103%" height="15" fill="rgb(213,201,24)" fg:x="2089" fg:w="3"/><text x="7.3997%" y="7583.50"></text></g><g><title>cfree (3 samples, 0.01%)</title><rect x="7.1497%" y="7557" width="0.0103%" height="15" fill="rgb(248,116,28)" fg:x="2089" fg:w="3"/><text x="7.3997%" y="7567.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (20 samples, 0.07%)</title><rect x="7.0949%" y="7877" width="0.0685%" height="15" fill="rgb(219,72,43)" fg:x="2073" fg:w="20"/><text x="7.3449%" y="7887.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;,std::collections::hash::map::RandomState&gt;&gt; (20 samples, 0.07%)</title><rect x="7.0949%" y="7861" width="0.0685%" height="15" fill="rgb(209,138,14)" fg:x="2073" fg:w="20"/><text x="7.3449%" y="7871.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;,(),std::collections::hash::map::RandomState&gt;&gt; (20 samples, 0.07%)</title><rect x="7.0949%" y="7845" width="0.0685%" height="15" fill="rgb(222,18,33)" fg:x="2073" fg:w="20"/><text x="7.3449%" y="7855.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;,())&gt;&gt; (20 samples, 0.07%)</title><rect x="7.0949%" y="7829" width="0.0685%" height="15" fill="rgb(213,199,7)" fg:x="2073" fg:w="20"/><text x="7.3449%" y="7839.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::swap_remove_finish (10 samples, 0.03%)</title><rect x="7.1702%" y="7845" width="0.0342%" height="15" fill="rgb(250,110,10)" fg:x="2095" fg:w="10"/><text x="7.4202%" y="7855.50"></text></g><g><title>indexmap::map::core::update_index (8 samples, 0.03%)</title><rect x="7.1771%" y="7829" width="0.0274%" height="15" fill="rgb(248,123,6)" fg:x="2097" fg:w="8"/><text x="7.4271%" y="7839.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get_mut (8 samples, 0.03%)</title><rect x="7.1771%" y="7813" width="0.0274%" height="15" fill="rgb(206,91,31)" fg:x="2097" fg:w="8"/><text x="7.4271%" y="7823.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (8 samples, 0.03%)</title><rect x="7.1771%" y="7797" width="0.0274%" height="15" fill="rgb(211,154,13)" fg:x="2097" fg:w="8"/><text x="7.4271%" y="7807.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_inner (8 samples, 0.03%)</title><rect x="7.1771%" y="7781" width="0.0274%" height="15" fill="rgb(225,148,7)" fg:x="2097" fg:w="8"/><text x="7.4271%" y="7791.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_byte (3 samples, 0.01%)</title><rect x="7.1942%" y="7765" width="0.0103%" height="15" fill="rgb(220,160,43)" fg:x="2102" fg:w="3"/><text x="7.4442%" y="7775.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (3 samples, 0.01%)</title><rect x="7.1942%" y="7749" width="0.0103%" height="15" fill="rgb(213,52,39)" fg:x="2102" fg:w="3"/><text x="7.4442%" y="7759.50"></text></g><g><title>hashbrown::raw::inner::bitmask::BitMask::leading_zeros (3 samples, 0.01%)</title><rect x="7.2045%" y="7765" width="0.0103%" height="15" fill="rgb(243,137,7)" fg:x="2105" fg:w="3"/><text x="7.4545%" y="7775.50"></text></g><g><title>core::num::&lt;impl u16&gt;::leading_zeros (3 samples, 0.01%)</title><rect x="7.2045%" y="7749" width="0.0103%" height="15" fill="rgb(230,79,13)" fg:x="2105" fg:w="3"/><text x="7.4545%" y="7759.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::erase (6 samples, 0.02%)</title><rect x="7.2045%" y="7813" width="0.0205%" height="15" fill="rgb(247,105,23)" fg:x="2105" fg:w="6"/><text x="7.4545%" y="7823.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::erase_no_drop (6 samples, 0.02%)</title><rect x="7.2045%" y="7797" width="0.0205%" height="15" fill="rgb(223,179,41)" fg:x="2105" fg:w="6"/><text x="7.4545%" y="7807.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::erase (6 samples, 0.02%)</title><rect x="7.2045%" y="7781" width="0.0205%" height="15" fill="rgb(218,9,34)" fg:x="2105" fg:w="6"/><text x="7.4545%" y="7791.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_empty (3 samples, 0.01%)</title><rect x="7.2147%" y="7765" width="0.0103%" height="15" fill="rgb(222,106,8)" fg:x="2108" fg:w="3"/><text x="7.4647%" y="7775.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_byte (3 samples, 0.01%)</title><rect x="7.2147%" y="7749" width="0.0103%" height="15" fill="rgb(211,220,0)" fg:x="2108" fg:w="3"/><text x="7.4647%" y="7759.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::swap_remove_index (27 samples, 0.09%)</title><rect x="7.1668%" y="7861" width="0.0924%" height="15" fill="rgb(229,52,16)" fg:x="2094" fg:w="27"/><text x="7.4168%" y="7871.50"></text></g><g><title>indexmap::map::core::erase_index (16 samples, 0.05%)</title><rect x="7.2045%" y="7845" width="0.0548%" height="15" fill="rgb(212,155,18)" fg:x="2105" fg:w="16"/><text x="7.4545%" y="7855.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::erase_entry (16 samples, 0.05%)</title><rect x="7.2045%" y="7829" width="0.0548%" height="15" fill="rgb(242,21,14)" fg:x="2105" fg:w="16"/><text x="7.4545%" y="7839.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (10 samples, 0.03%)</title><rect x="7.2250%" y="7813" width="0.0342%" height="15" fill="rgb(222,19,48)" fg:x="2111" fg:w="10"/><text x="7.4750%" y="7823.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_inner (9 samples, 0.03%)</title><rect x="7.2284%" y="7797" width="0.0308%" height="15" fill="rgb(232,45,27)" fg:x="2112" fg:w="9"/><text x="7.4784%" y="7807.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_byte (3 samples, 0.01%)</title><rect x="7.2490%" y="7781" width="0.0103%" height="15" fill="rgb(249,103,42)" fg:x="2118" fg:w="3"/><text x="7.4990%" y="7791.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (3 samples, 0.01%)</title><rect x="7.2490%" y="7765" width="0.0103%" height="15" fill="rgb(246,81,33)" fg:x="2118" fg:w="3"/><text x="7.4990%" y="7775.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::gt (8 samples, 0.03%)</title><rect x="7.3551%" y="7845" width="0.0274%" height="15" fill="rgb(252,33,42)" fg:x="2149" fg:w="8"/><text x="7.6051%" y="7855.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (5 samples, 0.02%)</title><rect x="7.3961%" y="7829" width="0.0171%" height="15" fill="rgb(209,212,41)" fg:x="2161" fg:w="5"/><text x="7.6461%" y="7839.50"></text></g><g><title>priority_queue::store::Store&lt;I,P,H&gt;::get_priority_from_position (7 samples, 0.02%)</title><rect x="7.3927%" y="7845" width="0.0240%" height="15" fill="rgb(207,154,6)" fg:x="2160" fg:w="7"/><text x="7.6427%" y="7855.50"></text></g><g><title>priority_queue::priority_queue::PriorityQueue&lt;I,P,H&gt;::heapify (50 samples, 0.17%)</title><rect x="7.2592%" y="7861" width="0.1711%" height="15" fill="rgb(223,64,47)" fg:x="2121" fg:w="50"/><text x="7.5092%" y="7871.50"></text></g><g><title>priority_queue::store::Store&lt;I,P,H&gt;::swap (4 samples, 0.01%)</title><rect x="7.4167%" y="7845" width="0.0137%" height="15" fill="rgb(211,161,38)" fg:x="2167" fg:w="4"/><text x="7.6667%" y="7855.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (4 samples, 0.01%)</title><rect x="7.4167%" y="7829" width="0.0137%" height="15" fill="rgb(219,138,40)" fg:x="2167" fg:w="4"/><text x="7.6667%" y="7839.50"></text></g><g><title>priority_queue::priority_queue::PriorityQueue&lt;I,P,H&gt;::pop (86 samples, 0.29%)</title><rect x="7.1634%" y="7877" width="0.2943%" height="15" fill="rgb(241,228,46)" fg:x="2093" fg:w="86"/><text x="7.4134%" y="7887.50"></text></g><g><title>priority_queue::store::Store&lt;I,P,H&gt;::swap_remove (8 samples, 0.03%)</title><rect x="7.4304%" y="7861" width="0.0274%" height="15" fill="rgb(223,209,38)" fg:x="2171" fg:w="8"/><text x="7.6804%" y="7871.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (48 samples, 0.16%)</title><rect x="7.5809%" y="7797" width="0.1643%" height="15" fill="rgb(236,164,45)" fg:x="2215" fg:w="48"/><text x="7.8309%" y="7807.50"></text></g><g><title>alloc::alloc::Global::grow_impl (48 samples, 0.16%)</title><rect x="7.5809%" y="7781" width="0.1643%" height="15" fill="rgb(231,15,5)" fg:x="2215" fg:w="48"/><text x="7.8309%" y="7791.50"></text></g><g><title>alloc::alloc::realloc (48 samples, 0.16%)</title><rect x="7.5809%" y="7765" width="0.1643%" height="15" fill="rgb(252,35,15)" fg:x="2215" fg:w="48"/><text x="7.8309%" y="7775.50"></text></g><g><title>realloc (46 samples, 0.16%)</title><rect x="7.5878%" y="7749" width="0.1574%" height="15" fill="rgb(248,181,18)" fg:x="2217" fg:w="46"/><text x="7.8378%" y="7759.50"></text></g><g><title>[libc.so.6] (41 samples, 0.14%)</title><rect x="7.6049%" y="7733" width="0.1403%" height="15" fill="rgb(233,39,42)" fg:x="2222" fg:w="41"/><text x="7.8549%" y="7743.50"></text></g><g><title>[libc.so.6] (38 samples, 0.13%)</title><rect x="7.6152%" y="7717" width="0.1301%" height="15" fill="rgb(238,110,33)" fg:x="2225" fg:w="38"/><text x="7.8652%" y="7727.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="7.7315%" y="7701" width="0.0137%" height="15" fill="rgb(233,195,10)" fg:x="2259" fg:w="4"/><text x="7.9815%" y="7711.50"></text></g><g><title>alloc::raw_vec::finish_grow (55 samples, 0.19%)</title><rect x="7.5604%" y="7813" width="0.1882%" height="15" fill="rgb(254,105,3)" fg:x="2209" fg:w="55"/><text x="7.8104%" y="7823.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (58 samples, 0.20%)</title><rect x="7.5536%" y="7845" width="0.1985%" height="15" fill="rgb(221,225,9)" fg:x="2207" fg:w="58"/><text x="7.8036%" y="7855.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (58 samples, 0.20%)</title><rect x="7.5536%" y="7829" width="0.1985%" height="15" fill="rgb(224,227,45)" fg:x="2207" fg:w="58"/><text x="7.8036%" y="7839.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (74 samples, 0.25%)</title><rect x="7.5056%" y="7861" width="0.2533%" height="15" fill="rgb(229,198,43)" fg:x="2193" fg:w="74"/><text x="7.7556%" y="7871.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (225 samples, 0.77%)</title><rect x="7.8137%" y="7797" width="0.7701%" height="15" fill="rgb(206,209,35)" fg:x="2283" fg:w="225"/><text x="8.0637%" y="7807.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (183 samples, 0.63%)</title><rect x="7.9574%" y="7781" width="0.6263%" height="15" fill="rgb(245,195,53)" fg:x="2325" fg:w="183"/><text x="8.2074%" y="7791.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (6 samples, 0.02%)</title><rect x="8.6625%" y="7717" width="0.0205%" height="15" fill="rgb(240,92,26)" fg:x="2531" fg:w="6"/><text x="8.9125%" y="7727.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for char&gt;::hash (38 samples, 0.13%)</title><rect x="8.5837%" y="7797" width="0.1301%" height="15" fill="rgb(207,40,23)" fg:x="2508" fg:w="38"/><text x="8.8337%" y="7807.50"></text></g><g><title>core::hash::Hasher::write_u32 (36 samples, 0.12%)</title><rect x="8.5906%" y="7781" width="0.1232%" height="15" fill="rgb(223,111,35)" fg:x="2510" fg:w="36"/><text x="8.8406%" y="7791.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (34 samples, 0.12%)</title><rect x="8.5974%" y="7765" width="0.1164%" height="15" fill="rgb(229,147,28)" fg:x="2512" fg:w="34"/><text x="8.8474%" y="7775.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (32 samples, 0.11%)</title><rect x="8.6043%" y="7749" width="0.1095%" height="15" fill="rgb(211,29,28)" fg:x="2514" fg:w="32"/><text x="8.8543%" y="7759.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (32 samples, 0.11%)</title><rect x="8.6043%" y="7733" width="0.1095%" height="15" fill="rgb(228,72,33)" fg:x="2514" fg:w="32"/><text x="8.8543%" y="7743.50"></text></g><g><title>core::hash::sip::u8to64_le (9 samples, 0.03%)</title><rect x="8.6830%" y="7717" width="0.0308%" height="15" fill="rgb(205,214,31)" fg:x="2537" fg:w="9"/><text x="8.9330%" y="7727.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.01%)</title><rect x="8.7035%" y="7701" width="0.0103%" height="15" fill="rgb(224,111,15)" fg:x="2543" fg:w="3"/><text x="8.9535%" y="7711.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (141 samples, 0.48%)</title><rect x="11.6914%" y="7701" width="0.4826%" height="15" fill="rgb(253,21,26)" fg:x="3416" fg:w="141"/><text x="11.9414%" y="7711.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (271 samples, 0.93%)</title><rect x="11.5716%" y="7717" width="0.9275%" height="15" fill="rgb(245,139,43)" fg:x="3381" fg:w="271"/><text x="11.8216%" y="7727.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (95 samples, 0.33%)</title><rect x="12.1740%" y="7701" width="0.3251%" height="15" fill="rgb(252,170,7)" fg:x="3557" fg:w="95"/><text x="12.4240%" y="7711.50"></text></g><g><title>core::cmp::min (114 samples, 0.39%)</title><rect x="12.4991%" y="7717" width="0.3902%" height="15" fill="rgb(231,118,14)" fg:x="3652" fg:w="114"/><text x="12.7491%" y="7727.50"></text></g><g><title>core::cmp::Ord::min (114 samples, 0.39%)</title><rect x="12.4991%" y="7701" width="0.3902%" height="15" fill="rgb(238,83,0)" fg:x="3652" fg:w="114"/><text x="12.7491%" y="7711.50"></text></g><g><title>core::cmp::min_by (114 samples, 0.39%)</title><rect x="12.4991%" y="7685" width="0.3902%" height="15" fill="rgb(221,39,39)" fg:x="3652" fg:w="114"/><text x="12.7491%" y="7695.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2,172 samples, 7.43%)</title><rect x="8.9157%" y="7765" width="7.4338%" height="15" fill="rgb(222,119,46)" fg:x="2605" fg:w="2172"/><text x="9.1657%" y="7775.50">&lt;std::coll..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2,156 samples, 7.38%)</title><rect x="8.9705%" y="7749" width="7.3790%" height="15" fill="rgb(222,165,49)" fg:x="2621" fg:w="2156"/><text x="9.2205%" y="7759.50">&lt;core::has..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2,156 samples, 7.38%)</title><rect x="8.9705%" y="7733" width="7.3790%" height="15" fill="rgb(219,113,52)" fg:x="2621" fg:w="2156"/><text x="9.2205%" y="7743.50">&lt;core::has..</text></g><g><title>core::hash::sip::u8to64_le (1,011 samples, 3.46%)</title><rect x="12.8893%" y="7717" width="3.4602%" height="15" fill="rgb(214,7,15)" fg:x="3766" fg:w="1011"/><text x="13.1393%" y="7727.50">cor..</text></g><g><title>core::intrinsics::copy_nonoverlapping (25 samples, 0.09%)</title><rect x="16.2639%" y="7701" width="0.0856%" height="15" fill="rgb(235,32,4)" fg:x="4752" fg:w="25"/><text x="16.5139%" y="7711.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::hash::Hash&gt;::hash (2,682 samples, 9.18%)</title><rect x="7.7966%" y="7829" width="9.1793%" height="15" fill="rgb(238,90,54)" fg:x="2278" fg:w="2682"/><text x="8.0466%" y="7839.50">&lt;alloc::rc::R..</text></g><g><title>&lt;tetrs::logic::state::GameState as core::hash::Hash&gt;::hash (2,682 samples, 9.18%)</title><rect x="7.7966%" y="7813" width="9.1793%" height="15" fill="rgb(213,208,19)" fg:x="2278" fg:w="2682"/><text x="8.0466%" y="7823.50">&lt;tetrs::logic..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (2,414 samples, 8.26%)</title><rect x="8.7138%" y="7797" width="8.2620%" height="15" fill="rgb(233,156,4)" fg:x="2546" fg:w="2414"/><text x="8.9638%" y="7807.50">core::hash::..</text></g><g><title>core::hash::Hasher::write_u16 (2,414 samples, 8.26%)</title><rect x="8.7138%" y="7781" width="8.2620%" height="15" fill="rgb(207,194,5)" fg:x="2546" fg:w="2414"/><text x="8.9638%" y="7791.50">core::hash::..</text></g><g><title>core::num::&lt;impl u16&gt;::to_ne_bytes (183 samples, 0.63%)</title><rect x="16.3495%" y="7765" width="0.6263%" height="15" fill="rgb(206,111,30)" fg:x="4777" fg:w="183"/><text x="16.5995%" y="7775.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (11 samples, 0.04%)</title><rect x="17.2120%" y="7765" width="0.0376%" height="15" fill="rgb(243,70,54)" fg:x="5029" fg:w="11"/><text x="17.4620%" y="7775.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (20 samples, 0.07%)</title><rect x="17.2086%" y="7781" width="0.0685%" height="15" fill="rgb(242,28,8)" fg:x="5028" fg:w="20"/><text x="17.4586%" y="7791.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (8 samples, 0.03%)</title><rect x="17.2496%" y="7765" width="0.0274%" height="15" fill="rgb(219,106,18)" fg:x="5040" fg:w="8"/><text x="17.4996%" y="7775.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (37 samples, 0.13%)</title><rect x="17.2941%" y="7765" width="0.1266%" height="15" fill="rgb(244,222,10)" fg:x="5053" fg:w="37"/><text x="17.5441%" y="7775.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (136 samples, 0.47%)</title><rect x="16.9758%" y="7829" width="0.4655%" height="15" fill="rgb(236,179,52)" fg:x="4960" fg:w="136"/><text x="17.2258%" y="7839.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (136 samples, 0.47%)</title><rect x="16.9758%" y="7813" width="0.4655%" height="15" fill="rgb(213,23,39)" fg:x="4960" fg:w="136"/><text x="17.2258%" y="7823.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (136 samples, 0.47%)</title><rect x="16.9758%" y="7797" width="0.4655%" height="15" fill="rgb(238,48,10)" fg:x="4960" fg:w="136"/><text x="17.2258%" y="7807.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (48 samples, 0.16%)</title><rect x="17.2770%" y="7781" width="0.1643%" height="15" fill="rgb(251,196,23)" fg:x="5048" fg:w="48"/><text x="17.5270%" y="7791.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (6 samples, 0.02%)</title><rect x="17.4208%" y="7765" width="0.0205%" height="15" fill="rgb(250,152,24)" fg:x="5090" fg:w="6"/><text x="17.6708%" y="7775.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (2,820 samples, 9.65%)</title><rect x="7.7966%" y="7845" width="9.6516%" height="15" fill="rgb(209,150,17)" fg:x="2278" fg:w="2820"/><text x="8.0466%" y="7855.50">indexmap::map:..</text></g><g><title>&lt;hashbrown::raw::inner::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.04%)</title><rect x="17.4824%" y="7797" width="0.0411%" height="15" fill="rgb(234,202,34)" fg:x="5108" fg:w="12"/><text x="17.7324%" y="7807.50"></text></g><g><title>hashbrown::raw::inner::ProbeSeq::move_next (5 samples, 0.02%)</title><rect x="17.5234%" y="7797" width="0.0171%" height="15" fill="rgb(253,148,53)" fg:x="5120" fg:w="5"/><text x="17.7734%" y="7807.50"></text></g><g><title>[libc.so.6] (29 samples, 0.10%)</title><rect x="17.5885%" y="7525" width="0.0993%" height="15" fill="rgb(218,129,16)" fg:x="5139" fg:w="29"/><text x="17.8385%" y="7535.50"></text></g><g><title>&lt;tetrs::logic::state::GameState as core::cmp::PartialEq&gt;::eq (41 samples, 0.14%)</title><rect x="17.5508%" y="7717" width="0.1403%" height="15" fill="rgb(216,85,19)" fg:x="5128" fg:w="41"/><text x="17.8008%" y="7727.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (41 samples, 0.14%)</title><rect x="17.5508%" y="7701" width="0.1403%" height="15" fill="rgb(235,228,7)" fg:x="5128" fg:w="41"/><text x="17.8008%" y="7711.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (41 samples, 0.14%)</title><rect x="17.5508%" y="7685" width="0.1403%" height="15" fill="rgb(245,175,0)" fg:x="5128" fg:w="41"/><text x="17.8008%" y="7695.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (41 samples, 0.14%)</title><rect x="17.5508%" y="7669" width="0.1403%" height="15" fill="rgb(208,168,36)" fg:x="5128" fg:w="41"/><text x="17.8008%" y="7679.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (37 samples, 0.13%)</title><rect x="17.5645%" y="7653" width="0.1266%" height="15" fill="rgb(246,171,24)" fg:x="5132" fg:w="37"/><text x="17.8145%" y="7663.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (37 samples, 0.13%)</title><rect x="17.5645%" y="7637" width="0.1266%" height="15" fill="rgb(215,142,24)" fg:x="5132" fg:w="37"/><text x="17.8145%" y="7647.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (35 samples, 0.12%)</title><rect x="17.5714%" y="7621" width="0.1198%" height="15" fill="rgb(250,187,7)" fg:x="5134" fg:w="35"/><text x="17.8214%" y="7631.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::_{{closure}} (35 samples, 0.12%)</title><rect x="17.5714%" y="7605" width="0.1198%" height="15" fill="rgb(228,66,33)" fg:x="5134" fg:w="35"/><text x="17.8214%" y="7615.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (35 samples, 0.12%)</title><rect x="17.5714%" y="7589" width="0.1198%" height="15" fill="rgb(234,215,21)" fg:x="5134" fg:w="35"/><text x="17.8214%" y="7599.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (35 samples, 0.12%)</title><rect x="17.5714%" y="7573" width="0.1198%" height="15" fill="rgb(222,191,20)" fg:x="5134" fg:w="35"/><text x="17.8214%" y="7583.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (35 samples, 0.12%)</title><rect x="17.5714%" y="7557" width="0.1198%" height="15" fill="rgb(245,79,54)" fg:x="5134" fg:w="35"/><text x="17.8214%" y="7567.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (35 samples, 0.12%)</title><rect x="17.5714%" y="7541" width="0.1198%" height="15" fill="rgb(240,10,37)" fg:x="5134" fg:w="35"/><text x="17.8214%" y="7551.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find::_{{closure}} (47 samples, 0.16%)</title><rect x="17.5406%" y="7797" width="0.1609%" height="15" fill="rgb(214,192,32)" fg:x="5125" fg:w="47"/><text x="17.7906%" y="7807.50"></text></g><g><title>indexmap::map::core::equivalent::_{{closure}} (46 samples, 0.16%)</title><rect x="17.5440%" y="7781" width="0.1574%" height="15" fill="rgb(209,36,54)" fg:x="5126" fg:w="46"/><text x="17.7940%" y="7791.50"></text></g><g><title>&lt;Q as indexmap::equivalent::Equivalent&lt;K&gt;&gt;::equivalent (46 samples, 0.16%)</title><rect x="17.5440%" y="7765" width="0.1574%" height="15" fill="rgb(220,10,11)" fg:x="5126" fg:w="46"/><text x="17.7940%" y="7775.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::cmp::PartialEq&gt;::eq (46 samples, 0.16%)</title><rect x="17.5440%" y="7749" width="0.1574%" height="15" fill="rgb(221,106,17)" fg:x="5126" fg:w="46"/><text x="17.7940%" y="7759.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as alloc::rc::RcEqIdent&lt;T,A&gt;&gt;::eq (46 samples, 0.16%)</title><rect x="17.5440%" y="7733" width="0.1574%" height="15" fill="rgb(251,142,44)" fg:x="5126" fg:w="46"/><text x="17.7940%" y="7743.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::ptr_eq (3 samples, 0.01%)</title><rect x="17.6911%" y="7717" width="0.0103%" height="15" fill="rgb(238,13,15)" fg:x="5169" fg:w="3"/><text x="17.9411%" y="7727.50"></text></g><g><title>hashbrown::raw::inner::h2 (10 samples, 0.03%)</title><rect x="17.7014%" y="7797" width="0.0342%" height="15" fill="rgb(208,107,27)" fg:x="5172" fg:w="10"/><text x="17.9514%" y="7807.50"></text></g><g><title>hashbrown::raw::inner::likely (11 samples, 0.04%)</title><rect x="17.7356%" y="7797" width="0.0376%" height="15" fill="rgb(205,136,37)" fg:x="5182" fg:w="11"/><text x="17.9856%" y="7807.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::load (12 samples, 0.04%)</title><rect x="17.7733%" y="7797" width="0.0411%" height="15" fill="rgb(250,205,27)" fg:x="5193" fg:w="12"/><text x="18.0233%" y="7807.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (12 samples, 0.04%)</title><rect x="17.7733%" y="7781" width="0.0411%" height="15" fill="rgb(210,80,43)" fg:x="5193" fg:w="12"/><text x="18.0233%" y="7791.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (12 samples, 0.04%)</title><rect x="17.7733%" y="7765" width="0.0411%" height="15" fill="rgb(247,160,36)" fg:x="5193" fg:w="12"/><text x="18.0233%" y="7775.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_byte (7 samples, 0.02%)</title><rect x="17.8144%" y="7797" width="0.0240%" height="15" fill="rgb(234,13,49)" fg:x="5205" fg:w="7"/><text x="18.0644%" y="7807.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (7 samples, 0.02%)</title><rect x="17.8144%" y="7781" width="0.0240%" height="15" fill="rgb(234,122,0)" fg:x="5205" fg:w="7"/><text x="18.0644%" y="7791.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::entry (2,965 samples, 10.15%)</title><rect x="7.7589%" y="7861" width="10.1479%" height="15" fill="rgb(207,146,38)" fg:x="2267" fg:w="2965"/><text x="8.0089%" y="7871.50">indexmap::map::..</text></g><g><title>indexmap::map::core::raw::&lt;impl indexmap::map::core::IndexMapCore&lt;K,V&gt;&gt;::entry (134 samples, 0.46%)</title><rect x="17.4481%" y="7845" width="0.4586%" height="15" fill="rgb(207,177,25)" fg:x="5098" fg:w="134"/><text x="17.6981%" y="7855.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (133 samples, 0.46%)</title><rect x="17.4516%" y="7829" width="0.4552%" height="15" fill="rgb(211,178,42)" fg:x="5099" fg:w="133"/><text x="17.7016%" y="7839.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_inner (133 samples, 0.46%)</title><rect x="17.4516%" y="7813" width="0.4552%" height="15" fill="rgb(230,69,54)" fg:x="5099" fg:w="133"/><text x="17.7016%" y="7823.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_empty (20 samples, 0.07%)</title><rect x="17.8383%" y="7797" width="0.0685%" height="15" fill="rgb(214,135,41)" fg:x="5212" fg:w="20"/><text x="18.0883%" y="7807.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_byte (20 samples, 0.07%)</title><rect x="17.8383%" y="7781" width="0.0685%" height="15" fill="rgb(237,67,25)" fg:x="5212" fg:w="20"/><text x="18.0883%" y="7791.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (20 samples, 0.07%)</title><rect x="17.8383%" y="7765" width="0.0685%" height="15" fill="rgb(222,189,50)" fg:x="5212" fg:w="20"/><text x="18.0883%" y="7775.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (63 samples, 0.22%)</title><rect x="17.9786%" y="7829" width="0.2156%" height="15" fill="rgb(245,148,34)" fg:x="5253" fg:w="63"/><text x="18.2286%" y="7839.50"></text></g><g><title>core::ptr::write (60 samples, 0.21%)</title><rect x="17.9889%" y="7813" width="0.2054%" height="15" fill="rgb(222,29,6)" fg:x="5256" fg:w="60"/><text x="18.2389%" y="7823.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::inner::RawTableInner&lt;hashbrown::raw::inner::alloc::inner::Global&gt;,hashbrown::raw::inner::RawTableInner&lt;hashbrown::raw::inner::alloc::inner::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (9 samples, 0.03%)</title><rect x="18.3141%" y="7749" width="0.0308%" height="15" fill="rgb(221,189,43)" fg:x="5351" fg:w="9"/><text x="18.5641%" y="7759.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.03%)</title><rect x="18.3141%" y="7733" width="0.0308%" height="15" fill="rgb(207,36,27)" fg:x="5351" fg:w="9"/><text x="18.5641%" y="7743.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::prepare_resize::_{{closure}} (8 samples, 0.03%)</title><rect x="18.3175%" y="7717" width="0.0274%" height="15" fill="rgb(217,90,24)" fg:x="5352" fg:w="8"/><text x="18.5675%" y="7727.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::free_buckets (6 samples, 0.02%)</title><rect x="18.3243%" y="7701" width="0.0205%" height="15" fill="rgb(224,66,35)" fg:x="5354" fg:w="6"/><text x="18.5743%" y="7711.50"></text></g><g><title>&lt;hashbrown::raw::inner::alloc::inner::Global as hashbrown::raw::inner::alloc::inner::Allocator&gt;::deallocate (6 samples, 0.02%)</title><rect x="18.3243%" y="7685" width="0.0205%" height="15" fill="rgb(221,13,50)" fg:x="5354" fg:w="6"/><text x="18.5743%" y="7695.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.02%)</title><rect x="18.3243%" y="7669" width="0.0205%" height="15" fill="rgb(236,68,49)" fg:x="5354" fg:w="6"/><text x="18.5743%" y="7679.50"></text></g><g><title>cfree (4 samples, 0.01%)</title><rect x="18.3312%" y="7653" width="0.0137%" height="15" fill="rgb(229,146,28)" fg:x="5356" fg:w="4"/><text x="18.5812%" y="7663.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="18.3312%" y="7637" width="0.0137%" height="15" fill="rgb(225,31,38)" fg:x="5356" fg:w="4"/><text x="18.5812%" y="7647.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (8 samples, 0.03%)</title><rect x="18.3449%" y="7749" width="0.0274%" height="15" fill="rgb(250,208,3)" fg:x="5360" fg:w="8"/><text x="18.5949%" y="7759.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::bucket_ptr (8 samples, 0.03%)</title><rect x="18.3722%" y="7749" width="0.0274%" height="15" fill="rgb(246,54,23)" fg:x="5368" fg:w="8"/><text x="18.6222%" y="7759.50"></text></g><g><title>hashbrown::raw::inner::bitmask::BitMask::lowest_set_bit (12 samples, 0.04%)</title><rect x="18.4338%" y="7717" width="0.0411%" height="15" fill="rgb(243,76,11)" fg:x="5386" fg:w="12"/><text x="18.6838%" y="7727.50"></text></g><g><title>hashbrown::raw::inner::is_full (4 samples, 0.01%)</title><rect x="18.4749%" y="7717" width="0.0137%" height="15" fill="rgb(245,21,50)" fg:x="5398" fg:w="4"/><text x="18.7249%" y="7727.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_empty_or_deleted (19 samples, 0.07%)</title><rect x="18.4886%" y="7717" width="0.0650%" height="15" fill="rgb(228,9,43)" fg:x="5402" fg:w="19"/><text x="18.7386%" y="7727.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (19 samples, 0.07%)</title><rect x="18.4886%" y="7701" width="0.0650%" height="15" fill="rgb(208,100,47)" fg:x="5402" fg:w="19"/><text x="18.7386%" y="7711.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_insert_slot (62 samples, 0.21%)</title><rect x="18.3996%" y="7733" width="0.2122%" height="15" fill="rgb(232,26,8)" fg:x="5376" fg:w="62"/><text x="18.6496%" y="7743.50"></text></g><g><title>hashbrown::raw::inner::unlikely (17 samples, 0.06%)</title><rect x="18.5536%" y="7717" width="0.0582%" height="15" fill="rgb(216,166,38)" fg:x="5421" fg:w="17"/><text x="18.8036%" y="7727.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::prepare_insert_slot (67 samples, 0.23%)</title><rect x="18.3996%" y="7749" width="0.2293%" height="15" fill="rgb(251,202,51)" fg:x="5376" fg:w="67"/><text x="18.6496%" y="7759.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::set_ctrl_h2 (5 samples, 0.02%)</title><rect x="18.6118%" y="7733" width="0.0171%" height="15" fill="rgb(254,216,34)" fg:x="5438" fg:w="5"/><text x="18.8618%" y="7743.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::set_ctrl (5 samples, 0.02%)</title><rect x="18.6118%" y="7717" width="0.0171%" height="15" fill="rgb(251,32,27)" fg:x="5438" fg:w="5"/><text x="18.8618%" y="7727.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::new_uninitialized (7 samples, 0.02%)</title><rect x="18.6289%" y="7717" width="0.0240%" height="15" fill="rgb(208,127,28)" fg:x="5443" fg:w="7"/><text x="18.8789%" y="7727.50"></text></g><g><title>hashbrown::raw::inner::alloc::inner::do_alloc (7 samples, 0.02%)</title><rect x="18.6289%" y="7701" width="0.0240%" height="15" fill="rgb(224,137,22)" fg:x="5443" fg:w="7"/><text x="18.8789%" y="7711.50"></text></g><g><title>&lt;hashbrown::raw::inner::alloc::inner::Global as hashbrown::raw::inner::alloc::inner::Allocator&gt;::allocate (7 samples, 0.02%)</title><rect x="18.6289%" y="7685" width="0.0240%" height="15" fill="rgb(254,70,32)" fg:x="5443" fg:w="7"/><text x="18.8789%" y="7695.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.02%)</title><rect x="18.6289%" y="7669" width="0.0240%" height="15" fill="rgb(229,75,37)" fg:x="5443" fg:w="7"/><text x="18.8789%" y="7679.50"></text></g><g><title>malloc (6 samples, 0.02%)</title><rect x="18.6323%" y="7653" width="0.0205%" height="15" fill="rgb(252,64,23)" fg:x="5444" fg:w="6"/><text x="18.8823%" y="7663.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="18.6392%" y="7637" width="0.0137%" height="15" fill="rgb(232,162,48)" fg:x="5446" fg:w="4"/><text x="18.8892%" y="7647.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::resize_inner (109 samples, 0.37%)</title><rect x="18.2833%" y="7765" width="0.3731%" height="15" fill="rgb(246,160,12)" fg:x="5342" fg:w="109"/><text x="18.5333%" y="7775.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::prepare_resize (8 samples, 0.03%)</title><rect x="18.6289%" y="7749" width="0.0274%" height="15" fill="rgb(247,166,0)" fg:x="5443" fg:w="8"/><text x="18.8789%" y="7759.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::fallible_with_capacity (8 samples, 0.03%)</title><rect x="18.6289%" y="7733" width="0.0274%" height="15" fill="rgb(249,219,21)" fg:x="5443" fg:w="8"/><text x="18.8789%" y="7743.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve (112 samples, 0.38%)</title><rect x="18.2764%" y="7813" width="0.3833%" height="15" fill="rgb(205,209,3)" fg:x="5340" fg:w="112"/><text x="18.5264%" y="7823.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (112 samples, 0.38%)</title><rect x="18.2764%" y="7797" width="0.3833%" height="15" fill="rgb(243,44,1)" fg:x="5340" fg:w="112"/><text x="18.5264%" y="7807.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::reserve_rehash_inner (112 samples, 0.38%)</title><rect x="18.2764%" y="7781" width="0.3833%" height="15" fill="rgb(206,159,16)" fg:x="5340" fg:w="112"/><text x="18.5264%" y="7791.50"></text></g><g><title>hashbrown::raw::inner::is_full (10 samples, 0.03%)</title><rect x="18.6940%" y="7797" width="0.0342%" height="15" fill="rgb(244,77,30)" fg:x="5462" fg:w="10"/><text x="18.9440%" y="7807.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_empty_or_deleted (3 samples, 0.01%)</title><rect x="18.7282%" y="7797" width="0.0103%" height="15" fill="rgb(218,69,12)" fg:x="5472" fg:w="3"/><text x="18.9782%" y="7807.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (3 samples, 0.01%)</title><rect x="18.7282%" y="7781" width="0.0103%" height="15" fill="rgb(212,87,7)" fg:x="5472" fg:w="3"/><text x="18.9782%" y="7791.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_insert_slot (30 samples, 0.10%)</title><rect x="18.6597%" y="7813" width="0.1027%" height="15" fill="rgb(245,114,25)" fg:x="5452" fg:w="30"/><text x="18.9097%" y="7823.50"></text></g><g><title>hashbrown::raw::inner::unlikely (7 samples, 0.02%)</title><rect x="18.7384%" y="7797" width="0.0240%" height="15" fill="rgb(210,61,42)" fg:x="5475" fg:w="7"/><text x="18.9884%" y="7807.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::record_item_insert_at (12 samples, 0.04%)</title><rect x="18.7624%" y="7813" width="0.0411%" height="15" fill="rgb(211,52,33)" fg:x="5482" fg:w="12"/><text x="19.0124%" y="7823.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::set_ctrl_h2 (5 samples, 0.02%)</title><rect x="18.7864%" y="7797" width="0.0171%" height="15" fill="rgb(234,58,33)" fg:x="5489" fg:w="5"/><text x="19.0364%" y="7807.50"></text></g><g><title>hashbrown::raw::inner::h2 (5 samples, 0.02%)</title><rect x="18.7864%" y="7781" width="0.0171%" height="15" fill="rgb(220,115,36)" fg:x="5489" fg:w="5"/><text x="19.0364%" y="7791.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::insert (179 samples, 0.61%)</title><rect x="18.1943%" y="7829" width="0.6126%" height="15" fill="rgb(243,153,54)" fg:x="5316" fg:w="179"/><text x="18.4443%" y="7839.50"></text></g><g><title>indexmap::map::core::VacantEntry&lt;K,V&gt;::insert (329 samples, 1.13%)</title><rect x="17.9068%" y="7861" width="1.1260%" height="15" fill="rgb(251,47,18)" fg:x="5232" fg:w="329"/><text x="18.1568%" y="7871.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::push (320 samples, 1.10%)</title><rect x="17.9376%" y="7845" width="1.0952%" height="15" fill="rgb(242,102,42)" fg:x="5241" fg:w="320"/><text x="18.1876%" y="7855.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::reserve_entries (66 samples, 0.23%)</title><rect x="18.8069%" y="7829" width="0.2259%" height="15" fill="rgb(234,31,38)" fg:x="5495" fg:w="66"/><text x="19.0569%" y="7839.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve_exact (66 samples, 0.23%)</title><rect x="18.8069%" y="7813" width="0.2259%" height="15" fill="rgb(221,117,51)" fg:x="5495" fg:w="66"/><text x="19.0569%" y="7823.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (66 samples, 0.23%)</title><rect x="18.8069%" y="7797" width="0.2259%" height="15" fill="rgb(212,20,18)" fg:x="5495" fg:w="66"/><text x="19.0569%" y="7807.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (66 samples, 0.23%)</title><rect x="18.8069%" y="7781" width="0.2259%" height="15" fill="rgb(245,133,36)" fg:x="5495" fg:w="66"/><text x="19.0569%" y="7791.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (66 samples, 0.23%)</title><rect x="18.8069%" y="7765" width="0.2259%" height="15" fill="rgb(212,6,19)" fg:x="5495" fg:w="66"/><text x="19.0569%" y="7775.50"></text></g><g><title>alloc::raw_vec::finish_grow (66 samples, 0.23%)</title><rect x="18.8069%" y="7749" width="0.2259%" height="15" fill="rgb(218,1,36)" fg:x="5495" fg:w="66"/><text x="19.0569%" y="7759.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (66 samples, 0.23%)</title><rect x="18.8069%" y="7733" width="0.2259%" height="15" fill="rgb(246,84,54)" fg:x="5495" fg:w="66"/><text x="19.0569%" y="7743.50"></text></g><g><title>alloc::alloc::Global::grow_impl (66 samples, 0.23%)</title><rect x="18.8069%" y="7717" width="0.2259%" height="15" fill="rgb(242,110,6)" fg:x="5495" fg:w="66"/><text x="19.0569%" y="7727.50"></text></g><g><title>alloc::alloc::realloc (66 samples, 0.23%)</title><rect x="18.8069%" y="7701" width="0.2259%" height="15" fill="rgb(214,47,5)" fg:x="5495" fg:w="66"/><text x="19.0569%" y="7711.50"></text></g><g><title>realloc (66 samples, 0.23%)</title><rect x="18.8069%" y="7685" width="0.2259%" height="15" fill="rgb(218,159,25)" fg:x="5495" fg:w="66"/><text x="19.0569%" y="7695.50"></text></g><g><title>[libc.so.6] (64 samples, 0.22%)</title><rect x="18.8137%" y="7669" width="0.2190%" height="15" fill="rgb(215,211,28)" fg:x="5497" fg:w="64"/><text x="19.0637%" y="7679.50"></text></g><g><title>[libc.so.6] (60 samples, 0.21%)</title><rect x="18.8274%" y="7653" width="0.2054%" height="15" fill="rgb(238,59,32)" fg:x="5501" fg:w="60"/><text x="19.0774%" y="7663.50"></text></g><g><title>[libc.so.6] (33 samples, 0.11%)</title><rect x="18.9198%" y="7637" width="0.1129%" height="15" fill="rgb(226,82,3)" fg:x="5528" fg:w="33"/><text x="19.1698%" y="7647.50"></text></g><g><title>[libc.so.6] (11 samples, 0.04%)</title><rect x="18.9951%" y="7621" width="0.0376%" height="15" fill="rgb(240,164,32)" fg:x="5550" fg:w="11"/><text x="19.2451%" y="7631.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::lt (13 samples, 0.04%)</title><rect x="19.1697%" y="7845" width="0.0445%" height="15" fill="rgb(232,46,7)" fg:x="5601" fg:w="13"/><text x="19.4197%" y="7855.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i32&gt;::lt (11 samples, 0.04%)</title><rect x="19.1765%" y="7829" width="0.0376%" height="15" fill="rgb(229,129,53)" fg:x="5603" fg:w="11"/><text x="19.4265%" y="7839.50"></text></g><g><title>priority_queue::priority_queue::parent (3 samples, 0.01%)</title><rect x="19.2176%" y="7845" width="0.0103%" height="15" fill="rgb(234,188,29)" fg:x="5615" fg:w="3"/><text x="19.4676%" y="7855.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (4 samples, 0.01%)</title><rect x="19.2279%" y="7829" width="0.0137%" height="15" fill="rgb(246,141,4)" fg:x="5618" fg:w="4"/><text x="19.4779%" y="7839.50"></text></g><g><title>priority_queue::priority_queue::PriorityQueue&lt;I,P,H&gt;::push (3,451 samples, 11.81%)</title><rect x="7.4577%" y="7877" width="11.8112%" height="15" fill="rgb(229,23,39)" fg:x="2179" fg:w="3451"/><text x="7.7077%" y="7887.50">priority_queue::pr..</text></g><g><title>priority_queue::priority_queue::PriorityQueue&lt;I,P,H&gt;::bubble_up (69 samples, 0.24%)</title><rect x="19.0328%" y="7861" width="0.2362%" height="15" fill="rgb(206,12,3)" fg:x="5561" fg:w="69"/><text x="19.2828%" y="7871.50"></text></g><g><title>priority_queue::store::Store&lt;I,P,H&gt;::get_priority_from_position (12 samples, 0.04%)</title><rect x="19.2279%" y="7845" width="0.0411%" height="15" fill="rgb(252,226,20)" fg:x="5618" fg:w="12"/><text x="19.4779%" y="7855.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index (8 samples, 0.03%)</title><rect x="19.2416%" y="7829" width="0.0274%" height="15" fill="rgb(216,123,35)" fg:x="5622" fg:w="8"/><text x="19.4916%" y="7839.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (8 samples, 0.03%)</title><rect x="19.2416%" y="7813" width="0.0274%" height="15" fill="rgb(212,68,40)" fg:x="5622" fg:w="8"/><text x="19.4916%" y="7823.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (8 samples, 0.03%)</title><rect x="19.2416%" y="7797" width="0.0274%" height="15" fill="rgb(254,125,32)" fg:x="5622" fg:w="8"/><text x="19.4916%" y="7807.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (6 samples, 0.02%)</title><rect x="19.4401%" y="7733" width="0.0205%" height="15" fill="rgb(253,97,22)" fg:x="5680" fg:w="6"/><text x="19.6901%" y="7743.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (52 samples, 0.18%)</title><rect x="19.4161%" y="7749" width="0.1780%" height="15" fill="rgb(241,101,14)" fg:x="5673" fg:w="52"/><text x="19.6661%" y="7759.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (39 samples, 0.13%)</title><rect x="19.4606%" y="7733" width="0.1335%" height="15" fill="rgb(238,103,29)" fg:x="5686" fg:w="39"/><text x="19.7106%" y="7743.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (37 samples, 0.13%)</title><rect x="19.6146%" y="7733" width="0.1266%" height="15" fill="rgb(233,195,47)" fg:x="5731" fg:w="37"/><text x="19.8646%" y="7743.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (121 samples, 0.41%)</title><rect x="19.3408%" y="7797" width="0.4141%" height="15" fill="rgb(246,218,30)" fg:x="5651" fg:w="121"/><text x="19.5908%" y="7807.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (121 samples, 0.41%)</title><rect x="19.3408%" y="7781" width="0.4141%" height="15" fill="rgb(219,145,47)" fg:x="5651" fg:w="121"/><text x="19.5908%" y="7791.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (121 samples, 0.41%)</title><rect x="19.3408%" y="7765" width="0.4141%" height="15" fill="rgb(243,12,26)" fg:x="5651" fg:w="121"/><text x="19.5908%" y="7775.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (47 samples, 0.16%)</title><rect x="19.5941%" y="7749" width="0.1609%" height="15" fill="rgb(214,87,16)" fg:x="5725" fg:w="47"/><text x="19.8441%" y="7759.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (4 samples, 0.01%)</title><rect x="19.7413%" y="7733" width="0.0137%" height="15" fill="rgb(208,99,42)" fg:x="5768" fg:w="4"/><text x="19.9913%" y="7743.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (8 samples, 0.03%)</title><rect x="19.7549%" y="7797" width="0.0274%" height="15" fill="rgb(253,99,2)" fg:x="5772" fg:w="8"/><text x="20.0049%" y="7807.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (4 samples, 0.01%)</title><rect x="19.7686%" y="7781" width="0.0137%" height="15" fill="rgb(220,168,23)" fg:x="5776" fg:w="4"/><text x="20.0186%" y="7791.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (4 samples, 0.01%)</title><rect x="19.7686%" y="7765" width="0.0137%" height="15" fill="rgb(242,38,24)" fg:x="5776" fg:w="4"/><text x="20.0186%" y="7775.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (4 samples, 0.01%)</title><rect x="19.7686%" y="7749" width="0.0137%" height="15" fill="rgb(225,182,9)" fg:x="5776" fg:w="4"/><text x="20.0186%" y="7759.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (5 samples, 0.02%)</title><rect x="20.0287%" y="7749" width="0.0171%" height="15" fill="rgb(243,178,37)" fg:x="5852" fg:w="5"/><text x="20.2787%" y="7759.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.02%)</title><rect x="20.0287%" y="7733" width="0.0171%" height="15" fill="rgb(232,139,19)" fg:x="5852" fg:w="5"/><text x="20.2787%" y="7743.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (170 samples, 0.58%)</title><rect x="20.0459%" y="7749" width="0.5818%" height="15" fill="rgb(225,201,24)" fg:x="5857" fg:w="170"/><text x="20.2959%" y="7759.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (122 samples, 0.42%)</title><rect x="20.2101%" y="7733" width="0.4176%" height="15" fill="rgb(221,47,46)" fg:x="5905" fg:w="122"/><text x="20.4601%" y="7743.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.01%)</title><rect x="20.7269%" y="7653" width="0.0103%" height="15" fill="rgb(249,23,13)" fg:x="6056" fg:w="3"/><text x="20.9769%" y="7663.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (13 samples, 0.04%)</title><rect x="20.7167%" y="7669" width="0.0445%" height="15" fill="rgb(219,9,5)" fg:x="6053" fg:w="13"/><text x="20.9667%" y="7679.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (7 samples, 0.02%)</title><rect x="20.7372%" y="7653" width="0.0240%" height="15" fill="rgb(254,171,16)" fg:x="6059" fg:w="7"/><text x="20.9872%" y="7663.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (41 samples, 0.14%)</title><rect x="20.6517%" y="7717" width="0.1403%" height="15" fill="rgb(230,171,20)" fg:x="6034" fg:w="41"/><text x="20.9017%" y="7727.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (40 samples, 0.14%)</title><rect x="20.6551%" y="7701" width="0.1369%" height="15" fill="rgb(210,71,41)" fg:x="6035" fg:w="40"/><text x="20.9051%" y="7711.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (40 samples, 0.14%)</title><rect x="20.6551%" y="7685" width="0.1369%" height="15" fill="rgb(206,173,20)" fg:x="6035" fg:w="40"/><text x="20.9051%" y="7695.50"></text></g><g><title>core::hash::sip::u8to64_le (9 samples, 0.03%)</title><rect x="20.7612%" y="7669" width="0.0308%" height="15" fill="rgb(233,88,34)" fg:x="6066" fg:w="9"/><text x="21.0112%" y="7679.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (9 samples, 0.03%)</title><rect x="20.7612%" y="7653" width="0.0308%" height="15" fill="rgb(223,209,46)" fg:x="6066" fg:w="9"/><text x="21.0112%" y="7663.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for char&gt;::hash (59 samples, 0.20%)</title><rect x="20.6277%" y="7749" width="0.2019%" height="15" fill="rgb(250,43,18)" fg:x="6027" fg:w="59"/><text x="20.8777%" y="7759.50"></text></g><g><title>core::hash::Hasher::write_u32 (59 samples, 0.20%)</title><rect x="20.6277%" y="7733" width="0.2019%" height="15" fill="rgb(208,13,10)" fg:x="6027" fg:w="59"/><text x="20.8777%" y="7743.50"></text></g><g><title>core::num::&lt;impl u32&gt;::to_ne_bytes (11 samples, 0.04%)</title><rect x="20.7920%" y="7717" width="0.0376%" height="15" fill="rgb(212,200,36)" fg:x="6075" fg:w="11"/><text x="21.0420%" y="7727.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (113 samples, 0.39%)</title><rect x="22.1131%" y="7653" width="0.3867%" height="15" fill="rgb(225,90,30)" fg:x="6461" fg:w="113"/><text x="22.3631%" y="7663.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (255 samples, 0.87%)</title><rect x="21.9420%" y="7669" width="0.8727%" height="15" fill="rgb(236,182,39)" fg:x="6411" fg:w="255"/><text x="22.1920%" y="7679.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (92 samples, 0.31%)</title><rect x="22.4998%" y="7653" width="0.3149%" height="15" fill="rgb(212,144,35)" fg:x="6574" fg:w="92"/><text x="22.7498%" y="7663.50"></text></g><g><title>core::cmp::min (154 samples, 0.53%)</title><rect x="22.8181%" y="7669" width="0.5271%" height="15" fill="rgb(228,63,44)" fg:x="6667" fg:w="154"/><text x="23.0681%" y="7679.50"></text></g><g><title>core::cmp::Ord::min (154 samples, 0.53%)</title><rect x="22.8181%" y="7653" width="0.5271%" height="15" fill="rgb(228,109,6)" fg:x="6667" fg:w="154"/><text x="23.0681%" y="7663.50"></text></g><g><title>core::cmp::min_by (154 samples, 0.53%)</title><rect x="22.8181%" y="7637" width="0.5271%" height="15" fill="rgb(238,117,24)" fg:x="6667" fg:w="154"/><text x="23.0681%" y="7647.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (941 samples, 3.22%)</title><rect x="20.8296%" y="7717" width="3.2206%" height="15" fill="rgb(242,26,26)" fg:x="6086" fg:w="941"/><text x="21.0796%" y="7727.50">&lt;st..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (941 samples, 3.22%)</title><rect x="20.8296%" y="7701" width="3.2206%" height="15" fill="rgb(221,92,48)" fg:x="6086" fg:w="941"/><text x="21.0796%" y="7711.50">&lt;co..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (941 samples, 3.22%)</title><rect x="20.8296%" y="7685" width="3.2206%" height="15" fill="rgb(209,209,32)" fg:x="6086" fg:w="941"/><text x="21.0796%" y="7695.50">&lt;co..</text></g><g><title>core::hash::sip::u8to64_le (206 samples, 0.71%)</title><rect x="23.3452%" y="7669" width="0.7050%" height="15" fill="rgb(221,70,22)" fg:x="6821" fg:w="206"/><text x="23.5952%" y="7679.50"></text></g><g><title>hashbrown::map::make_hash (1,477 samples, 5.06%)</title><rect x="19.2963%" y="7829" width="5.0551%" height="15" fill="rgb(248,145,5)" fg:x="5638" fg:w="1477"/><text x="19.5463%" y="7839.50">hashbr..</text></g><g><title>core::hash::BuildHasher::hash_one (1,471 samples, 5.03%)</title><rect x="19.3169%" y="7813" width="5.0346%" height="15" fill="rgb(226,116,26)" fg:x="5644" fg:w="1471"/><text x="19.5669%" y="7823.50">core::..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1,335 samples, 4.57%)</title><rect x="19.7823%" y="7797" width="4.5691%" height="15" fill="rgb(244,5,17)" fg:x="5780" fg:w="1335"/><text x="20.0323%" y="7807.50">core:..</text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::hash::Hash&gt;::hash (1,335 samples, 4.57%)</title><rect x="19.7823%" y="7781" width="4.5691%" height="15" fill="rgb(252,159,33)" fg:x="5780" fg:w="1335"/><text x="20.0323%" y="7791.50">&lt;allo..</text></g><g><title>&lt;tetrs::logic::state::GameState as core::hash::Hash&gt;::hash (1,335 samples, 4.57%)</title><rect x="19.7823%" y="7765" width="4.5691%" height="15" fill="rgb(206,71,0)" fg:x="5780" fg:w="1335"/><text x="20.0323%" y="7775.50">&lt;tetr..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (1,029 samples, 3.52%)</title><rect x="20.8296%" y="7749" width="3.5218%" height="15" fill="rgb(233,118,54)" fg:x="6086" fg:w="1029"/><text x="21.0796%" y="7759.50">cor..</text></g><g><title>core::hash::Hasher::write_u16 (1,029 samples, 3.52%)</title><rect x="20.8296%" y="7733" width="3.5218%" height="15" fill="rgb(234,83,48)" fg:x="6086" fg:w="1029"/><text x="21.0796%" y="7743.50">cor..</text></g><g><title>core::num::&lt;impl u16&gt;::to_ne_bytes (88 samples, 0.30%)</title><rect x="24.0502%" y="7717" width="0.3012%" height="15" fill="rgb(228,3,54)" fg:x="7027" fg:w="88"/><text x="24.3002%" y="7727.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (9 samples, 0.03%)</title><rect x="24.5054%" y="7749" width="0.0308%" height="15" fill="rgb(226,155,13)" fg:x="7160" fg:w="9"/><text x="24.7554%" y="7759.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (9 samples, 0.03%)</title><rect x="24.5054%" y="7733" width="0.0308%" height="15" fill="rgb(241,28,37)" fg:x="7160" fg:w="9"/><text x="24.7554%" y="7743.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (6 samples, 0.02%)</title><rect x="24.5157%" y="7717" width="0.0205%" height="15" fill="rgb(233,93,10)" fg:x="7163" fg:w="6"/><text x="24.7657%" y="7727.50"></text></g><g><title>core::mem::swap (3 samples, 0.01%)</title><rect x="24.5362%" y="7749" width="0.0103%" height="15" fill="rgb(225,113,19)" fg:x="7169" fg:w="3"/><text x="24.7862%" y="7759.50"></text></g><g><title>core::mem::swap_simple (3 samples, 0.01%)</title><rect x="24.5362%" y="7733" width="0.0103%" height="15" fill="rgb(241,2,18)" fg:x="7169" fg:w="3"/><text x="24.7862%" y="7743.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;,hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (6 samples, 0.02%)</title><rect x="24.5465%" y="7749" width="0.0205%" height="15" fill="rgb(228,207,21)" fg:x="7172" fg:w="6"/><text x="24.7965%" y="7759.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="24.5465%" y="7733" width="0.0205%" height="15" fill="rgb(213,211,35)" fg:x="7172" fg:w="6"/><text x="24.7965%" y="7743.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize::_{{closure}} (6 samples, 0.02%)</title><rect x="24.5465%" y="7717" width="0.0205%" height="15" fill="rgb(209,83,10)" fg:x="7172" fg:w="6"/><text x="24.7965%" y="7727.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (4 samples, 0.01%)</title><rect x="24.5534%" y="7701" width="0.0137%" height="15" fill="rgb(209,164,1)" fg:x="7174" fg:w="4"/><text x="24.8034%" y="7711.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.01%)</title><rect x="24.5534%" y="7685" width="0.0137%" height="15" fill="rgb(213,184,43)" fg:x="7174" fg:w="4"/><text x="24.8034%" y="7695.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.01%)</title><rect x="24.5534%" y="7669" width="0.0137%" height="15" fill="rgb(231,61,34)" fg:x="7174" fg:w="4"/><text x="24.8034%" y="7679.50"></text></g><g><title>cfree (3 samples, 0.01%)</title><rect x="24.5568%" y="7653" width="0.0103%" height="15" fill="rgb(235,75,3)" fg:x="7175" fg:w="3"/><text x="24.8068%" y="7663.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="24.5568%" y="7637" width="0.0103%" height="15" fill="rgb(220,106,47)" fg:x="7175" fg:w="3"/><text x="24.8068%" y="7647.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.01%)</title><rect x="24.7348%" y="7621" width="0.0137%" height="15" fill="rgb(210,196,33)" fg:x="7227" fg:w="4"/><text x="24.9848%" y="7631.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (65 samples, 0.22%)</title><rect x="24.7108%" y="7637" width="0.2225%" height="15" fill="rgb(229,154,42)" fg:x="7220" fg:w="65"/><text x="24.9608%" y="7647.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (54 samples, 0.18%)</title><rect x="24.7484%" y="7621" width="0.1848%" height="15" fill="rgb(228,114,26)" fg:x="7231" fg:w="54"/><text x="24.9984%" y="7631.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (41 samples, 0.14%)</title><rect x="24.9504%" y="7621" width="0.1403%" height="15" fill="rgb(208,144,1)" fg:x="7290" fg:w="41"/><text x="25.2004%" y="7631.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (148 samples, 0.51%)</title><rect x="24.6150%" y="7685" width="0.5065%" height="15" fill="rgb(239,112,37)" fg:x="7192" fg:w="148"/><text x="24.8650%" y="7695.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (148 samples, 0.51%)</title><rect x="24.6150%" y="7669" width="0.5065%" height="15" fill="rgb(210,96,50)" fg:x="7192" fg:w="148"/><text x="24.8650%" y="7679.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (148 samples, 0.51%)</title><rect x="24.6150%" y="7653" width="0.5065%" height="15" fill="rgb(222,178,2)" fg:x="7192" fg:w="148"/><text x="24.8650%" y="7663.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (55 samples, 0.19%)</title><rect x="24.9333%" y="7637" width="0.1882%" height="15" fill="rgb(226,74,18)" fg:x="7285" fg:w="55"/><text x="25.1833%" y="7647.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (9 samples, 0.03%)</title><rect x="25.0907%" y="7621" width="0.0308%" height="15" fill="rgb(225,67,54)" fg:x="7331" fg:w="9"/><text x="25.3407%" y="7631.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (11 samples, 0.04%)</title><rect x="25.1215%" y="7685" width="0.0376%" height="15" fill="rgb(251,92,32)" fg:x="7340" fg:w="11"/><text x="25.3715%" y="7695.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (5 samples, 0.02%)</title><rect x="25.1420%" y="7669" width="0.0171%" height="15" fill="rgb(228,149,22)" fg:x="7346" fg:w="5"/><text x="25.3920%" y="7679.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (5 samples, 0.02%)</title><rect x="25.1420%" y="7653" width="0.0171%" height="15" fill="rgb(243,54,13)" fg:x="7346" fg:w="5"/><text x="25.3920%" y="7663.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (5 samples, 0.02%)</title><rect x="25.1420%" y="7637" width="0.0171%" height="15" fill="rgb(243,180,28)" fg:x="7346" fg:w="5"/><text x="25.3920%" y="7647.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (4 samples, 0.01%)</title><rect x="25.5048%" y="7637" width="0.0137%" height="15" fill="rgb(208,167,24)" fg:x="7452" fg:w="4"/><text x="25.7548%" y="7647.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (4 samples, 0.01%)</title><rect x="25.5048%" y="7621" width="0.0137%" height="15" fill="rgb(245,73,45)" fg:x="7452" fg:w="4"/><text x="25.7548%" y="7631.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (147 samples, 0.50%)</title><rect x="25.5185%" y="7637" width="0.5031%" height="15" fill="rgb(237,203,48)" fg:x="7456" fg:w="147"/><text x="25.7685%" y="7647.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (109 samples, 0.37%)</title><rect x="25.6486%" y="7621" width="0.3731%" height="15" fill="rgb(211,197,16)" fg:x="7494" fg:w="109"/><text x="25.8986%" y="7631.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (17 samples, 0.06%)</title><rect x="26.1928%" y="7541" width="0.0582%" height="15" fill="rgb(243,99,51)" fg:x="7653" fg:w="17"/><text x="26.4428%" y="7551.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (33 samples, 0.11%)</title><rect x="26.1791%" y="7557" width="0.1129%" height="15" fill="rgb(215,123,29)" fg:x="7649" fg:w="33"/><text x="26.4291%" y="7567.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (12 samples, 0.04%)</title><rect x="26.2509%" y="7541" width="0.0411%" height="15" fill="rgb(239,186,37)" fg:x="7670" fg:w="12"/><text x="26.5009%" y="7551.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (100 samples, 0.34%)</title><rect x="26.0490%" y="7605" width="0.3423%" height="15" fill="rgb(252,136,39)" fg:x="7611" fg:w="100"/><text x="26.2990%" y="7615.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (95 samples, 0.33%)</title><rect x="26.0661%" y="7589" width="0.3251%" height="15" fill="rgb(223,213,32)" fg:x="7616" fg:w="95"/><text x="26.3161%" y="7599.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (95 samples, 0.33%)</title><rect x="26.0661%" y="7573" width="0.3251%" height="15" fill="rgb(233,115,5)" fg:x="7616" fg:w="95"/><text x="26.3161%" y="7583.50"></text></g><g><title>core::hash::sip::u8to64_le (28 samples, 0.10%)</title><rect x="26.2954%" y="7557" width="0.0958%" height="15" fill="rgb(207,226,44)" fg:x="7683" fg:w="28"/><text x="26.5454%" y="7567.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (17 samples, 0.06%)</title><rect x="26.3331%" y="7541" width="0.0582%" height="15" fill="rgb(208,126,0)" fg:x="7694" fg:w="17"/><text x="26.5831%" y="7551.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for char&gt;::hash (170 samples, 0.58%)</title><rect x="26.0216%" y="7637" width="0.5818%" height="15" fill="rgb(244,66,21)" fg:x="7603" fg:w="170"/><text x="26.2716%" y="7647.50"></text></g><g><title>core::hash::Hasher::write_u32 (170 samples, 0.58%)</title><rect x="26.0216%" y="7621" width="0.5818%" height="15" fill="rgb(222,97,12)" fg:x="7603" fg:w="170"/><text x="26.2716%" y="7631.50"></text></g><g><title>core::num::&lt;impl u32&gt;::to_ne_bytes (62 samples, 0.21%)</title><rect x="26.3913%" y="7605" width="0.2122%" height="15" fill="rgb(219,213,19)" fg:x="7711" fg:w="62"/><text x="26.6413%" y="7615.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (120 samples, 0.41%)</title><rect x="28.2531%" y="7541" width="0.4107%" height="15" fill="rgb(252,169,30)" fg:x="8255" fg:w="120"/><text x="28.5031%" y="7551.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (325 samples, 1.11%)</title><rect x="27.9793%" y="7557" width="1.1123%" height="15" fill="rgb(206,32,51)" fg:x="8175" fg:w="325"/><text x="28.2293%" y="7567.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (125 samples, 0.43%)</title><rect x="28.6638%" y="7541" width="0.4278%" height="15" fill="rgb(250,172,42)" fg:x="8375" fg:w="125"/><text x="28.9138%" y="7551.50"></text></g><g><title>core::cmp::min (207 samples, 0.71%)</title><rect x="29.0917%" y="7557" width="0.7085%" height="15" fill="rgb(209,34,43)" fg:x="8500" fg:w="207"/><text x="29.3417%" y="7567.50"></text></g><g><title>core::cmp::Ord::min (207 samples, 0.71%)</title><rect x="29.0917%" y="7541" width="0.7085%" height="15" fill="rgb(223,11,35)" fg:x="8500" fg:w="207"/><text x="29.3417%" y="7551.50"></text></g><g><title>core::cmp::min_by (207 samples, 0.71%)</title><rect x="29.0917%" y="7525" width="0.7085%" height="15" fill="rgb(251,219,26)" fg:x="8500" fg:w="207"/><text x="29.3417%" y="7535.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1,188 samples, 4.07%)</title><rect x="26.6035%" y="7605" width="4.0660%" height="15" fill="rgb(231,119,3)" fg:x="7773" fg:w="1188"/><text x="26.8535%" y="7615.50">&lt;std..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1,188 samples, 4.07%)</title><rect x="26.6035%" y="7589" width="4.0660%" height="15" fill="rgb(216,97,11)" fg:x="7773" fg:w="1188"/><text x="26.8535%" y="7599.50">&lt;cor..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,188 samples, 4.07%)</title><rect x="26.6035%" y="7573" width="4.0660%" height="15" fill="rgb(223,59,9)" fg:x="7773" fg:w="1188"/><text x="26.8535%" y="7583.50">&lt;cor..</text></g><g><title>core::hash::sip::u8to64_le (254 samples, 0.87%)</title><rect x="29.8001%" y="7557" width="0.8693%" height="15" fill="rgb(233,93,31)" fg:x="8707" fg:w="254"/><text x="30.0501%" y="7567.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (2,066 samples, 7.07%)</title><rect x="24.5670%" y="7733" width="7.0710%" height="15" fill="rgb(239,81,33)" fg:x="7178" fg:w="2066"/><text x="24.8170%" y="7743.50">hashbrown..</text></g><g><title>hashbrown::map::make_hash (2,066 samples, 7.07%)</title><rect x="24.5670%" y="7717" width="7.0710%" height="15" fill="rgb(213,120,34)" fg:x="7178" fg:w="2066"/><text x="24.8170%" y="7727.50">hashbrown..</text></g><g><title>core::hash::BuildHasher::hash_one (2,065 samples, 7.07%)</title><rect x="24.5705%" y="7701" width="7.0676%" height="15" fill="rgb(243,49,53)" fg:x="7179" fg:w="2065"/><text x="24.8205%" y="7711.50">core::has..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1,893 samples, 6.48%)</title><rect x="25.1591%" y="7685" width="6.4789%" height="15" fill="rgb(247,216,33)" fg:x="7351" fg:w="1893"/><text x="25.4091%" y="7695.50">core::ha..</text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::hash::Hash&gt;::hash (1,893 samples, 6.48%)</title><rect x="25.1591%" y="7669" width="6.4789%" height="15" fill="rgb(226,26,14)" fg:x="7351" fg:w="1893"/><text x="25.4091%" y="7679.50">&lt;alloc::..</text></g><g><title>&lt;tetrs::logic::state::GameState as core::hash::Hash&gt;::hash (1,893 samples, 6.48%)</title><rect x="25.1591%" y="7653" width="6.4789%" height="15" fill="rgb(215,49,53)" fg:x="7351" fg:w="1893"/><text x="25.4091%" y="7663.50">&lt;tetrs::..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (1,471 samples, 5.03%)</title><rect x="26.6035%" y="7637" width="5.0346%" height="15" fill="rgb(245,162,40)" fg:x="7773" fg:w="1471"/><text x="26.8535%" y="7647.50">core::..</text></g><g><title>core::hash::Hasher::write_u16 (1,471 samples, 5.03%)</title><rect x="26.6035%" y="7621" width="5.0346%" height="15" fill="rgb(229,68,17)" fg:x="7773" fg:w="1471"/><text x="26.8535%" y="7631.50">core::..</text></g><g><title>core::num::&lt;impl u16&gt;::to_ne_bytes (283 samples, 0.97%)</title><rect x="30.6695%" y="7605" width="0.9686%" height="15" fill="rgb(213,182,10)" fg:x="8961" fg:w="283"/><text x="30.9195%" y="7615.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (2,069 samples, 7.08%)</title><rect x="24.5670%" y="7749" width="7.0813%" height="15" fill="rgb(245,125,30)" fg:x="7178" fg:w="2069"/><text x="24.8170%" y="7759.50">hashbrown:..</text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (3 samples, 0.01%)</title><rect x="31.6380%" y="7733" width="0.0103%" height="15" fill="rgb(232,202,2)" fg:x="9244" fg:w="3"/><text x="31.8880%" y="7743.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (3 samples, 0.01%)</title><rect x="31.6380%" y="7717" width="0.0103%" height="15" fill="rgb(237,140,51)" fg:x="9244" fg:w="3"/><text x="31.8880%" y="7727.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (3 samples, 0.01%)</title><rect x="31.6380%" y="7701" width="0.0103%" height="15" fill="rgb(236,157,25)" fg:x="9244" fg:w="3"/><text x="31.8880%" y="7711.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (3 samples, 0.01%)</title><rect x="31.6380%" y="7685" width="0.0103%" height="15" fill="rgb(219,209,0)" fg:x="9244" fg:w="3"/><text x="31.8880%" y="7695.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket_ptr (3 samples, 0.01%)</title><rect x="31.6483%" y="7749" width="0.0103%" height="15" fill="rgb(240,116,54)" fg:x="9247" fg:w="3"/><text x="31.8983%" y="7759.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (13 samples, 0.04%)</title><rect x="31.7476%" y="7701" width="0.0445%" height="15" fill="rgb(216,10,36)" fg:x="9276" fg:w="13"/><text x="31.9976%" y="7711.50"></text></g><g><title>core::num::nonzero::NonZeroU16::new (13 samples, 0.04%)</title><rect x="31.7476%" y="7685" width="0.0445%" height="15" fill="rgb(222,72,44)" fg:x="9276" fg:w="13"/><text x="31.9976%" y="7695.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot_in_group (42 samples, 0.14%)</title><rect x="31.7133%" y="7717" width="0.1437%" height="15" fill="rgb(232,159,9)" fg:x="9266" fg:w="42"/><text x="31.9633%" y="7727.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (19 samples, 0.07%)</title><rect x="31.7920%" y="7701" width="0.0650%" height="15" fill="rgb(210,39,32)" fg:x="9289" fg:w="19"/><text x="32.0420%" y="7711.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (19 samples, 0.07%)</title><rect x="31.7920%" y="7685" width="0.0650%" height="15" fill="rgb(216,194,45)" fg:x="9289" fg:w="19"/><text x="32.0420%" y="7695.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fix_insert_slot (31 samples, 0.11%)</title><rect x="31.8571%" y="7717" width="0.1061%" height="15" fill="rgb(218,18,35)" fg:x="9308" fg:w="31"/><text x="32.1071%" y="7727.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_bucket_full (5 samples, 0.02%)</title><rect x="31.9461%" y="7701" width="0.0171%" height="15" fill="rgb(207,83,51)" fg:x="9334" fg:w="5"/><text x="32.1961%" y="7711.50"></text></g><g><title>hashbrown::raw::is_full (5 samples, 0.02%)</title><rect x="31.9461%" y="7685" width="0.0171%" height="15" fill="rgb(225,63,43)" fg:x="9334" fg:w="5"/><text x="32.1961%" y="7695.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (93 samples, 0.32%)</title><rect x="31.6586%" y="7733" width="0.3183%" height="15" fill="rgb(207,57,36)" fg:x="9250" fg:w="93"/><text x="31.9086%" y="7743.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (4 samples, 0.01%)</title><rect x="31.9632%" y="7717" width="0.0137%" height="15" fill="rgb(216,99,33)" fg:x="9339" fg:w="4"/><text x="32.2132%" y="7727.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (101 samples, 0.35%)</title><rect x="31.6586%" y="7749" width="0.3457%" height="15" fill="rgb(225,42,16)" fg:x="9250" fg:w="101"/><text x="31.9086%" y="7759.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (8 samples, 0.03%)</title><rect x="31.9769%" y="7733" width="0.0274%" height="15" fill="rgb(220,201,45)" fg:x="9343" fg:w="8"/><text x="32.2269%" y="7743.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl (8 samples, 0.03%)</title><rect x="31.9769%" y="7717" width="0.0274%" height="15" fill="rgb(225,33,4)" fg:x="9343" fg:w="8"/><text x="32.2269%" y="7727.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (24 samples, 0.08%)</title><rect x="32.0042%" y="7717" width="0.0821%" height="15" fill="rgb(224,33,50)" fg:x="9351" fg:w="24"/><text x="32.2542%" y="7727.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (24 samples, 0.08%)</title><rect x="32.0042%" y="7701" width="0.0821%" height="15" fill="rgb(246,198,51)" fg:x="9351" fg:w="24"/><text x="32.2542%" y="7711.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (24 samples, 0.08%)</title><rect x="32.0042%" y="7685" width="0.0821%" height="15" fill="rgb(205,22,4)" fg:x="9351" fg:w="24"/><text x="32.2542%" y="7695.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (24 samples, 0.08%)</title><rect x="32.0042%" y="7669" width="0.0821%" height="15" fill="rgb(206,3,8)" fg:x="9351" fg:w="24"/><text x="32.2542%" y="7679.50"></text></g><g><title>alloc::alloc::alloc (24 samples, 0.08%)</title><rect x="32.0042%" y="7653" width="0.0821%" height="15" fill="rgb(251,23,15)" fg:x="9351" fg:w="24"/><text x="32.2542%" y="7663.50"></text></g><g><title>malloc (20 samples, 0.07%)</title><rect x="32.0179%" y="7637" width="0.0685%" height="15" fill="rgb(252,88,28)" fg:x="9355" fg:w="20"/><text x="32.2679%" y="7647.50"></text></g><g><title>[libc.so.6] (16 samples, 0.05%)</title><rect x="32.0316%" y="7621" width="0.0548%" height="15" fill="rgb(212,127,14)" fg:x="9359" fg:w="16"/><text x="32.2816%" y="7631.50"></text></g><g><title>[libc.so.6] (11 samples, 0.04%)</title><rect x="32.0487%" y="7605" width="0.0376%" height="15" fill="rgb(247,145,37)" fg:x="9364" fg:w="11"/><text x="32.2987%" y="7615.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="32.0658%" y="7589" width="0.0205%" height="15" fill="rgb(209,117,53)" fg:x="9369" fg:w="6"/><text x="32.3158%" y="7599.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (2,228 samples, 7.63%)</title><rect x="24.4678%" y="7765" width="7.6254%" height="15" fill="rgb(212,90,42)" fg:x="7149" fg:w="2228"/><text x="24.7178%" y="7775.50">hashbrown:..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (26 samples, 0.09%)</title><rect x="32.0042%" y="7749" width="0.0890%" height="15" fill="rgb(218,164,37)" fg:x="9351" fg:w="26"/><text x="32.2542%" y="7759.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (26 samples, 0.09%)</title><rect x="32.0042%" y="7733" width="0.0890%" height="15" fill="rgb(246,65,34)" fg:x="9351" fg:w="26"/><text x="32.2542%" y="7743.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (2,243 samples, 7.68%)</title><rect x="24.4233%" y="7813" width="7.6768%" height="15" fill="rgb(231,100,33)" fg:x="7136" fg:w="2243"/><text x="24.6733%" y="7823.50">hashbrown::..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2,232 samples, 7.64%)</title><rect x="24.4609%" y="7797" width="7.6391%" height="15" fill="rgb(228,126,14)" fg:x="7147" fg:w="2232"/><text x="24.7109%" y="7807.50">hashbrown:..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (2,232 samples, 7.64%)</title><rect x="24.4609%" y="7781" width="7.6391%" height="15" fill="rgb(215,173,21)" fg:x="7147" fg:w="2232"/><text x="24.7109%" y="7791.50">hashbrown:..</text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.07%)</title><rect x="32.1275%" y="7797" width="0.0650%" height="15" fill="rgb(210,6,40)" fg:x="9387" fg:w="19"/><text x="32.3775%" y="7807.50"></text></g><g><title>[libc.so.6] (22 samples, 0.08%)</title><rect x="32.2438%" y="7509" width="0.0753%" height="15" fill="rgb(212,48,18)" fg:x="9421" fg:w="22"/><text x="32.4938%" y="7519.50"></text></g><g><title>&lt;tetrs::logic::state::GameState as core::cmp::PartialEq&gt;::eq (37 samples, 0.13%)</title><rect x="32.1959%" y="7701" width="0.1266%" height="15" fill="rgb(230,214,11)" fg:x="9407" fg:w="37"/><text x="32.4459%" y="7711.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (35 samples, 0.12%)</title><rect x="32.2028%" y="7685" width="0.1198%" height="15" fill="rgb(254,105,39)" fg:x="9409" fg:w="35"/><text x="32.4528%" y="7695.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (35 samples, 0.12%)</title><rect x="32.2028%" y="7669" width="0.1198%" height="15" fill="rgb(245,158,5)" fg:x="9409" fg:w="35"/><text x="32.4528%" y="7679.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (35 samples, 0.12%)</title><rect x="32.2028%" y="7653" width="0.1198%" height="15" fill="rgb(249,208,11)" fg:x="9409" fg:w="35"/><text x="32.4528%" y="7663.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (32 samples, 0.11%)</title><rect x="32.2130%" y="7637" width="0.1095%" height="15" fill="rgb(210,39,28)" fg:x="9412" fg:w="32"/><text x="32.4630%" y="7647.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (32 samples, 0.11%)</title><rect x="32.2130%" y="7621" width="0.1095%" height="15" fill="rgb(211,56,53)" fg:x="9412" fg:w="32"/><text x="32.4630%" y="7631.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (29 samples, 0.10%)</title><rect x="32.2233%" y="7605" width="0.0993%" height="15" fill="rgb(226,201,30)" fg:x="9415" fg:w="29"/><text x="32.4733%" y="7615.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::_{{closure}} (29 samples, 0.10%)</title><rect x="32.2233%" y="7589" width="0.0993%" height="15" fill="rgb(239,101,34)" fg:x="9415" fg:w="29"/><text x="32.4733%" y="7599.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (29 samples, 0.10%)</title><rect x="32.2233%" y="7573" width="0.0993%" height="15" fill="rgb(226,209,5)" fg:x="9415" fg:w="29"/><text x="32.4733%" y="7583.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (29 samples, 0.10%)</title><rect x="32.2233%" y="7557" width="0.0993%" height="15" fill="rgb(250,105,47)" fg:x="9415" fg:w="29"/><text x="32.4733%" y="7567.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (29 samples, 0.10%)</title><rect x="32.2233%" y="7541" width="0.0993%" height="15" fill="rgb(230,72,3)" fg:x="9415" fg:w="29"/><text x="32.4733%" y="7551.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (29 samples, 0.10%)</title><rect x="32.2233%" y="7525" width="0.0993%" height="15" fill="rgb(232,218,39)" fg:x="9415" fg:w="29"/><text x="32.4733%" y="7535.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (38 samples, 0.13%)</title><rect x="32.1959%" y="7781" width="0.1301%" height="15" fill="rgb(248,166,6)" fg:x="9407" fg:w="38"/><text x="32.4459%" y="7791.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (38 samples, 0.13%)</title><rect x="32.1959%" y="7765" width="0.1301%" height="15" fill="rgb(247,89,20)" fg:x="9407" fg:w="38"/><text x="32.4459%" y="7775.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (38 samples, 0.13%)</title><rect x="32.1959%" y="7749" width="0.1301%" height="15" fill="rgb(248,130,54)" fg:x="9407" fg:w="38"/><text x="32.4459%" y="7759.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::cmp::PartialEq&gt;::eq (38 samples, 0.13%)</title><rect x="32.1959%" y="7733" width="0.1301%" height="15" fill="rgb(234,196,4)" fg:x="9407" fg:w="38"/><text x="32.4459%" y="7743.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as alloc::rc::RcEqIdent&lt;T,A&gt;&gt;::eq (38 samples, 0.13%)</title><rect x="32.1959%" y="7717" width="0.1301%" height="15" fill="rgb(250,143,31)" fg:x="9407" fg:w="38"/><text x="32.4459%" y="7727.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot::_{{closure}} (40 samples, 0.14%)</title><rect x="32.1959%" y="7797" width="0.1369%" height="15" fill="rgb(211,110,34)" fg:x="9407" fg:w="40"/><text x="32.4459%" y="7807.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (28 samples, 0.10%)</title><rect x="32.3465%" y="7781" width="0.0958%" height="15" fill="rgb(215,124,48)" fg:x="9451" fg:w="28"/><text x="32.5965%" y="7791.50"></text></g><g><title>core::num::nonzero::NonZeroU16::new (28 samples, 0.10%)</title><rect x="32.3465%" y="7765" width="0.0958%" height="15" fill="rgb(216,46,13)" fg:x="9451" fg:w="28"/><text x="32.5965%" y="7775.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot_in_group (34 samples, 0.12%)</title><rect x="32.3328%" y="7797" width="0.1164%" height="15" fill="rgb(205,184,25)" fg:x="9447" fg:w="34"/><text x="32.5828%" y="7807.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fix_insert_slot (16 samples, 0.05%)</title><rect x="32.4492%" y="7797" width="0.0548%" height="15" fill="rgb(228,1,10)" fg:x="9481" fg:w="16"/><text x="32.6992%" y="7807.50"></text></g><g><title>hashbrown::raw::h2 (4 samples, 0.01%)</title><rect x="32.5039%" y="7797" width="0.0137%" height="15" fill="rgb(213,116,27)" fg:x="9497" fg:w="4"/><text x="32.7539%" y="7807.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (19 samples, 0.07%)</title><rect x="32.5176%" y="7797" width="0.0650%" height="15" fill="rgb(241,95,50)" fg:x="9501" fg:w="19"/><text x="32.7676%" y="7807.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (19 samples, 0.07%)</title><rect x="32.5176%" y="7781" width="0.0650%" height="15" fill="rgb(238,48,32)" fg:x="9501" fg:w="19"/><text x="32.7676%" y="7791.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (19 samples, 0.07%)</title><rect x="32.5176%" y="7765" width="0.0650%" height="15" fill="rgb(235,113,49)" fg:x="9501" fg:w="19"/><text x="32.7676%" y="7775.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (2,415 samples, 8.27%)</title><rect x="24.3514%" y="7829" width="8.2655%" height="15" fill="rgb(205,127,43)" fg:x="7115" fg:w="2415"/><text x="24.6014%" y="7839.50">hashbrown::r..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_or_find_insert_slot_inner (151 samples, 0.52%)</title><rect x="32.1001%" y="7813" width="0.5168%" height="15" fill="rgb(250,162,2)" fg:x="9379" fg:w="151"/><text x="32.3501%" y="7823.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (10 samples, 0.03%)</title><rect x="32.5827%" y="7797" width="0.0342%" height="15" fill="rgb(220,13,41)" fg:x="9520" fg:w="10"/><text x="32.8327%" y="7807.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (10 samples, 0.03%)</title><rect x="32.5827%" y="7781" width="0.0342%" height="15" fill="rgb(249,221,25)" fg:x="9520" fg:w="10"/><text x="32.8327%" y="7791.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (12 samples, 0.04%)</title><rect x="32.6169%" y="7813" width="0.0411%" height="15" fill="rgb(215,208,19)" fg:x="9530" fg:w="12"/><text x="32.8669%" y="7823.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (12 samples, 0.04%)</title><rect x="32.6169%" y="7797" width="0.0411%" height="15" fill="rgb(236,175,2)" fg:x="9530" fg:w="12"/><text x="32.8669%" y="7807.50"></text></g><g><title>core::ptr::write (12 samples, 0.04%)</title><rect x="32.6169%" y="7781" width="0.0411%" height="15" fill="rgb(241,52,2)" fg:x="9530" fg:w="12"/><text x="32.8669%" y="7791.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (3,920 samples, 13.42%)</title><rect x="19.2689%" y="7877" width="13.4164%" height="15" fill="rgb(248,140,14)" fg:x="5630" fg:w="3920"/><text x="19.5189%" y="7887.50">std::collections::ha..</text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (3,920 samples, 13.42%)</title><rect x="19.2689%" y="7861" width="13.4164%" height="15" fill="rgb(253,22,42)" fg:x="5630" fg:w="3920"/><text x="19.5189%" y="7871.50">hashbrown::set::Hash..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3,918 samples, 13.41%)</title><rect x="19.2758%" y="7845" width="13.4095%" height="15" fill="rgb(234,61,47)" fg:x="5632" fg:w="3918"/><text x="19.5258%" y="7855.50">hashbrown::map::Hash..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (20 samples, 0.07%)</title><rect x="32.6169%" y="7829" width="0.0685%" height="15" fill="rgb(208,226,15)" fg:x="9530" fg:w="20"/><text x="32.8669%" y="7839.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::record_item_insert_at (8 samples, 0.03%)</title><rect x="32.6580%" y="7813" width="0.0274%" height="15" fill="rgb(217,221,4)" fg:x="9542" fg:w="8"/><text x="32.9080%" y="7823.50"></text></g><g><title>hashbrown::raw::special_is_empty (3 samples, 0.01%)</title><rect x="32.6751%" y="7797" width="0.0103%" height="15" fill="rgb(212,174,34)" fg:x="9547" fg:w="3"/><text x="32.9251%" y="7807.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.01%)</title><rect x="33.7121%" y="7861" width="0.0103%" height="15" fill="rgb(253,83,4)" fg:x="9850" fg:w="3"/><text x="33.9621%" y="7871.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (3 samples, 0.01%)</title><rect x="33.7121%" y="7845" width="0.0103%" height="15" fill="rgb(250,195,49)" fg:x="9850" fg:w="3"/><text x="33.9621%" y="7855.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (8 samples, 0.03%)</title><rect x="33.7395%" y="7845" width="0.0274%" height="15" fill="rgb(241,192,25)" fg:x="9858" fg:w="8"/><text x="33.9895%" y="7855.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (6 samples, 0.02%)</title><rect x="33.7463%" y="7829" width="0.0205%" height="15" fill="rgb(208,124,10)" fg:x="9860" fg:w="6"/><text x="33.9963%" y="7839.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (6 samples, 0.02%)</title><rect x="33.7463%" y="7813" width="0.0205%" height="15" fill="rgb(222,33,0)" fg:x="9860" fg:w="6"/><text x="33.9963%" y="7823.50"></text></g><g><title>__rdl_alloc (51 samples, 0.17%)</title><rect x="34.2152%" y="7637" width="0.1745%" height="15" fill="rgb(234,209,28)" fg:x="9997" fg:w="51"/><text x="34.4652%" y="7647.50"></text></g><g><title>__rust_alloc (60 samples, 0.21%)</title><rect x="34.3898%" y="7637" width="0.2054%" height="15" fill="rgb(224,11,23)" fg:x="10048" fg:w="60"/><text x="34.6398%" y="7647.50"></text></g><g><title>core::ptr::read_volatile (4 samples, 0.01%)</title><rect x="34.5951%" y="7637" width="0.0137%" height="15" fill="rgb(232,99,1)" fg:x="10108" fg:w="4"/><text x="34.8451%" y="7647.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,029 samples, 6.94%)</title><rect x="34.0988%" y="7685" width="6.9443%" height="15" fill="rgb(237,95,45)" fg:x="9963" fg:w="2029"/><text x="34.3488%" y="7695.50">&lt;alloc::a..</text></g><g><title>alloc::alloc::Global::alloc_impl (2,029 samples, 6.94%)</title><rect x="34.0988%" y="7669" width="6.9443%" height="15" fill="rgb(208,109,11)" fg:x="9963" fg:w="2029"/><text x="34.3488%" y="7679.50">alloc::al..</text></g><g><title>alloc::alloc::alloc (2,023 samples, 6.92%)</title><rect x="34.1194%" y="7653" width="6.9238%" height="15" fill="rgb(216,190,48)" fg:x="9969" fg:w="2023"/><text x="34.3694%" y="7663.50">alloc::al..</text></g><g><title>malloc (1,880 samples, 6.43%)</title><rect x="34.6088%" y="7637" width="6.4344%" height="15" fill="rgb(251,171,36)" fg:x="10112" fg:w="1880"/><text x="34.8588%" y="7647.50">malloc</text></g><g><title>[libc.so.6] (1,435 samples, 4.91%)</title><rect x="36.1318%" y="7621" width="4.9114%" height="15" fill="rgb(230,62,22)" fg:x="10557" fg:w="1435"/><text x="36.3818%" y="7631.50">[libc...</text></g><g><title>[libc.so.6] (159 samples, 0.54%)</title><rect x="40.4990%" y="7605" width="0.5442%" height="15" fill="rgb(225,114,35)" fg:x="11833" fg:w="159"/><text x="40.7490%" y="7615.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,093 samples, 7.16%)</title><rect x="33.8901%" y="7733" width="7.1634%" height="15" fill="rgb(215,118,42)" fg:x="9902" fg:w="2093"/><text x="34.1401%" y="7743.50">alloc::vec..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,093 samples, 7.16%)</title><rect x="33.8901%" y="7717" width="7.1634%" height="15" fill="rgb(243,119,21)" fg:x="9902" fg:w="2093"/><text x="34.1401%" y="7727.50">alloc::raw..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2,093 samples, 7.16%)</title><rect x="33.8901%" y="7701" width="7.1634%" height="15" fill="rgb(252,177,53)" fg:x="9902" fg:w="2093"/><text x="34.1401%" y="7711.50">alloc::raw..</text></g><g><title>core::alloc::layout::Layout::array (3 samples, 0.01%)</title><rect x="41.0432%" y="7685" width="0.0103%" height="15" fill="rgb(237,209,29)" fg:x="11992" fg:w="3"/><text x="41.2932%" y="7695.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (3 samples, 0.01%)</title><rect x="41.0432%" y="7669" width="0.0103%" height="15" fill="rgb(212,65,23)" fg:x="11992" fg:w="3"/><text x="41.2932%" y="7679.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,331 samples, 7.98%)</title><rect x="33.8901%" y="7797" width="7.9780%" height="15" fill="rgb(230,222,46)" fg:x="9902" fg:w="2331"/><text x="34.1401%" y="7807.50">&lt;alloc::vec..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,331 samples, 7.98%)</title><rect x="33.8901%" y="7781" width="7.9780%" height="15" fill="rgb(215,135,32)" fg:x="9902" fg:w="2331"/><text x="34.1401%" y="7791.50">alloc::slic..</text></g><g><title>alloc::slice::hack::to_vec (2,331 samples, 7.98%)</title><rect x="33.8901%" y="7765" width="7.9780%" height="15" fill="rgb(246,101,22)" fg:x="9902" fg:w="2331"/><text x="34.1401%" y="7775.50">alloc::slic..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,331 samples, 7.98%)</title><rect x="33.8901%" y="7749" width="7.9780%" height="15" fill="rgb(206,107,13)" fg:x="9902" fg:w="2331"/><text x="34.1401%" y="7759.50">&lt;T as alloc..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (238 samples, 0.81%)</title><rect x="41.0535%" y="7733" width="0.8146%" height="15" fill="rgb(250,100,44)" fg:x="11995" fg:w="238"/><text x="41.3035%" y="7743.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (238 samples, 0.81%)</title><rect x="41.0535%" y="7717" width="0.8146%" height="15" fill="rgb(231,147,38)" fg:x="11995" fg:w="238"/><text x="41.3035%" y="7727.50"></text></g><g><title>[libc.so.6] (165 samples, 0.56%)</title><rect x="41.3033%" y="7701" width="0.5647%" height="15" fill="rgb(229,8,40)" fg:x="12068" fg:w="165"/><text x="41.5533%" y="7711.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (58 samples, 0.20%)</title><rect x="41.8680%" y="7797" width="0.1985%" height="15" fill="rgb(221,135,30)" fg:x="12233" fg:w="58"/><text x="42.1180%" y="7807.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.03%)</title><rect x="42.0357%" y="7781" width="0.0308%" height="15" fill="rgb(249,193,18)" fg:x="12282" fg:w="9"/><text x="42.2857%" y="7791.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.02%)</title><rect x="42.0460%" y="7765" width="0.0205%" height="15" fill="rgb(209,133,39)" fg:x="12285" fg:w="6"/><text x="42.2960%" y="7775.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (31 samples, 0.11%)</title><rect x="42.0665%" y="7797" width="0.1061%" height="15" fill="rgb(232,100,14)" fg:x="12291" fg:w="31"/><text x="42.3165%" y="7807.50"></text></g><g><title>__rdl_alloc (3 samples, 0.01%)</title><rect x="42.2377%" y="7701" width="0.0103%" height="15" fill="rgb(224,185,1)" fg:x="12341" fg:w="3"/><text x="42.4877%" y="7711.50"></text></g><g><title>__rust_alloc (12 samples, 0.04%)</title><rect x="42.2479%" y="7701" width="0.0411%" height="15" fill="rgb(223,139,8)" fg:x="12344" fg:w="12"/><text x="42.4979%" y="7711.50"></text></g><g><title>[libc.so.6] (34 samples, 0.12%)</title><rect x="43.7710%" y="7669" width="0.1164%" height="15" fill="rgb(232,213,38)" fg:x="12789" fg:w="34"/><text x="44.0210%" y="7679.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (484 samples, 1.66%)</title><rect x="42.2342%" y="7749" width="1.6565%" height="15" fill="rgb(207,94,22)" fg:x="12340" fg:w="484"/><text x="42.4842%" y="7759.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (484 samples, 1.66%)</title><rect x="42.2342%" y="7733" width="1.6565%" height="15" fill="rgb(219,183,54)" fg:x="12340" fg:w="484"/><text x="42.4842%" y="7743.50"></text></g><g><title>alloc::alloc::alloc (483 samples, 1.65%)</title><rect x="42.2377%" y="7717" width="1.6531%" height="15" fill="rgb(216,185,54)" fg:x="12341" fg:w="483"/><text x="42.4877%" y="7727.50"></text></g><g><title>malloc (467 samples, 1.60%)</title><rect x="42.2924%" y="7701" width="1.5983%" height="15" fill="rgb(254,217,39)" fg:x="12357" fg:w="467"/><text x="42.5424%" y="7711.50"></text></g><g><title>[libc.so.6] (374 samples, 1.28%)</title><rect x="42.6107%" y="7685" width="1.2800%" height="15" fill="rgb(240,178,23)" fg:x="12450" fg:w="374"/><text x="42.8607%" y="7695.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (507 samples, 1.74%)</title><rect x="42.1726%" y="7797" width="1.7352%" height="15" fill="rgb(218,11,47)" fg:x="12322" fg:w="507"/><text x="42.4226%" y="7807.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (501 samples, 1.71%)</title><rect x="42.1932%" y="7781" width="1.7147%" height="15" fill="rgb(218,51,51)" fg:x="12328" fg:w="501"/><text x="42.4432%" y="7791.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (501 samples, 1.71%)</title><rect x="42.1932%" y="7765" width="1.7147%" height="15" fill="rgb(238,126,27)" fg:x="12328" fg:w="501"/><text x="42.4432%" y="7775.50"></text></g><g><title>core::alloc::layout::Layout::array (5 samples, 0.02%)</title><rect x="43.8908%" y="7749" width="0.0171%" height="15" fill="rgb(249,202,22)" fg:x="12824" fg:w="5"/><text x="44.1408%" y="7759.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (5 samples, 0.02%)</title><rect x="43.8908%" y="7733" width="0.0171%" height="15" fill="rgb(254,195,49)" fg:x="12824" fg:w="5"/><text x="44.1408%" y="7743.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (34 samples, 0.12%)</title><rect x="43.9079%" y="7797" width="0.1164%" height="15" fill="rgb(208,123,14)" fg:x="12829" fg:w="34"/><text x="44.1579%" y="7807.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,029 samples, 10.37%)</title><rect x="33.7224%" y="7861" width="10.3669%" height="15" fill="rgb(224,200,8)" fg:x="9853" fg:w="3029"/><text x="33.9724%" y="7871.50">&lt;alloc::vec::Ve..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,016 samples, 10.32%)</title><rect x="33.7669%" y="7845" width="10.3224%" height="15" fill="rgb(217,61,36)" fg:x="9866" fg:w="3016"/><text x="34.0169%" y="7855.50">alloc::slice::&lt;..</text></g><g><title>alloc::slice::hack::to_vec (3,016 samples, 10.32%)</title><rect x="33.7669%" y="7829" width="10.3224%" height="15" fill="rgb(206,35,45)" fg:x="9866" fg:w="3016"/><text x="34.0169%" y="7839.50">alloc::slice::h..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,016 samples, 10.32%)</title><rect x="33.7669%" y="7813" width="10.3224%" height="15" fill="rgb(217,65,33)" fg:x="9866" fg:w="3016"/><text x="34.0169%" y="7823.50">&lt;T as alloc::sl..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (19 samples, 0.07%)</title><rect x="44.0242%" y="7797" width="0.0650%" height="15" fill="rgb(222,158,48)" fg:x="12863" fg:w="19"/><text x="44.2742%" y="7807.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (19 samples, 0.07%)</title><rect x="44.0242%" y="7781" width="0.0650%" height="15" fill="rgb(254,2,54)" fg:x="12863" fg:w="19"/><text x="44.2742%" y="7791.50"></text></g><g><title>[libc.so.6] (17 samples, 0.06%)</title><rect x="44.0311%" y="7765" width="0.0582%" height="15" fill="rgb(250,143,38)" fg:x="12865" fg:w="17"/><text x="44.2811%" y="7775.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (19 samples, 0.07%)</title><rect x="44.0893%" y="7861" width="0.0650%" height="15" fill="rgb(248,25,0)" fg:x="12882" fg:w="19"/><text x="44.3393%" y="7871.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (19 samples, 0.07%)</title><rect x="44.0893%" y="7845" width="0.0650%" height="15" fill="rgb(206,152,27)" fg:x="12882" fg:w="19"/><text x="44.3393%" y="7855.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (19 samples, 0.07%)</title><rect x="44.0893%" y="7829" width="0.0650%" height="15" fill="rgb(240,77,30)" fg:x="12882" fg:w="19"/><text x="44.3393%" y="7839.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="44.1543%" y="7861" width="0.0137%" height="15" fill="rgb(231,5,3)" fg:x="12901" fg:w="4"/><text x="44.4043%" y="7871.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.01%)</title><rect x="44.1543%" y="7845" width="0.0137%" height="15" fill="rgb(207,226,32)" fg:x="12901" fg:w="4"/><text x="44.4043%" y="7855.50"></text></g><g><title>__rdl_alloc (3 samples, 0.01%)</title><rect x="44.2159%" y="7621" width="0.0103%" height="15" fill="rgb(222,207,47)" fg:x="12919" fg:w="3"/><text x="44.4659%" y="7631.50"></text></g><g><title>__rust_alloc (3 samples, 0.01%)</title><rect x="44.2262%" y="7621" width="0.0103%" height="15" fill="rgb(229,115,45)" fg:x="12922" fg:w="3"/><text x="44.4762%" y="7631.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (95 samples, 0.33%)</title><rect x="44.1748%" y="7717" width="0.3251%" height="15" fill="rgb(224,191,6)" fg:x="12907" fg:w="95"/><text x="44.4248%" y="7727.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (95 samples, 0.33%)</title><rect x="44.1748%" y="7701" width="0.3251%" height="15" fill="rgb(230,227,24)" fg:x="12907" fg:w="95"/><text x="44.4248%" y="7711.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (95 samples, 0.33%)</title><rect x="44.1748%" y="7685" width="0.3251%" height="15" fill="rgb(228,80,19)" fg:x="12907" fg:w="95"/><text x="44.4248%" y="7695.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (88 samples, 0.30%)</title><rect x="44.1988%" y="7669" width="0.3012%" height="15" fill="rgb(247,229,0)" fg:x="12914" fg:w="88"/><text x="44.4488%" y="7679.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (88 samples, 0.30%)</title><rect x="44.1988%" y="7653" width="0.3012%" height="15" fill="rgb(237,194,15)" fg:x="12914" fg:w="88"/><text x="44.4488%" y="7663.50"></text></g><g><title>alloc::alloc::alloc (88 samples, 0.30%)</title><rect x="44.1988%" y="7637" width="0.3012%" height="15" fill="rgb(219,203,20)" fg:x="12914" fg:w="88"/><text x="44.4488%" y="7647.50"></text></g><g><title>malloc (77 samples, 0.26%)</title><rect x="44.2364%" y="7621" width="0.2635%" height="15" fill="rgb(234,128,8)" fg:x="12925" fg:w="77"/><text x="44.4864%" y="7631.50"></text></g><g><title>[libc.so.6] (38 samples, 0.13%)</title><rect x="44.3699%" y="7605" width="0.1301%" height="15" fill="rgb(248,202,8)" fg:x="12964" fg:w="38"/><text x="44.6199%" y="7615.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (114 samples, 0.39%)</title><rect x="44.1748%" y="7781" width="0.3902%" height="15" fill="rgb(206,104,37)" fg:x="12907" fg:w="114"/><text x="44.4248%" y="7791.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (114 samples, 0.39%)</title><rect x="44.1748%" y="7765" width="0.3902%" height="15" fill="rgb(223,8,27)" fg:x="12907" fg:w="114"/><text x="44.4248%" y="7775.50"></text></g><g><title>alloc::slice::hack::to_vec (114 samples, 0.39%)</title><rect x="44.1748%" y="7749" width="0.3902%" height="15" fill="rgb(216,217,28)" fg:x="12907" fg:w="114"/><text x="44.4248%" y="7759.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (114 samples, 0.39%)</title><rect x="44.1748%" y="7733" width="0.3902%" height="15" fill="rgb(249,199,1)" fg:x="12907" fg:w="114"/><text x="44.4248%" y="7743.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (19 samples, 0.07%)</title><rect x="44.5000%" y="7717" width="0.0650%" height="15" fill="rgb(240,85,17)" fg:x="13002" fg:w="19"/><text x="44.7500%" y="7727.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (19 samples, 0.07%)</title><rect x="44.5000%" y="7701" width="0.0650%" height="15" fill="rgb(206,108,45)" fg:x="13002" fg:w="19"/><text x="44.7500%" y="7711.50"></text></g><g><title>[libc.so.6] (19 samples, 0.07%)</title><rect x="44.5000%" y="7685" width="0.0650%" height="15" fill="rgb(245,210,41)" fg:x="13002" fg:w="19"/><text x="44.7500%" y="7695.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (179 samples, 0.61%)</title><rect x="44.1714%" y="7845" width="0.6126%" height="15" fill="rgb(206,13,37)" fg:x="12906" fg:w="179"/><text x="44.4214%" y="7855.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (178 samples, 0.61%)</title><rect x="44.1748%" y="7829" width="0.6092%" height="15" fill="rgb(250,61,18)" fg:x="12907" fg:w="178"/><text x="44.4248%" y="7839.50"></text></g><g><title>alloc::slice::hack::to_vec (178 samples, 0.61%)</title><rect x="44.1748%" y="7813" width="0.6092%" height="15" fill="rgb(235,172,48)" fg:x="12907" fg:w="178"/><text x="44.4248%" y="7823.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (178 samples, 0.61%)</title><rect x="44.1748%" y="7797" width="0.6092%" height="15" fill="rgb(249,201,17)" fg:x="12907" fg:w="178"/><text x="44.4248%" y="7807.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (62 samples, 0.21%)</title><rect x="44.5718%" y="7781" width="0.2122%" height="15" fill="rgb(219,208,6)" fg:x="13023" fg:w="62"/><text x="44.8218%" y="7791.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (62 samples, 0.21%)</title><rect x="44.5718%" y="7765" width="0.2122%" height="15" fill="rgb(248,31,23)" fg:x="13023" fg:w="62"/><text x="44.8218%" y="7775.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (62 samples, 0.21%)</title><rect x="44.5718%" y="7749" width="0.2122%" height="15" fill="rgb(245,15,42)" fg:x="13023" fg:w="62"/><text x="44.8218%" y="7759.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (62 samples, 0.21%)</title><rect x="44.5718%" y="7733" width="0.2122%" height="15" fill="rgb(222,217,39)" fg:x="13023" fg:w="62"/><text x="44.8218%" y="7743.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (62 samples, 0.21%)</title><rect x="44.5718%" y="7717" width="0.2122%" height="15" fill="rgb(210,219,27)" fg:x="13023" fg:w="62"/><text x="44.8218%" y="7727.50"></text></g><g><title>alloc::alloc::alloc (62 samples, 0.21%)</title><rect x="44.5718%" y="7701" width="0.2122%" height="15" fill="rgb(252,166,36)" fg:x="13023" fg:w="62"/><text x="44.8218%" y="7711.50"></text></g><g><title>malloc (59 samples, 0.20%)</title><rect x="44.5821%" y="7685" width="0.2019%" height="15" fill="rgb(245,132,34)" fg:x="13026" fg:w="59"/><text x="44.8321%" y="7695.50"></text></g><g><title>[libc.so.6] (46 samples, 0.16%)</title><rect x="44.6266%" y="7669" width="0.1574%" height="15" fill="rgb(236,54,3)" fg:x="13039" fg:w="46"/><text x="44.8766%" y="7679.50"></text></g><g><title>&lt;tetrs::logic::state::GameState as core::clone::Clone&gt;::clone (181 samples, 0.62%)</title><rect x="44.1680%" y="7861" width="0.6195%" height="15" fill="rgb(241,173,43)" fg:x="12905" fg:w="181"/><text x="44.4180%" y="7871.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (5 samples, 0.02%)</title><rect x="44.7875%" y="7861" width="0.0171%" height="15" fill="rgb(215,190,9)" fg:x="13086" fg:w="5"/><text x="45.0375%" y="7871.50"></text></g><g><title>alloc::alloc::exchange_malloc (5 samples, 0.02%)</title><rect x="44.7875%" y="7845" width="0.0171%" height="15" fill="rgb(242,101,16)" fg:x="13086" fg:w="5"/><text x="45.0375%" y="7855.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.02%)</title><rect x="44.7875%" y="7829" width="0.0171%" height="15" fill="rgb(223,190,21)" fg:x="13086" fg:w="5"/><text x="45.0375%" y="7839.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.02%)</title><rect x="44.7875%" y="7813" width="0.0171%" height="15" fill="rgb(215,228,25)" fg:x="13086" fg:w="5"/><text x="45.0375%" y="7823.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.02%)</title><rect x="44.7875%" y="7797" width="0.0171%" height="15" fill="rgb(225,36,22)" fg:x="13086" fg:w="5"/><text x="45.0375%" y="7807.50"></text></g><g><title>malloc (3 samples, 0.01%)</title><rect x="44.7943%" y="7781" width="0.0103%" height="15" fill="rgb(251,106,46)" fg:x="13088" fg:w="3"/><text x="45.0443%" y="7791.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (4 samples, 0.01%)</title><rect x="44.8730%" y="7813" width="0.0137%" height="15" fill="rgb(208,90,1)" fg:x="13111" fg:w="4"/><text x="45.1230%" y="7823.50"></text></g><g><title>__rdl_realloc (3 samples, 0.01%)</title><rect x="44.9107%" y="7749" width="0.0103%" height="15" fill="rgb(243,10,4)" fg:x="13122" fg:w="3"/><text x="45.1607%" y="7759.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,767 samples, 6.05%)</title><rect x="44.9107%" y="7797" width="6.0476%" height="15" fill="rgb(212,137,27)" fg:x="13122" fg:w="1767"/><text x="45.1607%" y="7807.50">&lt;alloc::..</text></g><g><title>alloc::alloc::Global::grow_impl (1,767 samples, 6.05%)</title><rect x="44.9107%" y="7781" width="6.0476%" height="15" fill="rgb(231,220,49)" fg:x="13122" fg:w="1767"/><text x="45.1607%" y="7791.50">alloc::a..</text></g><g><title>alloc::alloc::realloc (1,767 samples, 6.05%)</title><rect x="44.9107%" y="7765" width="6.0476%" height="15" fill="rgb(237,96,20)" fg:x="13122" fg:w="1767"/><text x="45.1607%" y="7775.50">alloc::a..</text></g><g><title>realloc (1,764 samples, 6.04%)</title><rect x="44.9209%" y="7749" width="6.0374%" height="15" fill="rgb(239,229,30)" fg:x="13125" fg:w="1764"/><text x="45.1709%" y="7759.50">realloc</text></g><g><title>[libc.so.6] (1,754 samples, 6.00%)</title><rect x="44.9552%" y="7733" width="6.0031%" height="15" fill="rgb(219,65,33)" fg:x="13135" fg:w="1754"/><text x="45.2052%" y="7743.50">[libc.so..</text></g><g><title>[libc.so.6] (1,741 samples, 5.96%)</title><rect x="44.9997%" y="7717" width="5.9587%" height="15" fill="rgb(243,134,7)" fg:x="13148" fg:w="1741"/><text x="45.2497%" y="7727.50">[libc.so..</text></g><g><title>[libc.so.6] (1,445 samples, 4.95%)</title><rect x="46.0127%" y="7701" width="4.9456%" height="15" fill="rgb(216,177,54)" fg:x="13444" fg:w="1445"/><text x="46.2627%" y="7711.50">[libc...</text></g><g><title>[libc.so.6] (522 samples, 1.79%)</title><rect x="49.1717%" y="7685" width="1.7866%" height="15" fill="rgb(211,160,20)" fg:x="14367" fg:w="522"/><text x="49.4217%" y="7695.50">[..</text></g><g><title>alloc::raw_vec::finish_grow (1,780 samples, 6.09%)</title><rect x="44.8936%" y="7813" width="6.0921%" height="15" fill="rgb(239,85,39)" fg:x="13117" fg:w="1780"/><text x="45.1436%" y="7823.50">alloc::r..</text></g><g><title>malloc (7 samples, 0.02%)</title><rect x="50.9617%" y="7797" width="0.0240%" height="15" fill="rgb(232,125,22)" fg:x="14890" fg:w="7"/><text x="51.2117%" y="7807.50"></text></g><g><title>core::cmp::max (3 samples, 0.01%)</title><rect x="50.9857%" y="7813" width="0.0103%" height="15" fill="rgb(244,57,34)" fg:x="14897" fg:w="3"/><text x="51.2357%" y="7823.50"></text></g><g><title>core::cmp::Ord::max (3 samples, 0.01%)</title><rect x="50.9857%" y="7797" width="0.0103%" height="15" fill="rgb(214,203,32)" fg:x="14897" fg:w="3"/><text x="51.2357%" y="7807.50"></text></g><g><title>core::cmp::max_by (3 samples, 0.01%)</title><rect x="50.9857%" y="7781" width="0.0103%" height="15" fill="rgb(207,58,43)" fg:x="14897" fg:w="3"/><text x="51.2357%" y="7791.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1,801 samples, 6.16%)</title><rect x="44.8456%" y="7845" width="6.1640%" height="15" fill="rgb(215,193,15)" fg:x="13103" fg:w="1801"/><text x="45.0956%" y="7855.50">alloc::r..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1,800 samples, 6.16%)</title><rect x="44.8491%" y="7829" width="6.1606%" height="15" fill="rgb(232,15,44)" fg:x="13104" fg:w="1800"/><text x="45.0991%" y="7839.50">alloc::r..</text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (4 samples, 0.01%)</title><rect x="50.9960%" y="7813" width="0.0137%" height="15" fill="rgb(212,3,48)" fg:x="14900" fg:w="4"/><text x="51.2460%" y="7823.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (4 samples, 0.01%)</title><rect x="50.9960%" y="7797" width="0.0137%" height="15" fill="rgb(218,128,7)" fg:x="14900" fg:w="4"/><text x="51.2460%" y="7807.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (3 samples, 0.01%)</title><rect x="51.0165%" y="7845" width="0.0103%" height="15" fill="rgb(226,216,39)" fg:x="14906" fg:w="3"/><text x="51.2665%" y="7855.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,879 samples, 6.43%)</title><rect x="44.8080%" y="7861" width="6.4310%" height="15" fill="rgb(243,47,51)" fg:x="13092" fg:w="1879"/><text x="45.0580%" y="7871.50">alloc::v..</text></g><g><title>core::ptr::write (62 samples, 0.21%)</title><rect x="51.0268%" y="7845" width="0.2122%" height="15" fill="rgb(241,183,40)" fg:x="14909" fg:w="62"/><text x="51.2768%" y="7855.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::remove (30 samples, 0.10%)</title><rect x="51.2390%" y="7861" width="0.1027%" height="15" fill="rgb(231,217,32)" fg:x="14971" fg:w="30"/><text x="51.4890%" y="7871.50"></text></g><g><title>core::intrinsics::copy (29 samples, 0.10%)</title><rect x="51.2424%" y="7845" width="0.0993%" height="15" fill="rgb(229,61,38)" fg:x="14972" fg:w="29"/><text x="51.4924%" y="7855.50"></text></g><g><title>[libc.so.6] (29 samples, 0.10%)</title><rect x="51.2424%" y="7829" width="0.0993%" height="15" fill="rgb(225,210,5)" fg:x="14972" fg:w="29"/><text x="51.4924%" y="7839.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (5 samples, 0.02%)</title><rect x="51.3416%" y="7861" width="0.0171%" height="15" fill="rgb(231,79,45)" fg:x="15001" fg:w="5"/><text x="51.5916%" y="7871.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (34 samples, 0.12%)</title><rect x="51.4785%" y="7829" width="0.1164%" height="15" fill="rgb(224,100,7)" fg:x="15041" fg:w="34"/><text x="51.7285%" y="7839.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::next (128 samples, 0.44%)</title><rect x="51.3588%" y="7861" width="0.4381%" height="15" fill="rgb(241,198,18)" fg:x="15006" fg:w="128"/><text x="51.6088%" y="7871.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::iter::range::RangeInclusiveIteratorImpl&gt;::spec_next (128 samples, 0.44%)</title><rect x="51.3588%" y="7845" width="0.4381%" height="15" fill="rgb(252,97,53)" fg:x="15006" fg:w="128"/><text x="51.6088%" y="7855.50"></text></g><g><title>core::ops::range::RangeInclusive&lt;Idx&gt;::is_empty (59 samples, 0.20%)</title><rect x="51.5949%" y="7829" width="0.2019%" height="15" fill="rgb(220,88,7)" fg:x="15075" fg:w="59"/><text x="51.8449%" y="7839.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (192 samples, 0.66%)</title><rect x="59.0013%" y="7845" width="0.6571%" height="15" fill="rgb(213,176,14)" fg:x="17239" fg:w="192"/><text x="59.2513%" y="7855.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (192 samples, 0.66%)</title><rect x="59.0013%" y="7829" width="0.6571%" height="15" fill="rgb(246,73,7)" fg:x="17239" fg:w="192"/><text x="59.2513%" y="7839.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (192 samples, 0.66%)</title><rect x="59.0013%" y="7813" width="0.6571%" height="15" fill="rgb(245,64,36)" fg:x="17239" fg:w="192"/><text x="59.2513%" y="7823.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (69 samples, 0.24%)</title><rect x="60.0760%" y="7813" width="0.2362%" height="15" fill="rgb(245,80,10)" fg:x="17553" fg:w="69"/><text x="60.3260%" y="7823.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (69 samples, 0.24%)</title><rect x="60.0760%" y="7797" width="0.2362%" height="15" fill="rgb(232,107,50)" fg:x="17553" fg:w="69"/><text x="60.3260%" y="7807.50"></text></g><g><title>tetrs::logic::bot::can_place (2,625 samples, 8.98%)</title><rect x="51.7968%" y="7861" width="8.9842%" height="15" fill="rgb(253,3,0)" fg:x="15134" fg:w="2625"/><text x="52.0468%" y="7871.50">tetrs::logic:..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (327 samples, 1.12%)</title><rect x="59.6619%" y="7845" width="1.1192%" height="15" fill="rgb(212,99,53)" fg:x="17432" fg:w="327"/><text x="59.9119%" y="7855.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (327 samples, 1.12%)</title><rect x="59.6619%" y="7829" width="1.1192%" height="15" fill="rgb(249,111,54)" fg:x="17432" fg:w="327"/><text x="59.9119%" y="7839.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (137 samples, 0.47%)</title><rect x="60.3121%" y="7813" width="0.4689%" height="15" fill="rgb(249,55,30)" fg:x="17622" fg:w="137"/><text x="60.5621%" y="7823.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (17 samples, 0.06%)</title><rect x="61.2670%" y="7845" width="0.0582%" height="15" fill="rgb(237,47,42)" fg:x="17901" fg:w="17"/><text x="61.5170%" y="7855.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (17 samples, 0.06%)</title><rect x="61.2670%" y="7829" width="0.0582%" height="15" fill="rgb(211,20,18)" fg:x="17901" fg:w="17"/><text x="61.5170%" y="7839.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (17 samples, 0.06%)</title><rect x="61.2670%" y="7813" width="0.0582%" height="15" fill="rgb(231,203,46)" fg:x="17901" fg:w="17"/><text x="61.5170%" y="7823.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (10 samples, 0.03%)</title><rect x="61.3252%" y="7845" width="0.0342%" height="15" fill="rgb(237,142,3)" fg:x="17918" fg:w="10"/><text x="61.5752%" y="7855.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (10 samples, 0.03%)</title><rect x="61.3252%" y="7829" width="0.0342%" height="15" fill="rgb(241,107,1)" fg:x="17918" fg:w="10"/><text x="61.5752%" y="7839.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (10 samples, 0.03%)</title><rect x="61.3252%" y="7813" width="0.0342%" height="15" fill="rgb(229,83,13)" fg:x="17918" fg:w="10"/><text x="61.5752%" y="7823.50"></text></g><g><title>tetrs::logic::bot::place_piece (230 samples, 0.79%)</title><rect x="60.7810%" y="7861" width="0.7872%" height="15" fill="rgb(241,91,40)" fg:x="17759" fg:w="230"/><text x="61.0310%" y="7871.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (60 samples, 0.21%)</title><rect x="61.3629%" y="7845" width="0.2054%" height="15" fill="rgb(225,3,45)" fg:x="17929" fg:w="60"/><text x="61.6129%" y="7855.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (60 samples, 0.21%)</title><rect x="61.3629%" y="7829" width="0.2054%" height="15" fill="rgb(244,223,14)" fg:x="17929" fg:w="60"/><text x="61.6129%" y="7839.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (56 samples, 0.19%)</title><rect x="61.3765%" y="7813" width="0.1917%" height="15" fill="rgb(224,124,37)" fg:x="17933" fg:w="56"/><text x="61.6265%" y="7823.50"></text></g><g><title>tetrs::logic::bot::generate_states (8,475 samples, 29.01%)</title><rect x="32.6853%" y="7877" width="29.0061%" height="15" fill="rgb(251,171,30)" fg:x="9550" fg:w="8475"/><text x="32.9353%" y="7887.50">tetrs::logic::bot::generate_states</text></g><g><title>tetrs::logic::id_manager::IdManager::next_unique_id (35 samples, 0.12%)</title><rect x="61.5716%" y="7861" width="0.1198%" height="15" fill="rgb(236,46,54)" fg:x="17990" fg:w="35"/><text x="61.8216%" y="7871.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (7 samples, 0.02%)</title><rect x="61.6675%" y="7845" width="0.0240%" height="15" fill="rgb(245,213,5)" fg:x="18018" fg:w="7"/><text x="61.9175%" y="7855.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (7 samples, 0.02%)</title><rect x="61.6675%" y="7829" width="0.0240%" height="15" fill="rgb(230,144,27)" fg:x="18018" fg:w="7"/><text x="61.9175%" y="7839.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (7 samples, 0.02%)</title><rect x="61.6675%" y="7813" width="0.0240%" height="15" fill="rgb(220,86,6)" fg:x="18018" fg:w="7"/><text x="61.9175%" y="7823.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (32 samples, 0.11%)</title><rect x="62.3451%" y="7861" width="0.1095%" height="15" fill="rgb(240,20,13)" fg:x="18216" fg:w="32"/><text x="62.5951%" y="7871.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (32 samples, 0.11%)</title><rect x="62.3451%" y="7845" width="0.1095%" height="15" fill="rgb(217,89,34)" fg:x="18216" fg:w="32"/><text x="62.5951%" y="7855.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (32 samples, 0.11%)</title><rect x="62.3451%" y="7829" width="0.1095%" height="15" fill="rgb(229,13,5)" fg:x="18216" fg:w="32"/><text x="62.5951%" y="7839.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (25 samples, 0.09%)</title><rect x="62.4581%" y="7829" width="0.0856%" height="15" fill="rgb(244,67,35)" fg:x="18249" fg:w="25"/><text x="62.7081%" y="7839.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (25 samples, 0.09%)</title><rect x="62.4581%" y="7813" width="0.0856%" height="15" fill="rgb(221,40,2)" fg:x="18249" fg:w="25"/><text x="62.7081%" y="7823.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (107 samples, 0.37%)</title><rect x="62.4547%" y="7861" width="0.3662%" height="15" fill="rgb(237,157,21)" fg:x="18248" fg:w="107"/><text x="62.7047%" y="7871.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (107 samples, 0.37%)</title><rect x="62.4547%" y="7845" width="0.3662%" height="15" fill="rgb(222,94,11)" fg:x="18248" fg:w="107"/><text x="62.7047%" y="7855.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (81 samples, 0.28%)</title><rect x="62.5436%" y="7829" width="0.2772%" height="15" fill="rgb(249,113,6)" fg:x="18274" fg:w="81"/><text x="62.7936%" y="7839.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (49 samples, 0.17%)</title><rect x="64.4876%" y="7845" width="0.1677%" height="15" fill="rgb(238,137,36)" fg:x="18842" fg:w="49"/><text x="64.7376%" y="7855.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (6 samples, 0.02%)</title><rect x="64.6348%" y="7829" width="0.0205%" height="15" fill="rgb(210,102,26)" fg:x="18885" fg:w="6"/><text x="64.8848%" y="7839.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (6 samples, 0.02%)</title><rect x="64.6348%" y="7813" width="0.0205%" height="15" fill="rgb(218,30,30)" fg:x="18885" fg:w="6"/><text x="64.8848%" y="7823.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (87 samples, 0.30%)</title><rect x="64.6553%" y="7845" width="0.2978%" height="15" fill="rgb(214,67,26)" fg:x="18891" fg:w="87"/><text x="64.9053%" y="7855.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (87 samples, 0.30%)</title><rect x="64.6553%" y="7829" width="0.2978%" height="15" fill="rgb(251,9,53)" fg:x="18891" fg:w="87"/><text x="64.9053%" y="7839.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (87 samples, 0.30%)</title><rect x="64.6553%" y="7813" width="0.2978%" height="15" fill="rgb(228,204,25)" fg:x="18891" fg:w="87"/><text x="64.9053%" y="7823.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::backward_unchecked (22 samples, 0.08%)</title><rect x="64.9839%" y="7797" width="0.0753%" height="15" fill="rgb(207,153,8)" fg:x="18987" fg:w="22"/><text x="65.2339%" y="7807.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_sub (22 samples, 0.08%)</title><rect x="64.9839%" y="7781" width="0.0753%" height="15" fill="rgb(242,9,16)" fg:x="18987" fg:w="22"/><text x="65.2339%" y="7791.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (74 samples, 0.25%)</title><rect x="64.9565%" y="7845" width="0.2533%" height="15" fill="rgb(217,211,10)" fg:x="18979" fg:w="74"/><text x="65.2065%" y="7855.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (74 samples, 0.25%)</title><rect x="64.9565%" y="7829" width="0.2533%" height="15" fill="rgb(219,228,52)" fg:x="18979" fg:w="74"/><text x="65.2065%" y="7839.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (74 samples, 0.25%)</title><rect x="64.9565%" y="7813" width="0.2533%" height="15" fill="rgb(231,92,29)" fg:x="18979" fg:w="74"/><text x="65.2065%" y="7823.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (44 samples, 0.15%)</title><rect x="65.0592%" y="7797" width="0.1506%" height="15" fill="rgb(232,8,23)" fg:x="19009" fg:w="44"/><text x="65.3092%" y="7807.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::all (268 samples, 0.92%)</title><rect x="65.2098%" y="7845" width="0.9172%" height="15" fill="rgb(216,211,34)" fg:x="19053" fg:w="268"/><text x="65.4598%" y="7855.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (67 samples, 0.23%)</title><rect x="65.8977%" y="7829" width="0.2293%" height="15" fill="rgb(236,151,0)" fg:x="19254" fg:w="67"/><text x="66.1477%" y="7839.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (16 samples, 0.05%)</title><rect x="66.0723%" y="7813" width="0.0548%" height="15" fill="rgb(209,168,3)" fg:x="19305" fg:w="16"/><text x="66.3223%" y="7823.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (90 samples, 0.31%)</title><rect x="66.1270%" y="7845" width="0.3080%" height="15" fill="rgb(208,129,28)" fg:x="19321" fg:w="90"/><text x="66.3770%" y="7855.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (90 samples, 0.31%)</title><rect x="66.1270%" y="7829" width="0.3080%" height="15" fill="rgb(229,78,22)" fg:x="19321" fg:w="90"/><text x="66.3770%" y="7839.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (57 samples, 0.20%)</title><rect x="66.2400%" y="7813" width="0.1951%" height="15" fill="rgb(228,187,13)" fg:x="19354" fg:w="57"/><text x="66.4900%" y="7823.50"></text></g><g><title>tetrs::logic::game::create_composite_id (3 samples, 0.01%)</title><rect x="66.4351%" y="7845" width="0.0103%" height="15" fill="rgb(240,119,24)" fg:x="19411" fg:w="3"/><text x="66.6851%" y="7855.50"></text></g><g><title>tetrs::logic::game::get_pent_id (5 samples, 0.02%)</title><rect x="66.4453%" y="7845" width="0.0171%" height="15" fill="rgb(209,194,42)" fg:x="19414" fg:w="5"/><text x="66.6953%" y="7855.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (191 samples, 0.65%)</title><rect x="68.1121%" y="7829" width="0.6537%" height="15" fill="rgb(247,200,46)" fg:x="19901" fg:w="191"/><text x="68.3621%" y="7839.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (191 samples, 0.65%)</title><rect x="68.1121%" y="7813" width="0.6537%" height="15" fill="rgb(218,76,16)" fg:x="19901" fg:w="191"/><text x="68.3621%" y="7823.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (191 samples, 0.65%)</title><rect x="68.1121%" y="7797" width="0.6537%" height="15" fill="rgb(225,21,48)" fg:x="19901" fg:w="191"/><text x="68.3621%" y="7807.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::backward_unchecked (8 samples, 0.03%)</title><rect x="68.7727%" y="7781" width="0.0274%" height="15" fill="rgb(239,223,50)" fg:x="20094" fg:w="8"/><text x="69.0227%" y="7791.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_sub (8 samples, 0.03%)</title><rect x="68.7727%" y="7765" width="0.0274%" height="15" fill="rgb(244,45,21)" fg:x="20094" fg:w="8"/><text x="69.0227%" y="7775.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.05%)</title><rect x="68.7727%" y="7829" width="0.0548%" height="15" fill="rgb(232,33,43)" fg:x="20094" fg:w="16"/><text x="69.0227%" y="7839.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (16 samples, 0.05%)</title><rect x="68.7727%" y="7813" width="0.0548%" height="15" fill="rgb(209,8,3)" fg:x="20094" fg:w="16"/><text x="69.0227%" y="7823.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (16 samples, 0.05%)</title><rect x="68.7727%" y="7797" width="0.0548%" height="15" fill="rgb(214,25,53)" fg:x="20094" fg:w="16"/><text x="69.0227%" y="7807.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (8 samples, 0.03%)</title><rect x="68.8001%" y="7781" width="0.0274%" height="15" fill="rgb(254,186,54)" fg:x="20102" fg:w="8"/><text x="69.0501%" y="7791.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.09%)</title><rect x="68.8274%" y="7829" width="0.0890%" height="15" fill="rgb(208,174,49)" fg:x="20110" fg:w="26"/><text x="69.0774%" y="7839.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (22 samples, 0.08%)</title><rect x="68.8411%" y="7813" width="0.0753%" height="15" fill="rgb(233,191,51)" fg:x="20114" fg:w="22"/><text x="69.0911%" y="7823.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (6 samples, 0.02%)</title><rect x="68.9164%" y="7829" width="0.0205%" height="15" fill="rgb(222,134,10)" fg:x="20136" fg:w="6"/><text x="69.1664%" y="7839.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (26 samples, 0.09%)</title><rect x="69.3100%" y="7781" width="0.0890%" height="15" fill="rgb(230,226,20)" fg:x="20251" fg:w="26"/><text x="69.5600%" y="7791.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (8 samples, 0.03%)</title><rect x="69.3990%" y="7781" width="0.0274%" height="15" fill="rgb(251,111,25)" fg:x="20277" fg:w="8"/><text x="69.6490%" y="7791.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (3 samples, 0.01%)</title><rect x="69.4161%" y="7765" width="0.0103%" height="15" fill="rgb(224,40,46)" fg:x="20282" fg:w="3"/><text x="69.6661%" y="7775.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (6 samples, 0.02%)</title><rect x="69.4264%" y="7781" width="0.0205%" height="15" fill="rgb(236,108,47)" fg:x="20285" fg:w="6"/><text x="69.6764%" y="7791.50"></text></g><g><title>__rdl_realloc (17 samples, 0.06%)</title><rect x="69.5496%" y="7717" width="0.0582%" height="15" fill="rgb(234,93,0)" fg:x="20321" fg:w="17"/><text x="69.7996%" y="7727.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (15 samples, 0.05%)</title><rect x="69.5564%" y="7701" width="0.0513%" height="15" fill="rgb(224,213,32)" fg:x="20323" fg:w="15"/><text x="69.8064%" y="7711.50"></text></g><g><title>__rust_realloc (8 samples, 0.03%)</title><rect x="69.6078%" y="7717" width="0.0274%" height="15" fill="rgb(251,11,48)" fg:x="20338" fg:w="8"/><text x="69.8578%" y="7727.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (445 samples, 1.52%)</title><rect x="69.5393%" y="7765" width="1.5230%" height="15" fill="rgb(236,173,5)" fg:x="20318" fg:w="445"/><text x="69.7893%" y="7775.50"></text></g><g><title>alloc::alloc::Global::grow_impl (445 samples, 1.52%)</title><rect x="69.5393%" y="7749" width="1.5230%" height="15" fill="rgb(230,95,12)" fg:x="20318" fg:w="445"/><text x="69.7893%" y="7759.50"></text></g><g><title>alloc::alloc::realloc (442 samples, 1.51%)</title><rect x="69.5496%" y="7733" width="1.5128%" height="15" fill="rgb(232,209,1)" fg:x="20321" fg:w="442"/><text x="69.7996%" y="7743.50"></text></g><g><title>realloc (417 samples, 1.43%)</title><rect x="69.6352%" y="7717" width="1.4272%" height="15" fill="rgb(232,6,1)" fg:x="20346" fg:w="417"/><text x="69.8852%" y="7727.50"></text></g><g><title>[libc.so.6] (369 samples, 1.26%)</title><rect x="69.7994%" y="7701" width="1.2629%" height="15" fill="rgb(210,224,50)" fg:x="20394" fg:w="369"/><text x="70.0494%" y="7711.50"></text></g><g><title>[libc.so.6] (284 samples, 0.97%)</title><rect x="70.0904%" y="7685" width="0.9720%" height="15" fill="rgb(228,127,35)" fg:x="20479" fg:w="284"/><text x="70.3404%" y="7695.50"></text></g><g><title>[libc.so.6] (28 samples, 0.10%)</title><rect x="70.9665%" y="7669" width="0.0958%" height="15" fill="rgb(245,102,45)" fg:x="20735" fg:w="28"/><text x="71.2165%" y="7679.50"></text></g><g><title>__rdl_alloc (4 samples, 0.01%)</title><rect x="71.0624%" y="7765" width="0.0137%" height="15" fill="rgb(214,1,49)" fg:x="20763" fg:w="4"/><text x="71.3124%" y="7775.50"></text></g><g><title>__rust_alloc (6 samples, 0.02%)</title><rect x="71.0760%" y="7765" width="0.0205%" height="15" fill="rgb(226,163,40)" fg:x="20767" fg:w="6"/><text x="71.3260%" y="7775.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (15 samples, 0.05%)</title><rect x="71.0966%" y="7765" width="0.0513%" height="15" fill="rgb(239,212,28)" fg:x="20773" fg:w="15"/><text x="71.3466%" y="7775.50"></text></g><g><title>alloc::raw_vec::finish_grow (534 samples, 1.83%)</title><rect x="69.4469%" y="7781" width="1.8276%" height="15" fill="rgb(220,20,13)" fg:x="20291" fg:w="534"/><text x="69.6969%" y="7791.50">a..</text></g><g><title>malloc (37 samples, 0.13%)</title><rect x="71.1479%" y="7765" width="0.1266%" height="15" fill="rgb(210,164,35)" fg:x="20788" fg:w="37"/><text x="71.3979%" y="7775.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="71.2609%" y="7749" width="0.0137%" height="15" fill="rgb(248,109,41)" fg:x="20821" fg:w="4"/><text x="71.5109%" y="7759.50"></text></g><g><title>core::alloc::layout::Layout::array (9 samples, 0.03%)</title><rect x="71.2746%" y="7781" width="0.0308%" height="15" fill="rgb(238,23,50)" fg:x="20825" fg:w="9"/><text x="71.5246%" y="7791.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (9 samples, 0.03%)</title><rect x="71.2746%" y="7765" width="0.0308%" height="15" fill="rgb(211,48,49)" fg:x="20825" fg:w="9"/><text x="71.5246%" y="7775.50"></text></g><g><title>core::cmp::max (12 samples, 0.04%)</title><rect x="71.3054%" y="7781" width="0.0411%" height="15" fill="rgb(223,36,21)" fg:x="20834" fg:w="12"/><text x="71.5554%" y="7791.50"></text></g><g><title>core::cmp::Ord::max (12 samples, 0.04%)</title><rect x="71.3054%" y="7765" width="0.0411%" height="15" fill="rgb(207,123,46)" fg:x="20834" fg:w="12"/><text x="71.5554%" y="7775.50"></text></g><g><title>core::cmp::max_by (12 samples, 0.04%)</title><rect x="71.3054%" y="7749" width="0.0411%" height="15" fill="rgb(240,218,32)" fg:x="20834" fg:w="12"/><text x="71.5554%" y="7759.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (618 samples, 2.12%)</title><rect x="69.2724%" y="7813" width="2.1151%" height="15" fill="rgb(252,5,43)" fg:x="20240" fg:w="618"/><text x="69.5224%" y="7823.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (614 samples, 2.10%)</title><rect x="69.2861%" y="7797" width="2.1014%" height="15" fill="rgb(252,84,19)" fg:x="20244" fg:w="614"/><text x="69.5361%" y="7807.50">a..</text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (12 samples, 0.04%)</title><rect x="71.3464%" y="7781" width="0.0411%" height="15" fill="rgb(243,152,39)" fg:x="20846" fg:w="12"/><text x="71.5964%" y="7791.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (12 samples, 0.04%)</title><rect x="71.3464%" y="7765" width="0.0411%" height="15" fill="rgb(234,160,15)" fg:x="20846" fg:w="12"/><text x="71.5964%" y="7775.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (38 samples, 0.13%)</title><rect x="71.3943%" y="7813" width="0.1301%" height="15" fill="rgb(237,34,20)" fg:x="20860" fg:w="38"/><text x="71.6443%" y="7823.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (801 samples, 2.74%)</title><rect x="68.9370%" y="7829" width="2.7415%" height="15" fill="rgb(229,97,13)" fg:x="20142" fg:w="801"/><text x="69.1870%" y="7839.50">al..</text></g><g><title>core::ptr::write (45 samples, 0.15%)</title><rect x="71.5244%" y="7813" width="0.1540%" height="15" fill="rgb(234,71,50)" fg:x="20898" fg:w="45"/><text x="71.7744%" y="7823.50"></text></g><g><title>__rdl_dealloc (3 samples, 0.01%)</title><rect x="71.6818%" y="7749" width="0.0103%" height="15" fill="rgb(253,155,4)" fg:x="20944" fg:w="3"/><text x="71.9318%" y="7759.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (3 samples, 0.01%)</title><rect x="71.6818%" y="7733" width="0.0103%" height="15" fill="rgb(222,185,37)" fg:x="20944" fg:w="3"/><text x="71.9318%" y="7743.50"></text></g><g><title>__rust_dealloc (3 samples, 0.01%)</title><rect x="71.6921%" y="7749" width="0.0103%" height="15" fill="rgb(251,177,13)" fg:x="20947" fg:w="3"/><text x="71.9421%" y="7759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,usize)&gt;&gt; (81 samples, 0.28%)</title><rect x="71.6818%" y="7829" width="0.2772%" height="15" fill="rgb(250,179,40)" fg:x="20944" fg:w="81"/><text x="71.9318%" y="7839.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,usize)&gt;&gt; (81 samples, 0.28%)</title><rect x="71.6818%" y="7813" width="0.2772%" height="15" fill="rgb(242,44,2)" fg:x="20944" fg:w="81"/><text x="71.9318%" y="7823.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (81 samples, 0.28%)</title><rect x="71.6818%" y="7797" width="0.2772%" height="15" fill="rgb(216,177,13)" fg:x="20944" fg:w="81"/><text x="71.9318%" y="7807.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (81 samples, 0.28%)</title><rect x="71.6818%" y="7781" width="0.2772%" height="15" fill="rgb(216,106,43)" fg:x="20944" fg:w="81"/><text x="71.9318%" y="7791.50"></text></g><g><title>alloc::alloc::dealloc (81 samples, 0.28%)</title><rect x="71.6818%" y="7765" width="0.2772%" height="15" fill="rgb(216,183,2)" fg:x="20944" fg:w="81"/><text x="71.9318%" y="7775.50"></text></g><g><title>cfree (75 samples, 0.26%)</title><rect x="71.7024%" y="7749" width="0.2567%" height="15" fill="rgb(249,75,3)" fg:x="20950" fg:w="75"/><text x="71.9524%" y="7759.50"></text></g><g><title>[libc.so.6] (67 samples, 0.23%)</title><rect x="71.7298%" y="7733" width="0.2293%" height="15" fill="rgb(219,67,39)" fg:x="20958" fg:w="67"/><text x="71.9798%" y="7743.50"></text></g><g><title>[libc.so.6] (32 samples, 0.11%)</title><rect x="71.8495%" y="7717" width="0.1095%" height="15" fill="rgb(253,228,2)" fg:x="20993" fg:w="32"/><text x="72.0995%" y="7727.50"></text></g><g><title>[libc.so.6] (13 samples, 0.04%)</title><rect x="71.9146%" y="7701" width="0.0445%" height="15" fill="rgb(235,138,27)" fg:x="21012" fg:w="13"/><text x="72.1646%" y="7711.50"></text></g><g><title>__rdl_dealloc (6 samples, 0.02%)</title><rect x="71.9728%" y="7685" width="0.0205%" height="15" fill="rgb(236,97,51)" fg:x="21029" fg:w="6"/><text x="72.2228%" y="7695.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (6 samples, 0.02%)</title><rect x="71.9728%" y="7669" width="0.0205%" height="15" fill="rgb(240,80,30)" fg:x="21029" fg:w="6"/><text x="72.2228%" y="7679.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (37 samples, 0.13%)</title><rect x="71.9659%" y="7717" width="0.1266%" height="15" fill="rgb(230,178,19)" fg:x="21027" fg:w="37"/><text x="72.2159%" y="7727.50"></text></g><g><title>alloc::alloc::dealloc (36 samples, 0.12%)</title><rect x="71.9693%" y="7701" width="0.1232%" height="15" fill="rgb(210,190,27)" fg:x="21028" fg:w="36"/><text x="72.2193%" y="7711.50"></text></g><g><title>cfree (27 samples, 0.09%)</title><rect x="72.0001%" y="7685" width="0.0924%" height="15" fill="rgb(222,107,31)" fg:x="21037" fg:w="27"/><text x="72.2501%" y="7695.50"></text></g><g><title>[libc.so.6] (16 samples, 0.05%)</title><rect x="72.0378%" y="7669" width="0.0548%" height="15" fill="rgb(216,127,34)" fg:x="21048" fg:w="16"/><text x="72.2878%" y="7679.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;u16&gt;&gt; (41 samples, 0.14%)</title><rect x="71.9591%" y="7829" width="0.1403%" height="15" fill="rgb(234,116,52)" fg:x="21025" fg:w="41"/><text x="72.2091%" y="7839.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;u16,std::collections::hash::map::RandomState&gt;&gt; (41 samples, 0.14%)</title><rect x="71.9591%" y="7813" width="0.1403%" height="15" fill="rgb(222,124,15)" fg:x="21025" fg:w="41"/><text x="72.2091%" y="7823.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;u16,(),std::collections::hash::map::RandomState&gt;&gt; (41 samples, 0.14%)</title><rect x="71.9591%" y="7797" width="0.1403%" height="15" fill="rgb(231,179,28)" fg:x="21025" fg:w="41"/><text x="72.2091%" y="7807.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u16,())&gt;&gt; (41 samples, 0.14%)</title><rect x="71.9591%" y="7781" width="0.1403%" height="15" fill="rgb(226,93,45)" fg:x="21025" fg:w="41"/><text x="72.2091%" y="7791.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (41 samples, 0.14%)</title><rect x="71.9591%" y="7765" width="0.1403%" height="15" fill="rgb(215,8,51)" fg:x="21025" fg:w="41"/><text x="72.2091%" y="7775.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (39 samples, 0.13%)</title><rect x="71.9659%" y="7749" width="0.1335%" height="15" fill="rgb(223,106,5)" fg:x="21027" fg:w="39"/><text x="72.2159%" y="7759.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (39 samples, 0.13%)</title><rect x="71.9659%" y="7733" width="0.1335%" height="15" fill="rgb(250,191,5)" fg:x="21027" fg:w="39"/><text x="72.2159%" y="7743.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::clear (8 samples, 0.03%)</title><rect x="72.0994%" y="7829" width="0.0274%" height="15" fill="rgb(242,132,44)" fg:x="21066" fg:w="8"/><text x="72.3494%" y="7839.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::clear (8 samples, 0.03%)</title><rect x="72.0994%" y="7813" width="0.0274%" height="15" fill="rgb(251,152,29)" fg:x="21066" fg:w="8"/><text x="72.3494%" y="7823.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (8 samples, 0.03%)</title><rect x="72.0994%" y="7797" width="0.0274%" height="15" fill="rgb(218,179,5)" fg:x="21066" fg:w="8"/><text x="72.3494%" y="7807.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (8 samples, 0.03%)</title><rect x="72.0994%" y="7781" width="0.0274%" height="15" fill="rgb(227,67,19)" fg:x="21066" fg:w="8"/><text x="72.3494%" y="7791.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;&amp;mut hashbrown::raw::RawTable&lt;(u16,())&gt;,hashbrown::raw::RawTable&lt;(u16,())&gt;::clear::{{closure}}&gt;&gt; (5 samples, 0.02%)</title><rect x="72.1097%" y="7765" width="0.0171%" height="15" fill="rgb(233,119,31)" fg:x="21069" fg:w="5"/><text x="72.3597%" y="7775.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="72.1097%" y="7749" width="0.0171%" height="15" fill="rgb(241,120,22)" fg:x="21069" fg:w="5"/><text x="72.3597%" y="7759.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear::_{{closure}} (5 samples, 0.02%)</title><rect x="72.1097%" y="7733" width="0.0171%" height="15" fill="rgb(224,102,30)" fg:x="21069" fg:w="5"/><text x="72.3597%" y="7743.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear_no_drop (5 samples, 0.02%)</title><rect x="72.1097%" y="7717" width="0.0171%" height="15" fill="rgb(210,164,37)" fg:x="21069" fg:w="5"/><text x="72.3597%" y="7727.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::clear_no_drop (5 samples, 0.02%)</title><rect x="72.1097%" y="7701" width="0.0171%" height="15" fill="rgb(226,191,16)" fg:x="21069" fg:w="5"/><text x="72.3597%" y="7711.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (5 samples, 0.02%)</title><rect x="72.1097%" y="7685" width="0.0171%" height="15" fill="rgb(214,40,45)" fg:x="21069" fg:w="5"/><text x="72.3597%" y="7695.50"></text></g><g><title>core::intrinsics::write_bytes (5 samples, 0.02%)</title><rect x="72.1097%" y="7669" width="0.0171%" height="15" fill="rgb(244,29,26)" fg:x="21069" fg:w="5"/><text x="72.3597%" y="7679.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="72.1131%" y="7653" width="0.0137%" height="15" fill="rgb(216,16,5)" fg:x="21070" fg:w="4"/><text x="72.3631%" y="7663.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (10 samples, 0.03%)</title><rect x="72.7531%" y="7669" width="0.0342%" height="15" fill="rgb(249,76,35)" fg:x="21257" fg:w="10"/><text x="73.0031%" y="7679.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (48 samples, 0.16%)</title><rect x="72.6607%" y="7685" width="0.1643%" height="15" fill="rgb(207,11,44)" fg:x="21230" fg:w="48"/><text x="72.9107%" y="7695.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (11 samples, 0.04%)</title><rect x="72.7873%" y="7669" width="0.0376%" height="15" fill="rgb(228,190,49)" fg:x="21267" fg:w="11"/><text x="73.0373%" y="7679.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (163 samples, 0.56%)</title><rect x="73.0064%" y="7669" width="0.5579%" height="15" fill="rgb(214,173,12)" fg:x="21331" fg:w="163"/><text x="73.2564%" y="7679.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (399 samples, 1.37%)</title><rect x="72.3150%" y="7733" width="1.3656%" height="15" fill="rgb(218,26,35)" fg:x="21129" fg:w="399"/><text x="72.5650%" y="7743.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (399 samples, 1.37%)</title><rect x="72.3150%" y="7717" width="1.3656%" height="15" fill="rgb(220,200,19)" fg:x="21129" fg:w="399"/><text x="72.5650%" y="7727.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (399 samples, 1.37%)</title><rect x="72.3150%" y="7701" width="1.3656%" height="15" fill="rgb(239,95,49)" fg:x="21129" fg:w="399"/><text x="72.5650%" y="7711.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (250 samples, 0.86%)</title><rect x="72.8250%" y="7685" width="0.8556%" height="15" fill="rgb(235,85,53)" fg:x="21278" fg:w="250"/><text x="73.0750%" y="7695.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (34 samples, 0.12%)</title><rect x="73.5642%" y="7669" width="0.1164%" height="15" fill="rgb(233,133,31)" fg:x="21494" fg:w="34"/><text x="73.8142%" y="7679.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (21 samples, 0.07%)</title><rect x="73.6806%" y="7733" width="0.0719%" height="15" fill="rgb(218,25,20)" fg:x="21528" fg:w="21"/><text x="73.9306%" y="7743.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (4 samples, 0.01%)</title><rect x="73.7388%" y="7717" width="0.0137%" height="15" fill="rgb(252,210,38)" fg:x="21545" fg:w="4"/><text x="73.9888%" y="7727.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (4 samples, 0.01%)</title><rect x="73.7388%" y="7701" width="0.0137%" height="15" fill="rgb(242,134,21)" fg:x="21545" fg:w="4"/><text x="73.9888%" y="7711.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (4 samples, 0.01%)</title><rect x="73.7388%" y="7685" width="0.0137%" height="15" fill="rgb(213,28,48)" fg:x="21545" fg:w="4"/><text x="73.9888%" y="7695.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (81 samples, 0.28%)</title><rect x="73.8244%" y="7685" width="0.2772%" height="15" fill="rgb(250,196,2)" fg:x="21570" fg:w="81"/><text x="74.0744%" y="7695.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (81 samples, 0.28%)</title><rect x="73.8244%" y="7669" width="0.2772%" height="15" fill="rgb(227,5,17)" fg:x="21570" fg:w="81"/><text x="74.0744%" y="7679.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (81 samples, 0.28%)</title><rect x="73.8244%" y="7653" width="0.2772%" height="15" fill="rgb(221,226,24)" fg:x="21570" fg:w="81"/><text x="74.0744%" y="7663.50"></text></g><g><title>core::hash::sip::u8to64_le (54 samples, 0.18%)</title><rect x="73.9168%" y="7637" width="0.1848%" height="15" fill="rgb(211,5,48)" fg:x="21597" fg:w="54"/><text x="74.1668%" y="7647.50"></text></g><g><title>hashbrown::map::make_hash (571 samples, 1.95%)</title><rect x="72.1781%" y="7765" width="1.9543%" height="15" fill="rgb(219,150,6)" fg:x="21089" fg:w="571"/><text x="72.4281%" y="7775.50">h..</text></g><g><title>core::hash::BuildHasher::hash_one (569 samples, 1.95%)</title><rect x="72.1850%" y="7749" width="1.9474%" height="15" fill="rgb(251,46,16)" fg:x="21091" fg:w="569"/><text x="72.4350%" y="7759.50">c..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (111 samples, 0.38%)</title><rect x="73.7525%" y="7733" width="0.3799%" height="15" fill="rgb(220,204,40)" fg:x="21549" fg:w="111"/><text x="74.0025%" y="7743.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (111 samples, 0.38%)</title><rect x="73.7525%" y="7717" width="0.3799%" height="15" fill="rgb(211,85,2)" fg:x="21549" fg:w="111"/><text x="74.0025%" y="7727.50"></text></g><g><title>core::hash::Hasher::write_u16 (111 samples, 0.38%)</title><rect x="73.7525%" y="7701" width="0.3799%" height="15" fill="rgb(229,17,7)" fg:x="21549" fg:w="111"/><text x="74.0025%" y="7711.50"></text></g><g><title>core::num::&lt;impl u16&gt;::to_ne_bytes (9 samples, 0.03%)</title><rect x="74.1016%" y="7685" width="0.0308%" height="15" fill="rgb(239,72,28)" fg:x="21651" fg:w="9"/><text x="74.3516%" y="7695.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (110 samples, 0.38%)</title><rect x="74.4781%" y="7717" width="0.3765%" height="15" fill="rgb(230,47,54)" fg:x="21761" fg:w="110"/><text x="74.7281%" y="7727.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (15 samples, 0.05%)</title><rect x="74.8032%" y="7701" width="0.0513%" height="15" fill="rgb(214,50,8)" fg:x="21856" fg:w="15"/><text x="75.0532%" y="7711.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (64 samples, 0.22%)</title><rect x="74.8580%" y="7717" width="0.2190%" height="15" fill="rgb(216,198,43)" fg:x="21872" fg:w="64"/><text x="75.1080%" y="7727.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (64 samples, 0.22%)</title><rect x="74.8580%" y="7701" width="0.2190%" height="15" fill="rgb(234,20,35)" fg:x="21872" fg:w="64"/><text x="75.1080%" y="7711.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (64 samples, 0.22%)</title><rect x="74.8580%" y="7685" width="0.2190%" height="15" fill="rgb(254,45,19)" fg:x="21872" fg:w="64"/><text x="75.1080%" y="7695.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (64 samples, 0.22%)</title><rect x="74.8580%" y="7669" width="0.2190%" height="15" fill="rgb(219,14,44)" fg:x="21872" fg:w="64"/><text x="75.1080%" y="7679.50"></text></g><g><title>hashbrown::raw::h2 (131 samples, 0.45%)</title><rect x="75.0770%" y="7717" width="0.4484%" height="15" fill="rgb(217,220,26)" fg:x="21936" fg:w="131"/><text x="75.3270%" y="7727.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (48 samples, 0.16%)</title><rect x="75.5254%" y="7717" width="0.1643%" height="15" fill="rgb(213,158,28)" fg:x="22067" fg:w="48"/><text x="75.7754%" y="7727.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (48 samples, 0.16%)</title><rect x="75.5254%" y="7701" width="0.1643%" height="15" fill="rgb(252,51,52)" fg:x="22067" fg:w="48"/><text x="75.7754%" y="7711.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1,050 samples, 3.59%)</title><rect x="72.1268%" y="7829" width="3.5937%" height="15" fill="rgb(246,89,16)" fg:x="21074" fg:w="1050"/><text x="72.3768%" y="7839.50">std:..</text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1,050 samples, 3.59%)</title><rect x="72.1268%" y="7813" width="3.5937%" height="15" fill="rgb(216,158,49)" fg:x="21074" fg:w="1050"/><text x="72.3768%" y="7823.50">hash..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1,050 samples, 3.59%)</title><rect x="72.1268%" y="7797" width="3.5937%" height="15" fill="rgb(236,107,19)" fg:x="21074" fg:w="1050"/><text x="72.3768%" y="7807.50">hash..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1,050 samples, 3.59%)</title><rect x="72.1268%" y="7781" width="3.5937%" height="15" fill="rgb(228,185,30)" fg:x="21074" fg:w="1050"/><text x="72.3768%" y="7791.50">hash..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (464 samples, 1.59%)</title><rect x="74.1324%" y="7765" width="1.5881%" height="15" fill="rgb(246,134,8)" fg:x="21660" fg:w="464"/><text x="74.3824%" y="7775.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (464 samples, 1.59%)</title><rect x="74.1324%" y="7749" width="1.5881%" height="15" fill="rgb(214,143,50)" fg:x="21660" fg:w="464"/><text x="74.3824%" y="7759.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (464 samples, 1.59%)</title><rect x="74.1324%" y="7733" width="1.5881%" height="15" fill="rgb(228,75,8)" fg:x="21660" fg:w="464"/><text x="74.3824%" y="7743.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (9 samples, 0.03%)</title><rect x="75.6896%" y="7717" width="0.0308%" height="15" fill="rgb(207,175,4)" fg:x="22115" fg:w="9"/><text x="75.9396%" y="7727.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (9 samples, 0.03%)</title><rect x="75.6896%" y="7701" width="0.0308%" height="15" fill="rgb(205,108,24)" fg:x="22115" fg:w="9"/><text x="75.9396%" y="7711.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (9 samples, 0.03%)</title><rect x="75.6896%" y="7685" width="0.0308%" height="15" fill="rgb(244,120,49)" fg:x="22115" fg:w="9"/><text x="75.9396%" y="7695.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (28 samples, 0.10%)</title><rect x="76.7233%" y="7685" width="0.0958%" height="15" fill="rgb(223,47,38)" fg:x="22417" fg:w="28"/><text x="76.9733%" y="7695.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (68 samples, 0.23%)</title><rect x="76.6411%" y="7701" width="0.2327%" height="15" fill="rgb(229,179,11)" fg:x="22393" fg:w="68"/><text x="76.8911%" y="7711.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (16 samples, 0.05%)</title><rect x="76.8191%" y="7685" width="0.0548%" height="15" fill="rgb(231,122,1)" fg:x="22445" fg:w="16"/><text x="77.0691%" y="7695.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (181 samples, 0.62%)</title><rect x="77.0484%" y="7685" width="0.6195%" height="15" fill="rgb(245,119,9)" fg:x="22512" fg:w="181"/><text x="77.2984%" y="7695.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (470 samples, 1.61%)</title><rect x="76.1928%" y="7749" width="1.6086%" height="15" fill="rgb(241,163,25)" fg:x="22262" fg:w="470"/><text x="76.4428%" y="7759.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (470 samples, 1.61%)</title><rect x="76.1928%" y="7733" width="1.6086%" height="15" fill="rgb(217,214,3)" fg:x="22262" fg:w="470"/><text x="76.4428%" y="7743.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (470 samples, 1.61%)</title><rect x="76.1928%" y="7717" width="1.6086%" height="15" fill="rgb(240,86,28)" fg:x="22262" fg:w="470"/><text x="76.4428%" y="7727.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (271 samples, 0.93%)</title><rect x="76.8738%" y="7701" width="0.9275%" height="15" fill="rgb(215,47,9)" fg:x="22461" fg:w="271"/><text x="77.1238%" y="7711.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (39 samples, 0.13%)</title><rect x="77.6679%" y="7685" width="0.1335%" height="15" fill="rgb(252,25,45)" fg:x="22693" fg:w="39"/><text x="77.9179%" y="7695.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (72 samples, 0.25%)</title><rect x="77.8014%" y="7749" width="0.2464%" height="15" fill="rgb(251,164,9)" fg:x="22732" fg:w="72"/><text x="78.0514%" y="7759.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (55 samples, 0.19%)</title><rect x="77.8595%" y="7733" width="0.1882%" height="15" fill="rgb(233,194,0)" fg:x="22749" fg:w="55"/><text x="78.1095%" y="7743.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (55 samples, 0.19%)</title><rect x="77.8595%" y="7717" width="0.1882%" height="15" fill="rgb(249,111,24)" fg:x="22749" fg:w="55"/><text x="78.1095%" y="7727.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (55 samples, 0.19%)</title><rect x="77.8595%" y="7701" width="0.1882%" height="15" fill="rgb(250,223,3)" fg:x="22749" fg:w="55"/><text x="78.1095%" y="7711.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (119 samples, 0.41%)</title><rect x="78.0786%" y="7701" width="0.4073%" height="15" fill="rgb(236,178,37)" fg:x="22813" fg:w="119"/><text x="78.3286%" y="7711.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (116 samples, 0.40%)</title><rect x="78.0888%" y="7685" width="0.3970%" height="15" fill="rgb(241,158,50)" fg:x="22816" fg:w="116"/><text x="78.3388%" y="7695.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (116 samples, 0.40%)</title><rect x="78.0888%" y="7669" width="0.3970%" height="15" fill="rgb(213,121,41)" fg:x="22816" fg:w="116"/><text x="78.3388%" y="7679.50"></text></g><g><title>core::hash::sip::u8to64_le (47 samples, 0.16%)</title><rect x="78.3250%" y="7653" width="0.1609%" height="15" fill="rgb(240,92,3)" fg:x="22885" fg:w="47"/><text x="78.5750%" y="7663.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (10 samples, 0.03%)</title><rect x="78.4516%" y="7637" width="0.0342%" height="15" fill="rgb(205,123,3)" fg:x="22922" fg:w="10"/><text x="78.7016%" y="7647.50"></text></g><g><title>hashbrown::map::make_hash (721 samples, 2.47%)</title><rect x="76.0524%" y="7781" width="2.4677%" height="15" fill="rgb(205,97,47)" fg:x="22221" fg:w="721"/><text x="76.3024%" y="7791.50">ha..</text></g><g><title>core::hash::BuildHasher::hash_one (716 samples, 2.45%)</title><rect x="76.0695%" y="7765" width="2.4505%" height="15" fill="rgb(247,152,14)" fg:x="22226" fg:w="716"/><text x="76.3195%" y="7775.50">co..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (138 samples, 0.47%)</title><rect x="78.0478%" y="7749" width="0.4723%" height="15" fill="rgb(248,195,53)" fg:x="22804" fg:w="138"/><text x="78.2978%" y="7759.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (136 samples, 0.47%)</title><rect x="78.0546%" y="7733" width="0.4655%" height="15" fill="rgb(226,201,16)" fg:x="22806" fg:w="136"/><text x="78.3046%" y="7743.50"></text></g><g><title>core::hash::Hasher::write_u16 (136 samples, 0.47%)</title><rect x="78.0546%" y="7717" width="0.4655%" height="15" fill="rgb(205,98,0)" fg:x="22806" fg:w="136"/><text x="78.3046%" y="7727.50"></text></g><g><title>core::num::&lt;impl u16&gt;::to_ne_bytes (10 samples, 0.03%)</title><rect x="78.4859%" y="7701" width="0.0342%" height="15" fill="rgb(214,191,48)" fg:x="22932" fg:w="10"/><text x="78.7359%" y="7711.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8 samples, 0.03%)</title><rect x="78.7049%" y="7701" width="0.0274%" height="15" fill="rgb(237,112,39)" fg:x="22996" fg:w="8"/><text x="78.9549%" y="7711.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (9 samples, 0.03%)</title><rect x="78.7323%" y="7701" width="0.0308%" height="15" fill="rgb(247,203,27)" fg:x="23004" fg:w="9"/><text x="78.9823%" y="7711.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (9 samples, 0.03%)</title><rect x="78.7323%" y="7685" width="0.0308%" height="15" fill="rgb(235,124,28)" fg:x="23004" fg:w="9"/><text x="78.9823%" y="7695.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (4 samples, 0.01%)</title><rect x="78.7494%" y="7669" width="0.0137%" height="15" fill="rgb(208,207,46)" fg:x="23009" fg:w="4"/><text x="78.9994%" y="7679.50"></text></g><g><title>core::mem::swap (6 samples, 0.02%)</title><rect x="78.7631%" y="7701" width="0.0205%" height="15" fill="rgb(234,176,4)" fg:x="23013" fg:w="6"/><text x="79.0131%" y="7711.50"></text></g><g><title>core::mem::swap_simple (6 samples, 0.02%)</title><rect x="78.7631%" y="7685" width="0.0205%" height="15" fill="rgb(230,133,28)" fg:x="23013" fg:w="6"/><text x="79.0131%" y="7695.50"></text></g><g><title>core::ptr::read (6 samples, 0.02%)</title><rect x="78.7631%" y="7669" width="0.0205%" height="15" fill="rgb(211,137,40)" fg:x="23013" fg:w="6"/><text x="79.0131%" y="7679.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;,hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (27 samples, 0.09%)</title><rect x="78.7836%" y="7701" width="0.0924%" height="15" fill="rgb(254,35,13)" fg:x="23019" fg:w="27"/><text x="79.0336%" y="7711.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.09%)</title><rect x="78.7836%" y="7685" width="0.0924%" height="15" fill="rgb(225,49,51)" fg:x="23019" fg:w="27"/><text x="79.0336%" y="7695.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize::_{{closure}} (27 samples, 0.09%)</title><rect x="78.7836%" y="7669" width="0.0924%" height="15" fill="rgb(251,10,15)" fg:x="23019" fg:w="27"/><text x="79.0336%" y="7679.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (24 samples, 0.08%)</title><rect x="78.7939%" y="7653" width="0.0821%" height="15" fill="rgb(228,207,15)" fg:x="23022" fg:w="24"/><text x="79.0439%" y="7663.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (24 samples, 0.08%)</title><rect x="78.7939%" y="7637" width="0.0821%" height="15" fill="rgb(241,99,19)" fg:x="23022" fg:w="24"/><text x="79.0439%" y="7647.50"></text></g><g><title>alloc::alloc::dealloc (24 samples, 0.08%)</title><rect x="78.7939%" y="7621" width="0.0821%" height="15" fill="rgb(207,104,49)" fg:x="23022" fg:w="24"/><text x="79.0439%" y="7631.50"></text></g><g><title>cfree (18 samples, 0.06%)</title><rect x="78.8144%" y="7605" width="0.0616%" height="15" fill="rgb(234,99,18)" fg:x="23028" fg:w="18"/><text x="79.0644%" y="7615.50"></text></g><g><title>[libc.so.6] (15 samples, 0.05%)</title><rect x="78.8247%" y="7589" width="0.0513%" height="15" fill="rgb(213,191,49)" fg:x="23031" fg:w="15"/><text x="79.0747%" y="7599.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (12 samples, 0.04%)</title><rect x="79.1361%" y="7573" width="0.0411%" height="15" fill="rgb(210,226,19)" fg:x="23122" fg:w="12"/><text x="79.3861%" y="7583.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (27 samples, 0.09%)</title><rect x="79.1156%" y="7589" width="0.0924%" height="15" fill="rgb(229,97,18)" fg:x="23116" fg:w="27"/><text x="79.3656%" y="7599.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (9 samples, 0.03%)</title><rect x="79.1772%" y="7573" width="0.0308%" height="15" fill="rgb(211,167,15)" fg:x="23134" fg:w="9"/><text x="79.4272%" y="7583.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (65 samples, 0.22%)</title><rect x="79.2628%" y="7573" width="0.2225%" height="15" fill="rgb(210,169,34)" fg:x="23159" fg:w="65"/><text x="79.5128%" y="7583.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (179 samples, 0.61%)</title><rect x="78.9479%" y="7637" width="0.6126%" height="15" fill="rgb(241,121,31)" fg:x="23067" fg:w="179"/><text x="79.1979%" y="7647.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (179 samples, 0.61%)</title><rect x="78.9479%" y="7621" width="0.6126%" height="15" fill="rgb(232,40,11)" fg:x="23067" fg:w="179"/><text x="79.1979%" y="7631.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (179 samples, 0.61%)</title><rect x="78.9479%" y="7605" width="0.6126%" height="15" fill="rgb(205,86,26)" fg:x="23067" fg:w="179"/><text x="79.1979%" y="7615.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (103 samples, 0.35%)</title><rect x="79.2080%" y="7589" width="0.3525%" height="15" fill="rgb(231,126,28)" fg:x="23143" fg:w="103"/><text x="79.4580%" y="7599.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (22 samples, 0.08%)</title><rect x="79.4852%" y="7573" width="0.0753%" height="15" fill="rgb(219,221,18)" fg:x="23224" fg:w="22"/><text x="79.7352%" y="7583.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (11 samples, 0.04%)</title><rect x="79.5605%" y="7637" width="0.0376%" height="15" fill="rgb(211,40,0)" fg:x="23246" fg:w="11"/><text x="79.8105%" y="7647.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (8 samples, 0.03%)</title><rect x="79.5708%" y="7621" width="0.0274%" height="15" fill="rgb(239,85,43)" fg:x="23249" fg:w="8"/><text x="79.8208%" y="7631.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (8 samples, 0.03%)</title><rect x="79.5708%" y="7605" width="0.0274%" height="15" fill="rgb(231,55,21)" fg:x="23249" fg:w="8"/><text x="79.8208%" y="7615.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (8 samples, 0.03%)</title><rect x="79.5708%" y="7589" width="0.0274%" height="15" fill="rgb(225,184,43)" fg:x="23249" fg:w="8"/><text x="79.8208%" y="7599.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (266 samples, 0.91%)</title><rect x="78.8760%" y="7685" width="0.9104%" height="15" fill="rgb(251,158,41)" fg:x="23046" fg:w="266"/><text x="79.1260%" y="7695.50"></text></g><g><title>hashbrown::map::make_hash (266 samples, 0.91%)</title><rect x="78.8760%" y="7669" width="0.9104%" height="15" fill="rgb(234,159,37)" fg:x="23046" fg:w="266"/><text x="79.1260%" y="7679.50"></text></g><g><title>core::hash::BuildHasher::hash_one (264 samples, 0.90%)</title><rect x="78.8829%" y="7653" width="0.9036%" height="15" fill="rgb(216,204,22)" fg:x="23048" fg:w="264"/><text x="79.1329%" y="7663.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (55 samples, 0.19%)</title><rect x="79.5982%" y="7637" width="0.1882%" height="15" fill="rgb(214,17,3)" fg:x="23257" fg:w="55"/><text x="79.8482%" y="7647.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (53 samples, 0.18%)</title><rect x="79.6050%" y="7621" width="0.1814%" height="15" fill="rgb(212,111,17)" fg:x="23259" fg:w="53"/><text x="79.8550%" y="7631.50"></text></g><g><title>core::hash::Hasher::write_u16 (53 samples, 0.18%)</title><rect x="79.6050%" y="7605" width="0.1814%" height="15" fill="rgb(221,157,24)" fg:x="23259" fg:w="53"/><text x="79.8550%" y="7615.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (49 samples, 0.17%)</title><rect x="79.6187%" y="7589" width="0.1677%" height="15" fill="rgb(252,16,13)" fg:x="23263" fg:w="49"/><text x="79.8687%" y="7599.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (48 samples, 0.16%)</title><rect x="79.6222%" y="7573" width="0.1643%" height="15" fill="rgb(221,62,2)" fg:x="23264" fg:w="48"/><text x="79.8722%" y="7583.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (48 samples, 0.16%)</title><rect x="79.6222%" y="7557" width="0.1643%" height="15" fill="rgb(247,87,22)" fg:x="23264" fg:w="48"/><text x="79.8722%" y="7567.50"></text></g><g><title>core::hash::sip::u8to64_le (29 samples, 0.10%)</title><rect x="79.6872%" y="7541" width="0.0993%" height="15" fill="rgb(215,73,9)" fg:x="23283" fg:w="29"/><text x="79.9372%" y="7551.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.01%)</title><rect x="79.7762%" y="7525" width="0.0103%" height="15" fill="rgb(207,175,33)" fg:x="23309" fg:w="3"/><text x="80.0262%" y="7535.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (276 samples, 0.94%)</title><rect x="78.8760%" y="7701" width="0.9446%" height="15" fill="rgb(243,129,54)" fg:x="23046" fg:w="276"/><text x="79.1260%" y="7711.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (10 samples, 0.03%)</title><rect x="79.7864%" y="7685" width="0.0342%" height="15" fill="rgb(227,119,45)" fg:x="23312" fg:w="10"/><text x="80.0364%" y="7695.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (10 samples, 0.03%)</title><rect x="79.7864%" y="7669" width="0.0342%" height="15" fill="rgb(205,109,36)" fg:x="23312" fg:w="10"/><text x="80.0364%" y="7679.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (10 samples, 0.03%)</title><rect x="79.7864%" y="7653" width="0.0342%" height="15" fill="rgb(205,6,39)" fg:x="23312" fg:w="10"/><text x="80.0364%" y="7663.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (10 samples, 0.03%)</title><rect x="79.7864%" y="7637" width="0.0342%" height="15" fill="rgb(221,32,16)" fg:x="23312" fg:w="10"/><text x="80.0364%" y="7647.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (57 samples, 0.20%)</title><rect x="79.8891%" y="7653" width="0.1951%" height="15" fill="rgb(228,144,50)" fg:x="23342" fg:w="57"/><text x="80.1391%" y="7663.50"></text></g><g><title>core::num::nonzero::NonZeroU16::new (57 samples, 0.20%)</title><rect x="79.8891%" y="7637" width="0.1951%" height="15" fill="rgb(229,201,53)" fg:x="23342" fg:w="57"/><text x="80.1391%" y="7647.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot_in_group (133 samples, 0.46%)</title><rect x="79.8275%" y="7669" width="0.4552%" height="15" fill="rgb(249,153,27)" fg:x="23324" fg:w="133"/><text x="80.0775%" y="7679.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (58 samples, 0.20%)</title><rect x="80.0842%" y="7653" width="0.1985%" height="15" fill="rgb(227,106,25)" fg:x="23399" fg:w="58"/><text x="80.3342%" y="7663.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (58 samples, 0.20%)</title><rect x="80.0842%" y="7637" width="0.1985%" height="15" fill="rgb(230,65,29)" fg:x="23399" fg:w="58"/><text x="80.3342%" y="7647.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fix_insert_slot (57 samples, 0.20%)</title><rect x="80.2827%" y="7669" width="0.1951%" height="15" fill="rgb(221,57,46)" fg:x="23457" fg:w="57"/><text x="80.5327%" y="7679.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_bucket_full (3 samples, 0.01%)</title><rect x="80.4675%" y="7653" width="0.0103%" height="15" fill="rgb(229,161,17)" fg:x="23511" fg:w="3"/><text x="80.7175%" y="7663.50"></text></g><g><title>hashbrown::raw::is_full (3 samples, 0.01%)</title><rect x="80.4675%" y="7637" width="0.0103%" height="15" fill="rgb(222,213,11)" fg:x="23511" fg:w="3"/><text x="80.7175%" y="7647.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (198 samples, 0.68%)</title><rect x="79.8275%" y="7685" width="0.6777%" height="15" fill="rgb(235,35,13)" fg:x="23324" fg:w="198"/><text x="80.0775%" y="7695.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (7 samples, 0.02%)</title><rect x="80.4812%" y="7669" width="0.0240%" height="15" fill="rgb(233,158,34)" fg:x="23515" fg:w="7"/><text x="80.7312%" y="7679.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (7 samples, 0.02%)</title><rect x="80.4812%" y="7653" width="0.0240%" height="15" fill="rgb(215,151,48)" fg:x="23515" fg:w="7"/><text x="80.7312%" y="7663.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.02%)</title><rect x="80.4812%" y="7637" width="0.0240%" height="15" fill="rgb(229,84,14)" fg:x="23515" fg:w="7"/><text x="80.7312%" y="7647.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (209 samples, 0.72%)</title><rect x="79.8275%" y="7701" width="0.7153%" height="15" fill="rgb(229,68,14)" fg:x="23324" fg:w="209"/><text x="80.0775%" y="7711.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (11 samples, 0.04%)</title><rect x="80.5052%" y="7685" width="0.0376%" height="15" fill="rgb(243,106,26)" fg:x="23522" fg:w="11"/><text x="80.7552%" y="7695.50"></text></g><g><title>hashbrown::raw::h2 (10 samples, 0.03%)</title><rect x="80.5086%" y="7669" width="0.0342%" height="15" fill="rgb(206,45,38)" fg:x="23523" fg:w="10"/><text x="80.7586%" y="7679.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (33 samples, 0.11%)</title><rect x="80.5428%" y="7669" width="0.1129%" height="15" fill="rgb(226,6,15)" fg:x="23533" fg:w="33"/><text x="80.7928%" y="7679.50"></text></g><g><title>core::intrinsics::write_bytes (33 samples, 0.11%)</title><rect x="80.5428%" y="7653" width="0.1129%" height="15" fill="rgb(232,22,54)" fg:x="23533" fg:w="33"/><text x="80.7928%" y="7663.50"></text></g><g><title>[libc.so.6] (31 samples, 0.11%)</title><rect x="80.5497%" y="7637" width="0.1061%" height="15" fill="rgb(229,222,32)" fg:x="23535" fg:w="31"/><text x="80.7997%" y="7647.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (6 samples, 0.02%)</title><rect x="80.7139%" y="7637" width="0.0205%" height="15" fill="rgb(228,62,29)" fg:x="23583" fg:w="6"/><text x="80.9639%" y="7647.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (6 samples, 0.02%)</title><rect x="80.7139%" y="7621" width="0.0205%" height="15" fill="rgb(251,103,34)" fg:x="23583" fg:w="6"/><text x="80.9639%" y="7631.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (25 samples, 0.09%)</title><rect x="80.6558%" y="7653" width="0.0856%" height="15" fill="rgb(233,12,30)" fg:x="23566" fg:w="25"/><text x="80.9058%" y="7663.50"></text></g><g><title>__rdl_alloc (9 samples, 0.03%)</title><rect x="80.7858%" y="7589" width="0.0308%" height="15" fill="rgb(238,52,0)" fg:x="23604" fg:w="9"/><text x="81.0358%" y="7599.50"></text></g><g><title>__rust_alloc (5 samples, 0.02%)</title><rect x="80.8166%" y="7589" width="0.0171%" height="15" fill="rgb(223,98,5)" fg:x="23613" fg:w="5"/><text x="81.0666%" y="7599.50"></text></g><g><title>core::ptr::read_volatile (4 samples, 0.01%)</title><rect x="80.8337%" y="7589" width="0.0137%" height="15" fill="rgb(228,75,37)" fg:x="23618" fg:w="4"/><text x="81.0837%" y="7599.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (113 samples, 0.39%)</title><rect x="80.7413%" y="7653" width="0.3867%" height="15" fill="rgb(205,115,49)" fg:x="23591" fg:w="113"/><text x="80.9913%" y="7663.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (113 samples, 0.39%)</title><rect x="80.7413%" y="7637" width="0.3867%" height="15" fill="rgb(250,154,43)" fg:x="23591" fg:w="113"/><text x="80.9913%" y="7647.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (113 samples, 0.39%)</title><rect x="80.7413%" y="7621" width="0.3867%" height="15" fill="rgb(226,43,29)" fg:x="23591" fg:w="113"/><text x="80.9913%" y="7631.50"></text></g><g><title>alloc::alloc::alloc (107 samples, 0.37%)</title><rect x="80.7619%" y="7605" width="0.3662%" height="15" fill="rgb(249,228,39)" fg:x="23597" fg:w="107"/><text x="81.0119%" y="7615.50"></text></g><g><title>malloc (82 samples, 0.28%)</title><rect x="80.8474%" y="7589" width="0.2806%" height="15" fill="rgb(216,79,43)" fg:x="23622" fg:w="82"/><text x="81.0974%" y="7599.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (146 samples, 0.50%)</title><rect x="80.6558%" y="7669" width="0.4997%" height="15" fill="rgb(228,95,12)" fg:x="23566" fg:w="146"/><text x="80.9058%" y="7679.50"></text></g><g><title>hashbrown::raw::bucket_mask_to_capacity (8 samples, 0.03%)</title><rect x="81.1281%" y="7653" width="0.0274%" height="15" fill="rgb(249,221,15)" fg:x="23704" fg:w="8"/><text x="81.3781%" y="7663.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (752 samples, 2.57%)</title><rect x="78.6433%" y="7717" width="2.5738%" height="15" fill="rgb(233,34,13)" fg:x="22978" fg:w="752"/><text x="78.8933%" y="7727.50">ha..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (197 samples, 0.67%)</title><rect x="80.5428%" y="7701" width="0.6742%" height="15" fill="rgb(214,103,39)" fg:x="23533" fg:w="197"/><text x="80.7928%" y="7711.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (197 samples, 0.67%)</title><rect x="80.5428%" y="7685" width="0.6742%" height="15" fill="rgb(251,126,39)" fg:x="23533" fg:w="197"/><text x="80.7928%" y="7695.50"></text></g><g><title>hashbrown::raw::capacity_to_buckets (18 samples, 0.06%)</title><rect x="81.1555%" y="7669" width="0.0616%" height="15" fill="rgb(214,216,36)" fg:x="23712" fg:w="18"/><text x="81.4055%" y="7679.50"></text></g><g><title>core::num::&lt;impl usize&gt;::next_power_of_two (3 samples, 0.01%)</title><rect x="81.2068%" y="7653" width="0.0103%" height="15" fill="rgb(220,221,8)" fg:x="23727" fg:w="3"/><text x="81.4568%" y="7663.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (775 samples, 2.65%)</title><rect x="78.5885%" y="7765" width="2.6525%" height="15" fill="rgb(240,216,3)" fg:x="22962" fg:w="775"/><text x="78.8385%" y="7775.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (772 samples, 2.64%)</title><rect x="78.5988%" y="7749" width="2.6422%" height="15" fill="rgb(232,218,17)" fg:x="22965" fg:w="772"/><text x="78.8488%" y="7759.50">ha..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (766 samples, 2.62%)</title><rect x="78.6193%" y="7733" width="2.6217%" height="15" fill="rgb(229,163,45)" fg:x="22971" fg:w="766"/><text x="78.8693%" y="7743.50">ha..</text></g><g><title>hashbrown::raw::bucket_mask_to_capacity (7 samples, 0.02%)</title><rect x="81.2171%" y="7717" width="0.0240%" height="15" fill="rgb(231,110,42)" fg:x="23730" fg:w="7"/><text x="81.4671%" y="7727.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (21 samples, 0.07%)</title><rect x="81.5559%" y="7733" width="0.0719%" height="15" fill="rgb(208,170,48)" fg:x="23829" fg:w="21"/><text x="81.8059%" y="7743.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (94 samples, 0.32%)</title><rect x="81.3334%" y="7749" width="0.3217%" height="15" fill="rgb(239,116,25)" fg:x="23764" fg:w="94"/><text x="81.5834%" y="7759.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (8 samples, 0.03%)</title><rect x="81.6278%" y="7733" width="0.0274%" height="15" fill="rgb(219,200,50)" fg:x="23850" fg:w="8"/><text x="81.8778%" y="7743.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (11 samples, 0.04%)</title><rect x="81.6551%" y="7749" width="0.0376%" height="15" fill="rgb(245,200,0)" fg:x="23858" fg:w="11"/><text x="81.9051%" y="7759.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (11 samples, 0.04%)</title><rect x="81.6551%" y="7733" width="0.0376%" height="15" fill="rgb(245,119,33)" fg:x="23858" fg:w="11"/><text x="81.9051%" y="7743.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot::_{{closure}} (14 samples, 0.05%)</title><rect x="81.6928%" y="7749" width="0.0479%" height="15" fill="rgb(231,125,12)" fg:x="23869" fg:w="14"/><text x="81.9428%" y="7759.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (14 samples, 0.05%)</title><rect x="81.6928%" y="7733" width="0.0479%" height="15" fill="rgb(216,96,41)" fg:x="23869" fg:w="14"/><text x="81.9428%" y="7743.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (14 samples, 0.05%)</title><rect x="81.6928%" y="7717" width="0.0479%" height="15" fill="rgb(248,43,45)" fg:x="23869" fg:w="14"/><text x="81.9428%" y="7727.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (14 samples, 0.05%)</title><rect x="81.6928%" y="7701" width="0.0479%" height="15" fill="rgb(217,222,7)" fg:x="23869" fg:w="14"/><text x="81.9428%" y="7711.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u16&gt;::eq (5 samples, 0.02%)</title><rect x="81.7236%" y="7685" width="0.0171%" height="15" fill="rgb(233,28,6)" fg:x="23878" fg:w="5"/><text x="81.9736%" y="7695.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (6 samples, 0.02%)</title><rect x="81.7784%" y="7733" width="0.0205%" height="15" fill="rgb(231,218,15)" fg:x="23894" fg:w="6"/><text x="82.0284%" y="7743.50"></text></g><g><title>core::num::nonzero::NonZeroU16::new (3 samples, 0.01%)</title><rect x="81.7886%" y="7717" width="0.0103%" height="15" fill="rgb(226,171,48)" fg:x="23897" fg:w="3"/><text x="82.0386%" y="7727.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot_in_group (18 samples, 0.06%)</title><rect x="81.7407%" y="7749" width="0.0616%" height="15" fill="rgb(235,201,9)" fg:x="23883" fg:w="18"/><text x="81.9907%" y="7759.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_bucket_full (59 samples, 0.20%)</title><rect x="81.8468%" y="7733" width="0.2019%" height="15" fill="rgb(217,80,15)" fg:x="23914" fg:w="59"/><text x="82.0968%" y="7743.50"></text></g><g><title>hashbrown::raw::is_full (59 samples, 0.20%)</title><rect x="81.8468%" y="7717" width="0.2019%" height="15" fill="rgb(219,152,8)" fg:x="23914" fg:w="59"/><text x="82.0968%" y="7727.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fix_insert_slot (80 samples, 0.27%)</title><rect x="81.8023%" y="7749" width="0.2738%" height="15" fill="rgb(243,107,38)" fg:x="23901" fg:w="80"/><text x="82.0523%" y="7759.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (8 samples, 0.03%)</title><rect x="82.0487%" y="7733" width="0.0274%" height="15" fill="rgb(231,17,5)" fg:x="23973" fg:w="8"/><text x="82.2987%" y="7743.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (8 samples, 0.03%)</title><rect x="82.0487%" y="7717" width="0.0274%" height="15" fill="rgb(209,25,54)" fg:x="23973" fg:w="8"/><text x="82.2987%" y="7727.50"></text></g><g><title>hashbrown::raw::h2 (83 samples, 0.28%)</title><rect x="82.0761%" y="7749" width="0.2841%" height="15" fill="rgb(219,0,2)" fg:x="23981" fg:w="83"/><text x="82.3261%" y="7759.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (83 samples, 0.28%)</title><rect x="82.3602%" y="7749" width="0.2841%" height="15" fill="rgb(246,9,5)" fg:x="24064" fg:w="83"/><text x="82.6102%" y="7759.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (83 samples, 0.28%)</title><rect x="82.3602%" y="7733" width="0.2841%" height="15" fill="rgb(226,159,4)" fg:x="24064" fg:w="83"/><text x="82.6102%" y="7743.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (1,215 samples, 4.16%)</title><rect x="78.5235%" y="7781" width="4.1584%" height="15" fill="rgb(219,175,34)" fg:x="22943" fg:w="1215"/><text x="78.7735%" y="7791.50">hashb..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_or_find_insert_slot_inner (421 samples, 1.44%)</title><rect x="81.2410%" y="7765" width="1.4409%" height="15" fill="rgb(236,10,46)" fg:x="23737" fg:w="421"/><text x="81.4910%" y="7775.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (11 samples, 0.04%)</title><rect x="82.6443%" y="7749" width="0.0376%" height="15" fill="rgb(240,211,16)" fg:x="24147" fg:w="11"/><text x="82.8943%" y="7759.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (11 samples, 0.04%)</title><rect x="82.6443%" y="7733" width="0.0376%" height="15" fill="rgb(205,3,43)" fg:x="24147" fg:w="11"/><text x="82.8943%" y="7743.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (11 samples, 0.04%)</title><rect x="82.6443%" y="7717" width="0.0376%" height="15" fill="rgb(245,7,22)" fg:x="24147" fg:w="11"/><text x="82.8943%" y="7727.50"></text></g><g><title>core::convert::num::&lt;impl core::convert::From&lt;bool&gt; for usize&gt;::from (7 samples, 0.02%)</title><rect x="82.7572%" y="7749" width="0.0240%" height="15" fill="rgb(239,132,32)" fg:x="24180" fg:w="7"/><text x="83.0072%" y="7759.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (18 samples, 0.06%)</title><rect x="82.7812%" y="7749" width="0.0616%" height="15" fill="rgb(228,202,34)" fg:x="24187" fg:w="18"/><text x="83.0312%" y="7759.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl (18 samples, 0.06%)</title><rect x="82.7812%" y="7733" width="0.0616%" height="15" fill="rgb(254,200,22)" fg:x="24187" fg:w="18"/><text x="83.0312%" y="7743.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (13 samples, 0.04%)</title><rect x="82.7983%" y="7717" width="0.0445%" height="15" fill="rgb(219,10,39)" fg:x="24192" fg:w="13"/><text x="83.0483%" y="7727.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (2,082 samples, 7.13%)</title><rect x="75.7204%" y="7829" width="7.1257%" height="15" fill="rgb(226,210,39)" fg:x="22124" fg:w="2082"/><text x="75.9704%" y="7839.50">std::colle..</text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (2,082 samples, 7.13%)</title><rect x="75.7204%" y="7813" width="7.1257%" height="15" fill="rgb(208,219,16)" fg:x="22124" fg:w="2082"/><text x="75.9704%" y="7823.50">hashbrown:..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2,043 samples, 6.99%)</title><rect x="75.8539%" y="7797" width="6.9923%" height="15" fill="rgb(216,158,51)" fg:x="22163" fg:w="2043"/><text x="76.1039%" y="7807.50">hashbrown..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (48 samples, 0.16%)</title><rect x="82.6819%" y="7781" width="0.1643%" height="15" fill="rgb(233,14,44)" fg:x="24158" fg:w="48"/><text x="82.9319%" y="7791.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::record_item_insert_at (46 samples, 0.16%)</title><rect x="82.6888%" y="7765" width="0.1574%" height="15" fill="rgb(237,97,39)" fg:x="24160" fg:w="46"/><text x="82.9388%" y="7775.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (29 samples, 0.10%)</title><rect x="82.8462%" y="7701" width="0.0993%" height="15" fill="rgb(218,198,43)" fg:x="24206" fg:w="29"/><text x="83.0962%" y="7711.50"></text></g><g><title>std::sys::common::thread_local::fast_local::Key&lt;T&gt;::get (29 samples, 0.10%)</title><rect x="82.8462%" y="7685" width="0.0993%" height="15" fill="rgb(231,104,20)" fg:x="24206" fg:w="29"/><text x="83.0962%" y="7695.50"></text></g><g><title>std::sys::common::thread_local::lazy::LazyKeyInner&lt;T&gt;::get (22 samples, 0.08%)</title><rect x="82.8701%" y="7669" width="0.0753%" height="15" fill="rgb(254,36,13)" fg:x="24213" fg:w="22"/><text x="83.1201%" y="7679.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (22 samples, 0.08%)</title><rect x="82.8701%" y="7653" width="0.0753%" height="15" fill="rgb(248,14,50)" fg:x="24213" fg:w="22"/><text x="83.1201%" y="7663.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (39 samples, 0.13%)</title><rect x="82.8462%" y="7765" width="0.1335%" height="15" fill="rgb(217,107,29)" fg:x="24206" fg:w="39"/><text x="83.0962%" y="7775.50"></text></g><g><title>std::collections::hash::map::RandomState::new (39 samples, 0.13%)</title><rect x="82.8462%" y="7749" width="0.1335%" height="15" fill="rgb(251,169,33)" fg:x="24206" fg:w="39"/><text x="83.0962%" y="7759.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (39 samples, 0.13%)</title><rect x="82.8462%" y="7733" width="0.1335%" height="15" fill="rgb(217,108,32)" fg:x="24206" fg:w="39"/><text x="83.0962%" y="7743.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (39 samples, 0.13%)</title><rect x="82.8462%" y="7717" width="0.1335%" height="15" fill="rgb(219,66,42)" fg:x="24206" fg:w="39"/><text x="83.0962%" y="7727.50"></text></g><g><title>std::collections::hash::map::RandomState::new::_{{closure}} (10 samples, 0.03%)</title><rect x="82.9454%" y="7701" width="0.0342%" height="15" fill="rgb(206,180,7)" fg:x="24235" fg:w="10"/><text x="83.1954%" y="7711.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (9 samples, 0.03%)</title><rect x="82.9489%" y="7685" width="0.0308%" height="15" fill="rgb(208,226,31)" fg:x="24236" fg:w="9"/><text x="83.1989%" y="7695.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (9 samples, 0.03%)</title><rect x="82.9489%" y="7669" width="0.0308%" height="15" fill="rgb(218,26,49)" fg:x="24236" fg:w="9"/><text x="83.1989%" y="7679.50"></text></g><g><title>core::mem::replace (9 samples, 0.03%)</title><rect x="82.9489%" y="7653" width="0.0308%" height="15" fill="rgb(233,197,48)" fg:x="24236" fg:w="9"/><text x="83.1989%" y="7663.50"></text></g><g><title>core::ptr::write (9 samples, 0.03%)</title><rect x="82.9489%" y="7637" width="0.0308%" height="15" fill="rgb(252,181,51)" fg:x="24236" fg:w="9"/><text x="83.1989%" y="7647.50"></text></g><g><title>tetrs::logic::game::gravity (4,835 samples, 16.55%)</title><rect x="66.4625%" y="7845" width="16.5480%" height="15" fill="rgb(253,90,19)" fg:x="19419" fg:w="4835"/><text x="66.7125%" y="7855.50">tetrs::logic::game::gravity</text></g><g><title>std::collections::hash::set::HashSet&lt;T&gt;::new (48 samples, 0.16%)</title><rect x="82.8462%" y="7829" width="0.1643%" height="15" fill="rgb(215,171,30)" fg:x="24206" fg:w="48"/><text x="83.0962%" y="7839.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::default::Default&gt;::default (48 samples, 0.16%)</title><rect x="82.8462%" y="7813" width="0.1643%" height="15" fill="rgb(214,222,9)" fg:x="24206" fg:w="48"/><text x="83.0962%" y="7823.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::default::Default&gt;::default (48 samples, 0.16%)</title><rect x="82.8462%" y="7797" width="0.1643%" height="15" fill="rgb(223,3,22)" fg:x="24206" fg:w="48"/><text x="83.0962%" y="7807.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::default::Default&gt;::default (48 samples, 0.16%)</title><rect x="82.8462%" y="7781" width="0.1643%" height="15" fill="rgb(225,196,46)" fg:x="24206" fg:w="48"/><text x="83.0962%" y="7791.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::with_hasher_in (9 samples, 0.03%)</title><rect x="82.9797%" y="7765" width="0.0308%" height="15" fill="rgb(209,110,37)" fg:x="24245" fg:w="9"/><text x="83.2297%" y="7775.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (44 samples, 0.15%)</title><rect x="85.7485%" y="7829" width="0.1506%" height="15" fill="rgb(249,89,12)" fg:x="25054" fg:w="44"/><text x="85.9985%" y="7839.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (44 samples, 0.15%)</title><rect x="85.7485%" y="7813" width="0.1506%" height="15" fill="rgb(226,27,33)" fg:x="25054" fg:w="44"/><text x="85.9985%" y="7823.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (44 samples, 0.15%)</title><rect x="85.7485%" y="7797" width="0.1506%" height="15" fill="rgb(213,82,22)" fg:x="25054" fg:w="44"/><text x="85.9985%" y="7807.50"></text></g><g><title>__rdl_alloc (34 samples, 0.12%)</title><rect x="86.0942%" y="7765" width="0.1164%" height="15" fill="rgb(248,140,0)" fg:x="25155" fg:w="34"/><text x="86.3442%" y="7775.50"></text></g><g><title>__rust_alloc (41 samples, 0.14%)</title><rect x="86.2106%" y="7765" width="0.1403%" height="15" fill="rgb(228,106,3)" fg:x="25189" fg:w="41"/><text x="86.4606%" y="7775.50"></text></g><g><title>core::ptr::read_volatile (48 samples, 0.16%)</title><rect x="86.3509%" y="7765" width="0.1643%" height="15" fill="rgb(209,23,37)" fg:x="25230" fg:w="48"/><text x="86.6009%" y="7775.50"></text></g><g><title>alloc::alloc::exchange_malloc (794 samples, 2.72%)</title><rect x="85.9025%" y="7829" width="2.7175%" height="15" fill="rgb(241,93,50)" fg:x="25099" fg:w="794"/><text x="86.1525%" y="7839.50">al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (763 samples, 2.61%)</title><rect x="86.0086%" y="7813" width="2.6114%" height="15" fill="rgb(253,46,43)" fg:x="25130" fg:w="763"/><text x="86.2586%" y="7823.50">&lt;a..</text></g><g><title>alloc::alloc::Global::alloc_impl (763 samples, 2.61%)</title><rect x="86.0086%" y="7797" width="2.6114%" height="15" fill="rgb(226,206,43)" fg:x="25130" fg:w="763"/><text x="86.2586%" y="7807.50">al..</text></g><g><title>alloc::alloc::alloc (763 samples, 2.61%)</title><rect x="86.0086%" y="7781" width="2.6114%" height="15" fill="rgb(217,54,7)" fg:x="25130" fg:w="763"/><text x="86.2586%" y="7791.50">al..</text></g><g><title>malloc (615 samples, 2.10%)</title><rect x="86.5152%" y="7765" width="2.1049%" height="15" fill="rgb(223,5,52)" fg:x="25278" fg:w="615"/><text x="86.7652%" y="7775.50">m..</text></g><g><title>[libc.so.6] (29 samples, 0.10%)</title><rect x="88.5208%" y="7749" width="0.0993%" height="15" fill="rgb(206,52,46)" fg:x="25864" fg:w="29"/><text x="88.7708%" y="7759.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="88.6063%" y="7733" width="0.0137%" height="15" fill="rgb(253,136,11)" fg:x="25889" fg:w="4"/><text x="88.8563%" y="7743.50"></text></g><g><title>__rdl_dealloc (41 samples, 0.14%)</title><rect x="88.7159%" y="7701" width="0.1403%" height="15" fill="rgb(208,106,33)" fg:x="25921" fg:w="41"/><text x="88.9659%" y="7711.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (41 samples, 0.14%)</title><rect x="88.7159%" y="7685" width="0.1403%" height="15" fill="rgb(206,54,4)" fg:x="25921" fg:w="41"/><text x="88.9659%" y="7695.50"></text></g><g><title>__rust_dealloc (62 samples, 0.21%)</title><rect x="88.8562%" y="7701" width="0.2122%" height="15" fill="rgb(213,3,15)" fg:x="25962" fg:w="62"/><text x="89.1062%" y="7711.50"></text></g><g><title>tetrs::logic::game::is_connected (2,465 samples, 8.44%)</title><rect x="83.0105%" y="7845" width="8.4366%" height="15" fill="rgb(252,211,39)" fg:x="24254" fg:w="2465"/><text x="83.2605%" y="7855.50">tetrs::logic..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(i8,i8)&gt;&gt; (826 samples, 2.83%)</title><rect x="88.6200%" y="7829" width="2.8270%" height="15" fill="rgb(223,6,36)" fg:x="25893" fg:w="826"/><text x="88.8700%" y="7839.50">co..</text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (826 samples, 2.83%)</title><rect x="88.6200%" y="7813" width="2.8270%" height="15" fill="rgb(252,169,45)" fg:x="25893" fg:w="826"/><text x="88.8700%" y="7823.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(i8,i8),alloc::alloc::Global&gt;&gt; (826 samples, 2.83%)</title><rect x="88.6200%" y="7797" width="2.8270%" height="15" fill="rgb(212,48,26)" fg:x="25893" fg:w="826"/><text x="88.8700%" y="7807.50">co..</text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (826 samples, 2.83%)</title><rect x="88.6200%" y="7781" width="2.8270%" height="15" fill="rgb(251,102,48)" fg:x="25893" fg:w="826"/><text x="88.8700%" y="7791.50">&lt;&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(i8,i8)&gt;&gt; (826 samples, 2.83%)</title><rect x="88.6200%" y="7765" width="2.8270%" height="15" fill="rgb(243,208,16)" fg:x="25893" fg:w="826"/><text x="88.8700%" y="7775.50">co..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (826 samples, 2.83%)</title><rect x="88.6200%" y="7749" width="2.8270%" height="15" fill="rgb(219,96,24)" fg:x="25893" fg:w="826"/><text x="88.8700%" y="7759.50">&lt;a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (826 samples, 2.83%)</title><rect x="88.6200%" y="7733" width="2.8270%" height="15" fill="rgb(219,33,29)" fg:x="25893" fg:w="826"/><text x="88.8700%" y="7743.50">&lt;a..</text></g><g><title>alloc::alloc::dealloc (826 samples, 2.83%)</title><rect x="88.6200%" y="7717" width="2.8270%" height="15" fill="rgb(223,176,5)" fg:x="25893" fg:w="826"/><text x="88.8700%" y="7727.50">al..</text></g><g><title>cfree (695 samples, 2.38%)</title><rect x="89.0684%" y="7701" width="2.3787%" height="15" fill="rgb(228,140,14)" fg:x="26024" fg:w="695"/><text x="89.3184%" y="7711.50">cf..</text></g><g><title>[libc.so.6] (409 samples, 1.40%)</title><rect x="90.0472%" y="7685" width="1.3998%" height="15" fill="rgb(217,179,31)" fg:x="26310" fg:w="409"/><text x="90.2972%" y="7695.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (7 samples, 0.02%)</title><rect x="91.6421%" y="7829" width="0.0240%" height="15" fill="rgb(230,9,30)" fg:x="26776" fg:w="7"/><text x="91.8921%" y="7839.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (13 samples, 0.04%)</title><rect x="91.6661%" y="7829" width="0.0445%" height="15" fill="rgb(230,136,20)" fg:x="26783" fg:w="13"/><text x="91.9161%" y="7839.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (13 samples, 0.04%)</title><rect x="91.6661%" y="7813" width="0.0445%" height="15" fill="rgb(215,210,22)" fg:x="26783" fg:w="13"/><text x="91.9161%" y="7823.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (13 samples, 0.04%)</title><rect x="91.6661%" y="7797" width="0.0445%" height="15" fill="rgb(218,43,5)" fg:x="26783" fg:w="13"/><text x="91.9161%" y="7807.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="91.7106%" y="7829" width="0.0137%" height="15" fill="rgb(216,11,5)" fg:x="26796" fg:w="4"/><text x="91.9606%" y="7839.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (4 samples, 0.01%)</title><rect x="91.7106%" y="7813" width="0.0137%" height="15" fill="rgb(209,82,29)" fg:x="26796" fg:w="4"/><text x="91.9606%" y="7823.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (4 samples, 0.01%)</title><rect x="91.7106%" y="7797" width="0.0137%" height="15" fill="rgb(244,115,12)" fg:x="26796" fg:w="4"/><text x="91.9606%" y="7807.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::all (14 samples, 0.05%)</title><rect x="91.7243%" y="7829" width="0.0479%" height="15" fill="rgb(222,82,18)" fg:x="26800" fg:w="14"/><text x="91.9743%" y="7839.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="91.7585%" y="7813" width="0.0137%" height="15" fill="rgb(249,227,8)" fg:x="26810" fg:w="4"/><text x="92.0085%" y="7823.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (9 samples, 0.03%)</title><rect x="91.7722%" y="7829" width="0.0308%" height="15" fill="rgb(253,141,45)" fg:x="26814" fg:w="9"/><text x="92.0222%" y="7839.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (9 samples, 0.03%)</title><rect x="91.7722%" y="7813" width="0.0308%" height="15" fill="rgb(234,184,4)" fg:x="26814" fg:w="9"/><text x="92.0222%" y="7823.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (6 samples, 0.02%)</title><rect x="91.7825%" y="7797" width="0.0205%" height="15" fill="rgb(218,194,23)" fg:x="26817" fg:w="6"/><text x="92.0325%" y="7807.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (10 samples, 0.03%)</title><rect x="91.9159%" y="7813" width="0.0342%" height="15" fill="rgb(235,66,41)" fg:x="26856" fg:w="10"/><text x="92.1659%" y="7823.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (10 samples, 0.03%)</title><rect x="91.9159%" y="7797" width="0.0342%" height="15" fill="rgb(245,217,1)" fg:x="26856" fg:w="10"/><text x="92.1659%" y="7807.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (10 samples, 0.03%)</title><rect x="91.9159%" y="7781" width="0.0342%" height="15" fill="rgb(229,91,1)" fg:x="26856" fg:w="10"/><text x="92.1659%" y="7791.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (11 samples, 0.04%)</title><rect x="92.0015%" y="7749" width="0.0376%" height="15" fill="rgb(207,101,30)" fg:x="26881" fg:w="11"/><text x="92.2515%" y="7759.50"></text></g><g><title>alloc::alloc::Global::grow_impl (11 samples, 0.04%)</title><rect x="92.0015%" y="7733" width="0.0376%" height="15" fill="rgb(223,82,49)" fg:x="26881" fg:w="11"/><text x="92.2515%" y="7743.50"></text></g><g><title>alloc::alloc::realloc (11 samples, 0.04%)</title><rect x="92.0015%" y="7717" width="0.0376%" height="15" fill="rgb(218,167,17)" fg:x="26881" fg:w="11"/><text x="92.2515%" y="7727.50"></text></g><g><title>realloc (11 samples, 0.04%)</title><rect x="92.0015%" y="7701" width="0.0376%" height="15" fill="rgb(208,103,14)" fg:x="26881" fg:w="11"/><text x="92.2515%" y="7711.50"></text></g><g><title>[libc.so.6] (11 samples, 0.04%)</title><rect x="92.0015%" y="7685" width="0.0376%" height="15" fill="rgb(238,20,8)" fg:x="26881" fg:w="11"/><text x="92.2515%" y="7695.50"></text></g><g><title>[libc.so.6] (11 samples, 0.04%)</title><rect x="92.0015%" y="7669" width="0.0376%" height="15" fill="rgb(218,80,54)" fg:x="26881" fg:w="11"/><text x="92.2515%" y="7679.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (24 samples, 0.08%)</title><rect x="91.9741%" y="7797" width="0.0821%" height="15" fill="rgb(240,144,17)" fg:x="26873" fg:w="24"/><text x="92.2241%" y="7807.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (22 samples, 0.08%)</title><rect x="91.9810%" y="7781" width="0.0753%" height="15" fill="rgb(245,27,50)" fg:x="26875" fg:w="22"/><text x="92.2310%" y="7791.50"></text></g><g><title>alloc::raw_vec::finish_grow (19 samples, 0.07%)</title><rect x="91.9912%" y="7765" width="0.0650%" height="15" fill="rgb(251,51,7)" fg:x="26878" fg:w="19"/><text x="92.2412%" y="7775.50"></text></g><g><title>malloc (5 samples, 0.02%)</title><rect x="92.0392%" y="7749" width="0.0171%" height="15" fill="rgb(245,217,29)" fg:x="26892" fg:w="5"/><text x="92.2892%" y="7759.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (29 samples, 0.10%)</title><rect x="91.9639%" y="7813" width="0.0993%" height="15" fill="rgb(221,176,29)" fg:x="26870" fg:w="29"/><text x="92.2139%" y="7823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,usize)&gt;&gt; (7 samples, 0.02%)</title><rect x="92.0631%" y="7813" width="0.0240%" height="15" fill="rgb(212,180,24)" fg:x="26899" fg:w="7"/><text x="92.3131%" y="7823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,usize)&gt;&gt; (7 samples, 0.02%)</title><rect x="92.0631%" y="7797" width="0.0240%" height="15" fill="rgb(254,24,2)" fg:x="26899" fg:w="7"/><text x="92.3131%" y="7807.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.02%)</title><rect x="92.0631%" y="7781" width="0.0240%" height="15" fill="rgb(230,100,2)" fg:x="26899" fg:w="7"/><text x="92.3131%" y="7791.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.02%)</title><rect x="92.0631%" y="7765" width="0.0240%" height="15" fill="rgb(219,142,25)" fg:x="26899" fg:w="7"/><text x="92.3131%" y="7775.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.02%)</title><rect x="92.0631%" y="7749" width="0.0240%" height="15" fill="rgb(240,73,43)" fg:x="26899" fg:w="7"/><text x="92.3131%" y="7759.50"></text></g><g><title>cfree (7 samples, 0.02%)</title><rect x="92.0631%" y="7733" width="0.0240%" height="15" fill="rgb(214,114,15)" fg:x="26899" fg:w="7"/><text x="92.3131%" y="7743.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="92.0700%" y="7717" width="0.0171%" height="15" fill="rgb(207,130,4)" fg:x="26901" fg:w="5"/><text x="92.3200%" y="7727.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::clear (3 samples, 0.01%)</title><rect x="92.0939%" y="7813" width="0.0103%" height="15" fill="rgb(221,25,40)" fg:x="26908" fg:w="3"/><text x="92.3439%" y="7823.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::clear (3 samples, 0.01%)</title><rect x="92.0939%" y="7797" width="0.0103%" height="15" fill="rgb(241,184,7)" fg:x="26908" fg:w="3"/><text x="92.3439%" y="7807.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (3 samples, 0.01%)</title><rect x="92.0939%" y="7781" width="0.0103%" height="15" fill="rgb(235,159,4)" fg:x="26908" fg:w="3"/><text x="92.3439%" y="7791.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (3 samples, 0.01%)</title><rect x="92.0939%" y="7765" width="0.0103%" height="15" fill="rgb(214,87,48)" fg:x="26908" fg:w="3"/><text x="92.3439%" y="7775.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (8 samples, 0.03%)</title><rect x="92.1281%" y="7653" width="0.0274%" height="15" fill="rgb(246,198,24)" fg:x="26918" fg:w="8"/><text x="92.3781%" y="7663.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (15 samples, 0.05%)</title><rect x="92.1076%" y="7717" width="0.0513%" height="15" fill="rgb(209,66,40)" fg:x="26912" fg:w="15"/><text x="92.3576%" y="7727.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (15 samples, 0.05%)</title><rect x="92.1076%" y="7701" width="0.0513%" height="15" fill="rgb(233,147,39)" fg:x="26912" fg:w="15"/><text x="92.3576%" y="7711.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (15 samples, 0.05%)</title><rect x="92.1076%" y="7685" width="0.0513%" height="15" fill="rgb(231,145,52)" fg:x="26912" fg:w="15"/><text x="92.3576%" y="7695.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (11 samples, 0.04%)</title><rect x="92.1213%" y="7669" width="0.0376%" height="15" fill="rgb(206,20,26)" fg:x="26916" fg:w="11"/><text x="92.3713%" y="7679.50"></text></g><g><title>hashbrown::map::make_hash (19 samples, 0.07%)</title><rect x="92.1076%" y="7749" width="0.0650%" height="15" fill="rgb(238,220,4)" fg:x="26912" fg:w="19"/><text x="92.3576%" y="7759.50"></text></g><g><title>core::hash::BuildHasher::hash_one (19 samples, 0.07%)</title><rect x="92.1076%" y="7733" width="0.0650%" height="15" fill="rgb(252,195,42)" fg:x="26912" fg:w="19"/><text x="92.3576%" y="7743.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (4 samples, 0.01%)</title><rect x="92.1589%" y="7717" width="0.0137%" height="15" fill="rgb(209,10,6)" fg:x="26927" fg:w="4"/><text x="92.4089%" y="7727.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (4 samples, 0.01%)</title><rect x="92.1589%" y="7701" width="0.0137%" height="15" fill="rgb(229,3,52)" fg:x="26927" fg:w="4"/><text x="92.4089%" y="7711.50"></text></g><g><title>core::hash::Hasher::write_u16 (4 samples, 0.01%)</title><rect x="92.1589%" y="7685" width="0.0137%" height="15" fill="rgb(253,49,37)" fg:x="26927" fg:w="4"/><text x="92.4089%" y="7695.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.01%)</title><rect x="92.1589%" y="7669" width="0.0137%" height="15" fill="rgb(240,103,49)" fg:x="26927" fg:w="4"/><text x="92.4089%" y="7679.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (4 samples, 0.01%)</title><rect x="92.1589%" y="7653" width="0.0137%" height="15" fill="rgb(250,182,30)" fg:x="26927" fg:w="4"/><text x="92.4089%" y="7663.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4 samples, 0.01%)</title><rect x="92.1589%" y="7637" width="0.0137%" height="15" fill="rgb(248,8,30)" fg:x="26927" fg:w="4"/><text x="92.4089%" y="7647.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.02%)</title><rect x="92.1829%" y="7701" width="0.0205%" height="15" fill="rgb(237,120,30)" fg:x="26934" fg:w="6"/><text x="92.4329%" y="7711.50"></text></g><g><title>hashbrown::raw::h2 (4 samples, 0.01%)</title><rect x="92.2103%" y="7701" width="0.0137%" height="15" fill="rgb(221,146,34)" fg:x="26942" fg:w="4"/><text x="92.4603%" y="7711.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (39 samples, 0.13%)</title><rect x="92.1042%" y="7813" width="0.1335%" height="15" fill="rgb(242,55,13)" fg:x="26911" fg:w="39"/><text x="92.3542%" y="7823.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (39 samples, 0.13%)</title><rect x="92.1042%" y="7797" width="0.1335%" height="15" fill="rgb(242,112,31)" fg:x="26911" fg:w="39"/><text x="92.3542%" y="7807.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (39 samples, 0.13%)</title><rect x="92.1042%" y="7781" width="0.1335%" height="15" fill="rgb(249,192,27)" fg:x="26911" fg:w="39"/><text x="92.3542%" y="7791.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (39 samples, 0.13%)</title><rect x="92.1042%" y="7765" width="0.1335%" height="15" fill="rgb(208,204,44)" fg:x="26911" fg:w="39"/><text x="92.3542%" y="7775.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (19 samples, 0.07%)</title><rect x="92.1726%" y="7749" width="0.0650%" height="15" fill="rgb(208,93,54)" fg:x="26931" fg:w="19"/><text x="92.4226%" y="7759.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (19 samples, 0.07%)</title><rect x="92.1726%" y="7733" width="0.0650%" height="15" fill="rgb(242,1,31)" fg:x="26931" fg:w="19"/><text x="92.4226%" y="7743.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (19 samples, 0.07%)</title><rect x="92.1726%" y="7717" width="0.0650%" height="15" fill="rgb(241,83,25)" fg:x="26931" fg:w="19"/><text x="92.4226%" y="7727.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (3 samples, 0.01%)</title><rect x="92.2274%" y="7701" width="0.0103%" height="15" fill="rgb(205,169,50)" fg:x="26947" fg:w="3"/><text x="92.4774%" y="7711.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (3 samples, 0.01%)</title><rect x="92.2274%" y="7685" width="0.0103%" height="15" fill="rgb(239,186,37)" fg:x="26947" fg:w="3"/><text x="92.4774%" y="7695.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (3 samples, 0.01%)</title><rect x="92.2274%" y="7669" width="0.0103%" height="15" fill="rgb(205,221,10)" fg:x="26947" fg:w="3"/><text x="92.4774%" y="7679.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (5 samples, 0.02%)</title><rect x="92.3164%" y="7685" width="0.0171%" height="15" fill="rgb(218,196,15)" fg:x="26973" fg:w="5"/><text x="92.5664%" y="7695.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.01%)</title><rect x="92.3232%" y="7669" width="0.0103%" height="15" fill="rgb(218,196,35)" fg:x="26975" fg:w="3"/><text x="92.5732%" y="7679.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (6 samples, 0.02%)</title><rect x="92.3369%" y="7669" width="0.0205%" height="15" fill="rgb(233,63,24)" fg:x="26979" fg:w="6"/><text x="92.5869%" y="7679.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (29 samples, 0.10%)</title><rect x="92.2650%" y="7733" width="0.0993%" height="15" fill="rgb(225,8,4)" fg:x="26958" fg:w="29"/><text x="92.5150%" y="7743.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (29 samples, 0.10%)</title><rect x="92.2650%" y="7717" width="0.0993%" height="15" fill="rgb(234,105,35)" fg:x="26958" fg:w="29"/><text x="92.5150%" y="7727.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (29 samples, 0.10%)</title><rect x="92.2650%" y="7701" width="0.0993%" height="15" fill="rgb(236,21,32)" fg:x="26958" fg:w="29"/><text x="92.5150%" y="7711.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (9 samples, 0.03%)</title><rect x="92.3335%" y="7685" width="0.0308%" height="15" fill="rgb(228,109,6)" fg:x="26978" fg:w="9"/><text x="92.5835%" y="7695.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (6 samples, 0.02%)</title><rect x="92.3643%" y="7733" width="0.0205%" height="15" fill="rgb(229,215,31)" fg:x="26987" fg:w="6"/><text x="92.6143%" y="7743.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (3 samples, 0.01%)</title><rect x="92.3746%" y="7717" width="0.0103%" height="15" fill="rgb(221,52,54)" fg:x="26990" fg:w="3"/><text x="92.6246%" y="7727.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (3 samples, 0.01%)</title><rect x="92.3746%" y="7701" width="0.0103%" height="15" fill="rgb(252,129,43)" fg:x="26990" fg:w="3"/><text x="92.6246%" y="7711.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (3 samples, 0.01%)</title><rect x="92.3746%" y="7685" width="0.0103%" height="15" fill="rgb(248,183,27)" fg:x="26990" fg:w="3"/><text x="92.6246%" y="7695.50"></text></g><g><title>hashbrown::map::make_hash (47 samples, 0.16%)</title><rect x="92.2582%" y="7765" width="0.1609%" height="15" fill="rgb(250,0,22)" fg:x="26956" fg:w="47"/><text x="92.5082%" y="7775.50"></text></g><g><title>core::hash::BuildHasher::hash_one (47 samples, 0.16%)</title><rect x="92.2582%" y="7749" width="0.1609%" height="15" fill="rgb(213,166,10)" fg:x="26956" fg:w="47"/><text x="92.5082%" y="7759.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (10 samples, 0.03%)</title><rect x="92.3848%" y="7733" width="0.0342%" height="15" fill="rgb(207,163,36)" fg:x="26993" fg:w="10"/><text x="92.6348%" y="7743.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (10 samples, 0.03%)</title><rect x="92.3848%" y="7717" width="0.0342%" height="15" fill="rgb(208,122,22)" fg:x="26993" fg:w="10"/><text x="92.6348%" y="7727.50"></text></g><g><title>core::hash::Hasher::write_u16 (10 samples, 0.03%)</title><rect x="92.3848%" y="7701" width="0.0342%" height="15" fill="rgb(207,104,49)" fg:x="26993" fg:w="10"/><text x="92.6348%" y="7711.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (10 samples, 0.03%)</title><rect x="92.3848%" y="7685" width="0.0342%" height="15" fill="rgb(248,211,50)" fg:x="26993" fg:w="10"/><text x="92.6348%" y="7695.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (10 samples, 0.03%)</title><rect x="92.3848%" y="7669" width="0.0342%" height="15" fill="rgb(217,13,45)" fg:x="26993" fg:w="10"/><text x="92.6348%" y="7679.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (10 samples, 0.03%)</title><rect x="92.3848%" y="7653" width="0.0342%" height="15" fill="rgb(211,216,49)" fg:x="26993" fg:w="10"/><text x="92.6348%" y="7663.50"></text></g><g><title>core::hash::sip::u8to64_le (4 samples, 0.01%)</title><rect x="92.4054%" y="7637" width="0.0137%" height="15" fill="rgb(221,58,53)" fg:x="26999" fg:w="4"/><text x="92.6554%" y="7647.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4 samples, 0.01%)</title><rect x="92.4772%" y="7573" width="0.0137%" height="15" fill="rgb(220,112,41)" fg:x="27020" fg:w="4"/><text x="92.7272%" y="7583.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (5 samples, 0.02%)</title><rect x="92.4944%" y="7557" width="0.0171%" height="15" fill="rgb(236,38,28)" fg:x="27025" fg:w="5"/><text x="92.7444%" y="7567.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (13 samples, 0.04%)</title><rect x="92.4738%" y="7621" width="0.0445%" height="15" fill="rgb(227,195,22)" fg:x="27019" fg:w="13"/><text x="92.7238%" y="7631.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (13 samples, 0.04%)</title><rect x="92.4738%" y="7605" width="0.0445%" height="15" fill="rgb(214,55,33)" fg:x="27019" fg:w="13"/><text x="92.7238%" y="7615.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (13 samples, 0.04%)</title><rect x="92.4738%" y="7589" width="0.0445%" height="15" fill="rgb(248,80,13)" fg:x="27019" fg:w="13"/><text x="92.7238%" y="7599.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (8 samples, 0.03%)</title><rect x="92.4909%" y="7573" width="0.0274%" height="15" fill="rgb(238,52,6)" fg:x="27024" fg:w="8"/><text x="92.7409%" y="7583.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (21 samples, 0.07%)</title><rect x="92.4601%" y="7685" width="0.0719%" height="15" fill="rgb(224,198,47)" fg:x="27015" fg:w="21"/><text x="92.7101%" y="7695.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (21 samples, 0.07%)</title><rect x="92.4601%" y="7669" width="0.0719%" height="15" fill="rgb(233,171,20)" fg:x="27015" fg:w="21"/><text x="92.7101%" y="7679.50"></text></g><g><title>hashbrown::map::make_hash (21 samples, 0.07%)</title><rect x="92.4601%" y="7653" width="0.0719%" height="15" fill="rgb(241,30,25)" fg:x="27015" fg:w="21"/><text x="92.7101%" y="7663.50"></text></g><g><title>core::hash::BuildHasher::hash_one (21 samples, 0.07%)</title><rect x="92.4601%" y="7637" width="0.0719%" height="15" fill="rgb(207,171,38)" fg:x="27015" fg:w="21"/><text x="92.7101%" y="7647.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (7 samples, 0.02%)</title><rect x="92.5354%" y="7637" width="0.0240%" height="15" fill="rgb(234,70,1)" fg:x="27037" fg:w="7"/><text x="92.7854%" y="7647.50"></text></g><g><title>core::num::nonzero::NonZeroU16::new (7 samples, 0.02%)</title><rect x="92.5354%" y="7621" width="0.0240%" height="15" fill="rgb(232,178,18)" fg:x="27037" fg:w="7"/><text x="92.7854%" y="7631.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot_in_group (13 samples, 0.04%)</title><rect x="92.5320%" y="7653" width="0.0445%" height="15" fill="rgb(241,78,40)" fg:x="27036" fg:w="13"/><text x="92.7820%" y="7663.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (5 samples, 0.02%)</title><rect x="92.5594%" y="7637" width="0.0171%" height="15" fill="rgb(222,35,25)" fg:x="27044" fg:w="5"/><text x="92.8094%" y="7647.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (5 samples, 0.02%)</title><rect x="92.5594%" y="7621" width="0.0171%" height="15" fill="rgb(207,92,16)" fg:x="27044" fg:w="5"/><text x="92.8094%" y="7631.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (18 samples, 0.06%)</title><rect x="92.5320%" y="7685" width="0.0616%" height="15" fill="rgb(216,59,51)" fg:x="27036" fg:w="18"/><text x="92.7820%" y="7695.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (18 samples, 0.06%)</title><rect x="92.5320%" y="7669" width="0.0616%" height="15" fill="rgb(213,80,28)" fg:x="27036" fg:w="18"/><text x="92.7820%" y="7679.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fix_insert_slot (5 samples, 0.02%)</title><rect x="92.5765%" y="7653" width="0.0171%" height="15" fill="rgb(220,93,7)" fg:x="27049" fg:w="5"/><text x="92.8265%" y="7663.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_bucket_full (3 samples, 0.01%)</title><rect x="92.5833%" y="7637" width="0.0103%" height="15" fill="rgb(225,24,44)" fg:x="27051" fg:w="3"/><text x="92.8333%" y="7647.50"></text></g><g><title>hashbrown::raw::is_full (3 samples, 0.01%)</title><rect x="92.5833%" y="7621" width="0.0103%" height="15" fill="rgb(243,74,40)" fg:x="27051" fg:w="3"/><text x="92.8333%" y="7631.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (9 samples, 0.03%)</title><rect x="92.6005%" y="7637" width="0.0308%" height="15" fill="rgb(228,39,7)" fg:x="27056" fg:w="9"/><text x="92.8505%" y="7647.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.03%)</title><rect x="92.6005%" y="7621" width="0.0308%" height="15" fill="rgb(227,79,8)" fg:x="27056" fg:w="9"/><text x="92.8505%" y="7631.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.03%)</title><rect x="92.6005%" y="7605" width="0.0308%" height="15" fill="rgb(236,58,11)" fg:x="27056" fg:w="9"/><text x="92.8505%" y="7615.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.03%)</title><rect x="92.6005%" y="7589" width="0.0308%" height="15" fill="rgb(249,63,35)" fg:x="27056" fg:w="9"/><text x="92.8505%" y="7599.50"></text></g><g><title>malloc (7 samples, 0.02%)</title><rect x="92.6073%" y="7573" width="0.0240%" height="15" fill="rgb(252,114,16)" fg:x="27058" fg:w="7"/><text x="92.8573%" y="7583.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (11 samples, 0.04%)</title><rect x="92.5970%" y="7653" width="0.0376%" height="15" fill="rgb(254,151,24)" fg:x="27055" fg:w="11"/><text x="92.8470%" y="7663.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (64 samples, 0.22%)</title><rect x="92.4259%" y="7749" width="0.2190%" height="15" fill="rgb(253,54,39)" fg:x="27005" fg:w="64"/><text x="92.6759%" y="7759.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (64 samples, 0.22%)</title><rect x="92.4259%" y="7733" width="0.2190%" height="15" fill="rgb(243,25,45)" fg:x="27005" fg:w="64"/><text x="92.6759%" y="7743.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (64 samples, 0.22%)</title><rect x="92.4259%" y="7717" width="0.2190%" height="15" fill="rgb(234,134,9)" fg:x="27005" fg:w="64"/><text x="92.6759%" y="7727.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (60 samples, 0.21%)</title><rect x="92.4396%" y="7701" width="0.2054%" height="15" fill="rgb(227,166,31)" fg:x="27009" fg:w="60"/><text x="92.6896%" y="7711.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (15 samples, 0.05%)</title><rect x="92.5936%" y="7685" width="0.0513%" height="15" fill="rgb(245,143,41)" fg:x="27054" fg:w="15"/><text x="92.8436%" y="7695.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (15 samples, 0.05%)</title><rect x="92.5936%" y="7669" width="0.0513%" height="15" fill="rgb(238,181,32)" fg:x="27054" fg:w="15"/><text x="92.8436%" y="7679.50"></text></g><g><title>hashbrown::raw::capacity_to_buckets (3 samples, 0.01%)</title><rect x="92.6347%" y="7653" width="0.0103%" height="15" fill="rgb(224,113,18)" fg:x="27066" fg:w="3"/><text x="92.8847%" y="7663.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.02%)</title><rect x="92.6518%" y="7733" width="0.0240%" height="15" fill="rgb(240,229,28)" fg:x="27071" fg:w="7"/><text x="92.9018%" y="7743.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fix_insert_slot (7 samples, 0.02%)</title><rect x="92.6826%" y="7733" width="0.0240%" height="15" fill="rgb(250,185,3)" fg:x="27080" fg:w="7"/><text x="92.9326%" y="7743.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_bucket_full (6 samples, 0.02%)</title><rect x="92.6860%" y="7717" width="0.0205%" height="15" fill="rgb(212,59,25)" fg:x="27081" fg:w="6"/><text x="92.9360%" y="7727.50"></text></g><g><title>hashbrown::raw::is_full (6 samples, 0.02%)</title><rect x="92.6860%" y="7701" width="0.0205%" height="15" fill="rgb(221,87,20)" fg:x="27081" fg:w="6"/><text x="92.9360%" y="7711.50"></text></g><g><title>hashbrown::raw::h2 (11 samples, 0.04%)</title><rect x="92.7066%" y="7733" width="0.0376%" height="15" fill="rgb(213,74,28)" fg:x="27087" fg:w="11"/><text x="92.9566%" y="7743.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (4 samples, 0.01%)</title><rect x="92.7442%" y="7733" width="0.0137%" height="15" fill="rgb(224,132,34)" fg:x="27098" fg:w="4"/><text x="92.9942%" y="7743.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (4 samples, 0.01%)</title><rect x="92.7442%" y="7717" width="0.0137%" height="15" fill="rgb(222,101,24)" fg:x="27098" fg:w="4"/><text x="92.9942%" y="7727.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (100 samples, 0.34%)</title><rect x="92.4191%" y="7765" width="0.3423%" height="15" fill="rgb(254,142,4)" fg:x="27003" fg:w="100"/><text x="92.6691%" y="7775.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_or_find_insert_slot_inner (34 samples, 0.12%)</title><rect x="92.6449%" y="7749" width="0.1164%" height="15" fill="rgb(230,229,49)" fg:x="27069" fg:w="34"/><text x="92.8949%" y="7759.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (158 samples, 0.54%)</title><rect x="92.2377%" y="7813" width="0.5408%" height="15" fill="rgb(238,70,47)" fg:x="26950" fg:w="158"/><text x="92.4877%" y="7823.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (158 samples, 0.54%)</title><rect x="92.2377%" y="7797" width="0.5408%" height="15" fill="rgb(231,160,17)" fg:x="26950" fg:w="158"/><text x="92.4877%" y="7807.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (157 samples, 0.54%)</title><rect x="92.2411%" y="7781" width="0.5373%" height="15" fill="rgb(218,68,53)" fg:x="26951" fg:w="157"/><text x="92.4911%" y="7791.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (5 samples, 0.02%)</title><rect x="92.7613%" y="7765" width="0.0171%" height="15" fill="rgb(236,111,10)" fg:x="27103" fg:w="5"/><text x="93.0113%" y="7775.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::record_item_insert_at (5 samples, 0.02%)</title><rect x="92.7613%" y="7749" width="0.0171%" height="15" fill="rgb(224,34,41)" fg:x="27103" fg:w="5"/><text x="93.0113%" y="7759.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (3 samples, 0.01%)</title><rect x="92.7784%" y="7685" width="0.0103%" height="15" fill="rgb(241,118,19)" fg:x="27108" fg:w="3"/><text x="93.0284%" y="7695.50"></text></g><g><title>std::sys::common::thread_local::fast_local::Key&lt;T&gt;::get (3 samples, 0.01%)</title><rect x="92.7784%" y="7669" width="0.0103%" height="15" fill="rgb(238,129,25)" fg:x="27108" fg:w="3"/><text x="93.0284%" y="7679.50"></text></g><g><title>tetrs::logic::game::gravity (289 samples, 0.99%)</title><rect x="91.8030%" y="7829" width="0.9891%" height="15" fill="rgb(238,22,31)" fg:x="26823" fg:w="289"/><text x="92.0530%" y="7839.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T&gt;::new (4 samples, 0.01%)</title><rect x="92.7784%" y="7813" width="0.0137%" height="15" fill="rgb(222,174,48)" fg:x="27108" fg:w="4"/><text x="93.0284%" y="7823.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::default::Default&gt;::default (4 samples, 0.01%)</title><rect x="92.7784%" y="7797" width="0.0137%" height="15" fill="rgb(206,152,40)" fg:x="27108" fg:w="4"/><text x="93.0284%" y="7807.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::default::Default&gt;::default (4 samples, 0.01%)</title><rect x="92.7784%" y="7781" width="0.0137%" height="15" fill="rgb(218,99,54)" fg:x="27108" fg:w="4"/><text x="93.0284%" y="7791.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::default::Default&gt;::default (4 samples, 0.01%)</title><rect x="92.7784%" y="7765" width="0.0137%" height="15" fill="rgb(220,174,26)" fg:x="27108" fg:w="4"/><text x="93.0284%" y="7775.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (4 samples, 0.01%)</title><rect x="92.7784%" y="7749" width="0.0137%" height="15" fill="rgb(245,116,9)" fg:x="27108" fg:w="4"/><text x="93.0284%" y="7759.50"></text></g><g><title>std::collections::hash::map::RandomState::new (4 samples, 0.01%)</title><rect x="92.7784%" y="7733" width="0.0137%" height="15" fill="rgb(209,72,35)" fg:x="27108" fg:w="4"/><text x="93.0284%" y="7743.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4 samples, 0.01%)</title><rect x="92.7784%" y="7717" width="0.0137%" height="15" fill="rgb(226,126,21)" fg:x="27108" fg:w="4"/><text x="93.0284%" y="7727.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4 samples, 0.01%)</title><rect x="92.7784%" y="7701" width="0.0137%" height="15" fill="rgb(227,192,1)" fg:x="27108" fg:w="4"/><text x="93.0284%" y="7711.50"></text></g><g><title>__rdl_alloc (5 samples, 0.02%)</title><rect x="92.9222%" y="7749" width="0.0171%" height="15" fill="rgb(237,180,29)" fg:x="27150" fg:w="5"/><text x="93.1722%" y="7759.50"></text></g><g><title>core::ptr::read_volatile (3 samples, 0.01%)</title><rect x="92.9427%" y="7749" width="0.0103%" height="15" fill="rgb(230,197,35)" fg:x="27156" fg:w="3"/><text x="93.1927%" y="7759.50"></text></g><g><title>alloc::alloc::exchange_malloc (29 samples, 0.10%)</title><rect x="92.9222%" y="7813" width="0.0993%" height="15" fill="rgb(246,193,31)" fg:x="27150" fg:w="29"/><text x="93.1722%" y="7823.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (29 samples, 0.10%)</title><rect x="92.9222%" y="7797" width="0.0993%" height="15" fill="rgb(241,36,4)" fg:x="27150" fg:w="29"/><text x="93.1722%" y="7807.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (29 samples, 0.10%)</title><rect x="92.9222%" y="7781" width="0.0993%" height="15" fill="rgb(241,130,17)" fg:x="27150" fg:w="29"/><text x="93.1722%" y="7791.50"></text></g><g><title>alloc::alloc::alloc (29 samples, 0.10%)</title><rect x="92.9222%" y="7765" width="0.0993%" height="15" fill="rgb(206,137,32)" fg:x="27150" fg:w="29"/><text x="93.1722%" y="7775.50"></text></g><g><title>malloc (20 samples, 0.07%)</title><rect x="92.9530%" y="7749" width="0.0685%" height="15" fill="rgb(237,228,51)" fg:x="27159" fg:w="20"/><text x="93.2030%" y="7759.50"></text></g><g><title>__rust_dealloc (6 samples, 0.02%)</title><rect x="93.0351%" y="7685" width="0.0205%" height="15" fill="rgb(243,6,42)" fg:x="27183" fg:w="6"/><text x="93.2851%" y="7695.50"></text></g><g><title>tetrs::logic::game::is_connected (114 samples, 0.39%)</title><rect x="92.7921%" y="7829" width="0.3902%" height="15" fill="rgb(251,74,28)" fg:x="27112" fg:w="114"/><text x="93.0421%" y="7839.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(i8,i8)&gt;&gt; (47 samples, 0.16%)</title><rect x="93.0214%" y="7813" width="0.1609%" height="15" fill="rgb(218,20,49)" fg:x="27179" fg:w="47"/><text x="93.2714%" y="7823.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (47 samples, 0.16%)</title><rect x="93.0214%" y="7797" width="0.1609%" height="15" fill="rgb(238,28,14)" fg:x="27179" fg:w="47"/><text x="93.2714%" y="7807.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(i8,i8),alloc::alloc::Global&gt;&gt; (47 samples, 0.16%)</title><rect x="93.0214%" y="7781" width="0.1609%" height="15" fill="rgb(229,40,46)" fg:x="27179" fg:w="47"/><text x="93.2714%" y="7791.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (47 samples, 0.16%)</title><rect x="93.0214%" y="7765" width="0.1609%" height="15" fill="rgb(244,195,20)" fg:x="27179" fg:w="47"/><text x="93.2714%" y="7775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(i8,i8)&gt;&gt; (47 samples, 0.16%)</title><rect x="93.0214%" y="7749" width="0.1609%" height="15" fill="rgb(253,56,35)" fg:x="27179" fg:w="47"/><text x="93.2714%" y="7759.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (47 samples, 0.16%)</title><rect x="93.0214%" y="7733" width="0.1609%" height="15" fill="rgb(210,149,44)" fg:x="27179" fg:w="47"/><text x="93.2714%" y="7743.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (47 samples, 0.16%)</title><rect x="93.0214%" y="7717" width="0.1609%" height="15" fill="rgb(240,135,12)" fg:x="27179" fg:w="47"/><text x="93.2714%" y="7727.50"></text></g><g><title>alloc::alloc::dealloc (47 samples, 0.16%)</title><rect x="93.0214%" y="7701" width="0.1609%" height="15" fill="rgb(251,24,50)" fg:x="27179" fg:w="47"/><text x="93.2714%" y="7711.50"></text></g><g><title>cfree (37 samples, 0.13%)</title><rect x="93.0557%" y="7685" width="0.1266%" height="15" fill="rgb(243,200,47)" fg:x="27189" fg:w="37"/><text x="93.3057%" y="7695.50"></text></g><g><title>[libc.so.6] (20 samples, 0.07%)</title><rect x="93.1138%" y="7669" width="0.0685%" height="15" fill="rgb(224,166,26)" fg:x="27206" fg:w="20"/><text x="93.3638%" y="7679.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (3 samples, 0.01%)</title><rect x="93.1994%" y="7813" width="0.0103%" height="15" fill="rgb(233,0,47)" fg:x="27231" fg:w="3"/><text x="93.4494%" y="7823.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (3 samples, 0.01%)</title><rect x="93.1994%" y="7797" width="0.0103%" height="15" fill="rgb(253,80,5)" fg:x="27231" fg:w="3"/><text x="93.4494%" y="7807.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (3 samples, 0.01%)</title><rect x="93.1994%" y="7781" width="0.0103%" height="15" fill="rgb(214,133,25)" fg:x="27231" fg:w="3"/><text x="93.4494%" y="7791.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.01%)</title><rect x="93.2576%" y="7749" width="0.0137%" height="15" fill="rgb(209,27,14)" fg:x="27248" fg:w="4"/><text x="93.5076%" y="7759.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.01%)</title><rect x="93.2576%" y="7733" width="0.0137%" height="15" fill="rgb(219,102,51)" fg:x="27248" fg:w="4"/><text x="93.5076%" y="7743.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="93.2713%" y="7733" width="0.0103%" height="15" fill="rgb(237,18,16)" fg:x="27252" fg:w="3"/><text x="93.5213%" y="7743.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.01%)</title><rect x="93.2713%" y="7717" width="0.0103%" height="15" fill="rgb(241,85,17)" fg:x="27252" fg:w="3"/><text x="93.5213%" y="7727.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (3 samples, 0.01%)</title><rect x="93.2713%" y="7701" width="0.0103%" height="15" fill="rgb(236,90,42)" fg:x="27252" fg:w="3"/><text x="93.5213%" y="7711.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (3 samples, 0.01%)</title><rect x="93.2713%" y="7685" width="0.0103%" height="15" fill="rgb(249,57,21)" fg:x="27252" fg:w="3"/><text x="93.5213%" y="7695.50"></text></g><g><title>tetrs::logic::game::gravity (20 samples, 0.07%)</title><rect x="93.2165%" y="7813" width="0.0685%" height="15" fill="rgb(243,12,36)" fg:x="27236" fg:w="20"/><text x="93.4665%" y="7823.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (8 samples, 0.03%)</title><rect x="93.2576%" y="7797" width="0.0274%" height="15" fill="rgb(253,128,47)" fg:x="27248" fg:w="8"/><text x="93.5076%" y="7807.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (8 samples, 0.03%)</title><rect x="93.2576%" y="7781" width="0.0274%" height="15" fill="rgb(207,33,20)" fg:x="27248" fg:w="8"/><text x="93.5076%" y="7791.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8 samples, 0.03%)</title><rect x="93.2576%" y="7765" width="0.0274%" height="15" fill="rgb(233,215,35)" fg:x="27248" fg:w="8"/><text x="93.5076%" y="7775.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (4 samples, 0.01%)</title><rect x="93.2713%" y="7749" width="0.0137%" height="15" fill="rgb(249,188,52)" fg:x="27252" fg:w="4"/><text x="93.5213%" y="7759.50"></text></g><g><title>alloc::alloc::exchange_malloc (5 samples, 0.02%)</title><rect x="93.2987%" y="7797" width="0.0171%" height="15" fill="rgb(225,12,32)" fg:x="27260" fg:w="5"/><text x="93.5487%" y="7807.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.02%)</title><rect x="93.2987%" y="7781" width="0.0171%" height="15" fill="rgb(247,98,14)" fg:x="27260" fg:w="5"/><text x="93.5487%" y="7791.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.02%)</title><rect x="93.2987%" y="7765" width="0.0171%" height="15" fill="rgb(247,219,48)" fg:x="27260" fg:w="5"/><text x="93.5487%" y="7775.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.02%)</title><rect x="93.2987%" y="7749" width="0.0171%" height="15" fill="rgb(253,60,48)" fg:x="27260" fg:w="5"/><text x="93.5487%" y="7759.50"></text></g><g><title>malloc (4 samples, 0.01%)</title><rect x="93.3021%" y="7733" width="0.0137%" height="15" fill="rgb(245,15,52)" fg:x="27261" fg:w="4"/><text x="93.5521%" y="7743.50"></text></g><g><title>tetrs::logic::game::is_connected (13 samples, 0.04%)</title><rect x="93.2850%" y="7813" width="0.0445%" height="15" fill="rgb(220,133,28)" fg:x="27256" fg:w="13"/><text x="93.5350%" y="7823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(i8,i8)&gt;&gt; (4 samples, 0.01%)</title><rect x="93.3158%" y="7797" width="0.0137%" height="15" fill="rgb(217,180,4)" fg:x="27265" fg:w="4"/><text x="93.5658%" y="7807.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="93.3158%" y="7781" width="0.0137%" height="15" fill="rgb(251,24,1)" fg:x="27265" fg:w="4"/><text x="93.5658%" y="7791.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(i8,i8),alloc::alloc::Global&gt;&gt; (4 samples, 0.01%)</title><rect x="93.3158%" y="7765" width="0.0137%" height="15" fill="rgb(212,185,49)" fg:x="27265" fg:w="4"/><text x="93.5658%" y="7775.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="93.3158%" y="7749" width="0.0137%" height="15" fill="rgb(215,175,22)" fg:x="27265" fg:w="4"/><text x="93.5658%" y="7759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(i8,i8)&gt;&gt; (4 samples, 0.01%)</title><rect x="93.3158%" y="7733" width="0.0137%" height="15" fill="rgb(250,205,14)" fg:x="27265" fg:w="4"/><text x="93.5658%" y="7743.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="93.3158%" y="7717" width="0.0137%" height="15" fill="rgb(225,211,22)" fg:x="27265" fg:w="4"/><text x="93.5658%" y="7727.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.01%)</title><rect x="93.3158%" y="7701" width="0.0137%" height="15" fill="rgb(251,179,42)" fg:x="27265" fg:w="4"/><text x="93.5658%" y="7711.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.01%)</title><rect x="93.3158%" y="7685" width="0.0137%" height="15" fill="rgb(208,216,51)" fg:x="27265" fg:w="4"/><text x="93.5658%" y="7695.50"></text></g><g><title>cfree (4 samples, 0.01%)</title><rect x="93.3158%" y="7669" width="0.0137%" height="15" fill="rgb(235,36,11)" fg:x="27265" fg:w="4"/><text x="93.5658%" y="7679.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="93.3158%" y="7653" width="0.0137%" height="15" fill="rgb(213,189,28)" fg:x="27265" fg:w="4"/><text x="93.5658%" y="7663.50"></text></g><g><title>tetrs::logic::game::gravity (3 samples, 0.01%)</title><rect x="93.3329%" y="7797" width="0.0103%" height="15" fill="rgb(227,203,42)" fg:x="27270" fg:w="3"/><text x="93.5829%" y="7807.50"></text></g><g><title>tetrs::logic::game::update (5 samples, 0.02%)</title><rect x="93.3295%" y="7813" width="0.0171%" height="15" fill="rgb(244,72,36)" fg:x="27269" fg:w="5"/><text x="93.5795%" y="7823.50"></text></g><g><title>tetrs::logic::game::update (61 samples, 0.21%)</title><rect x="93.1823%" y="7829" width="0.2088%" height="15" fill="rgb(213,53,17)" fg:x="27226" fg:w="61"/><text x="93.4323%" y="7839.50"></text></g><g><title>tetrs::logic::id_manager::IdManager::next_unique_id (13 samples, 0.04%)</title><rect x="93.3466%" y="7813" width="0.0445%" height="15" fill="rgb(207,167,3)" fg:x="27274" fg:w="13"/><text x="93.5966%" y="7823.50"></text></g><g><title>tetrs::logic::game::update (710 samples, 2.43%)</title><rect x="91.4471%" y="7845" width="2.4300%" height="15" fill="rgb(216,98,30)" fg:x="26719" fg:w="710"/><text x="91.6971%" y="7855.50">te..</text></g><g><title>tetrs::logic::id_manager::IdManager::next_unique_id (142 samples, 0.49%)</title><rect x="93.3911%" y="7829" width="0.4860%" height="15" fill="rgb(236,123,15)" fg:x="27287" fg:w="142"/><text x="93.6411%" y="7839.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (19 samples, 0.07%)</title><rect x="99.2265%" y="7829" width="0.0650%" height="15" fill="rgb(248,81,50)" fg:x="28992" fg:w="19"/><text x="99.4765%" y="7839.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (19 samples, 0.07%)</title><rect x="99.2265%" y="7813" width="0.0650%" height="15" fill="rgb(214,120,4)" fg:x="28992" fg:w="19"/><text x="99.4765%" y="7823.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (19 samples, 0.07%)</title><rect x="99.2265%" y="7797" width="0.0650%" height="15" fill="rgb(208,179,34)" fg:x="28992" fg:w="19"/><text x="99.4765%" y="7807.50"></text></g><g><title>tetrs::logic::bot::search (28,991 samples, 99.22%)</title><rect x="0.0787%" y="7893" width="99.2231%" height="15" fill="rgb(227,140,7)" fg:x="23" fg:w="28991"/><text x="0.3287%" y="7903.50">tetrs::logic::bot::search</text></g><g><title>tetrs::logic::bot::heuristic (10,989 samples, 37.61%)</title><rect x="61.6914%" y="7877" width="37.6104%" height="15" fill="rgb(214,22,6)" fg:x="18025" fg:w="10989"/><text x="61.9414%" y="7887.50">tetrs::logic::bot::heuristic</text></g><g><title>tetrs::logic::game::update (10,659 samples, 36.48%)</title><rect x="62.8209%" y="7861" width="36.4809%" height="15" fill="rgb(207,137,27)" fg:x="18355" fg:w="10659"/><text x="63.0709%" y="7871.50">tetrs::logic::game::update</text></g><g><title>tetrs::logic::id_manager::IdManager::next_unique_id (1,585 samples, 5.42%)</title><rect x="93.8771%" y="7845" width="5.4247%" height="15" fill="rgb(210,8,46)" fg:x="27429" fg:w="1585"/><text x="94.1271%" y="7855.50">tetrs::..</text></g><g><title>core::slice::&lt;impl [T]&gt;::fill (3 samples, 0.01%)</title><rect x="99.2915%" y="7829" width="0.0103%" height="15" fill="rgb(240,16,54)" fg:x="29011" fg:w="3"/><text x="99.5415%" y="7839.50"></text></g><g><title>&lt;[T] as core::slice::specialize::SpecFill&lt;T&gt;&gt;::spec_fill (3 samples, 0.01%)</title><rect x="99.2915%" y="7813" width="0.0103%" height="15" fill="rgb(211,209,29)" fg:x="29011" fg:w="3"/><text x="99.5415%" y="7823.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="99.2915%" y="7797" width="0.0103%" height="15" fill="rgb(226,228,24)" fg:x="29011" fg:w="3"/><text x="99.5415%" y="7807.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (34 samples, 0.12%)</title><rect x="99.3600%" y="7797" width="0.1164%" height="15" fill="rgb(222,84,9)" fg:x="29031" fg:w="34"/><text x="99.6100%" y="7807.50"></text></g><g><title>alloc::alloc::Global::grow_impl (34 samples, 0.12%)</title><rect x="99.3600%" y="7781" width="0.1164%" height="15" fill="rgb(234,203,30)" fg:x="29031" fg:w="34"/><text x="99.6100%" y="7791.50"></text></g><g><title>alloc::alloc::realloc (34 samples, 0.12%)</title><rect x="99.3600%" y="7765" width="0.1164%" height="15" fill="rgb(238,109,14)" fg:x="29031" fg:w="34"/><text x="99.6100%" y="7775.50"></text></g><g><title>realloc (34 samples, 0.12%)</title><rect x="99.3600%" y="7749" width="0.1164%" height="15" fill="rgb(233,206,34)" fg:x="29031" fg:w="34"/><text x="99.6100%" y="7759.50"></text></g><g><title>[libc.so.6] (34 samples, 0.12%)</title><rect x="99.3600%" y="7733" width="0.1164%" height="15" fill="rgb(220,167,47)" fg:x="29031" fg:w="34"/><text x="99.6100%" y="7743.50"></text></g><g><title>[libc.so.6] (34 samples, 0.12%)</title><rect x="99.3600%" y="7717" width="0.1164%" height="15" fill="rgb(238,105,10)" fg:x="29031" fg:w="34"/><text x="99.6100%" y="7727.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (36 samples, 0.12%)</title><rect x="99.3566%" y="7861" width="0.1232%" height="15" fill="rgb(213,227,17)" fg:x="29030" fg:w="36"/><text x="99.6066%" y="7871.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (36 samples, 0.12%)</title><rect x="99.3566%" y="7845" width="0.1232%" height="15" fill="rgb(217,132,38)" fg:x="29030" fg:w="36"/><text x="99.6066%" y="7855.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (36 samples, 0.12%)</title><rect x="99.3566%" y="7829" width="0.1232%" height="15" fill="rgb(242,146,4)" fg:x="29030" fg:w="36"/><text x="99.6066%" y="7839.50"></text></g><g><title>alloc::raw_vec::finish_grow (36 samples, 0.12%)</title><rect x="99.3566%" y="7813" width="0.1232%" height="15" fill="rgb(212,61,9)" fg:x="29030" fg:w="36"/><text x="99.6066%" y="7823.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (4 samples, 0.01%)</title><rect x="99.4935%" y="7765" width="0.0137%" height="15" fill="rgb(247,126,22)" fg:x="29070" fg:w="4"/><text x="99.7435%" y="7775.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4 samples, 0.01%)</title><rect x="99.4935%" y="7749" width="0.0137%" height="15" fill="rgb(220,196,2)" fg:x="29070" fg:w="4"/><text x="99.7435%" y="7759.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4 samples, 0.01%)</title><rect x="99.4935%" y="7733" width="0.0137%" height="15" fill="rgb(208,46,4)" fg:x="29070" fg:w="4"/><text x="99.7435%" y="7743.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (4 samples, 0.01%)</title><rect x="99.4935%" y="7717" width="0.0137%" height="15" fill="rgb(252,104,46)" fg:x="29070" fg:w="4"/><text x="99.7435%" y="7727.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.01%)</title><rect x="99.4935%" y="7701" width="0.0137%" height="15" fill="rgb(237,152,48)" fg:x="29070" fg:w="4"/><text x="99.7435%" y="7711.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.01%)</title><rect x="99.5072%" y="7717" width="0.0103%" height="15" fill="rgb(221,59,37)" fg:x="29074" fg:w="3"/><text x="99.7572%" y="7727.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (3 samples, 0.01%)</title><rect x="99.5072%" y="7701" width="0.0103%" height="15" fill="rgb(209,202,51)" fg:x="29074" fg:w="3"/><text x="99.7572%" y="7711.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.01%)</title><rect x="99.5072%" y="7685" width="0.0103%" height="15" fill="rgb(228,81,30)" fg:x="29074" fg:w="3"/><text x="99.7572%" y="7695.50"></text></g><g><title>hashbrown::map::make_hash (10 samples, 0.03%)</title><rect x="99.4935%" y="7797" width="0.0342%" height="15" fill="rgb(227,42,39)" fg:x="29070" fg:w="10"/><text x="99.7435%" y="7807.50"></text></g><g><title>core::hash::BuildHasher::hash_one (10 samples, 0.03%)</title><rect x="99.4935%" y="7781" width="0.0342%" height="15" fill="rgb(221,26,2)" fg:x="29070" fg:w="10"/><text x="99.7435%" y="7791.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (6 samples, 0.02%)</title><rect x="99.5072%" y="7765" width="0.0205%" height="15" fill="rgb(254,61,31)" fg:x="29074" fg:w="6"/><text x="99.7572%" y="7775.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (6 samples, 0.02%)</title><rect x="99.5072%" y="7749" width="0.0205%" height="15" fill="rgb(222,173,38)" fg:x="29074" fg:w="6"/><text x="99.7572%" y="7759.50"></text></g><g><title>core::hash::Hasher::write_u16 (6 samples, 0.02%)</title><rect x="99.5072%" y="7733" width="0.0205%" height="15" fill="rgb(218,50,12)" fg:x="29074" fg:w="6"/><text x="99.7572%" y="7743.50"></text></g><g><title>core::num::&lt;impl u16&gt;::to_ne_bytes (3 samples, 0.01%)</title><rect x="99.5174%" y="7717" width="0.0103%" height="15" fill="rgb(223,88,40)" fg:x="29077" fg:w="3"/><text x="99.7674%" y="7727.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (14 samples, 0.05%)</title><rect x="99.4900%" y="7861" width="0.0479%" height="15" fill="rgb(237,54,19)" fg:x="29069" fg:w="14"/><text x="99.7400%" y="7871.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (14 samples, 0.05%)</title><rect x="99.4900%" y="7845" width="0.0479%" height="15" fill="rgb(251,129,25)" fg:x="29069" fg:w="14"/><text x="99.7400%" y="7855.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (14 samples, 0.05%)</title><rect x="99.4900%" y="7829" width="0.0479%" height="15" fill="rgb(238,97,19)" fg:x="29069" fg:w="14"/><text x="99.7400%" y="7839.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (14 samples, 0.05%)</title><rect x="99.4900%" y="7813" width="0.0479%" height="15" fill="rgb(240,169,18)" fg:x="29069" fg:w="14"/><text x="99.7400%" y="7823.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3 samples, 0.01%)</title><rect x="99.5277%" y="7797" width="0.0103%" height="15" fill="rgb(230,187,49)" fg:x="29080" fg:w="3"/><text x="99.7777%" y="7807.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.01%)</title><rect x="99.5277%" y="7781" width="0.0103%" height="15" fill="rgb(209,44,26)" fg:x="29080" fg:w="3"/><text x="99.7777%" y="7791.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (3 samples, 0.01%)</title><rect x="99.5277%" y="7765" width="0.0103%" height="15" fill="rgb(244,0,6)" fg:x="29080" fg:w="3"/><text x="99.7777%" y="7775.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.01%)</title><rect x="99.5516%" y="7781" width="0.0103%" height="15" fill="rgb(248,18,21)" fg:x="29087" fg:w="3"/><text x="99.8016%" y="7791.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3 samples, 0.01%)</title><rect x="99.5516%" y="7765" width="0.0103%" height="15" fill="rgb(245,180,19)" fg:x="29087" fg:w="3"/><text x="99.8016%" y="7775.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.01%)</title><rect x="99.5516%" y="7749" width="0.0103%" height="15" fill="rgb(252,118,36)" fg:x="29087" fg:w="3"/><text x="99.8016%" y="7759.50"></text></g><g><title>hashbrown::map::make_hash (5 samples, 0.02%)</title><rect x="99.5516%" y="7813" width="0.0171%" height="15" fill="rgb(210,224,19)" fg:x="29087" fg:w="5"/><text x="99.8016%" y="7823.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5 samples, 0.02%)</title><rect x="99.5516%" y="7797" width="0.0171%" height="15" fill="rgb(218,30,24)" fg:x="29087" fg:w="5"/><text x="99.8016%" y="7807.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (4 samples, 0.01%)</title><rect x="99.5722%" y="7797" width="0.0137%" height="15" fill="rgb(219,75,50)" fg:x="29093" fg:w="4"/><text x="99.8222%" y="7807.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.01%)</title><rect x="99.5756%" y="7781" width="0.0103%" height="15" fill="rgb(234,72,50)" fg:x="29094" fg:w="3"/><text x="99.8256%" y="7791.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (3 samples, 0.01%)</title><rect x="99.5756%" y="7765" width="0.0103%" height="15" fill="rgb(219,100,48)" fg:x="29094" fg:w="3"/><text x="99.8256%" y="7775.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (3 samples, 0.01%)</title><rect x="99.5756%" y="7749" width="0.0103%" height="15" fill="rgb(253,5,41)" fg:x="29094" fg:w="3"/><text x="99.8256%" y="7759.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (8 samples, 0.03%)</title><rect x="99.5688%" y="7813" width="0.0274%" height="15" fill="rgb(247,181,11)" fg:x="29092" fg:w="8"/><text x="99.8188%" y="7823.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_or_find_insert_slot_inner (3 samples, 0.01%)</title><rect x="99.5859%" y="7797" width="0.0103%" height="15" fill="rgb(222,223,25)" fg:x="29097" fg:w="3"/><text x="99.8359%" y="7807.50"></text></g><g><title>tetrs::logic::game::gravity (77 samples, 0.26%)</title><rect x="99.3360%" y="7877" width="0.2635%" height="15" fill="rgb(214,198,28)" fg:x="29024" fg:w="77"/><text x="99.5860%" y="7887.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (18 samples, 0.06%)</title><rect x="99.5380%" y="7861" width="0.0616%" height="15" fill="rgb(230,46,43)" fg:x="29083" fg:w="18"/><text x="99.7880%" y="7871.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (18 samples, 0.06%)</title><rect x="99.5380%" y="7845" width="0.0616%" height="15" fill="rgb(233,65,53)" fg:x="29083" fg:w="18"/><text x="99.7880%" y="7855.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (18 samples, 0.06%)</title><rect x="99.5380%" y="7829" width="0.0616%" height="15" fill="rgb(221,121,27)" fg:x="29083" fg:w="18"/><text x="99.7880%" y="7839.50"></text></g><g><title>alloc::alloc::exchange_malloc (7 samples, 0.02%)</title><rect x="99.6133%" y="7861" width="0.0240%" height="15" fill="rgb(247,70,47)" fg:x="29105" fg:w="7"/><text x="99.8633%" y="7871.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.02%)</title><rect x="99.6133%" y="7845" width="0.0240%" height="15" fill="rgb(228,85,35)" fg:x="29105" fg:w="7"/><text x="99.8633%" y="7855.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.02%)</title><rect x="99.6133%" y="7829" width="0.0240%" height="15" fill="rgb(209,50,18)" fg:x="29105" fg:w="7"/><text x="99.8633%" y="7839.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.02%)</title><rect x="99.6133%" y="7813" width="0.0240%" height="15" fill="rgb(250,19,35)" fg:x="29105" fg:w="7"/><text x="99.8633%" y="7823.50"></text></g><g><title>malloc (6 samples, 0.02%)</title><rect x="99.6167%" y="7797" width="0.0205%" height="15" fill="rgb(253,107,29)" fg:x="29106" fg:w="6"/><text x="99.8667%" y="7807.50"></text></g><g><title>__rust_dealloc (3 samples, 0.01%)</title><rect x="99.6372%" y="7733" width="0.0103%" height="15" fill="rgb(252,179,29)" fg:x="29112" fg:w="3"/><text x="99.8872%" y="7743.50"></text></g><g><title>tetrs::logic::game::is_connected (17 samples, 0.06%)</title><rect x="99.5996%" y="7877" width="0.0582%" height="15" fill="rgb(238,194,6)" fg:x="29101" fg:w="17"/><text x="99.8496%" y="7887.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(i8,i8)&gt;&gt; (6 samples, 0.02%)</title><rect x="99.6372%" y="7861" width="0.0205%" height="15" fill="rgb(238,164,29)" fg:x="29112" fg:w="6"/><text x="99.8872%" y="7871.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="99.6372%" y="7845" width="0.0205%" height="15" fill="rgb(224,25,9)" fg:x="29112" fg:w="6"/><text x="99.8872%" y="7855.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(i8,i8),alloc::alloc::Global&gt;&gt; (6 samples, 0.02%)</title><rect x="99.6372%" y="7829" width="0.0205%" height="15" fill="rgb(244,153,23)" fg:x="29112" fg:w="6"/><text x="99.8872%" y="7839.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="99.6372%" y="7813" width="0.0205%" height="15" fill="rgb(212,203,14)" fg:x="29112" fg:w="6"/><text x="99.8872%" y="7823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(i8,i8)&gt;&gt; (6 samples, 0.02%)</title><rect x="99.6372%" y="7797" width="0.0205%" height="15" fill="rgb(220,164,20)" fg:x="29112" fg:w="6"/><text x="99.8872%" y="7807.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="99.6372%" y="7781" width="0.0205%" height="15" fill="rgb(222,203,48)" fg:x="29112" fg:w="6"/><text x="99.8872%" y="7791.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.02%)</title><rect x="99.6372%" y="7765" width="0.0205%" height="15" fill="rgb(215,159,22)" fg:x="29112" fg:w="6"/><text x="99.8872%" y="7775.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.02%)</title><rect x="99.6372%" y="7749" width="0.0205%" height="15" fill="rgb(216,183,47)" fg:x="29112" fg:w="6"/><text x="99.8872%" y="7759.50"></text></g><g><title>cfree (3 samples, 0.01%)</title><rect x="99.6475%" y="7733" width="0.0103%" height="15" fill="rgb(229,195,25)" fg:x="29115" fg:w="3"/><text x="99.8975%" y="7743.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (5 samples, 0.02%)</title><rect x="99.6714%" y="7861" width="0.0171%" height="15" fill="rgb(224,132,51)" fg:x="29122" fg:w="5"/><text x="99.9214%" y="7871.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (5 samples, 0.02%)</title><rect x="99.6714%" y="7845" width="0.0171%" height="15" fill="rgb(240,63,7)" fg:x="29122" fg:w="5"/><text x="99.9214%" y="7855.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (5 samples, 0.02%)</title><rect x="99.6714%" y="7829" width="0.0171%" height="15" fill="rgb(249,182,41)" fg:x="29122" fg:w="5"/><text x="99.9214%" y="7839.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::all (4 samples, 0.01%)</title><rect x="99.6885%" y="7861" width="0.0137%" height="15" fill="rgb(243,47,26)" fg:x="29127" fg:w="4"/><text x="99.9385%" y="7871.50"></text></g><g><title>hashbrown::map::make_hash (5 samples, 0.02%)</title><rect x="99.7194%" y="7781" width="0.0171%" height="15" fill="rgb(233,48,2)" fg:x="29136" fg:w="5"/><text x="99.9694%" y="7791.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5 samples, 0.02%)</title><rect x="99.7194%" y="7765" width="0.0171%" height="15" fill="rgb(244,165,34)" fg:x="29136" fg:w="5"/><text x="99.9694%" y="7775.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (3 samples, 0.01%)</title><rect x="99.7262%" y="7749" width="0.0103%" height="15" fill="rgb(207,89,7)" fg:x="29138" fg:w="3"/><text x="99.9762%" y="7759.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (3 samples, 0.01%)</title><rect x="99.7262%" y="7733" width="0.0103%" height="15" fill="rgb(244,117,36)" fg:x="29138" fg:w="3"/><text x="99.9762%" y="7743.50"></text></g><g><title>core::hash::Hasher::write_u16 (3 samples, 0.01%)</title><rect x="99.7262%" y="7717" width="0.0103%" height="15" fill="rgb(226,144,34)" fg:x="29138" fg:w="3"/><text x="99.9762%" y="7727.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.01%)</title><rect x="99.7262%" y="7701" width="0.0103%" height="15" fill="rgb(213,23,19)" fg:x="29138" fg:w="3"/><text x="99.9762%" y="7711.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (3 samples, 0.01%)</title><rect x="99.7262%" y="7685" width="0.0103%" height="15" fill="rgb(217,75,12)" fg:x="29138" fg:w="3"/><text x="99.9762%" y="7695.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.01%)</title><rect x="99.7262%" y="7669" width="0.0103%" height="15" fill="rgb(224,159,17)" fg:x="29138" fg:w="3"/><text x="99.9762%" y="7679.50"></text></g><g><title>core::hash::sip::u8to64_le (3 samples, 0.01%)</title><rect x="99.7262%" y="7653" width="0.0103%" height="15" fill="rgb(217,118,1)" fg:x="29138" fg:w="3"/><text x="99.9762%" y="7663.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (7 samples, 0.02%)</title><rect x="99.7194%" y="7845" width="0.0240%" height="15" fill="rgb(232,180,48)" fg:x="29136" fg:w="7"/><text x="99.9694%" y="7855.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (7 samples, 0.02%)</title><rect x="99.7194%" y="7829" width="0.0240%" height="15" fill="rgb(230,27,33)" fg:x="29136" fg:w="7"/><text x="99.9694%" y="7839.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (7 samples, 0.02%)</title><rect x="99.7194%" y="7813" width="0.0240%" height="15" fill="rgb(205,31,21)" fg:x="29136" fg:w="7"/><text x="99.9694%" y="7823.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (7 samples, 0.02%)</title><rect x="99.7194%" y="7797" width="0.0240%" height="15" fill="rgb(253,59,4)" fg:x="29136" fg:w="7"/><text x="99.9694%" y="7807.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="99.7502%" y="7781" width="0.0103%" height="15" fill="rgb(224,201,9)" fg:x="29145" fg:w="3"/><text x="100.0002%" y="7791.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.01%)</title><rect x="99.7502%" y="7765" width="0.0103%" height="15" fill="rgb(229,206,30)" fg:x="29145" fg:w="3"/><text x="100.0002%" y="7775.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (3 samples, 0.01%)</title><rect x="99.7502%" y="7749" width="0.0103%" height="15" fill="rgb(212,67,47)" fg:x="29145" fg:w="3"/><text x="100.0002%" y="7759.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (3 samples, 0.01%)</title><rect x="99.7502%" y="7733" width="0.0103%" height="15" fill="rgb(211,96,50)" fg:x="29145" fg:w="3"/><text x="100.0002%" y="7743.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (8 samples, 0.03%)</title><rect x="99.7502%" y="7797" width="0.0274%" height="15" fill="rgb(252,114,18)" fg:x="29145" fg:w="8"/><text x="100.0002%" y="7807.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_or_find_insert_slot_inner (5 samples, 0.02%)</title><rect x="99.7604%" y="7781" width="0.0171%" height="15" fill="rgb(223,58,37)" fg:x="29148" fg:w="5"/><text x="100.0104%" y="7791.50"></text></g><g><title>tetrs::logic::game::gravity (22 samples, 0.08%)</title><rect x="99.7057%" y="7861" width="0.0753%" height="15" fill="rgb(237,70,4)" fg:x="29132" fg:w="22"/><text x="99.9557%" y="7871.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (11 samples, 0.04%)</title><rect x="99.7433%" y="7845" width="0.0376%" height="15" fill="rgb(244,85,46)" fg:x="29143" fg:w="11"/><text x="99.9933%" y="7855.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (11 samples, 0.04%)</title><rect x="99.7433%" y="7829" width="0.0376%" height="15" fill="rgb(223,39,52)" fg:x="29143" fg:w="11"/><text x="99.9933%" y="7839.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (11 samples, 0.04%)</title><rect x="99.7433%" y="7813" width="0.0376%" height="15" fill="rgb(218,200,14)" fg:x="29143" fg:w="11"/><text x="99.9933%" y="7823.50"></text></g><g><title>alloc::alloc::exchange_malloc (4 samples, 0.01%)</title><rect x="99.8015%" y="7845" width="0.0137%" height="15" fill="rgb(208,171,16)" fg:x="29160" fg:w="4"/><text x="100.0515%" y="7855.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.01%)</title><rect x="99.8015%" y="7829" width="0.0137%" height="15" fill="rgb(234,200,18)" fg:x="29160" fg:w="4"/><text x="100.0515%" y="7839.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.01%)</title><rect x="99.8015%" y="7813" width="0.0137%" height="15" fill="rgb(228,45,11)" fg:x="29160" fg:w="4"/><text x="100.0515%" y="7823.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.01%)</title><rect x="99.8015%" y="7797" width="0.0137%" height="15" fill="rgb(237,182,11)" fg:x="29160" fg:w="4"/><text x="100.0515%" y="7807.50"></text></g><g><title>tetrs::logic::game::is_connected (12 samples, 0.04%)</title><rect x="99.7810%" y="7861" width="0.0411%" height="15" fill="rgb(241,175,49)" fg:x="29154" fg:w="12"/><text x="100.0310%" y="7871.50"></text></g><g><title>tetrs::logic::game::gravity (4 samples, 0.01%)</title><rect x="99.8323%" y="7845" width="0.0137%" height="15" fill="rgb(247,38,35)" fg:x="29169" fg:w="4"/><text x="100.0823%" y="7855.50"></text></g><g><title>tetrs::logic::game::update (9 samples, 0.03%)</title><rect x="99.8220%" y="7861" width="0.0308%" height="15" fill="rgb(228,39,49)" fg:x="29166" fg:w="9"/><text x="100.0720%" y="7871.50"></text></g><g><title>tetrs::logic::game::update (66 samples, 0.23%)</title><rect x="99.6577%" y="7877" width="0.2259%" height="15" fill="rgb(226,101,26)" fg:x="29118" fg:w="66"/><text x="99.9077%" y="7887.50"></text></g><g><title>tetrs::logic::id_manager::IdManager::next_unique_id (9 samples, 0.03%)</title><rect x="99.8528%" y="7861" width="0.0308%" height="15" fill="rgb(206,141,19)" fg:x="29175" fg:w="9"/><text x="100.1028%" y="7871.50"></text></g><g><title>tetrs::logic::game::update (188 samples, 0.64%)</title><rect x="99.3018%" y="7893" width="0.6434%" height="15" fill="rgb(211,200,13)" fg:x="29014" fg:w="188"/><text x="99.5518%" y="7903.50"></text></g><g><title>tetrs::logic::id_manager::IdManager::next_unique_id (18 samples, 0.06%)</title><rect x="99.8836%" y="7877" width="0.0616%" height="15" fill="rgb(241,121,6)" fg:x="29184" fg:w="18"/><text x="100.1336%" y="7887.50"></text></g><g><title>_start (29,198 samples, 99.93%)</title><rect x="0.0274%" y="8181" width="99.9315%" height="15" fill="rgb(234,221,29)" fg:x="8" fg:w="29198"/><text x="0.2774%" y="8191.50">_start</text></g><g><title>__libc_start_main (29,198 samples, 99.93%)</title><rect x="0.0274%" y="8165" width="99.9315%" height="15" fill="rgb(229,136,5)" fg:x="8" fg:w="29198"/><text x="0.2774%" y="8175.50">__libc_start_main</text></g><g><title>[libc.so.6] (29,198 samples, 99.93%)</title><rect x="0.0274%" y="8149" width="99.9315%" height="15" fill="rgb(238,36,11)" fg:x="8" fg:w="29198"/><text x="0.2774%" y="8159.50">[libc.so.6]</text></g><g><title>main (29,198 samples, 99.93%)</title><rect x="0.0274%" y="8133" width="99.9315%" height="15" fill="rgb(251,55,41)" fg:x="8" fg:w="29198"/><text x="0.2774%" y="8143.50">main</text></g><g><title>std::rt::lang_start_internal (29,198 samples, 99.93%)</title><rect x="0.0274%" y="8117" width="99.9315%" height="15" fill="rgb(242,34,40)" fg:x="8" fg:w="29198"/><text x="0.2774%" y="8127.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (29,198 samples, 99.93%)</title><rect x="0.0274%" y="8101" width="99.9315%" height="15" fill="rgb(215,42,17)" fg:x="8" fg:w="29198"/><text x="0.2774%" y="8111.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (29,198 samples, 99.93%)</title><rect x="0.0274%" y="8085" width="99.9315%" height="15" fill="rgb(207,44,46)" fg:x="8" fg:w="29198"/><text x="0.2774%" y="8095.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (29,198 samples, 99.93%)</title><rect x="0.0274%" y="8069" width="99.9315%" height="15" fill="rgb(211,206,28)" fg:x="8" fg:w="29198"/><text x="0.2774%" y="8079.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (29,198 samples, 99.93%)</title><rect x="0.0274%" y="8053" width="99.9315%" height="15" fill="rgb(237,167,16)" fg:x="8" fg:w="29198"/><text x="0.2774%" y="8063.50">std::rt::lang_start_internal::_{{closure}}</text></g><g><title>std::panic::catch_unwind (29,198 samples, 99.93%)</title><rect x="0.0274%" y="8037" width="99.9315%" height="15" fill="rgb(233,66,6)" fg:x="8" fg:w="29198"/><text x="0.2774%" y="8047.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (29,198 samples, 99.93%)</title><rect x="0.0274%" y="8021" width="99.9315%" height="15" fill="rgb(246,123,29)" fg:x="8" fg:w="29198"/><text x="0.2774%" y="8031.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (29,198 samples, 99.93%)</title><rect x="0.0274%" y="8005" width="99.9315%" height="15" fill="rgb(209,62,40)" fg:x="8" fg:w="29198"/><text x="0.2774%" y="8015.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (29,198 samples, 99.93%)</title><rect x="0.0274%" y="7989" width="99.9315%" height="15" fill="rgb(218,4,25)" fg:x="8" fg:w="29198"/><text x="0.2774%" y="7999.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::_{{closure}} (29,198 samples, 99.93%)</title><rect x="0.0274%" y="7973" width="99.9315%" height="15" fill="rgb(253,91,49)" fg:x="8" fg:w="29198"/><text x="0.2774%" y="7983.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (29,198 samples, 99.93%)</title><rect x="0.0274%" y="7957" width="99.9315%" height="15" fill="rgb(228,155,29)" fg:x="8" fg:w="29198"/><text x="0.2774%" y="7967.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (29,198 samples, 99.93%)</title><rect x="0.0274%" y="7941" width="99.9315%" height="15" fill="rgb(243,57,37)" fg:x="8" fg:w="29198"/><text x="0.2774%" y="7951.50">core::ops::function::FnOnce::call_once</text></g><g><title>tetrs::main (29,198 samples, 99.93%)</title><rect x="0.0274%" y="7925" width="99.9315%" height="15" fill="rgb(244,167,17)" fg:x="8" fg:w="29198"/><text x="0.2774%" y="7935.50">tetrs::main</text></g><g><title>tetrs::app::App::test_bot (29,198 samples, 99.93%)</title><rect x="0.0274%" y="7909" width="99.9315%" height="15" fill="rgb(207,181,38)" fg:x="8" fg:w="29198"/><text x="0.2774%" y="7919.50">tetrs::app::App::test_bot</text></g><g><title>tetrs::logic::next_shapes::NextShapes::get_next_stack (4 samples, 0.01%)</title><rect x="99.9452%" y="7893" width="0.0137%" height="15" fill="rgb(211,8,23)" fg:x="29202" fg:w="4"/><text x="100.1952%" y="7903.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (3 samples, 0.01%)</title><rect x="99.9624%" y="229" width="0.0103%" height="15" fill="rgb(235,11,44)" fg:x="29207" fg:w="3"/><text x="100.2124%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="99.9624%" y="213" width="0.0103%" height="15" fill="rgb(248,18,52)" fg:x="29207" fg:w="3"/><text x="100.2124%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u16&gt;]&gt; (3 samples, 0.01%)</title><rect x="99.9624%" y="197" width="0.0103%" height="15" fill="rgb(208,4,7)" fg:x="29207" fg:w="3"/><text x="100.2124%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u16&gt;&gt; (3 samples, 0.01%)</title><rect x="99.9624%" y="181" width="0.0103%" height="15" fill="rgb(240,17,39)" fg:x="29207" fg:w="3"/><text x="100.2124%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u16&gt;&gt; (3 samples, 0.01%)</title><rect x="99.9624%" y="165" width="0.0103%" height="15" fill="rgb(207,170,3)" fg:x="29207" fg:w="3"/><text x="100.2124%" y="175.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="99.9624%" y="149" width="0.0103%" height="15" fill="rgb(236,100,52)" fg:x="29207" fg:w="3"/><text x="100.2124%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.01%)</title><rect x="99.9624%" y="133" width="0.0103%" height="15" fill="rgb(246,78,51)" fg:x="29207" fg:w="3"/><text x="100.2124%" y="143.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.01%)</title><rect x="99.9624%" y="117" width="0.0103%" height="15" fill="rgb(211,17,15)" fg:x="29207" fg:w="3"/><text x="100.2124%" y="127.50"></text></g><g><title>cfree (3 samples, 0.01%)</title><rect x="99.9624%" y="101" width="0.0103%" height="15" fill="rgb(209,59,46)" fg:x="29207" fg:w="3"/><text x="100.2124%" y="111.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="99.9624%" y="85" width="0.0103%" height="15" fill="rgb(210,92,25)" fg:x="29207" fg:w="3"/><text x="100.2124%" y="95.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="99.9726%" y="149" width="0.0103%" height="15" fill="rgb(238,174,52)" fg:x="29210" fg:w="3"/><text x="100.2226%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u16&gt;]&gt; (3 samples, 0.01%)</title><rect x="99.9726%" y="133" width="0.0103%" height="15" fill="rgb(230,73,7)" fg:x="29210" fg:w="3"/><text x="100.2226%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u16&gt;&gt; (3 samples, 0.01%)</title><rect x="99.9726%" y="117" width="0.0103%" height="15" fill="rgb(243,124,40)" fg:x="29210" fg:w="3"/><text x="100.2226%" y="127.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u16&gt;&gt; (3 samples, 0.01%)</title><rect x="99.9726%" y="101" width="0.0103%" height="15" fill="rgb(244,170,11)" fg:x="29210" fg:w="3"/><text x="100.2226%" y="111.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="99.9726%" y="85" width="0.0103%" height="15" fill="rgb(207,114,54)" fg:x="29210" fg:w="3"/><text x="100.2226%" y="95.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.01%)</title><rect x="99.9726%" y="69" width="0.0103%" height="15" fill="rgb(205,42,20)" fg:x="29210" fg:w="3"/><text x="100.2226%" y="79.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.01%)</title><rect x="99.9726%" y="53" width="0.0103%" height="15" fill="rgb(230,30,28)" fg:x="29210" fg:w="3"/><text x="100.2226%" y="63.50"></text></g><g><title>cfree (3 samples, 0.01%)</title><rect x="99.9726%" y="37" width="0.0103%" height="15" fill="rgb(205,73,54)" fg:x="29210" fg:w="3"/><text x="100.2226%" y="47.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (5 samples, 0.02%)</title><rect x="99.9726%" y="165" width="0.0171%" height="15" fill="rgb(254,227,23)" fg:x="29210" fg:w="5"/><text x="100.2226%" y="175.50"></text></g><g><title>all (29,218 samples, 100%)</title><rect x="0.0000%" y="8213" width="100.0000%" height="15" fill="rgb(228,202,34)" fg:x="0" fg:w="29218"/><text x="0.2500%" y="8223.50"></text></g><g><title>tetrs (29,218 samples, 100.00%)</title><rect x="0.0000%" y="8197" width="100.0000%" height="15" fill="rgb(222,225,37)" fg:x="0" fg:w="29218"/><text x="0.2500%" y="8207.50">tetrs</text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="8181" width="0.0411%" height="15" fill="rgb(221,14,54)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="8191.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="8165" width="0.0411%" height="15" fill="rgb(254,102,2)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="8175.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="8149" width="0.0411%" height="15" fill="rgb(232,104,17)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="8159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="8133" width="0.0411%" height="15" fill="rgb(250,220,14)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="8143.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="8117" width="0.0411%" height="15" fill="rgb(241,158,9)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="8127.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="8101" width="0.0411%" height="15" fill="rgb(246,9,43)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="8111.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="8085" width="0.0411%" height="15" fill="rgb(206,73,33)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="8095.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="8069" width="0.0411%" height="15" fill="rgb(222,79,8)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="8079.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="8053" width="0.0411%" height="15" fill="rgb(234,8,54)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="8063.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="8037" width="0.0411%" height="15" fill="rgb(209,134,38)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="8047.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="8021" width="0.0411%" height="15" fill="rgb(230,127,29)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="8031.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="8005" width="0.0411%" height="15" fill="rgb(242,44,41)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="8015.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="7989" width="0.0411%" height="15" fill="rgb(222,56,43)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="7999.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="7973" width="0.0411%" height="15" fill="rgb(238,39,47)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="7983.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="7957" width="0.0411%" height="15" fill="rgb(226,79,43)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="7967.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="7941" width="0.0411%" height="15" fill="rgb(242,105,53)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="7951.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="7925" width="0.0411%" height="15" fill="rgb(251,132,46)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="7935.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="7909" width="0.0411%" height="15" fill="rgb(231,77,14)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="7919.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="7893" width="0.0411%" height="15" fill="rgb(240,135,9)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="7903.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="7877" width="0.0411%" height="15" fill="rgb(248,109,14)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="7887.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="7861" width="0.0411%" height="15" fill="rgb(227,146,52)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="7871.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="7845" width="0.0411%" height="15" fill="rgb(232,54,3)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="7855.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="7829" width="0.0411%" height="15" fill="rgb(229,201,43)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="7839.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="7813" width="0.0411%" height="15" fill="rgb(252,161,33)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="7823.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="7797" width="0.0411%" height="15" fill="rgb(226,146,40)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="7807.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="7781" width="0.0411%" height="15" fill="rgb(219,47,25)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="7791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="7765" width="0.0411%" height="15" fill="rgb(250,135,13)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="7775.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="7749" width="0.0411%" height="15" fill="rgb(219,229,18)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="7759.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="7733" width="0.0411%" height="15" fill="rgb(217,152,27)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="7743.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="7717" width="0.0411%" height="15" fill="rgb(225,71,47)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="7727.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="7701" width="0.0411%" height="15" fill="rgb(220,139,14)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="7711.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="7685" width="0.0411%" height="15" fill="rgb(247,54,32)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="7695.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="7669" width="0.0411%" height="15" fill="rgb(252,131,39)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="7679.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="7653" width="0.0411%" height="15" fill="rgb(210,108,39)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="7663.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="7637" width="0.0411%" height="15" fill="rgb(205,23,29)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="7647.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="7621" width="0.0411%" height="15" fill="rgb(246,139,46)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="7631.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="7605" width="0.0411%" height="15" fill="rgb(250,81,26)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="7615.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="7589" width="0.0411%" height="15" fill="rgb(214,104,7)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="7599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="7573" width="0.0411%" height="15" fill="rgb(233,189,8)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="7583.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="7557" width="0.0411%" height="15" fill="rgb(228,141,17)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="7567.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="7541" width="0.0411%" height="15" fill="rgb(247,157,1)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="7551.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="7525" width="0.0411%" height="15" fill="rgb(249,225,5)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="7535.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="7509" width="0.0411%" height="15" fill="rgb(242,55,13)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="7519.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="7493" width="0.0411%" height="15" fill="rgb(230,49,50)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="7503.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="7477" width="0.0411%" height="15" fill="rgb(241,111,38)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="7487.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="7461" width="0.0411%" height="15" fill="rgb(252,155,4)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="7471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="7445" width="0.0411%" height="15" fill="rgb(212,69,32)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="7455.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="7429" width="0.0411%" height="15" fill="rgb(243,107,47)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="7439.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="7413" width="0.0411%" height="15" fill="rgb(247,130,12)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="7423.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="7397" width="0.0411%" height="15" fill="rgb(233,74,16)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="7407.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="7381" width="0.0411%" height="15" fill="rgb(208,58,18)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="7391.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="7365" width="0.0411%" height="15" fill="rgb(242,225,1)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="7375.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="7349" width="0.0411%" height="15" fill="rgb(249,39,40)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="7359.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="7333" width="0.0411%" height="15" fill="rgb(207,72,44)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="7343.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="7317" width="0.0411%" height="15" fill="rgb(215,193,12)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="7327.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="7301" width="0.0411%" height="15" fill="rgb(248,41,39)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="7311.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="7285" width="0.0411%" height="15" fill="rgb(253,85,4)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="7295.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="7269" width="0.0411%" height="15" fill="rgb(243,70,31)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="7279.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="7253" width="0.0411%" height="15" fill="rgb(253,195,26)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="7263.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="7237" width="0.0411%" height="15" fill="rgb(243,42,11)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="7247.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="7221" width="0.0411%" height="15" fill="rgb(239,66,17)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="7231.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="7205" width="0.0411%" height="15" fill="rgb(217,132,21)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="7215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="7189" width="0.0411%" height="15" fill="rgb(252,202,21)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="7199.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="7173" width="0.0411%" height="15" fill="rgb(233,98,36)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="7183.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="7157" width="0.0411%" height="15" fill="rgb(216,153,54)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="7167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="7141" width="0.0411%" height="15" fill="rgb(250,99,7)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="7151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="7125" width="0.0411%" height="15" fill="rgb(207,56,50)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="7135.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="7109" width="0.0411%" height="15" fill="rgb(244,61,34)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="7119.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="7093" width="0.0411%" height="15" fill="rgb(241,50,38)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="7103.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="7077" width="0.0411%" height="15" fill="rgb(212,166,30)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="7087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="7061" width="0.0411%" height="15" fill="rgb(249,127,32)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="7071.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="7045" width="0.0411%" height="15" fill="rgb(209,103,0)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="7055.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="7029" width="0.0411%" height="15" fill="rgb(238,209,51)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="7039.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="7013" width="0.0411%" height="15" fill="rgb(237,56,23)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="7023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="6997" width="0.0411%" height="15" fill="rgb(215,153,46)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="7007.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="6981" width="0.0411%" height="15" fill="rgb(224,49,31)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="6991.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="6965" width="0.0411%" height="15" fill="rgb(250,18,42)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="6975.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="6949" width="0.0411%" height="15" fill="rgb(215,176,39)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="6959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="6933" width="0.0411%" height="15" fill="rgb(223,77,29)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="6943.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="6917" width="0.0411%" height="15" fill="rgb(234,94,52)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="6927.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="6901" width="0.0411%" height="15" fill="rgb(220,154,50)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="6911.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="6885" width="0.0411%" height="15" fill="rgb(212,11,10)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="6895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="6869" width="0.0411%" height="15" fill="rgb(205,166,19)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="6879.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="6853" width="0.0411%" height="15" fill="rgb(244,198,16)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="6863.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="6837" width="0.0411%" height="15" fill="rgb(219,69,12)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="6847.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="6821" width="0.0411%" height="15" fill="rgb(245,30,7)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="6831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="6805" width="0.0411%" height="15" fill="rgb(218,221,48)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="6815.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="6789" width="0.0411%" height="15" fill="rgb(216,66,15)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="6799.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="6773" width="0.0411%" height="15" fill="rgb(226,122,50)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="6783.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="6757" width="0.0411%" height="15" fill="rgb(239,156,16)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="6767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="6741" width="0.0411%" height="15" fill="rgb(224,27,38)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="6751.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="6725" width="0.0411%" height="15" fill="rgb(224,39,27)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="6735.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="6709" width="0.0411%" height="15" fill="rgb(215,92,29)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="6719.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="6693" width="0.0411%" height="15" fill="rgb(207,159,16)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="6703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="6677" width="0.0411%" height="15" fill="rgb(238,163,47)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="6687.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="6661" width="0.0411%" height="15" fill="rgb(219,91,49)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="6671.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="6645" width="0.0411%" height="15" fill="rgb(227,167,31)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="6655.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="6629" width="0.0411%" height="15" fill="rgb(234,80,54)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="6639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="6613" width="0.0411%" height="15" fill="rgb(212,114,2)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="6623.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="6597" width="0.0411%" height="15" fill="rgb(234,50,24)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="6607.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="6581" width="0.0411%" height="15" fill="rgb(221,68,8)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="6591.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="6565" width="0.0411%" height="15" fill="rgb(254,180,31)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="6575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="6549" width="0.0411%" height="15" fill="rgb(247,130,50)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="6559.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="6533" width="0.0411%" height="15" fill="rgb(211,109,4)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="6543.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="6517" width="0.0411%" height="15" fill="rgb(238,50,21)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="6527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="6501" width="0.0411%" height="15" fill="rgb(225,57,45)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="6511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="6485" width="0.0411%" height="15" fill="rgb(209,196,50)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="6495.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="6469" width="0.0411%" height="15" fill="rgb(242,140,13)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="6479.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="6453" width="0.0411%" height="15" fill="rgb(217,111,7)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="6463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="6437" width="0.0411%" height="15" fill="rgb(253,193,51)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="6447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="6421" width="0.0411%" height="15" fill="rgb(252,70,29)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="6431.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="6405" width="0.0411%" height="15" fill="rgb(232,127,12)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="6415.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="6389" width="0.0411%" height="15" fill="rgb(211,180,21)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="6399.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="6373" width="0.0411%" height="15" fill="rgb(229,72,13)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="6383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="6357" width="0.0411%" height="15" fill="rgb(240,211,49)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="6367.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="6341" width="0.0411%" height="15" fill="rgb(219,149,40)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="6351.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="6325" width="0.0411%" height="15" fill="rgb(210,127,46)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="6335.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="6309" width="0.0411%" height="15" fill="rgb(220,106,7)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="6319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="6293" width="0.0411%" height="15" fill="rgb(249,31,22)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="6303.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="6277" width="0.0411%" height="15" fill="rgb(253,1,49)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="6287.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="6261" width="0.0411%" height="15" fill="rgb(227,144,33)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="6271.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="6245" width="0.0411%" height="15" fill="rgb(249,163,44)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="6255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="6229" width="0.0411%" height="15" fill="rgb(234,15,39)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="6239.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="6213" width="0.0411%" height="15" fill="rgb(207,66,16)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="6223.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="6197" width="0.0411%" height="15" fill="rgb(233,112,24)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="6207.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="6181" width="0.0411%" height="15" fill="rgb(230,90,22)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="6191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="6165" width="0.0411%" height="15" fill="rgb(229,61,13)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="6175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="6149" width="0.0411%" height="15" fill="rgb(225,57,24)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="6159.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="6133" width="0.0411%" height="15" fill="rgb(208,169,48)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="6143.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="6117" width="0.0411%" height="15" fill="rgb(244,218,51)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="6127.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="6101" width="0.0411%" height="15" fill="rgb(214,148,10)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="6111.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="6085" width="0.0411%" height="15" fill="rgb(225,174,27)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="6095.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="6069" width="0.0411%" height="15" fill="rgb(230,96,26)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="6079.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="6053" width="0.0411%" height="15" fill="rgb(232,10,30)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="6063.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="6037" width="0.0411%" height="15" fill="rgb(222,8,50)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="6047.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="6021" width="0.0411%" height="15" fill="rgb(213,81,27)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="6031.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="6005" width="0.0411%" height="15" fill="rgb(245,50,10)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="6015.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="5989" width="0.0411%" height="15" fill="rgb(216,100,18)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="5999.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="5973" width="0.0411%" height="15" fill="rgb(236,147,54)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="5983.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="5957" width="0.0411%" height="15" fill="rgb(205,143,26)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="5967.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="5941" width="0.0411%" height="15" fill="rgb(236,26,9)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="5951.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="5925" width="0.0411%" height="15" fill="rgb(221,165,53)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="5935.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="5909" width="0.0411%" height="15" fill="rgb(214,110,17)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="5919.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="5893" width="0.0411%" height="15" fill="rgb(237,197,12)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="5903.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="5877" width="0.0411%" height="15" fill="rgb(205,84,17)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="5887.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="5861" width="0.0411%" height="15" fill="rgb(237,18,45)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="5871.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="5845" width="0.0411%" height="15" fill="rgb(221,87,14)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="5855.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="5829" width="0.0411%" height="15" fill="rgb(238,186,15)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="5839.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="5813" width="0.0411%" height="15" fill="rgb(208,115,11)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="5823.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="5797" width="0.0411%" height="15" fill="rgb(254,175,0)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="5807.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="5781" width="0.0411%" height="15" fill="rgb(227,24,42)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="5791.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="5765" width="0.0411%" height="15" fill="rgb(223,211,37)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="5775.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="5749" width="0.0411%" height="15" fill="rgb(235,49,27)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="5759.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="5733" width="0.0411%" height="15" fill="rgb(254,97,51)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="5743.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="5717" width="0.0411%" height="15" fill="rgb(249,51,40)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="5727.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="5701" width="0.0411%" height="15" fill="rgb(210,128,45)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="5711.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="5685" width="0.0411%" height="15" fill="rgb(224,137,50)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="5695.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="5669" width="0.0411%" height="15" fill="rgb(242,15,9)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="5679.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="5653" width="0.0411%" height="15" fill="rgb(233,187,41)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="5663.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="5637" width="0.0411%" height="15" fill="rgb(227,2,29)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="5647.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="5621" width="0.0411%" height="15" fill="rgb(222,70,3)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="5631.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="5605" width="0.0411%" height="15" fill="rgb(213,11,42)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="5615.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="5589" width="0.0411%" height="15" fill="rgb(225,150,9)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="5599.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="5573" width="0.0411%" height="15" fill="rgb(230,162,45)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="5583.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="5557" width="0.0411%" height="15" fill="rgb(222,14,52)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="5567.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="5541" width="0.0411%" height="15" fill="rgb(254,198,14)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="5551.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="5525" width="0.0411%" height="15" fill="rgb(220,217,30)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="5535.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="5509" width="0.0411%" height="15" fill="rgb(215,146,41)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="5519.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="5493" width="0.0411%" height="15" fill="rgb(217,27,36)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="5503.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="5477" width="0.0411%" height="15" fill="rgb(219,218,39)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="5487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="5461" width="0.0411%" height="15" fill="rgb(219,4,42)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="5471.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="5445" width="0.0411%" height="15" fill="rgb(249,119,36)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="5455.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="5429" width="0.0411%" height="15" fill="rgb(209,23,33)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="5439.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="5413" width="0.0411%" height="15" fill="rgb(211,10,0)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="5423.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="5397" width="0.0411%" height="15" fill="rgb(208,99,37)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="5407.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="5381" width="0.0411%" height="15" fill="rgb(213,132,31)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="5391.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="5365" width="0.0411%" height="15" fill="rgb(243,129,40)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="5375.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="5349" width="0.0411%" height="15" fill="rgb(210,66,33)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="5359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="5333" width="0.0411%" height="15" fill="rgb(209,189,4)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="5343.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="5317" width="0.0411%" height="15" fill="rgb(214,107,37)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="5327.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="5301" width="0.0411%" height="15" fill="rgb(245,88,54)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="5311.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="5285" width="0.0411%" height="15" fill="rgb(205,146,20)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="5295.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="5269" width="0.0411%" height="15" fill="rgb(220,161,25)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="5279.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="5253" width="0.0411%" height="15" fill="rgb(215,152,15)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="5263.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="5237" width="0.0411%" height="15" fill="rgb(233,192,44)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="5247.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="5221" width="0.0411%" height="15" fill="rgb(240,170,46)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="5231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="5205" width="0.0411%" height="15" fill="rgb(207,104,33)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="5215.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="5189" width="0.0411%" height="15" fill="rgb(219,21,39)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="5199.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="5173" width="0.0411%" height="15" fill="rgb(214,133,29)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="5183.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="5157" width="0.0411%" height="15" fill="rgb(226,93,6)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="5167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="5141" width="0.0411%" height="15" fill="rgb(252,222,34)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="5151.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="5125" width="0.0411%" height="15" fill="rgb(252,92,48)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="5135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="5109" width="0.0411%" height="15" fill="rgb(245,223,24)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="5119.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="5093" width="0.0411%" height="15" fill="rgb(205,176,3)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="5103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="5077" width="0.0411%" height="15" fill="rgb(235,151,15)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="5087.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="5061" width="0.0411%" height="15" fill="rgb(237,209,11)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="5071.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="5045" width="0.0411%" height="15" fill="rgb(243,227,24)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="5055.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="5029" width="0.0411%" height="15" fill="rgb(239,193,16)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="5039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="5013" width="0.0411%" height="15" fill="rgb(231,27,9)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="5023.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="4997" width="0.0411%" height="15" fill="rgb(219,169,10)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="5007.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="4981" width="0.0411%" height="15" fill="rgb(244,229,43)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="4991.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="4965" width="0.0411%" height="15" fill="rgb(254,38,20)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="4975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="4949" width="0.0411%" height="15" fill="rgb(250,47,30)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="4959.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="4933" width="0.0411%" height="15" fill="rgb(224,124,36)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="4943.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="4917" width="0.0411%" height="15" fill="rgb(246,68,51)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="4927.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="4901" width="0.0411%" height="15" fill="rgb(253,43,49)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="4911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="4885" width="0.0411%" height="15" fill="rgb(219,54,36)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="4895.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="4869" width="0.0411%" height="15" fill="rgb(227,133,34)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="4879.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="4853" width="0.0411%" height="15" fill="rgb(247,227,15)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="4863.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="4837" width="0.0411%" height="15" fill="rgb(229,96,14)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="4847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="4821" width="0.0411%" height="15" fill="rgb(220,79,17)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="4831.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="4805" width="0.0411%" height="15" fill="rgb(205,131,53)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="4815.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="4789" width="0.0411%" height="15" fill="rgb(209,50,29)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="4799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="4773" width="0.0411%" height="15" fill="rgb(245,86,46)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="4783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="4757" width="0.0411%" height="15" fill="rgb(235,66,46)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="4767.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="4741" width="0.0411%" height="15" fill="rgb(232,148,31)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="4751.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="4725" width="0.0411%" height="15" fill="rgb(217,149,8)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="4735.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="4709" width="0.0411%" height="15" fill="rgb(209,183,11)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="4719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="4693" width="0.0411%" height="15" fill="rgb(208,55,20)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="4703.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="4677" width="0.0411%" height="15" fill="rgb(218,39,14)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="4687.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="4661" width="0.0411%" height="15" fill="rgb(216,169,33)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="4671.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="4645" width="0.0411%" height="15" fill="rgb(233,80,24)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="4655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="4629" width="0.0411%" height="15" fill="rgb(213,179,31)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="4639.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="4613" width="0.0411%" height="15" fill="rgb(209,19,5)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="4623.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="4597" width="0.0411%" height="15" fill="rgb(219,18,35)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="4607.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="4581" width="0.0411%" height="15" fill="rgb(209,169,16)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="4591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="4565" width="0.0411%" height="15" fill="rgb(245,90,51)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="4575.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="4549" width="0.0411%" height="15" fill="rgb(220,99,45)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="4559.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="4533" width="0.0411%" height="15" fill="rgb(249,89,25)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="4543.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="4517" width="0.0411%" height="15" fill="rgb(239,193,0)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="4527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="4501" width="0.0411%" height="15" fill="rgb(231,126,1)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="4511.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="4485" width="0.0411%" height="15" fill="rgb(243,166,3)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="4495.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="4469" width="0.0411%" height="15" fill="rgb(223,22,34)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="4479.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="4453" width="0.0411%" height="15" fill="rgb(251,52,51)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="4463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="4437" width="0.0411%" height="15" fill="rgb(221,165,28)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="4447.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="4421" width="0.0411%" height="15" fill="rgb(218,121,47)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="4431.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="4405" width="0.0411%" height="15" fill="rgb(209,120,9)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="4415.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="4389" width="0.0411%" height="15" fill="rgb(236,68,12)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="4399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="4373" width="0.0411%" height="15" fill="rgb(225,194,26)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="4383.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="4357" width="0.0411%" height="15" fill="rgb(231,84,39)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="4367.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="4341" width="0.0411%" height="15" fill="rgb(210,11,45)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="4351.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="4325" width="0.0411%" height="15" fill="rgb(224,54,52)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="4335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="4309" width="0.0411%" height="15" fill="rgb(238,102,14)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="4319.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="4293" width="0.0411%" height="15" fill="rgb(243,160,52)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="4303.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="4277" width="0.0411%" height="15" fill="rgb(216,114,19)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="4287.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="4261" width="0.0411%" height="15" fill="rgb(244,166,37)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="4271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="4245" width="0.0411%" height="15" fill="rgb(246,29,44)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="4255.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="4229" width="0.0411%" height="15" fill="rgb(215,56,53)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="4239.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="4213" width="0.0411%" height="15" fill="rgb(217,60,2)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="4223.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="4197" width="0.0411%" height="15" fill="rgb(207,26,24)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="4207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="4181" width="0.0411%" height="15" fill="rgb(252,210,15)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="4191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="4165" width="0.0411%" height="15" fill="rgb(253,209,26)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="4175.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="4149" width="0.0411%" height="15" fill="rgb(238,170,14)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="4159.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="4133" width="0.0411%" height="15" fill="rgb(216,178,15)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="4143.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="4117" width="0.0411%" height="15" fill="rgb(250,197,2)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="4127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="4101" width="0.0411%" height="15" fill="rgb(212,70,42)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="4111.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="4085" width="0.0411%" height="15" fill="rgb(227,213,9)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="4095.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="4069" width="0.0411%" height="15" fill="rgb(245,99,25)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="4079.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="4053" width="0.0411%" height="15" fill="rgb(250,82,29)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="4063.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="4037" width="0.0411%" height="15" fill="rgb(241,226,54)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="4047.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="4021" width="0.0411%" height="15" fill="rgb(221,99,41)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="4031.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="4005" width="0.0411%" height="15" fill="rgb(213,90,21)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="4015.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="3989" width="0.0411%" height="15" fill="rgb(205,208,24)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="3999.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="3973" width="0.0411%" height="15" fill="rgb(246,31,12)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="3983.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="3957" width="0.0411%" height="15" fill="rgb(213,154,6)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="3967.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="3941" width="0.0411%" height="15" fill="rgb(222,163,29)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="3951.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="3925" width="0.0411%" height="15" fill="rgb(227,201,8)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="3935.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="3909" width="0.0411%" height="15" fill="rgb(233,9,32)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="3919.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="3893" width="0.0411%" height="15" fill="rgb(217,54,24)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="3903.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="3877" width="0.0411%" height="15" fill="rgb(235,192,0)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="3887.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="3861" width="0.0411%" height="15" fill="rgb(235,45,9)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="3871.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="3845" width="0.0411%" height="15" fill="rgb(246,42,40)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="3855.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="3829" width="0.0411%" height="15" fill="rgb(248,111,24)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="3839.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="3813" width="0.0411%" height="15" fill="rgb(249,65,22)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="3823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="3797" width="0.0411%" height="15" fill="rgb(238,111,51)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="3807.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="3781" width="0.0411%" height="15" fill="rgb(250,118,22)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="3791.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="3765" width="0.0411%" height="15" fill="rgb(234,84,26)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="3775.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="3749" width="0.0411%" height="15" fill="rgb(243,172,12)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="3759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="3733" width="0.0411%" height="15" fill="rgb(236,150,49)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="3743.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="3717" width="0.0411%" height="15" fill="rgb(225,197,26)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="3727.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="3701" width="0.0411%" height="15" fill="rgb(214,17,42)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="3711.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="3685" width="0.0411%" height="15" fill="rgb(224,165,40)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="3695.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="3669" width="0.0411%" height="15" fill="rgb(246,100,4)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="3679.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="3653" width="0.0411%" height="15" fill="rgb(222,103,0)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="3663.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="3637" width="0.0411%" height="15" fill="rgb(227,189,26)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="3647.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="3621" width="0.0411%" height="15" fill="rgb(214,202,17)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="3631.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="3605" width="0.0411%" height="15" fill="rgb(229,111,3)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="3615.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="3589" width="0.0411%" height="15" fill="rgb(229,172,15)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="3599.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="3573" width="0.0411%" height="15" fill="rgb(230,224,35)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="3583.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="3557" width="0.0411%" height="15" fill="rgb(251,141,6)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="3567.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="3541" width="0.0411%" height="15" fill="rgb(225,208,6)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="3551.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="3525" width="0.0411%" height="15" fill="rgb(246,181,16)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="3535.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="3509" width="0.0411%" height="15" fill="rgb(227,129,36)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="3519.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="3493" width="0.0411%" height="15" fill="rgb(248,117,24)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="3503.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="3477" width="0.0411%" height="15" fill="rgb(214,185,35)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="3487.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="3461" width="0.0411%" height="15" fill="rgb(236,150,34)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="3471.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="3445" width="0.0411%" height="15" fill="rgb(243,228,27)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="3455.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="3429" width="0.0411%" height="15" fill="rgb(245,77,44)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="3439.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="3413" width="0.0411%" height="15" fill="rgb(235,214,42)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="3423.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="3397" width="0.0411%" height="15" fill="rgb(221,74,3)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="3407.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="3381" width="0.0411%" height="15" fill="rgb(206,121,29)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="3391.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="3365" width="0.0411%" height="15" fill="rgb(249,131,53)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="3375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="3349" width="0.0411%" height="15" fill="rgb(236,170,29)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="3359.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="3333" width="0.0411%" height="15" fill="rgb(247,96,15)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="3343.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="3317" width="0.0411%" height="15" fill="rgb(211,210,7)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="3327.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="3301" width="0.0411%" height="15" fill="rgb(240,88,50)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="3311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="3285" width="0.0411%" height="15" fill="rgb(209,229,26)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="3295.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="3269" width="0.0411%" height="15" fill="rgb(210,68,23)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="3279.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="3253" width="0.0411%" height="15" fill="rgb(229,180,13)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="3263.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="3237" width="0.0411%" height="15" fill="rgb(236,53,44)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="3247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="3221" width="0.0411%" height="15" fill="rgb(244,214,29)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="3231.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="3205" width="0.0411%" height="15" fill="rgb(220,75,29)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="3215.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="3189" width="0.0411%" height="15" fill="rgb(214,183,37)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="3199.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="3173" width="0.0411%" height="15" fill="rgb(239,117,29)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="3183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="3157" width="0.0411%" height="15" fill="rgb(237,171,35)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="3167.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="3141" width="0.0411%" height="15" fill="rgb(229,178,53)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="3151.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="3125" width="0.0411%" height="15" fill="rgb(210,102,19)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="3135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="3109" width="0.0411%" height="15" fill="rgb(235,127,22)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="3119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="3093" width="0.0411%" height="15" fill="rgb(244,31,31)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="3103.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="3077" width="0.0411%" height="15" fill="rgb(231,43,21)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="3087.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="3061" width="0.0411%" height="15" fill="rgb(217,131,35)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="3071.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="3045" width="0.0411%" height="15" fill="rgb(221,149,4)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="3055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="3029" width="0.0411%" height="15" fill="rgb(232,170,28)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="3039.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="3013" width="0.0411%" height="15" fill="rgb(238,56,10)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="3023.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="2997" width="0.0411%" height="15" fill="rgb(235,196,14)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="3007.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="2981" width="0.0411%" height="15" fill="rgb(216,45,48)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="2991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="2965" width="0.0411%" height="15" fill="rgb(238,213,17)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="2975.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="2949" width="0.0411%" height="15" fill="rgb(212,13,2)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="2959.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="2933" width="0.0411%" height="15" fill="rgb(240,114,20)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="2943.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="2917" width="0.0411%" height="15" fill="rgb(228,41,40)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="2927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="2901" width="0.0411%" height="15" fill="rgb(244,132,35)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="2911.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="2885" width="0.0411%" height="15" fill="rgb(253,189,4)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="2895.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="2869" width="0.0411%" height="15" fill="rgb(224,37,19)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="2879.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="2853" width="0.0411%" height="15" fill="rgb(235,223,18)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="2863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="2837" width="0.0411%" height="15" fill="rgb(235,163,25)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="2847.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="2821" width="0.0411%" height="15" fill="rgb(217,145,28)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="2831.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="2805" width="0.0411%" height="15" fill="rgb(223,223,32)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="2815.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="2789" width="0.0411%" height="15" fill="rgb(227,189,39)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="2799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="2773" width="0.0411%" height="15" fill="rgb(248,10,22)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="2783.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="2757" width="0.0411%" height="15" fill="rgb(248,46,39)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="2767.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="2741" width="0.0411%" height="15" fill="rgb(248,113,48)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="2751.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="2725" width="0.0411%" height="15" fill="rgb(245,16,25)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="2735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="2709" width="0.0411%" height="15" fill="rgb(249,152,16)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="2719.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="2693" width="0.0411%" height="15" fill="rgb(250,16,1)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="2703.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="2677" width="0.0411%" height="15" fill="rgb(249,138,3)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="2687.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="2661" width="0.0411%" height="15" fill="rgb(227,71,41)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="2671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="2645" width="0.0411%" height="15" fill="rgb(209,184,23)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="2655.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="2629" width="0.0411%" height="15" fill="rgb(223,215,31)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="2639.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="2613" width="0.0411%" height="15" fill="rgb(210,146,28)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="2623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="2597" width="0.0411%" height="15" fill="rgb(209,183,41)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="2607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="2581" width="0.0411%" height="15" fill="rgb(209,224,45)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="2591.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="2565" width="0.0411%" height="15" fill="rgb(224,209,51)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="2575.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="2549" width="0.0411%" height="15" fill="rgb(223,17,39)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="2559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="2533" width="0.0411%" height="15" fill="rgb(234,204,37)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="2543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="2517" width="0.0411%" height="15" fill="rgb(236,120,5)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="2527.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="2501" width="0.0411%" height="15" fill="rgb(248,97,27)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="2511.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="2485" width="0.0411%" height="15" fill="rgb(240,66,17)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="2495.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="2469" width="0.0411%" height="15" fill="rgb(210,79,3)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="2479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="2453" width="0.0411%" height="15" fill="rgb(214,176,27)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="2463.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="2437" width="0.0411%" height="15" fill="rgb(235,185,3)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="2447.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="2421" width="0.0411%" height="15" fill="rgb(227,24,12)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="2431.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="2405" width="0.0411%" height="15" fill="rgb(252,169,48)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="2415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="2389" width="0.0411%" height="15" fill="rgb(212,65,1)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="2399.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="2373" width="0.0411%" height="15" fill="rgb(242,39,24)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="2383.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="2357" width="0.0411%" height="15" fill="rgb(249,32,23)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="2367.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="2341" width="0.0411%" height="15" fill="rgb(251,195,23)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="2351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="2325" width="0.0411%" height="15" fill="rgb(236,174,8)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="2335.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="2309" width="0.0411%" height="15" fill="rgb(220,197,8)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="2319.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="2293" width="0.0411%" height="15" fill="rgb(240,108,37)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="2303.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="2277" width="0.0411%" height="15" fill="rgb(232,176,24)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="2287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="2261" width="0.0411%" height="15" fill="rgb(243,35,29)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="2271.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="2245" width="0.0411%" height="15" fill="rgb(210,37,18)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="2255.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="2229" width="0.0411%" height="15" fill="rgb(224,184,40)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="2239.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="2213" width="0.0411%" height="15" fill="rgb(236,39,29)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="2223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="2197" width="0.0411%" height="15" fill="rgb(232,48,39)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="2207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="2181" width="0.0411%" height="15" fill="rgb(236,34,42)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="2191.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="2165" width="0.0411%" height="15" fill="rgb(243,106,37)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="2175.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="2149" width="0.0411%" height="15" fill="rgb(218,96,6)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="2159.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="2133" width="0.0411%" height="15" fill="rgb(235,130,12)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="2143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="2117" width="0.0411%" height="15" fill="rgb(231,95,0)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="2127.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="2101" width="0.0411%" height="15" fill="rgb(228,12,23)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="2111.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="2085" width="0.0411%" height="15" fill="rgb(216,12,1)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="2095.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="2069" width="0.0411%" height="15" fill="rgb(219,59,3)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="2079.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="2053" width="0.0411%" height="15" fill="rgb(215,208,46)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="2063.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="2037" width="0.0411%" height="15" fill="rgb(254,224,29)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="2047.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="2021" width="0.0411%" height="15" fill="rgb(232,14,29)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="2031.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="2005" width="0.0411%" height="15" fill="rgb(208,45,52)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="2015.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="1989" width="0.0411%" height="15" fill="rgb(234,191,28)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="1999.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="1973" width="0.0411%" height="15" fill="rgb(244,67,43)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="1957" width="0.0411%" height="15" fill="rgb(236,189,24)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="1967.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="1941" width="0.0411%" height="15" fill="rgb(239,214,33)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="1951.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="1925" width="0.0411%" height="15" fill="rgb(226,176,41)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="1935.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="1909" width="0.0411%" height="15" fill="rgb(248,47,8)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="1893" width="0.0411%" height="15" fill="rgb(218,81,44)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="1877" width="0.0411%" height="15" fill="rgb(213,98,6)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="1887.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="1861" width="0.0411%" height="15" fill="rgb(222,85,22)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="1845" width="0.0411%" height="15" fill="rgb(239,46,39)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="1829" width="0.0411%" height="15" fill="rgb(237,12,29)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="1813" width="0.0411%" height="15" fill="rgb(214,77,8)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="1823.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="1797" width="0.0411%" height="15" fill="rgb(217,168,37)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="1781" width="0.0411%" height="15" fill="rgb(221,217,23)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="1765" width="0.0411%" height="15" fill="rgb(243,229,36)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="1749" width="0.0411%" height="15" fill="rgb(251,163,40)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="1759.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="1733" width="0.0411%" height="15" fill="rgb(237,222,12)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="1717" width="0.0411%" height="15" fill="rgb(248,132,6)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="1701" width="0.0411%" height="15" fill="rgb(227,167,50)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="1685" width="0.0411%" height="15" fill="rgb(242,84,37)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="1695.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="1669" width="0.0411%" height="15" fill="rgb(212,4,50)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="1653" width="0.0411%" height="15" fill="rgb(230,228,32)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="1637" width="0.0411%" height="15" fill="rgb(248,217,23)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="1621" width="0.0411%" height="15" fill="rgb(238,197,32)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="1631.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="1605" width="0.0411%" height="15" fill="rgb(236,106,1)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="1589" width="0.0411%" height="15" fill="rgb(219,228,13)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="1573" width="0.0411%" height="15" fill="rgb(238,30,35)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="1557" width="0.0411%" height="15" fill="rgb(236,70,23)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="1567.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="1541" width="0.0411%" height="15" fill="rgb(249,104,48)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="1525" width="0.0411%" height="15" fill="rgb(254,117,50)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="1509" width="0.0411%" height="15" fill="rgb(223,152,4)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="1493" width="0.0411%" height="15" fill="rgb(245,6,2)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="1503.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="1477" width="0.0411%" height="15" fill="rgb(249,150,24)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="1461" width="0.0411%" height="15" fill="rgb(228,185,42)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="1445" width="0.0411%" height="15" fill="rgb(226,39,33)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="1429" width="0.0411%" height="15" fill="rgb(221,166,19)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="1439.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="1413" width="0.0411%" height="15" fill="rgb(209,109,2)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="1397" width="0.0411%" height="15" fill="rgb(252,216,26)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="1381" width="0.0411%" height="15" fill="rgb(227,173,36)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="1365" width="0.0411%" height="15" fill="rgb(209,90,7)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="1375.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="1349" width="0.0411%" height="15" fill="rgb(250,194,11)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="1333" width="0.0411%" height="15" fill="rgb(220,72,50)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="1317" width="0.0411%" height="15" fill="rgb(222,106,48)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="1301" width="0.0411%" height="15" fill="rgb(216,220,45)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="1311.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="1285" width="0.0411%" height="15" fill="rgb(234,112,18)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="1269" width="0.0411%" height="15" fill="rgb(206,179,9)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="1253" width="0.0411%" height="15" fill="rgb(215,115,40)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="1237" width="0.0411%" height="15" fill="rgb(222,69,34)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="1247.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="1221" width="0.0411%" height="15" fill="rgb(209,161,10)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="1205" width="0.0411%" height="15" fill="rgb(217,6,38)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="1189" width="0.0411%" height="15" fill="rgb(229,229,48)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="1173" width="0.0411%" height="15" fill="rgb(225,21,28)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="1183.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="1157" width="0.0411%" height="15" fill="rgb(206,33,13)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="1141" width="0.0411%" height="15" fill="rgb(242,178,17)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="1125" width="0.0411%" height="15" fill="rgb(220,162,5)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="1109" width="0.0411%" height="15" fill="rgb(210,33,43)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="1119.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="1093" width="0.0411%" height="15" fill="rgb(216,116,54)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="1077" width="0.0411%" height="15" fill="rgb(249,92,24)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="1061" width="0.0411%" height="15" fill="rgb(231,189,14)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="1045" width="0.0411%" height="15" fill="rgb(230,8,41)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="1055.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="1029" width="0.0411%" height="15" fill="rgb(249,7,27)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="1013" width="0.0411%" height="15" fill="rgb(232,86,5)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="997" width="0.0411%" height="15" fill="rgb(224,175,18)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="981" width="0.0411%" height="15" fill="rgb(220,129,12)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="991.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="965" width="0.0411%" height="15" fill="rgb(210,19,36)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="949" width="0.0411%" height="15" fill="rgb(219,96,14)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="933" width="0.0411%" height="15" fill="rgb(249,106,1)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="917" width="0.0411%" height="15" fill="rgb(249,155,20)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="927.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="901" width="0.0411%" height="15" fill="rgb(244,168,9)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="885" width="0.0411%" height="15" fill="rgb(216,23,50)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="869" width="0.0411%" height="15" fill="rgb(224,219,20)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="853" width="0.0411%" height="15" fill="rgb(222,156,15)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="863.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="837" width="0.0411%" height="15" fill="rgb(231,97,17)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="821" width="0.0411%" height="15" fill="rgb(218,70,48)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="805" width="0.0411%" height="15" fill="rgb(212,196,52)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="789" width="0.0411%" height="15" fill="rgb(243,203,18)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="799.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="773" width="0.0411%" height="15" fill="rgb(252,125,41)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="757" width="0.0411%" height="15" fill="rgb(223,180,33)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="741" width="0.0411%" height="15" fill="rgb(254,159,46)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="725" width="0.0411%" height="15" fill="rgb(254,38,10)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="735.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="709" width="0.0411%" height="15" fill="rgb(208,217,32)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="693" width="0.0411%" height="15" fill="rgb(221,120,13)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="677" width="0.0411%" height="15" fill="rgb(246,54,52)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="661" width="0.0411%" height="15" fill="rgb(242,34,25)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="671.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="645" width="0.0411%" height="15" fill="rgb(247,209,9)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="629" width="0.0411%" height="15" fill="rgb(228,71,26)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="613" width="0.0411%" height="15" fill="rgb(222,145,49)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="597" width="0.0411%" height="15" fill="rgb(218,121,17)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="607.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="581" width="0.0411%" height="15" fill="rgb(244,50,7)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="565" width="0.0411%" height="15" fill="rgb(246,229,37)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="549" width="0.0411%" height="15" fill="rgb(225,18,5)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="533" width="0.0411%" height="15" fill="rgb(213,204,8)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="543.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="517" width="0.0411%" height="15" fill="rgb(238,103,6)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="501" width="0.0411%" height="15" fill="rgb(222,25,35)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="485" width="0.0411%" height="15" fill="rgb(213,203,35)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="469" width="0.0411%" height="15" fill="rgb(221,79,53)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="479.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="453" width="0.0411%" height="15" fill="rgb(243,200,35)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="437" width="0.0411%" height="15" fill="rgb(248,60,25)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="421" width="0.0411%" height="15" fill="rgb(227,53,46)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="405" width="0.0411%" height="15" fill="rgb(216,120,32)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="415.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="389" width="0.0411%" height="15" fill="rgb(220,134,1)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="373" width="0.0411%" height="15" fill="rgb(237,168,5)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="357" width="0.0411%" height="15" fill="rgb(231,100,33)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="341" width="0.0411%" height="15" fill="rgb(236,177,47)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="351.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9589%" y="325" width="0.0411%" height="15" fill="rgb(235,7,49)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (12 samples, 0.04%)</title><rect x="99.9589%" y="309" width="0.0411%" height="15" fill="rgb(232,119,22)" fg:x="29206" fg:w="12"/><text x="100.2089%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (11 samples, 0.04%)</title><rect x="99.9624%" y="293" width="0.0376%" height="15" fill="rgb(254,73,53)" fg:x="29207" fg:w="11"/><text x="100.2124%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (11 samples, 0.04%)</title><rect x="99.9624%" y="277" width="0.0376%" height="15" fill="rgb(251,35,20)" fg:x="29207" fg:w="11"/><text x="100.2124%" y="287.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.04%)</title><rect x="99.9624%" y="261" width="0.0376%" height="15" fill="rgb(241,119,20)" fg:x="29207" fg:w="11"/><text x="100.2124%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (11 samples, 0.04%)</title><rect x="99.9624%" y="245" width="0.0376%" height="15" fill="rgb(207,102,14)" fg:x="29207" fg:w="11"/><text x="100.2124%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (8 samples, 0.03%)</title><rect x="99.9726%" y="229" width="0.0274%" height="15" fill="rgb(248,201,50)" fg:x="29210" fg:w="8"/><text x="100.2226%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (8 samples, 0.03%)</title><rect x="99.9726%" y="213" width="0.0274%" height="15" fill="rgb(222,185,44)" fg:x="29210" fg:w="8"/><text x="100.2226%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.03%)</title><rect x="99.9726%" y="197" width="0.0274%" height="15" fill="rgb(218,107,18)" fg:x="29210" fg:w="8"/><text x="100.2226%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (8 samples, 0.03%)</title><rect x="99.9726%" y="181" width="0.0274%" height="15" fill="rgb(237,177,39)" fg:x="29210" fg:w="8"/><text x="100.2226%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (3 samples, 0.01%)</title><rect x="99.9897%" y="165" width="0.0103%" height="15" fill="rgb(246,69,6)" fg:x="29215" fg:w="3"/><text x="100.2397%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (3 samples, 0.01%)</title><rect x="99.9897%" y="149" width="0.0103%" height="15" fill="rgb(234,208,37)" fg:x="29215" fg:w="3"/><text x="100.2397%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="99.9897%" y="133" width="0.0103%" height="15" fill="rgb(225,4,6)" fg:x="29215" fg:w="3"/><text x="100.2397%" y="143.50"></text></g></svg></svg>