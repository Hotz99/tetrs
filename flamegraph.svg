<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="8214" onload="init(evt)" viewBox="0 0 1200 8214" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="8214" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="8197.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="8197.00"> </text><svg id="frames" x="10" width="1180" total_samples="2933"><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.07%)</title><rect x="0.0000%" y="8101" width="0.0682%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="2"/><text x="0.2500%" y="8111.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.07%)</title><rect x="0.0000%" y="8085" width="0.0682%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="2"/><text x="0.2500%" y="8095.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.03%)</title><rect x="0.0341%" y="8069" width="0.0341%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="1"/><text x="0.2841%" y="8079.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.03%)</title><rect x="0.0341%" y="8053" width="0.0341%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="1"/><text x="0.2841%" y="8063.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.03%)</title><rect x="0.0341%" y="8037" width="0.0341%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="1"/><text x="0.2841%" y="8047.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.03%)</title><rect x="0.0341%" y="8021" width="0.0341%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="1"/><text x="0.2841%" y="8031.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.0341%" y="8005" width="0.0341%" height="15" fill="rgb(207,160,47)" fg:x="1" fg:w="1"/><text x="0.2841%" y="8015.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.0341%" y="7989" width="0.0341%" height="15" fill="rgb(228,23,34)" fg:x="1" fg:w="1"/><text x="0.2841%" y="7999.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.0341%" y="7973" width="0.0341%" height="15" fill="rgb(218,30,26)" fg:x="1" fg:w="1"/><text x="0.2841%" y="7983.50"></text></g><g><title>[ld-linux-x86-64.so.2] (6 samples, 0.20%)</title><rect x="0.0000%" y="8117" width="0.2046%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="6"/><text x="0.2500%" y="8127.50"></text></g><g><title>[unknown] (4 samples, 0.14%)</title><rect x="0.0682%" y="8101" width="0.1364%" height="15" fill="rgb(250,228,42)" fg:x="2" fg:w="4"/><text x="0.3182%" y="8111.50"></text></g><g><title>[unknown] (4 samples, 0.14%)</title><rect x="0.0682%" y="8085" width="0.1364%" height="15" fill="rgb(240,193,28)" fg:x="2" fg:w="4"/><text x="0.3182%" y="8095.50"></text></g><g><title>[unknown] (4 samples, 0.14%)</title><rect x="0.0682%" y="8069" width="0.1364%" height="15" fill="rgb(216,20,37)" fg:x="2" fg:w="4"/><text x="0.3182%" y="8079.50"></text></g><g><title>[unknown] (4 samples, 0.14%)</title><rect x="0.0682%" y="8053" width="0.1364%" height="15" fill="rgb(206,188,39)" fg:x="2" fg:w="4"/><text x="0.3182%" y="8063.50"></text></g><g><title>[unknown] (4 samples, 0.14%)</title><rect x="0.0682%" y="8037" width="0.1364%" height="15" fill="rgb(217,207,13)" fg:x="2" fg:w="4"/><text x="0.3182%" y="8047.50"></text></g><g><title>[unknown] (4 samples, 0.14%)</title><rect x="0.0682%" y="8021" width="0.1364%" height="15" fill="rgb(231,73,38)" fg:x="2" fg:w="4"/><text x="0.3182%" y="8031.50"></text></g><g><title>[unknown] (4 samples, 0.14%)</title><rect x="0.0682%" y="8005" width="0.1364%" height="15" fill="rgb(225,20,46)" fg:x="2" fg:w="4"/><text x="0.3182%" y="8015.50"></text></g><g><title>[unknown] (4 samples, 0.14%)</title><rect x="0.0682%" y="7989" width="0.1364%" height="15" fill="rgb(210,31,41)" fg:x="2" fg:w="4"/><text x="0.3182%" y="7999.50"></text></g><g><title>[unknown] (4 samples, 0.14%)</title><rect x="0.0682%" y="7973" width="0.1364%" height="15" fill="rgb(221,200,47)" fg:x="2" fg:w="4"/><text x="0.3182%" y="7983.50"></text></g><g><title>[unknown] (3 samples, 0.10%)</title><rect x="0.1023%" y="7957" width="0.1023%" height="15" fill="rgb(226,26,5)" fg:x="3" fg:w="3"/><text x="0.3523%" y="7967.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="0.1364%" y="7941" width="0.0682%" height="15" fill="rgb(249,33,26)" fg:x="4" fg:w="2"/><text x="0.3864%" y="7951.50"></text></g><g><title>[ld-linux-x86-64.so.2] (7 samples, 0.24%)</title><rect x="0.0000%" y="8133" width="0.2387%" height="15" fill="rgb(235,183,28)" fg:x="0" fg:w="7"/><text x="0.2500%" y="8143.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.2046%" y="8117" width="0.0341%" height="15" fill="rgb(221,5,38)" fg:x="6" fg:w="1"/><text x="0.4546%" y="8127.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.2046%" y="8101" width="0.0341%" height="15" fill="rgb(247,18,42)" fg:x="6" fg:w="1"/><text x="0.4546%" y="8111.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.2046%" y="8085" width="0.0341%" height="15" fill="rgb(241,131,45)" fg:x="6" fg:w="1"/><text x="0.4546%" y="8095.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.2046%" y="8069" width="0.0341%" height="15" fill="rgb(249,31,29)" fg:x="6" fg:w="1"/><text x="0.4546%" y="8079.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.2046%" y="8053" width="0.0341%" height="15" fill="rgb(225,111,53)" fg:x="6" fg:w="1"/><text x="0.4546%" y="8063.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.2046%" y="8037" width="0.0341%" height="15" fill="rgb(238,160,17)" fg:x="6" fg:w="1"/><text x="0.4546%" y="8047.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.2046%" y="8021" width="0.0341%" height="15" fill="rgb(214,148,48)" fg:x="6" fg:w="1"/><text x="0.4546%" y="8031.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.2046%" y="8005" width="0.0341%" height="15" fill="rgb(232,36,49)" fg:x="6" fg:w="1"/><text x="0.4546%" y="8015.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.2046%" y="7989" width="0.0341%" height="15" fill="rgb(209,103,24)" fg:x="6" fg:w="1"/><text x="0.4546%" y="7999.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.2046%" y="7973" width="0.0341%" height="15" fill="rgb(229,88,8)" fg:x="6" fg:w="1"/><text x="0.4546%" y="7983.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.2046%" y="7957" width="0.0341%" height="15" fill="rgb(213,181,19)" fg:x="6" fg:w="1"/><text x="0.4546%" y="7967.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.2387%" y="8133" width="0.0341%" height="15" fill="rgb(254,191,54)" fg:x="7" fg:w="1"/><text x="0.4887%" y="8143.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::insert (1 samples, 0.03%)</title><rect x="0.2387%" y="8117" width="0.0341%" height="15" fill="rgb(241,83,37)" fg:x="7" fg:w="1"/><text x="0.4887%" y="8127.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.2387%" y="8101" width="0.0341%" height="15" fill="rgb(233,36,39)" fg:x="7" fg:w="1"/><text x="0.4887%" y="8111.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.10%)</title><rect x="0.3409%" y="7829" width="0.1023%" height="15" fill="rgb(226,3,54)" fg:x="10" fg:w="3"/><text x="0.5909%" y="7839.50"></text></g><g><title>core::ptr::read (2 samples, 0.07%)</title><rect x="0.3750%" y="7813" width="0.0682%" height="15" fill="rgb(245,192,40)" fg:x="11" fg:w="2"/><text x="0.6250%" y="7823.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8 samples, 0.27%)</title><rect x="0.4432%" y="7685" width="0.2728%" height="15" fill="rgb(238,167,29)" fg:x="13" fg:w="8"/><text x="0.6932%" y="7695.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8 samples, 0.27%)</title><rect x="0.4432%" y="7669" width="0.2728%" height="15" fill="rgb(232,182,51)" fg:x="13" fg:w="8"/><text x="0.6932%" y="7679.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (8 samples, 0.27%)</title><rect x="0.4432%" y="7653" width="0.2728%" height="15" fill="rgb(231,60,39)" fg:x="13" fg:w="8"/><text x="0.6932%" y="7663.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.27%)</title><rect x="0.4432%" y="7637" width="0.2728%" height="15" fill="rgb(208,69,12)" fg:x="13" fg:w="8"/><text x="0.6932%" y="7647.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.27%)</title><rect x="0.4432%" y="7621" width="0.2728%" height="15" fill="rgb(235,93,37)" fg:x="13" fg:w="8"/><text x="0.6932%" y="7631.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.27%)</title><rect x="0.4432%" y="7605" width="0.2728%" height="15" fill="rgb(213,116,39)" fg:x="13" fg:w="8"/><text x="0.6932%" y="7615.50"></text></g><g><title>malloc (8 samples, 0.27%)</title><rect x="0.4432%" y="7589" width="0.2728%" height="15" fill="rgb(222,207,29)" fg:x="13" fg:w="8"/><text x="0.6932%" y="7599.50"></text></g><g><title>[libc.so.6] (8 samples, 0.27%)</title><rect x="0.4432%" y="7573" width="0.2728%" height="15" fill="rgb(206,96,30)" fg:x="13" fg:w="8"/><text x="0.6932%" y="7583.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (12 samples, 0.41%)</title><rect x="0.4432%" y="7749" width="0.4091%" height="15" fill="rgb(218,138,4)" fg:x="13" fg:w="12"/><text x="0.6932%" y="7759.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (12 samples, 0.41%)</title><rect x="0.4432%" y="7733" width="0.4091%" height="15" fill="rgb(250,191,14)" fg:x="13" fg:w="12"/><text x="0.6932%" y="7743.50"></text></g><g><title>alloc::slice::hack::to_vec (12 samples, 0.41%)</title><rect x="0.4432%" y="7717" width="0.4091%" height="15" fill="rgb(239,60,40)" fg:x="13" fg:w="12"/><text x="0.6932%" y="7727.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (12 samples, 0.41%)</title><rect x="0.4432%" y="7701" width="0.4091%" height="15" fill="rgb(206,27,48)" fg:x="13" fg:w="12"/><text x="0.6932%" y="7711.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (4 samples, 0.14%)</title><rect x="0.7160%" y="7685" width="0.1364%" height="15" fill="rgb(225,35,8)" fg:x="21" fg:w="4"/><text x="0.9660%" y="7695.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.14%)</title><rect x="0.7160%" y="7669" width="0.1364%" height="15" fill="rgb(250,213,24)" fg:x="21" fg:w="4"/><text x="0.9660%" y="7679.50"></text></g><g><title>[libc.so.6] (3 samples, 0.10%)</title><rect x="0.7501%" y="7653" width="0.1023%" height="15" fill="rgb(247,123,22)" fg:x="22" fg:w="3"/><text x="1.0001%" y="7663.50"></text></g><g><title>&lt;tetrs::logic::state::GameState as core::clone::Clone&gt;::clone (18 samples, 0.61%)</title><rect x="0.4432%" y="7829" width="0.6137%" height="15" fill="rgb(231,138,38)" fg:x="13" fg:w="18"/><text x="0.6932%" y="7839.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (18 samples, 0.61%)</title><rect x="0.4432%" y="7813" width="0.6137%" height="15" fill="rgb(231,145,46)" fg:x="13" fg:w="18"/><text x="0.6932%" y="7823.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (18 samples, 0.61%)</title><rect x="0.4432%" y="7797" width="0.6137%" height="15" fill="rgb(251,118,11)" fg:x="13" fg:w="18"/><text x="0.6932%" y="7807.50"></text></g><g><title>alloc::slice::hack::to_vec (18 samples, 0.61%)</title><rect x="0.4432%" y="7781" width="0.6137%" height="15" fill="rgb(217,147,25)" fg:x="13" fg:w="18"/><text x="0.6932%" y="7791.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (18 samples, 0.61%)</title><rect x="0.4432%" y="7765" width="0.6137%" height="15" fill="rgb(247,81,37)" fg:x="13" fg:w="18"/><text x="0.6932%" y="7775.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.20%)</title><rect x="0.8524%" y="7749" width="0.2046%" height="15" fill="rgb(209,12,38)" fg:x="25" fg:w="6"/><text x="1.1024%" y="7759.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.20%)</title><rect x="0.8524%" y="7733" width="0.2046%" height="15" fill="rgb(227,1,9)" fg:x="25" fg:w="6"/><text x="1.1024%" y="7743.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.20%)</title><rect x="0.8524%" y="7717" width="0.2046%" height="15" fill="rgb(248,47,43)" fg:x="25" fg:w="6"/><text x="1.1024%" y="7727.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.20%)</title><rect x="0.8524%" y="7701" width="0.2046%" height="15" fill="rgb(221,10,30)" fg:x="25" fg:w="6"/><text x="1.1024%" y="7711.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.20%)</title><rect x="0.8524%" y="7685" width="0.2046%" height="15" fill="rgb(210,229,1)" fg:x="25" fg:w="6"/><text x="1.1024%" y="7695.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.20%)</title><rect x="0.8524%" y="7669" width="0.2046%" height="15" fill="rgb(222,148,37)" fg:x="25" fg:w="6"/><text x="1.1024%" y="7679.50"></text></g><g><title>malloc (6 samples, 0.20%)</title><rect x="0.8524%" y="7653" width="0.2046%" height="15" fill="rgb(234,67,33)" fg:x="25" fg:w="6"/><text x="1.1024%" y="7663.50"></text></g><g><title>[libc.so.6] (6 samples, 0.20%)</title><rect x="0.8524%" y="7637" width="0.2046%" height="15" fill="rgb(247,98,35)" fg:x="25" fg:w="6"/><text x="1.1024%" y="7647.50"></text></g><g><title>__rdl_alloc (1 samples, 0.03%)</title><rect x="1.0910%" y="7733" width="0.0341%" height="15" fill="rgb(247,138,52)" fg:x="32" fg:w="1"/><text x="1.3410%" y="7743.50"></text></g><g><title>__rust_alloc (1 samples, 0.03%)</title><rect x="1.1251%" y="7733" width="0.0341%" height="15" fill="rgb(213,79,30)" fg:x="33" fg:w="1"/><text x="1.3751%" y="7743.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (24 samples, 0.82%)</title><rect x="1.0569%" y="7829" width="0.8183%" height="15" fill="rgb(246,177,23)" fg:x="31" fg:w="24"/><text x="1.3069%" y="7839.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (24 samples, 0.82%)</title><rect x="1.0569%" y="7813" width="0.8183%" height="15" fill="rgb(230,62,27)" fg:x="31" fg:w="24"/><text x="1.3069%" y="7823.50"></text></g><g><title>alloc::alloc::exchange_malloc (24 samples, 0.82%)</title><rect x="1.0569%" y="7797" width="0.8183%" height="15" fill="rgb(216,154,8)" fg:x="31" fg:w="24"/><text x="1.3069%" y="7807.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (24 samples, 0.82%)</title><rect x="1.0569%" y="7781" width="0.8183%" height="15" fill="rgb(244,35,45)" fg:x="31" fg:w="24"/><text x="1.3069%" y="7791.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (24 samples, 0.82%)</title><rect x="1.0569%" y="7765" width="0.8183%" height="15" fill="rgb(251,115,12)" fg:x="31" fg:w="24"/><text x="1.3069%" y="7775.50"></text></g><g><title>alloc::alloc::alloc (24 samples, 0.82%)</title><rect x="1.0569%" y="7749" width="0.8183%" height="15" fill="rgb(240,54,50)" fg:x="31" fg:w="24"/><text x="1.3069%" y="7759.50"></text></g><g><title>malloc (21 samples, 0.72%)</title><rect x="1.1592%" y="7733" width="0.7160%" height="15" fill="rgb(233,84,52)" fg:x="34" fg:w="21"/><text x="1.4092%" y="7743.50"></text></g><g><title>[libc.so.6] (19 samples, 0.65%)</title><rect x="1.2274%" y="7717" width="0.6478%" height="15" fill="rgb(207,117,47)" fg:x="36" fg:w="19"/><text x="1.4774%" y="7727.50"></text></g><g><title>[libc.so.6] (3 samples, 0.10%)</title><rect x="1.7729%" y="7701" width="0.1023%" height="15" fill="rgb(249,43,39)" fg:x="52" fg:w="3"/><text x="2.0229%" y="7711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="1.8752%" y="7829" width="0.0341%" height="15" fill="rgb(209,38,44)" fg:x="55" fg:w="1"/><text x="2.1252%" y="7839.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="1.8752%" y="7813" width="0.0341%" height="15" fill="rgb(236,212,23)" fg:x="55" fg:w="1"/><text x="2.1252%" y="7823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (6 samples, 0.20%)</title><rect x="1.9093%" y="7829" width="0.2046%" height="15" fill="rgb(242,79,21)" fg:x="56" fg:w="6"/><text x="2.1593%" y="7839.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.20%)</title><rect x="1.9093%" y="7813" width="0.2046%" height="15" fill="rgb(211,96,35)" fg:x="56" fg:w="6"/><text x="2.1593%" y="7823.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u16&gt;]&gt; (6 samples, 0.20%)</title><rect x="1.9093%" y="7797" width="0.2046%" height="15" fill="rgb(253,215,40)" fg:x="56" fg:w="6"/><text x="2.1593%" y="7807.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u16&gt;&gt; (6 samples, 0.20%)</title><rect x="1.9093%" y="7781" width="0.2046%" height="15" fill="rgb(211,81,21)" fg:x="56" fg:w="6"/><text x="2.1593%" y="7791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u16&gt;&gt; (6 samples, 0.20%)</title><rect x="1.9093%" y="7765" width="0.2046%" height="15" fill="rgb(208,190,38)" fg:x="56" fg:w="6"/><text x="2.1593%" y="7775.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.20%)</title><rect x="1.9093%" y="7749" width="0.2046%" height="15" fill="rgb(235,213,38)" fg:x="56" fg:w="6"/><text x="2.1593%" y="7759.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.20%)</title><rect x="1.9093%" y="7733" width="0.2046%" height="15" fill="rgb(237,122,38)" fg:x="56" fg:w="6"/><text x="2.1593%" y="7743.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.20%)</title><rect x="1.9093%" y="7717" width="0.2046%" height="15" fill="rgb(244,218,35)" fg:x="56" fg:w="6"/><text x="2.1593%" y="7727.50"></text></g><g><title>cfree (6 samples, 0.20%)</title><rect x="1.9093%" y="7701" width="0.2046%" height="15" fill="rgb(240,68,47)" fg:x="56" fg:w="6"/><text x="2.1593%" y="7711.50"></text></g><g><title>[libc.so.6] (4 samples, 0.14%)</title><rect x="1.9775%" y="7685" width="0.1364%" height="15" fill="rgb(210,16,53)" fg:x="58" fg:w="4"/><text x="2.2275%" y="7695.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;tetrs::logic::state::GameState&gt;&gt; (5 samples, 0.17%)</title><rect x="2.1139%" y="7829" width="0.1705%" height="15" fill="rgb(235,124,12)" fg:x="62" fg:w="5"/><text x="2.3639%" y="7839.50"></text></g><g><title>cfree (5 samples, 0.17%)</title><rect x="2.1139%" y="7813" width="0.1705%" height="15" fill="rgb(224,169,11)" fg:x="62" fg:w="5"/><text x="2.3639%" y="7823.50"></text></g><g><title>[libc.so.6] (4 samples, 0.14%)</title><rect x="2.1480%" y="7797" width="0.1364%" height="15" fill="rgb(250,166,2)" fg:x="63" fg:w="4"/><text x="2.3980%" y="7807.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="2.2162%" y="7781" width="0.0682%" height="15" fill="rgb(242,216,29)" fg:x="65" fg:w="2"/><text x="2.4662%" y="7791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;priority_queue::store::Index&gt;&gt; (1 samples, 0.03%)</title><rect x="2.2844%" y="7797" width="0.0341%" height="15" fill="rgb(230,116,27)" fg:x="67" fg:w="1"/><text x="2.5344%" y="7807.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;priority_queue::store::Index&gt;&gt; (1 samples, 0.03%)</title><rect x="2.2844%" y="7781" width="0.0341%" height="15" fill="rgb(228,99,48)" fg:x="67" fg:w="1"/><text x="2.5344%" y="7791.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="2.2844%" y="7765" width="0.0341%" height="15" fill="rgb(253,11,6)" fg:x="67" fg:w="1"/><text x="2.5344%" y="7775.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.03%)</title><rect x="2.2844%" y="7749" width="0.0341%" height="15" fill="rgb(247,143,39)" fg:x="67" fg:w="1"/><text x="2.5344%" y="7759.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.03%)</title><rect x="2.2844%" y="7733" width="0.0341%" height="15" fill="rgb(236,97,10)" fg:x="67" fg:w="1"/><text x="2.5344%" y="7743.50"></text></g><g><title>cfree (1 samples, 0.03%)</title><rect x="2.2844%" y="7717" width="0.0341%" height="15" fill="rgb(233,208,19)" fg:x="67" fg:w="1"/><text x="2.5344%" y="7727.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="2.2844%" y="7701" width="0.0341%" height="15" fill="rgb(216,164,2)" fg:x="67" fg:w="1"/><text x="2.5344%" y="7711.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="2.2844%" y="7685" width="0.0341%" height="15" fill="rgb(220,129,5)" fg:x="67" fg:w="1"/><text x="2.5344%" y="7695.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.24%)</title><rect x="2.3866%" y="7669" width="0.2387%" height="15" fill="rgb(242,17,10)" fg:x="70" fg:w="7"/><text x="2.6366%" y="7679.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.24%)</title><rect x="2.3866%" y="7653" width="0.2387%" height="15" fill="rgb(242,107,0)" fg:x="70" fg:w="7"/><text x="2.6366%" y="7663.50"></text></g><g><title>cfree (7 samples, 0.24%)</title><rect x="2.3866%" y="7637" width="0.2387%" height="15" fill="rgb(251,28,31)" fg:x="70" fg:w="7"/><text x="2.6366%" y="7647.50"></text></g><g><title>[libc.so.6] (6 samples, 0.20%)</title><rect x="2.4207%" y="7621" width="0.2046%" height="15" fill="rgb(233,223,10)" fg:x="71" fg:w="6"/><text x="2.6707%" y="7631.50"></text></g><g><title>cfree (12 samples, 0.41%)</title><rect x="2.6253%" y="7669" width="0.4091%" height="15" fill="rgb(215,21,27)" fg:x="77" fg:w="12"/><text x="2.8753%" y="7679.50"></text></g><g><title>[libc.so.6] (5 samples, 0.17%)</title><rect x="2.8640%" y="7653" width="0.1705%" height="15" fill="rgb(232,23,21)" fg:x="84" fg:w="5"/><text x="3.1140%" y="7663.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (83 samples, 2.83%)</title><rect x="3.0685%" y="7557" width="2.8299%" height="15" fill="rgb(244,5,23)" fg:x="90" fg:w="83"/><text x="3.3185%" y="7567.50">&lt;a..</text></g><g><title>alloc::alloc::dealloc (83 samples, 2.83%)</title><rect x="3.0685%" y="7541" width="2.8299%" height="15" fill="rgb(226,81,46)" fg:x="90" fg:w="83"/><text x="3.3185%" y="7551.50">al..</text></g><g><title>cfree (81 samples, 2.76%)</title><rect x="3.1367%" y="7525" width="2.7617%" height="15" fill="rgb(247,70,30)" fg:x="92" fg:w="81"/><text x="3.3867%" y="7535.50">cf..</text></g><g><title>[libc.so.6] (52 samples, 1.77%)</title><rect x="4.1255%" y="7509" width="1.7729%" height="15" fill="rgb(212,68,19)" fg:x="121" fg:w="52"/><text x="4.3755%" y="7519.50">[..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (87 samples, 2.97%)</title><rect x="3.0344%" y="7637" width="2.9662%" height="15" fill="rgb(240,187,13)" fg:x="89" fg:w="87"/><text x="3.2844%" y="7647.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u16&gt;]&gt; (87 samples, 2.97%)</title><rect x="3.0344%" y="7621" width="2.9662%" height="15" fill="rgb(223,113,26)" fg:x="89" fg:w="87"/><text x="3.2844%" y="7631.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u16&gt;&gt; (86 samples, 2.93%)</title><rect x="3.0685%" y="7605" width="2.9322%" height="15" fill="rgb(206,192,2)" fg:x="90" fg:w="86"/><text x="3.3185%" y="7615.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u16&gt;&gt; (86 samples, 2.93%)</title><rect x="3.0685%" y="7589" width="2.9322%" height="15" fill="rgb(241,108,4)" fg:x="90" fg:w="86"/><text x="3.3185%" y="7599.50">co..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (86 samples, 2.93%)</title><rect x="3.0685%" y="7573" width="2.9322%" height="15" fill="rgb(247,173,49)" fg:x="90" fg:w="86"/><text x="3.3185%" y="7583.50">&lt;a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (3 samples, 0.10%)</title><rect x="5.8984%" y="7557" width="0.1023%" height="15" fill="rgb(224,114,35)" fg:x="173" fg:w="3"/><text x="6.1484%" y="7567.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (1 samples, 0.03%)</title><rect x="5.9666%" y="7541" width="0.0341%" height="15" fill="rgb(245,159,27)" fg:x="175" fg:w="1"/><text x="6.2166%" y="7551.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.03%)</title><rect x="6.0348%" y="7573" width="0.0341%" height="15" fill="rgb(245,172,44)" fg:x="177" fg:w="1"/><text x="6.2848%" y="7583.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.03%)</title><rect x="6.0348%" y="7557" width="0.0341%" height="15" fill="rgb(236,23,11)" fg:x="177" fg:w="1"/><text x="6.2848%" y="7567.50"></text></g><g><title>__rust_dealloc (1 samples, 0.03%)</title><rect x="6.0689%" y="7573" width="0.0341%" height="15" fill="rgb(205,117,38)" fg:x="178" fg:w="1"/><text x="6.3189%" y="7583.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10 samples, 0.34%)</title><rect x="6.0007%" y="7605" width="0.3409%" height="15" fill="rgb(237,72,25)" fg:x="176" fg:w="10"/><text x="6.2507%" y="7615.50"></text></g><g><title>alloc::alloc::dealloc (10 samples, 0.34%)</title><rect x="6.0007%" y="7589" width="0.3409%" height="15" fill="rgb(244,70,9)" fg:x="176" fg:w="10"/><text x="6.2507%" y="7599.50"></text></g><g><title>cfree (7 samples, 0.24%)</title><rect x="6.1030%" y="7573" width="0.2387%" height="15" fill="rgb(217,125,39)" fg:x="179" fg:w="7"/><text x="6.3530%" y="7583.50"></text></g><g><title>[libc.so.6] (6 samples, 0.20%)</title><rect x="6.1371%" y="7557" width="0.2046%" height="15" fill="rgb(235,36,10)" fg:x="180" fg:w="6"/><text x="6.3871%" y="7567.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="6.2734%" y="7541" width="0.0682%" height="15" fill="rgb(251,123,47)" fg:x="184" fg:w="2"/><text x="6.5234%" y="7551.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (98 samples, 3.34%)</title><rect x="3.0344%" y="7653" width="3.3413%" height="15" fill="rgb(221,13,13)" fg:x="89" fg:w="98"/><text x="3.2844%" y="7663.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (11 samples, 0.38%)</title><rect x="6.0007%" y="7637" width="0.3750%" height="15" fill="rgb(238,131,9)" fg:x="176" fg:w="11"/><text x="6.2507%" y="7647.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.38%)</title><rect x="6.0007%" y="7621" width="0.3750%" height="15" fill="rgb(211,50,8)" fg:x="176" fg:w="11"/><text x="6.2507%" y="7631.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.03%)</title><rect x="6.3416%" y="7605" width="0.0341%" height="15" fill="rgb(245,182,24)" fg:x="186" fg:w="1"/><text x="6.5916%" y="7615.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;char&gt;&gt; (1 samples, 0.03%)</title><rect x="6.3757%" y="7653" width="0.0341%" height="15" fill="rgb(242,14,37)" fg:x="187" fg:w="1"/><text x="6.6257%" y="7663.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;char&gt;&gt; (1 samples, 0.03%)</title><rect x="6.3757%" y="7637" width="0.0341%" height="15" fill="rgb(246,228,12)" fg:x="187" fg:w="1"/><text x="6.6257%" y="7647.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="6.3757%" y="7621" width="0.0341%" height="15" fill="rgb(213,55,15)" fg:x="187" fg:w="1"/><text x="6.6257%" y="7631.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.03%)</title><rect x="6.3757%" y="7605" width="0.0341%" height="15" fill="rgb(209,9,3)" fg:x="187" fg:w="1"/><text x="6.6257%" y="7615.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (6 samples, 0.20%)</title><rect x="6.4098%" y="7605" width="0.2046%" height="15" fill="rgb(230,59,30)" fg:x="188" fg:w="6"/><text x="6.6598%" y="7615.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.20%)</title><rect x="6.4098%" y="7589" width="0.2046%" height="15" fill="rgb(209,121,21)" fg:x="188" fg:w="6"/><text x="6.6598%" y="7599.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u16&gt;]&gt; (6 samples, 0.20%)</title><rect x="6.4098%" y="7573" width="0.2046%" height="15" fill="rgb(220,109,13)" fg:x="188" fg:w="6"/><text x="6.6598%" y="7583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u16&gt;&gt; (6 samples, 0.20%)</title><rect x="6.4098%" y="7557" width="0.2046%" height="15" fill="rgb(232,18,1)" fg:x="188" fg:w="6"/><text x="6.6598%" y="7567.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u16&gt;&gt; (6 samples, 0.20%)</title><rect x="6.4098%" y="7541" width="0.2046%" height="15" fill="rgb(215,41,42)" fg:x="188" fg:w="6"/><text x="6.6598%" y="7551.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.20%)</title><rect x="6.4098%" y="7525" width="0.2046%" height="15" fill="rgb(224,123,36)" fg:x="188" fg:w="6"/><text x="6.6598%" y="7535.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.20%)</title><rect x="6.4098%" y="7509" width="0.2046%" height="15" fill="rgb(240,125,3)" fg:x="188" fg:w="6"/><text x="6.6598%" y="7519.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.20%)</title><rect x="6.4098%" y="7493" width="0.2046%" height="15" fill="rgb(205,98,50)" fg:x="188" fg:w="6"/><text x="6.6598%" y="7503.50"></text></g><g><title>cfree (6 samples, 0.20%)</title><rect x="6.4098%" y="7477" width="0.2046%" height="15" fill="rgb(205,185,37)" fg:x="188" fg:w="6"/><text x="6.6598%" y="7487.50"></text></g><g><title>[libc.so.6] (4 samples, 0.14%)</title><rect x="6.4780%" y="7461" width="0.1364%" height="15" fill="rgb(238,207,15)" fg:x="190" fg:w="4"/><text x="6.7280%" y="7471.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (7 samples, 0.24%)</title><rect x="6.4098%" y="7653" width="0.2387%" height="15" fill="rgb(213,199,42)" fg:x="188" fg:w="7"/><text x="6.6598%" y="7663.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;tetrs::logic::state::GameState&gt;&gt; (7 samples, 0.24%)</title><rect x="6.4098%" y="7637" width="0.2387%" height="15" fill="rgb(235,201,11)" fg:x="188" fg:w="7"/><text x="6.6598%" y="7647.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (7 samples, 0.24%)</title><rect x="6.4098%" y="7621" width="0.2387%" height="15" fill="rgb(207,46,11)" fg:x="188" fg:w="7"/><text x="6.6598%" y="7631.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="6.6144%" y="7605" width="0.0341%" height="15" fill="rgb(241,35,35)" fg:x="194" fg:w="1"/><text x="6.8644%" y="7615.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.03%)</title><rect x="6.7167%" y="7461" width="0.0341%" height="15" fill="rgb(243,32,47)" fg:x="197" fg:w="1"/><text x="6.9667%" y="7471.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.03%)</title><rect x="6.7167%" y="7445" width="0.0341%" height="15" fill="rgb(247,202,23)" fg:x="197" fg:w="1"/><text x="6.9667%" y="7455.50"></text></g><g><title>__rust_dealloc (1 samples, 0.03%)</title><rect x="6.7508%" y="7461" width="0.0341%" height="15" fill="rgb(219,102,11)" fg:x="198" fg:w="1"/><text x="7.0008%" y="7471.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.24%)</title><rect x="6.7167%" y="7573" width="0.2387%" height="15" fill="rgb(243,110,44)" fg:x="197" fg:w="7"/><text x="6.9667%" y="7583.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u16&gt;]&gt; (7 samples, 0.24%)</title><rect x="6.7167%" y="7557" width="0.2387%" height="15" fill="rgb(222,74,54)" fg:x="197" fg:w="7"/><text x="6.9667%" y="7567.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u16&gt;&gt; (7 samples, 0.24%)</title><rect x="6.7167%" y="7541" width="0.2387%" height="15" fill="rgb(216,99,12)" fg:x="197" fg:w="7"/><text x="6.9667%" y="7551.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u16&gt;&gt; (7 samples, 0.24%)</title><rect x="6.7167%" y="7525" width="0.2387%" height="15" fill="rgb(226,22,26)" fg:x="197" fg:w="7"/><text x="6.9667%" y="7535.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.24%)</title><rect x="6.7167%" y="7509" width="0.2387%" height="15" fill="rgb(217,163,10)" fg:x="197" fg:w="7"/><text x="6.9667%" y="7519.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.24%)</title><rect x="6.7167%" y="7493" width="0.2387%" height="15" fill="rgb(213,25,53)" fg:x="197" fg:w="7"/><text x="6.9667%" y="7503.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.24%)</title><rect x="6.7167%" y="7477" width="0.2387%" height="15" fill="rgb(252,105,26)" fg:x="197" fg:w="7"/><text x="6.9667%" y="7487.50"></text></g><g><title>cfree (5 samples, 0.17%)</title><rect x="6.7849%" y="7461" width="0.1705%" height="15" fill="rgb(220,39,43)" fg:x="199" fg:w="5"/><text x="7.0349%" y="7471.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="6.9212%" y="7445" width="0.0341%" height="15" fill="rgb(229,68,48)" fg:x="203" fg:w="1"/><text x="7.1712%" y="7455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (9 samples, 0.31%)</title><rect x="6.7167%" y="7589" width="0.3069%" height="15" fill="rgb(252,8,32)" fg:x="197" fg:w="9"/><text x="6.9667%" y="7599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (2 samples, 0.07%)</title><rect x="6.9553%" y="7573" width="0.0682%" height="15" fill="rgb(223,20,43)" fg:x="204" fg:w="2"/><text x="7.2053%" y="7583.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.07%)</title><rect x="6.9553%" y="7557" width="0.0682%" height="15" fill="rgb(229,81,49)" fg:x="204" fg:w="2"/><text x="7.2053%" y="7567.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.07%)</title><rect x="6.9553%" y="7541" width="0.0682%" height="15" fill="rgb(236,28,36)" fg:x="204" fg:w="2"/><text x="7.2053%" y="7551.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.07%)</title><rect x="6.9553%" y="7525" width="0.0682%" height="15" fill="rgb(249,185,26)" fg:x="204" fg:w="2"/><text x="7.2053%" y="7535.50"></text></g><g><title>cfree (2 samples, 0.07%)</title><rect x="6.9553%" y="7509" width="0.0682%" height="15" fill="rgb(249,174,33)" fg:x="204" fg:w="2"/><text x="7.2053%" y="7519.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="6.9553%" y="7493" width="0.0682%" height="15" fill="rgb(233,201,37)" fg:x="204" fg:w="2"/><text x="7.2053%" y="7503.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="6.9894%" y="7477" width="0.0341%" height="15" fill="rgb(221,78,26)" fg:x="205" fg:w="1"/><text x="7.2394%" y="7487.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="6.9894%" y="7461" width="0.0341%" height="15" fill="rgb(250,127,30)" fg:x="205" fg:w="1"/><text x="7.2394%" y="7471.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="7.0235%" y="7589" width="0.0341%" height="15" fill="rgb(230,49,44)" fg:x="206" fg:w="1"/><text x="7.2735%" y="7599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="7.0235%" y="7573" width="0.0341%" height="15" fill="rgb(229,67,23)" fg:x="206" fg:w="1"/><text x="7.2735%" y="7583.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="7.0235%" y="7557" width="0.0341%" height="15" fill="rgb(249,83,47)" fg:x="206" fg:w="1"/><text x="7.2735%" y="7567.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="7.0235%" y="7541" width="0.0341%" height="15" fill="rgb(215,43,3)" fg:x="206" fg:w="1"/><text x="7.2735%" y="7551.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="7.0235%" y="7525" width="0.0341%" height="15" fill="rgb(238,154,13)" fg:x="206" fg:w="1"/><text x="7.2735%" y="7535.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u16&gt;]&gt; (1 samples, 0.03%)</title><rect x="7.0235%" y="7509" width="0.0341%" height="15" fill="rgb(219,56,2)" fg:x="206" fg:w="1"/><text x="7.2735%" y="7519.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u16&gt;&gt; (1 samples, 0.03%)</title><rect x="7.0235%" y="7493" width="0.0341%" height="15" fill="rgb(233,0,4)" fg:x="206" fg:w="1"/><text x="7.2735%" y="7503.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u16&gt;&gt; (1 samples, 0.03%)</title><rect x="7.0235%" y="7477" width="0.0341%" height="15" fill="rgb(235,30,7)" fg:x="206" fg:w="1"/><text x="7.2735%" y="7487.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="7.0235%" y="7461" width="0.0341%" height="15" fill="rgb(250,79,13)" fg:x="206" fg:w="1"/><text x="7.2735%" y="7471.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.03%)</title><rect x="7.0235%" y="7445" width="0.0341%" height="15" fill="rgb(211,146,34)" fg:x="206" fg:w="1"/><text x="7.2735%" y="7455.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.03%)</title><rect x="7.0235%" y="7429" width="0.0341%" height="15" fill="rgb(228,22,38)" fg:x="206" fg:w="1"/><text x="7.2735%" y="7439.50"></text></g><g><title>cfree (1 samples, 0.03%)</title><rect x="7.0235%" y="7413" width="0.0341%" height="15" fill="rgb(235,168,5)" fg:x="206" fg:w="1"/><text x="7.2735%" y="7423.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="7.0235%" y="7397" width="0.0341%" height="15" fill="rgb(221,155,16)" fg:x="206" fg:w="1"/><text x="7.2735%" y="7407.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="7.0576%" y="7525" width="0.0341%" height="15" fill="rgb(215,215,53)" fg:x="207" fg:w="1"/><text x="7.3076%" y="7535.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="7.0576%" y="7509" width="0.0341%" height="15" fill="rgb(223,4,10)" fg:x="207" fg:w="1"/><text x="7.3076%" y="7519.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u16&gt;]&gt; (1 samples, 0.03%)</title><rect x="7.0576%" y="7493" width="0.0341%" height="15" fill="rgb(234,103,6)" fg:x="207" fg:w="1"/><text x="7.3076%" y="7503.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u16&gt;&gt; (1 samples, 0.03%)</title><rect x="7.0576%" y="7477" width="0.0341%" height="15" fill="rgb(227,97,0)" fg:x="207" fg:w="1"/><text x="7.3076%" y="7487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u16&gt;&gt; (1 samples, 0.03%)</title><rect x="7.0576%" y="7461" width="0.0341%" height="15" fill="rgb(234,150,53)" fg:x="207" fg:w="1"/><text x="7.3076%" y="7471.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="7.0576%" y="7445" width="0.0341%" height="15" fill="rgb(228,201,54)" fg:x="207" fg:w="1"/><text x="7.3076%" y="7455.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.03%)</title><rect x="7.0576%" y="7429" width="0.0341%" height="15" fill="rgb(222,22,37)" fg:x="207" fg:w="1"/><text x="7.3076%" y="7439.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.03%)</title><rect x="7.0576%" y="7413" width="0.0341%" height="15" fill="rgb(237,53,32)" fg:x="207" fg:w="1"/><text x="7.3076%" y="7423.50"></text></g><g><title>cfree (1 samples, 0.03%)</title><rect x="7.0576%" y="7397" width="0.0341%" height="15" fill="rgb(233,25,53)" fg:x="207" fg:w="1"/><text x="7.3076%" y="7407.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="7.0576%" y="7381" width="0.0341%" height="15" fill="rgb(210,40,34)" fg:x="207" fg:w="1"/><text x="7.3076%" y="7391.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.07%)</title><rect x="7.0917%" y="7461" width="0.0682%" height="15" fill="rgb(241,220,44)" fg:x="208" fg:w="2"/><text x="7.3417%" y="7471.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u16&gt;]&gt; (2 samples, 0.07%)</title><rect x="7.0917%" y="7445" width="0.0682%" height="15" fill="rgb(235,28,35)" fg:x="208" fg:w="2"/><text x="7.3417%" y="7455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u16&gt;&gt; (2 samples, 0.07%)</title><rect x="7.0917%" y="7429" width="0.0682%" height="15" fill="rgb(210,56,17)" fg:x="208" fg:w="2"/><text x="7.3417%" y="7439.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u16&gt;&gt; (2 samples, 0.07%)</title><rect x="7.0917%" y="7413" width="0.0682%" height="15" fill="rgb(224,130,29)" fg:x="208" fg:w="2"/><text x="7.3417%" y="7423.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.07%)</title><rect x="7.0917%" y="7397" width="0.0682%" height="15" fill="rgb(235,212,8)" fg:x="208" fg:w="2"/><text x="7.3417%" y="7407.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.07%)</title><rect x="7.0917%" y="7381" width="0.0682%" height="15" fill="rgb(223,33,50)" fg:x="208" fg:w="2"/><text x="7.3417%" y="7391.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.07%)</title><rect x="7.0917%" y="7365" width="0.0682%" height="15" fill="rgb(219,149,13)" fg:x="208" fg:w="2"/><text x="7.3417%" y="7375.50"></text></g><g><title>cfree (2 samples, 0.07%)</title><rect x="7.0917%" y="7349" width="0.0682%" height="15" fill="rgb(250,156,29)" fg:x="208" fg:w="2"/><text x="7.3417%" y="7359.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="7.0917%" y="7333" width="0.0682%" height="15" fill="rgb(216,193,19)" fg:x="208" fg:w="2"/><text x="7.3417%" y="7343.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (3 samples, 0.10%)</title><rect x="7.0917%" y="7525" width="0.1023%" height="15" fill="rgb(216,135,14)" fg:x="208" fg:w="3"/><text x="7.3417%" y="7535.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;tetrs::logic::state::GameState&gt;&gt; (3 samples, 0.10%)</title><rect x="7.0917%" y="7509" width="0.1023%" height="15" fill="rgb(241,47,5)" fg:x="208" fg:w="3"/><text x="7.3417%" y="7519.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (3 samples, 0.10%)</title><rect x="7.0917%" y="7493" width="0.1023%" height="15" fill="rgb(233,42,35)" fg:x="208" fg:w="3"/><text x="7.3417%" y="7503.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (3 samples, 0.10%)</title><rect x="7.0917%" y="7477" width="0.1023%" height="15" fill="rgb(231,13,6)" fg:x="208" fg:w="3"/><text x="7.3417%" y="7487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="7.1599%" y="7461" width="0.0341%" height="15" fill="rgb(207,181,40)" fg:x="210" fg:w="1"/><text x="7.4099%" y="7471.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="7.1599%" y="7445" width="0.0341%" height="15" fill="rgb(254,173,49)" fg:x="210" fg:w="1"/><text x="7.4099%" y="7455.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.03%)</title><rect x="7.1599%" y="7429" width="0.0341%" height="15" fill="rgb(221,1,38)" fg:x="210" fg:w="1"/><text x="7.4099%" y="7439.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.03%)</title><rect x="7.1599%" y="7413" width="0.0341%" height="15" fill="rgb(206,124,46)" fg:x="210" fg:w="1"/><text x="7.4099%" y="7423.50"></text></g><g><title>cfree (1 samples, 0.03%)</title><rect x="7.1599%" y="7397" width="0.0341%" height="15" fill="rgb(249,21,11)" fg:x="210" fg:w="1"/><text x="7.4099%" y="7407.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="7.1599%" y="7381" width="0.0341%" height="15" fill="rgb(222,201,40)" fg:x="210" fg:w="1"/><text x="7.4099%" y="7391.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="7.1599%" y="7365" width="0.0341%" height="15" fill="rgb(235,61,29)" fg:x="210" fg:w="1"/><text x="7.4099%" y="7375.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="7.1599%" y="7349" width="0.0341%" height="15" fill="rgb(219,207,3)" fg:x="210" fg:w="1"/><text x="7.4099%" y="7359.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="7.1940%" y="7365" width="0.0341%" height="15" fill="rgb(222,56,46)" fg:x="211" fg:w="1"/><text x="7.4440%" y="7375.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.03%)</title><rect x="7.1940%" y="7349" width="0.0341%" height="15" fill="rgb(239,76,54)" fg:x="211" fg:w="1"/><text x="7.4440%" y="7359.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.03%)</title><rect x="7.1940%" y="7333" width="0.0341%" height="15" fill="rgb(231,124,27)" fg:x="211" fg:w="1"/><text x="7.4440%" y="7343.50"></text></g><g><title>cfree (1 samples, 0.03%)</title><rect x="7.1940%" y="7317" width="0.0341%" height="15" fill="rgb(249,195,6)" fg:x="211" fg:w="1"/><text x="7.4440%" y="7327.50"></text></g><g><title>core::ptr::drop_in_place&lt;priority_queue::priority_queue::PriorityQueue&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;,i32&gt;&gt; (146 samples, 4.98%)</title><rect x="2.2844%" y="7829" width="4.9778%" height="15" fill="rgb(237,174,47)" fg:x="67" fg:w="146"/><text x="2.5344%" y="7839.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;priority_queue::store::Store&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;,i32&gt;&gt; (146 samples, 4.98%)</title><rect x="2.2844%" y="7813" width="4.9778%" height="15" fill="rgb(206,201,31)" fg:x="67" fg:w="146"/><text x="2.5344%" y="7823.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;indexmap::map::IndexMap&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;,i32&gt;&gt; (145 samples, 4.94%)</title><rect x="2.3184%" y="7797" width="4.9437%" height="15" fill="rgb(231,57,52)" fg:x="68" fg:w="145"/><text x="2.5684%" y="7807.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;indexmap::map::core::IndexMapCore&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;,i32&gt;&gt; (145 samples, 4.94%)</title><rect x="2.3184%" y="7781" width="4.9437%" height="15" fill="rgb(248,177,22)" fg:x="68" fg:w="145"/><text x="2.5684%" y="7791.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;indexmap::Bucket&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;,i32&gt;&gt;&gt; (145 samples, 4.94%)</title><rect x="2.3184%" y="7765" width="4.9437%" height="15" fill="rgb(215,211,37)" fg:x="68" fg:w="145"/><text x="2.5684%" y="7775.50">core::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (145 samples, 4.94%)</title><rect x="2.3184%" y="7749" width="4.9437%" height="15" fill="rgb(241,128,51)" fg:x="68" fg:w="145"/><text x="2.5684%" y="7759.50">&lt;alloc..</text></g><g><title>core::ptr::drop_in_place&lt;[indexmap::Bucket&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;,i32&gt;]&gt; (145 samples, 4.94%)</title><rect x="2.3184%" y="7733" width="4.9437%" height="15" fill="rgb(227,165,31)" fg:x="68" fg:w="145"/><text x="2.5684%" y="7743.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;indexmap::Bucket&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;,i32&gt;&gt; (145 samples, 4.94%)</title><rect x="2.3184%" y="7717" width="4.9437%" height="15" fill="rgb(228,167,24)" fg:x="68" fg:w="145"/><text x="2.5684%" y="7727.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (145 samples, 4.94%)</title><rect x="2.3184%" y="7701" width="4.9437%" height="15" fill="rgb(228,143,12)" fg:x="68" fg:w="145"/><text x="2.5684%" y="7711.50">core::..</text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (145 samples, 4.94%)</title><rect x="2.3184%" y="7685" width="4.9437%" height="15" fill="rgb(249,149,8)" fg:x="68" fg:w="145"/><text x="2.5684%" y="7695.50">&lt;alloc..</text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (124 samples, 4.23%)</title><rect x="3.0344%" y="7669" width="4.2278%" height="15" fill="rgb(243,35,44)" fg:x="89" fg:w="124"/><text x="3.2844%" y="7679.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (18 samples, 0.61%)</title><rect x="6.6485%" y="7653" width="0.6137%" height="15" fill="rgb(246,89,9)" fg:x="195" fg:w="18"/><text x="6.8985%" y="7663.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (18 samples, 0.61%)</title><rect x="6.6485%" y="7637" width="0.6137%" height="15" fill="rgb(233,213,13)" fg:x="195" fg:w="18"/><text x="6.8985%" y="7647.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.61%)</title><rect x="6.6485%" y="7621" width="0.6137%" height="15" fill="rgb(233,141,41)" fg:x="195" fg:w="18"/><text x="6.8985%" y="7631.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (16 samples, 0.55%)</title><rect x="6.7167%" y="7605" width="0.5455%" height="15" fill="rgb(239,167,4)" fg:x="197" fg:w="16"/><text x="6.9667%" y="7615.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (6 samples, 0.20%)</title><rect x="7.0576%" y="7589" width="0.2046%" height="15" fill="rgb(209,217,16)" fg:x="207" fg:w="6"/><text x="7.3076%" y="7599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (6 samples, 0.20%)</title><rect x="7.0576%" y="7573" width="0.2046%" height="15" fill="rgb(219,88,35)" fg:x="207" fg:w="6"/><text x="7.3076%" y="7583.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.20%)</title><rect x="7.0576%" y="7557" width="0.2046%" height="15" fill="rgb(220,193,23)" fg:x="207" fg:w="6"/><text x="7.3076%" y="7567.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (6 samples, 0.20%)</title><rect x="7.0576%" y="7541" width="0.2046%" height="15" fill="rgb(230,90,52)" fg:x="207" fg:w="6"/><text x="7.3076%" y="7551.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (2 samples, 0.07%)</title><rect x="7.1940%" y="7525" width="0.0682%" height="15" fill="rgb(252,106,19)" fg:x="211" fg:w="2"/><text x="7.4440%" y="7535.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (2 samples, 0.07%)</title><rect x="7.1940%" y="7509" width="0.0682%" height="15" fill="rgb(206,74,20)" fg:x="211" fg:w="2"/><text x="7.4440%" y="7519.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.07%)</title><rect x="7.1940%" y="7493" width="0.0682%" height="15" fill="rgb(230,138,44)" fg:x="211" fg:w="2"/><text x="7.4440%" y="7503.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (2 samples, 0.07%)</title><rect x="7.1940%" y="7477" width="0.0682%" height="15" fill="rgb(235,182,43)" fg:x="211" fg:w="2"/><text x="7.4440%" y="7487.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (2 samples, 0.07%)</title><rect x="7.1940%" y="7461" width="0.0682%" height="15" fill="rgb(242,16,51)" fg:x="211" fg:w="2"/><text x="7.4440%" y="7471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (2 samples, 0.07%)</title><rect x="7.1940%" y="7445" width="0.0682%" height="15" fill="rgb(248,9,4)" fg:x="211" fg:w="2"/><text x="7.4440%" y="7455.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.07%)</title><rect x="7.1940%" y="7429" width="0.0682%" height="15" fill="rgb(210,31,22)" fg:x="211" fg:w="2"/><text x="7.4440%" y="7439.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (2 samples, 0.07%)</title><rect x="7.1940%" y="7413" width="0.0682%" height="15" fill="rgb(239,54,39)" fg:x="211" fg:w="2"/><text x="7.4440%" y="7423.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (2 samples, 0.07%)</title><rect x="7.1940%" y="7397" width="0.0682%" height="15" fill="rgb(230,99,41)" fg:x="211" fg:w="2"/><text x="7.4440%" y="7407.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;tetrs::logic::state::GameState&gt;&gt; (2 samples, 0.07%)</title><rect x="7.1940%" y="7381" width="0.0682%" height="15" fill="rgb(253,106,12)" fg:x="211" fg:w="2"/><text x="7.4440%" y="7391.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="7.2281%" y="7365" width="0.0341%" height="15" fill="rgb(213,46,41)" fg:x="212" fg:w="1"/><text x="7.4781%" y="7375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="7.2281%" y="7349" width="0.0341%" height="15" fill="rgb(215,133,35)" fg:x="212" fg:w="1"/><text x="7.4781%" y="7359.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="7.2281%" y="7333" width="0.0341%" height="15" fill="rgb(213,28,5)" fg:x="212" fg:w="1"/><text x="7.4781%" y="7343.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u16&gt;]&gt; (1 samples, 0.03%)</title><rect x="7.2281%" y="7317" width="0.0341%" height="15" fill="rgb(215,77,49)" fg:x="212" fg:w="1"/><text x="7.4781%" y="7327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u16&gt;&gt; (1 samples, 0.03%)</title><rect x="7.2281%" y="7301" width="0.0341%" height="15" fill="rgb(248,100,22)" fg:x="212" fg:w="1"/><text x="7.4781%" y="7311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u16&gt;&gt; (1 samples, 0.03%)</title><rect x="7.2281%" y="7285" width="0.0341%" height="15" fill="rgb(208,67,9)" fg:x="212" fg:w="1"/><text x="7.4781%" y="7295.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="7.2281%" y="7269" width="0.0341%" height="15" fill="rgb(219,133,21)" fg:x="212" fg:w="1"/><text x="7.4781%" y="7279.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.03%)</title><rect x="7.2281%" y="7253" width="0.0341%" height="15" fill="rgb(246,46,29)" fg:x="212" fg:w="1"/><text x="7.4781%" y="7263.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.03%)</title><rect x="7.2281%" y="7237" width="0.0341%" height="15" fill="rgb(246,185,52)" fg:x="212" fg:w="1"/><text x="7.4781%" y="7247.50"></text></g><g><title>cfree (1 samples, 0.03%)</title><rect x="7.2281%" y="7221" width="0.0341%" height="15" fill="rgb(252,136,11)" fg:x="212" fg:w="1"/><text x="7.4781%" y="7231.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="7.2281%" y="7205" width="0.0341%" height="15" fill="rgb(219,138,53)" fg:x="212" fg:w="1"/><text x="7.4781%" y="7215.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="7.2622%" y="7733" width="0.0341%" height="15" fill="rgb(211,51,23)" fg:x="213" fg:w="1"/><text x="7.5122%" y="7743.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (1 samples, 0.03%)</title><rect x="7.2622%" y="7717" width="0.0341%" height="15" fill="rgb(247,221,28)" fg:x="213" fg:w="1"/><text x="7.5122%" y="7727.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="7.2622%" y="7701" width="0.0341%" height="15" fill="rgb(251,222,45)" fg:x="213" fg:w="1"/><text x="7.5122%" y="7711.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.03%)</title><rect x="7.2622%" y="7685" width="0.0341%" height="15" fill="rgb(217,162,53)" fg:x="213" fg:w="1"/><text x="7.5122%" y="7695.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (4 samples, 0.14%)</title><rect x="7.2622%" y="7829" width="0.1364%" height="15" fill="rgb(229,93,14)" fg:x="213" fg:w="4"/><text x="7.5122%" y="7839.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;,std::collections::hash::map::RandomState&gt;&gt; (4 samples, 0.14%)</title><rect x="7.2622%" y="7813" width="0.1364%" height="15" fill="rgb(209,67,49)" fg:x="213" fg:w="4"/><text x="7.5122%" y="7823.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;,(),std::collections::hash::map::RandomState&gt;&gt; (4 samples, 0.14%)</title><rect x="7.2622%" y="7797" width="0.1364%" height="15" fill="rgb(213,87,29)" fg:x="213" fg:w="4"/><text x="7.5122%" y="7807.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;,())&gt;&gt; (4 samples, 0.14%)</title><rect x="7.2622%" y="7781" width="0.1364%" height="15" fill="rgb(205,151,52)" fg:x="213" fg:w="4"/><text x="7.5122%" y="7791.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.14%)</title><rect x="7.2622%" y="7765" width="0.1364%" height="15" fill="rgb(253,215,39)" fg:x="213" fg:w="4"/><text x="7.5122%" y="7775.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (4 samples, 0.14%)</title><rect x="7.2622%" y="7749" width="0.1364%" height="15" fill="rgb(221,220,41)" fg:x="213" fg:w="4"/><text x="7.5122%" y="7759.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (3 samples, 0.10%)</title><rect x="7.2963%" y="7733" width="0.1023%" height="15" fill="rgb(218,133,21)" fg:x="214" fg:w="3"/><text x="7.5463%" y="7743.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (3 samples, 0.10%)</title><rect x="7.2963%" y="7717" width="0.1023%" height="15" fill="rgb(221,193,43)" fg:x="214" fg:w="3"/><text x="7.5463%" y="7727.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;,())&gt; (3 samples, 0.10%)</title><rect x="7.2963%" y="7701" width="0.1023%" height="15" fill="rgb(240,128,52)" fg:x="214" fg:w="3"/><text x="7.5463%" y="7711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (3 samples, 0.10%)</title><rect x="7.2963%" y="7685" width="0.1023%" height="15" fill="rgb(253,114,12)" fg:x="214" fg:w="3"/><text x="7.5463%" y="7695.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.10%)</title><rect x="7.2963%" y="7669" width="0.1023%" height="15" fill="rgb(215,223,47)" fg:x="214" fg:w="3"/><text x="7.5463%" y="7679.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (3 samples, 0.10%)</title><rect x="7.2963%" y="7653" width="0.1023%" height="15" fill="rgb(248,225,23)" fg:x="214" fg:w="3"/><text x="7.5463%" y="7663.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (3 samples, 0.10%)</title><rect x="7.2963%" y="7637" width="0.1023%" height="15" fill="rgb(250,108,0)" fg:x="214" fg:w="3"/><text x="7.5463%" y="7647.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.10%)</title><rect x="7.2963%" y="7621" width="0.1023%" height="15" fill="rgb(228,208,7)" fg:x="214" fg:w="3"/><text x="7.5463%" y="7631.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u16&gt;]&gt; (3 samples, 0.10%)</title><rect x="7.2963%" y="7605" width="0.1023%" height="15" fill="rgb(244,45,10)" fg:x="214" fg:w="3"/><text x="7.5463%" y="7615.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u16&gt;&gt; (3 samples, 0.10%)</title><rect x="7.2963%" y="7589" width="0.1023%" height="15" fill="rgb(207,125,25)" fg:x="214" fg:w="3"/><text x="7.5463%" y="7599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u16&gt;&gt; (3 samples, 0.10%)</title><rect x="7.2963%" y="7573" width="0.1023%" height="15" fill="rgb(210,195,18)" fg:x="214" fg:w="3"/><text x="7.5463%" y="7583.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.10%)</title><rect x="7.2963%" y="7557" width="0.1023%" height="15" fill="rgb(249,80,12)" fg:x="214" fg:w="3"/><text x="7.5463%" y="7567.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.10%)</title><rect x="7.2963%" y="7541" width="0.1023%" height="15" fill="rgb(221,65,9)" fg:x="214" fg:w="3"/><text x="7.5463%" y="7551.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.10%)</title><rect x="7.2963%" y="7525" width="0.1023%" height="15" fill="rgb(235,49,36)" fg:x="214" fg:w="3"/><text x="7.5463%" y="7535.50"></text></g><g><title>cfree (3 samples, 0.10%)</title><rect x="7.2963%" y="7509" width="0.1023%" height="15" fill="rgb(225,32,20)" fg:x="214" fg:w="3"/><text x="7.5463%" y="7519.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="7.3645%" y="7493" width="0.0341%" height="15" fill="rgb(215,141,46)" fg:x="216" fg:w="1"/><text x="7.6145%" y="7503.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::swap_remove_finish (1 samples, 0.03%)</title><rect x="7.3986%" y="7797" width="0.0341%" height="15" fill="rgb(250,160,47)" fg:x="217" fg:w="1"/><text x="7.6486%" y="7807.50"></text></g><g><title>indexmap::map::core::update_index (1 samples, 0.03%)</title><rect x="7.3986%" y="7781" width="0.0341%" height="15" fill="rgb(216,222,40)" fg:x="217" fg:w="1"/><text x="7.6486%" y="7791.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get_mut (1 samples, 0.03%)</title><rect x="7.3986%" y="7765" width="0.0341%" height="15" fill="rgb(234,217,39)" fg:x="217" fg:w="1"/><text x="7.6486%" y="7775.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (1 samples, 0.03%)</title><rect x="7.3986%" y="7749" width="0.0341%" height="15" fill="rgb(207,178,40)" fg:x="217" fg:w="1"/><text x="7.6486%" y="7759.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.03%)</title><rect x="7.3986%" y="7733" width="0.0341%" height="15" fill="rgb(221,136,13)" fg:x="217" fg:w="1"/><text x="7.6486%" y="7743.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_byte (1 samples, 0.03%)</title><rect x="7.3986%" y="7717" width="0.0341%" height="15" fill="rgb(249,199,10)" fg:x="217" fg:w="1"/><text x="7.6486%" y="7727.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.03%)</title><rect x="7.3986%" y="7701" width="0.0341%" height="15" fill="rgb(249,222,13)" fg:x="217" fg:w="1"/><text x="7.6486%" y="7711.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::swap_remove_index (2 samples, 0.07%)</title><rect x="7.3986%" y="7813" width="0.0682%" height="15" fill="rgb(244,185,38)" fg:x="217" fg:w="2"/><text x="7.6486%" y="7823.50"></text></g><g><title>indexmap::map::core::erase_index (1 samples, 0.03%)</title><rect x="7.4327%" y="7797" width="0.0341%" height="15" fill="rgb(236,202,9)" fg:x="218" fg:w="1"/><text x="7.6827%" y="7807.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::erase_entry (1 samples, 0.03%)</title><rect x="7.4327%" y="7781" width="0.0341%" height="15" fill="rgb(250,229,37)" fg:x="218" fg:w="1"/><text x="7.6827%" y="7791.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::erase (1 samples, 0.03%)</title><rect x="7.4327%" y="7765" width="0.0341%" height="15" fill="rgb(206,174,23)" fg:x="218" fg:w="1"/><text x="7.6827%" y="7775.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::erase_no_drop (1 samples, 0.03%)</title><rect x="7.4327%" y="7749" width="0.0341%" height="15" fill="rgb(211,33,43)" fg:x="218" fg:w="1"/><text x="7.6827%" y="7759.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::erase (1 samples, 0.03%)</title><rect x="7.4327%" y="7733" width="0.0341%" height="15" fill="rgb(245,58,50)" fg:x="218" fg:w="1"/><text x="7.6827%" y="7743.50"></text></g><g><title>hashbrown::raw::inner::bitmask::BitMask::leading_zeros (1 samples, 0.03%)</title><rect x="7.4327%" y="7717" width="0.0341%" height="15" fill="rgb(244,68,36)" fg:x="218" fg:w="1"/><text x="7.6827%" y="7727.50"></text></g><g><title>core::num::&lt;impl u16&gt;::leading_zeros (1 samples, 0.03%)</title><rect x="7.4327%" y="7701" width="0.0341%" height="15" fill="rgb(232,229,15)" fg:x="218" fg:w="1"/><text x="7.6827%" y="7711.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::gt (1 samples, 0.03%)</title><rect x="7.6031%" y="7797" width="0.0341%" height="15" fill="rgb(254,30,23)" fg:x="223" fg:w="1"/><text x="7.8531%" y="7807.50"></text></g><g><title>priority_queue::priority_queue::PriorityQueue&lt;I,P,H&gt;::pop (8 samples, 0.27%)</title><rect x="7.3986%" y="7829" width="0.2728%" height="15" fill="rgb(235,160,14)" fg:x="217" fg:w="8"/><text x="7.6486%" y="7839.50"></text></g><g><title>priority_queue::priority_queue::PriorityQueue&lt;I,P,H&gt;::heapify (6 samples, 0.20%)</title><rect x="7.4668%" y="7813" width="0.2046%" height="15" fill="rgb(212,155,44)" fg:x="219" fg:w="6"/><text x="7.7168%" y="7823.50"></text></g><g><title>priority_queue::store::Store&lt;I,P,H&gt;::get_priority_from_position (1 samples, 0.03%)</title><rect x="7.6372%" y="7797" width="0.0341%" height="15" fill="rgb(226,2,50)" fg:x="224" fg:w="1"/><text x="7.8872%" y="7807.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index (1 samples, 0.03%)</title><rect x="7.6372%" y="7781" width="0.0341%" height="15" fill="rgb(234,177,6)" fg:x="224" fg:w="1"/><text x="7.8872%" y="7791.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.03%)</title><rect x="7.6372%" y="7765" width="0.0341%" height="15" fill="rgb(217,24,9)" fg:x="224" fg:w="1"/><text x="7.8872%" y="7775.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.17%)</title><rect x="7.7395%" y="7765" width="0.1705%" height="15" fill="rgb(220,13,46)" fg:x="227" fg:w="5"/><text x="7.9895%" y="7775.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (5 samples, 0.17%)</title><rect x="7.7395%" y="7749" width="0.1705%" height="15" fill="rgb(239,221,27)" fg:x="227" fg:w="5"/><text x="7.9895%" y="7759.50"></text></g><g><title>alloc::alloc::Global::grow_impl (5 samples, 0.17%)</title><rect x="7.7395%" y="7733" width="0.1705%" height="15" fill="rgb(222,198,25)" fg:x="227" fg:w="5"/><text x="7.9895%" y="7743.50"></text></g><g><title>alloc::alloc::realloc (5 samples, 0.17%)</title><rect x="7.7395%" y="7717" width="0.1705%" height="15" fill="rgb(211,99,13)" fg:x="227" fg:w="5"/><text x="7.9895%" y="7727.50"></text></g><g><title>realloc (5 samples, 0.17%)</title><rect x="7.7395%" y="7701" width="0.1705%" height="15" fill="rgb(232,111,31)" fg:x="227" fg:w="5"/><text x="7.9895%" y="7711.50"></text></g><g><title>[libc.so.6] (3 samples, 0.10%)</title><rect x="7.8077%" y="7685" width="0.1023%" height="15" fill="rgb(245,82,37)" fg:x="229" fg:w="3"/><text x="8.0577%" y="7695.50"></text></g><g><title>[libc.so.6] (3 samples, 0.10%)</title><rect x="7.8077%" y="7669" width="0.1023%" height="15" fill="rgb(227,149,46)" fg:x="229" fg:w="3"/><text x="8.0577%" y="7679.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="7.8759%" y="7653" width="0.0341%" height="15" fill="rgb(218,36,50)" fg:x="231" fg:w="1"/><text x="8.1259%" y="7663.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (6 samples, 0.20%)</title><rect x="7.7395%" y="7813" width="0.2046%" height="15" fill="rgb(226,80,48)" fg:x="227" fg:w="6"/><text x="7.9895%" y="7823.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (6 samples, 0.20%)</title><rect x="7.7395%" y="7797" width="0.2046%" height="15" fill="rgb(238,224,15)" fg:x="227" fg:w="6"/><text x="7.9895%" y="7807.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 0.20%)</title><rect x="7.7395%" y="7781" width="0.2046%" height="15" fill="rgb(241,136,10)" fg:x="227" fg:w="6"/><text x="7.9895%" y="7791.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.03%)</title><rect x="7.9100%" y="7765" width="0.0341%" height="15" fill="rgb(208,32,45)" fg:x="232" fg:w="1"/><text x="8.1600%" y="7775.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.03%)</title><rect x="7.9100%" y="7749" width="0.0341%" height="15" fill="rgb(207,135,9)" fg:x="232" fg:w="1"/><text x="8.1600%" y="7759.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.03%)</title><rect x="8.0805%" y="7749" width="0.0341%" height="15" fill="rgb(206,86,44)" fg:x="237" fg:w="1"/><text x="8.3305%" y="7759.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="8.0805%" y="7733" width="0.0341%" height="15" fill="rgb(245,177,15)" fg:x="237" fg:w="1"/><text x="8.3305%" y="7743.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 0.85%)</title><rect x="8.1146%" y="7749" width="0.8524%" height="15" fill="rgb(206,64,50)" fg:x="238" fg:w="25"/><text x="8.3646%" y="7759.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (21 samples, 0.72%)</title><rect x="8.2509%" y="7733" width="0.7160%" height="15" fill="rgb(234,36,40)" fg:x="242" fg:w="21"/><text x="8.5009%" y="7743.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.10%)</title><rect x="9.0692%" y="7669" width="0.1023%" height="15" fill="rgb(213,64,8)" fg:x="266" fg:w="3"/><text x="9.3192%" y="7679.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.10%)</title><rect x="9.0692%" y="7653" width="0.1023%" height="15" fill="rgb(210,75,36)" fg:x="266" fg:w="3"/><text x="9.3192%" y="7663.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for char&gt;::hash (8 samples, 0.27%)</title><rect x="8.9669%" y="7749" width="0.2728%" height="15" fill="rgb(229,88,21)" fg:x="263" fg:w="8"/><text x="9.2169%" y="7759.50"></text></g><g><title>core::hash::Hasher::write_u32 (8 samples, 0.27%)</title><rect x="8.9669%" y="7733" width="0.2728%" height="15" fill="rgb(252,204,47)" fg:x="263" fg:w="8"/><text x="9.2169%" y="7743.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (8 samples, 0.27%)</title><rect x="8.9669%" y="7717" width="0.2728%" height="15" fill="rgb(208,77,27)" fg:x="263" fg:w="8"/><text x="9.2169%" y="7727.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (7 samples, 0.24%)</title><rect x="9.0010%" y="7701" width="0.2387%" height="15" fill="rgb(221,76,26)" fg:x="264" fg:w="7"/><text x="9.2510%" y="7711.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.24%)</title><rect x="9.0010%" y="7685" width="0.2387%" height="15" fill="rgb(225,139,18)" fg:x="264" fg:w="7"/><text x="9.2510%" y="7695.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.07%)</title><rect x="9.1715%" y="7669" width="0.0682%" height="15" fill="rgb(230,137,11)" fg:x="269" fg:w="2"/><text x="9.4215%" y="7679.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.07%)</title><rect x="9.1715%" y="7653" width="0.0682%" height="15" fill="rgb(212,28,1)" fg:x="269" fg:w="2"/><text x="9.4215%" y="7663.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (13 samples, 0.44%)</title><rect x="11.9673%" y="7653" width="0.4432%" height="15" fill="rgb(248,164,17)" fg:x="351" fg:w="13"/><text x="12.2173%" y="7663.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (33 samples, 1.13%)</title><rect x="11.7286%" y="7669" width="1.1251%" height="15" fill="rgb(222,171,42)" fg:x="344" fg:w="33"/><text x="11.9786%" y="7679.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (13 samples, 0.44%)</title><rect x="12.4105%" y="7653" width="0.4432%" height="15" fill="rgb(243,84,45)" fg:x="364" fg:w="13"/><text x="12.6605%" y="7663.50"></text></g><g><title>core::cmp::min (9 samples, 0.31%)</title><rect x="12.8537%" y="7669" width="0.3069%" height="15" fill="rgb(252,49,23)" fg:x="377" fg:w="9"/><text x="13.1037%" y="7679.50"></text></g><g><title>core::cmp::Ord::min (9 samples, 0.31%)</title><rect x="12.8537%" y="7653" width="0.3069%" height="15" fill="rgb(215,19,7)" fg:x="377" fg:w="9"/><text x="13.1037%" y="7663.50"></text></g><g><title>core::cmp::min_by (9 samples, 0.31%)</title><rect x="12.8537%" y="7637" width="0.3069%" height="15" fill="rgb(238,81,41)" fg:x="377" fg:w="9"/><text x="13.1037%" y="7647.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (189 samples, 6.44%)</title><rect x="9.4102%" y="7717" width="6.4439%" height="15" fill="rgb(210,199,37)" fg:x="276" fg:w="189"/><text x="9.6602%" y="7727.50">&lt;std::co..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (188 samples, 6.41%)</title><rect x="9.4443%" y="7701" width="6.4098%" height="15" fill="rgb(244,192,49)" fg:x="277" fg:w="188"/><text x="9.6943%" y="7711.50">&lt;core::h..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (188 samples, 6.41%)</title><rect x="9.4443%" y="7685" width="6.4098%" height="15" fill="rgb(226,211,11)" fg:x="277" fg:w="188"/><text x="9.6943%" y="7695.50">&lt;core::h..</text></g><g><title>core::hash::sip::u8to64_le (79 samples, 2.69%)</title><rect x="13.1606%" y="7669" width="2.6935%" height="15" fill="rgb(236,162,54)" fg:x="386" fg:w="79"/><text x="13.4106%" y="7679.50">co..</text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.03%)</title><rect x="15.8200%" y="7653" width="0.0341%" height="15" fill="rgb(220,229,9)" fg:x="464" fg:w="1"/><text x="16.0700%" y="7663.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::hash::Hash&gt;::hash (240 samples, 8.18%)</title><rect x="8.0464%" y="7781" width="8.1827%" height="15" fill="rgb(250,87,22)" fg:x="236" fg:w="240"/><text x="8.2964%" y="7791.50">&lt;alloc::rc:..</text></g><g><title>&lt;tetrs::logic::state::GameState as core::hash::Hash&gt;::hash (240 samples, 8.18%)</title><rect x="8.0464%" y="7765" width="8.1827%" height="15" fill="rgb(239,43,17)" fg:x="236" fg:w="240"/><text x="8.2964%" y="7775.50">&lt;tetrs::log..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (205 samples, 6.99%)</title><rect x="9.2397%" y="7749" width="6.9894%" height="15" fill="rgb(231,177,25)" fg:x="271" fg:w="205"/><text x="9.4897%" y="7759.50">core::has..</text></g><g><title>core::hash::Hasher::write_u16 (205 samples, 6.99%)</title><rect x="9.2397%" y="7733" width="6.9894%" height="15" fill="rgb(219,179,1)" fg:x="271" fg:w="205"/><text x="9.4897%" y="7743.50">core::has..</text></g><g><title>core::num::&lt;impl u16&gt;::to_ne_bytes (11 samples, 0.38%)</title><rect x="15.8541%" y="7717" width="0.3750%" height="15" fill="rgb(238,219,53)" fg:x="465" fg:w="11"/><text x="16.1041%" y="7727.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.10%)</title><rect x="16.4337%" y="7733" width="0.1023%" height="15" fill="rgb(232,167,36)" fg:x="482" fg:w="3"/><text x="16.6837%" y="7743.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.10%)</title><rect x="16.4337%" y="7717" width="0.1023%" height="15" fill="rgb(244,19,51)" fg:x="482" fg:w="3"/><text x="16.6837%" y="7727.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (13 samples, 0.44%)</title><rect x="16.2291%" y="7781" width="0.4432%" height="15" fill="rgb(224,6,22)" fg:x="476" fg:w="13"/><text x="16.4791%" y="7791.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (13 samples, 0.44%)</title><rect x="16.2291%" y="7765" width="0.4432%" height="15" fill="rgb(224,145,5)" fg:x="476" fg:w="13"/><text x="16.4791%" y="7775.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (13 samples, 0.44%)</title><rect x="16.2291%" y="7749" width="0.4432%" height="15" fill="rgb(234,130,49)" fg:x="476" fg:w="13"/><text x="16.4791%" y="7759.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (4 samples, 0.14%)</title><rect x="16.5360%" y="7733" width="0.1364%" height="15" fill="rgb(254,6,2)" fg:x="485" fg:w="4"/><text x="16.7860%" y="7743.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.14%)</title><rect x="16.5360%" y="7717" width="0.1364%" height="15" fill="rgb(208,96,46)" fg:x="485" fg:w="4"/><text x="16.7860%" y="7727.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (254 samples, 8.66%)</title><rect x="8.0464%" y="7797" width="8.6601%" height="15" fill="rgb(239,3,39)" fg:x="236" fg:w="254"/><text x="8.2964%" y="7807.50">indexmap::ma..</text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.03%)</title><rect x="16.6723%" y="7781" width="0.0341%" height="15" fill="rgb(233,210,1)" fg:x="489" fg:w="1"/><text x="16.9223%" y="7791.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.03%)</title><rect x="16.6723%" y="7765" width="0.0341%" height="15" fill="rgb(244,137,37)" fg:x="489" fg:w="1"/><text x="16.9223%" y="7775.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.03%)</title><rect x="16.6723%" y="7749" width="0.0341%" height="15" fill="rgb(240,136,2)" fg:x="489" fg:w="1"/><text x="16.9223%" y="7759.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.03%)</title><rect x="16.6723%" y="7733" width="0.0341%" height="15" fill="rgb(239,18,37)" fg:x="489" fg:w="1"/><text x="16.9223%" y="7743.50"></text></g><g><title>hashbrown::raw::inner::ProbeSeq::move_next (2 samples, 0.07%)</title><rect x="16.7405%" y="7749" width="0.0682%" height="15" fill="rgb(218,185,22)" fg:x="491" fg:w="2"/><text x="16.9905%" y="7759.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="16.8428%" y="7573" width="0.0341%" height="15" fill="rgb(225,218,4)" fg:x="494" fg:w="1"/><text x="17.0928%" y="7583.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.03%)</title><rect x="16.8428%" y="7557" width="0.0341%" height="15" fill="rgb(230,182,32)" fg:x="494" fg:w="1"/><text x="17.0928%" y="7567.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find::_{{closure}} (5 samples, 0.17%)</title><rect x="16.8087%" y="7749" width="0.1705%" height="15" fill="rgb(242,56,43)" fg:x="493" fg:w="5"/><text x="17.0587%" y="7759.50"></text></g><g><title>indexmap::map::core::equivalent::_{{closure}} (5 samples, 0.17%)</title><rect x="16.8087%" y="7733" width="0.1705%" height="15" fill="rgb(233,99,24)" fg:x="493" fg:w="5"/><text x="17.0587%" y="7743.50"></text></g><g><title>&lt;Q as indexmap::equivalent::Equivalent&lt;K&gt;&gt;::equivalent (5 samples, 0.17%)</title><rect x="16.8087%" y="7717" width="0.1705%" height="15" fill="rgb(234,209,42)" fg:x="493" fg:w="5"/><text x="17.0587%" y="7727.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.17%)</title><rect x="16.8087%" y="7701" width="0.1705%" height="15" fill="rgb(227,7,12)" fg:x="493" fg:w="5"/><text x="17.0587%" y="7711.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as alloc::rc::RcEqIdent&lt;T,A&gt;&gt;::eq (5 samples, 0.17%)</title><rect x="16.8087%" y="7685" width="0.1705%" height="15" fill="rgb(245,203,43)" fg:x="493" fg:w="5"/><text x="17.0587%" y="7695.50"></text></g><g><title>&lt;tetrs::logic::state::GameState as core::cmp::PartialEq&gt;::eq (5 samples, 0.17%)</title><rect x="16.8087%" y="7669" width="0.1705%" height="15" fill="rgb(238,205,33)" fg:x="493" fg:w="5"/><text x="17.0587%" y="7679.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (5 samples, 0.17%)</title><rect x="16.8087%" y="7653" width="0.1705%" height="15" fill="rgb(231,56,7)" fg:x="493" fg:w="5"/><text x="17.0587%" y="7663.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (5 samples, 0.17%)</title><rect x="16.8087%" y="7637" width="0.1705%" height="15" fill="rgb(244,186,29)" fg:x="493" fg:w="5"/><text x="17.0587%" y="7647.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (5 samples, 0.17%)</title><rect x="16.8087%" y="7621" width="0.1705%" height="15" fill="rgb(234,111,31)" fg:x="493" fg:w="5"/><text x="17.0587%" y="7631.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (5 samples, 0.17%)</title><rect x="16.8087%" y="7605" width="0.1705%" height="15" fill="rgb(241,149,10)" fg:x="493" fg:w="5"/><text x="17.0587%" y="7615.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.17%)</title><rect x="16.8087%" y="7589" width="0.1705%" height="15" fill="rgb(249,206,44)" fg:x="493" fg:w="5"/><text x="17.0587%" y="7599.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (3 samples, 0.10%)</title><rect x="16.8769%" y="7573" width="0.1023%" height="15" fill="rgb(251,153,30)" fg:x="495" fg:w="3"/><text x="17.1269%" y="7583.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::_{{closure}} (3 samples, 0.10%)</title><rect x="16.8769%" y="7557" width="0.1023%" height="15" fill="rgb(239,152,38)" fg:x="495" fg:w="3"/><text x="17.1269%" y="7567.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.10%)</title><rect x="16.8769%" y="7541" width="0.1023%" height="15" fill="rgb(249,139,47)" fg:x="495" fg:w="3"/><text x="17.1269%" y="7551.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (3 samples, 0.10%)</title><rect x="16.8769%" y="7525" width="0.1023%" height="15" fill="rgb(244,64,35)" fg:x="495" fg:w="3"/><text x="17.1269%" y="7535.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3 samples, 0.10%)</title><rect x="16.8769%" y="7509" width="0.1023%" height="15" fill="rgb(216,46,15)" fg:x="495" fg:w="3"/><text x="17.1269%" y="7519.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3 samples, 0.10%)</title><rect x="16.8769%" y="7493" width="0.1023%" height="15" fill="rgb(250,74,19)" fg:x="495" fg:w="3"/><text x="17.1269%" y="7503.50"></text></g><g><title>[libc.so.6] (3 samples, 0.10%)</title><rect x="16.8769%" y="7477" width="0.1023%" height="15" fill="rgb(249,42,33)" fg:x="495" fg:w="3"/><text x="17.1269%" y="7487.50"></text></g><g><title>hashbrown::raw::inner::h2 (1 samples, 0.03%)</title><rect x="16.9792%" y="7749" width="0.0341%" height="15" fill="rgb(242,149,17)" fg:x="498" fg:w="1"/><text x="17.2292%" y="7759.50"></text></g><g><title>hashbrown::raw::inner::likely (3 samples, 0.10%)</title><rect x="17.0133%" y="7749" width="0.1023%" height="15" fill="rgb(244,29,21)" fg:x="499" fg:w="3"/><text x="17.2633%" y="7759.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::load (1 samples, 0.03%)</title><rect x="17.1156%" y="7749" width="0.0341%" height="15" fill="rgb(220,130,37)" fg:x="502" fg:w="1"/><text x="17.3656%" y="7759.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.03%)</title><rect x="17.1156%" y="7733" width="0.0341%" height="15" fill="rgb(211,67,2)" fg:x="502" fg:w="1"/><text x="17.3656%" y="7743.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.03%)</title><rect x="17.1156%" y="7717" width="0.0341%" height="15" fill="rgb(235,68,52)" fg:x="502" fg:w="1"/><text x="17.3656%" y="7727.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_byte (2 samples, 0.07%)</title><rect x="17.1497%" y="7749" width="0.0682%" height="15" fill="rgb(246,142,3)" fg:x="503" fg:w="2"/><text x="17.3997%" y="7759.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (2 samples, 0.07%)</title><rect x="17.1497%" y="7733" width="0.0682%" height="15" fill="rgb(241,25,7)" fg:x="503" fg:w="2"/><text x="17.3997%" y="7743.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::entry (273 samples, 9.31%)</title><rect x="7.9441%" y="7813" width="9.3079%" height="15" fill="rgb(242,119,39)" fg:x="233" fg:w="273"/><text x="8.1941%" y="7823.50">indexmap::map..</text></g><g><title>indexmap::map::core::raw::&lt;impl indexmap::map::core::IndexMapCore&lt;K,V&gt;&gt;::entry (16 samples, 0.55%)</title><rect x="16.7064%" y="7797" width="0.5455%" height="15" fill="rgb(241,98,45)" fg:x="490" fg:w="16"/><text x="16.9564%" y="7807.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (15 samples, 0.51%)</title><rect x="16.7405%" y="7781" width="0.5114%" height="15" fill="rgb(254,28,30)" fg:x="491" fg:w="15"/><text x="16.9905%" y="7791.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_inner (15 samples, 0.51%)</title><rect x="16.7405%" y="7765" width="0.5114%" height="15" fill="rgb(241,142,54)" fg:x="491" fg:w="15"/><text x="16.9905%" y="7775.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_empty (1 samples, 0.03%)</title><rect x="17.2179%" y="7749" width="0.0341%" height="15" fill="rgb(222,85,15)" fg:x="505" fg:w="1"/><text x="17.4679%" y="7759.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_byte (1 samples, 0.03%)</title><rect x="17.2179%" y="7733" width="0.0341%" height="15" fill="rgb(210,85,47)" fg:x="505" fg:w="1"/><text x="17.4679%" y="7743.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.03%)</title><rect x="17.2179%" y="7717" width="0.0341%" height="15" fill="rgb(224,206,25)" fg:x="505" fg:w="1"/><text x="17.4679%" y="7727.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4 samples, 0.14%)</title><rect x="17.3542%" y="7781" width="0.1364%" height="15" fill="rgb(243,201,19)" fg:x="509" fg:w="4"/><text x="17.6042%" y="7791.50"></text></g><g><title>core::ptr::write (4 samples, 0.14%)</title><rect x="17.3542%" y="7765" width="0.1364%" height="15" fill="rgb(236,59,4)" fg:x="509" fg:w="4"/><text x="17.6042%" y="7775.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_empty_or_deleted (5 samples, 0.17%)</title><rect x="17.6611%" y="7669" width="0.1705%" height="15" fill="rgb(254,179,45)" fg:x="518" fg:w="5"/><text x="17.9111%" y="7679.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (5 samples, 0.17%)</title><rect x="17.6611%" y="7653" width="0.1705%" height="15" fill="rgb(226,14,10)" fg:x="518" fg:w="5"/><text x="17.9111%" y="7663.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::prepare_insert_slot (10 samples, 0.34%)</title><rect x="17.5929%" y="7701" width="0.3409%" height="15" fill="rgb(244,27,41)" fg:x="516" fg:w="10"/><text x="17.8429%" y="7711.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_insert_slot (10 samples, 0.34%)</title><rect x="17.5929%" y="7685" width="0.3409%" height="15" fill="rgb(235,35,32)" fg:x="516" fg:w="10"/><text x="17.8429%" y="7695.50"></text></g><g><title>hashbrown::raw::inner::unlikely (3 samples, 0.10%)</title><rect x="17.8316%" y="7669" width="0.1023%" height="15" fill="rgb(218,68,31)" fg:x="523" fg:w="3"/><text x="18.0816%" y="7679.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve (11 samples, 0.38%)</title><rect x="17.5929%" y="7765" width="0.3750%" height="15" fill="rgb(207,120,37)" fg:x="516" fg:w="11"/><text x="17.8429%" y="7775.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (11 samples, 0.38%)</title><rect x="17.5929%" y="7749" width="0.3750%" height="15" fill="rgb(227,98,0)" fg:x="516" fg:w="11"/><text x="17.8429%" y="7759.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::reserve_rehash_inner (11 samples, 0.38%)</title><rect x="17.5929%" y="7733" width="0.3750%" height="15" fill="rgb(207,7,3)" fg:x="516" fg:w="11"/><text x="17.8429%" y="7743.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::resize_inner (11 samples, 0.38%)</title><rect x="17.5929%" y="7717" width="0.3750%" height="15" fill="rgb(206,98,19)" fg:x="516" fg:w="11"/><text x="17.8429%" y="7727.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::prepare_resize (1 samples, 0.03%)</title><rect x="17.9339%" y="7701" width="0.0341%" height="15" fill="rgb(217,5,26)" fg:x="526" fg:w="1"/><text x="18.1839%" y="7711.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::fallible_with_capacity (1 samples, 0.03%)</title><rect x="17.9339%" y="7685" width="0.0341%" height="15" fill="rgb(235,190,38)" fg:x="526" fg:w="1"/><text x="18.1839%" y="7695.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::new_uninitialized (1 samples, 0.03%)</title><rect x="17.9339%" y="7669" width="0.0341%" height="15" fill="rgb(247,86,24)" fg:x="526" fg:w="1"/><text x="18.1839%" y="7679.50"></text></g><g><title>hashbrown::raw::inner::alloc::inner::do_alloc (1 samples, 0.03%)</title><rect x="17.9339%" y="7653" width="0.0341%" height="15" fill="rgb(205,101,16)" fg:x="526" fg:w="1"/><text x="18.1839%" y="7663.50"></text></g><g><title>&lt;hashbrown::raw::inner::alloc::inner::Global as hashbrown::raw::inner::alloc::inner::Allocator&gt;::allocate (1 samples, 0.03%)</title><rect x="17.9339%" y="7637" width="0.0341%" height="15" fill="rgb(246,168,33)" fg:x="526" fg:w="1"/><text x="18.1839%" y="7647.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.03%)</title><rect x="17.9339%" y="7621" width="0.0341%" height="15" fill="rgb(231,114,1)" fg:x="526" fg:w="1"/><text x="18.1839%" y="7631.50"></text></g><g><title>malloc (1 samples, 0.03%)</title><rect x="17.9339%" y="7605" width="0.0341%" height="15" fill="rgb(207,184,53)" fg:x="526" fg:w="1"/><text x="18.1839%" y="7615.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="17.9339%" y="7589" width="0.0341%" height="15" fill="rgb(224,95,51)" fg:x="526" fg:w="1"/><text x="18.1839%" y="7599.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="17.9339%" y="7573" width="0.0341%" height="15" fill="rgb(212,188,45)" fg:x="526" fg:w="1"/><text x="18.1839%" y="7583.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_empty_or_deleted (2 samples, 0.07%)</title><rect x="18.0361%" y="7749" width="0.0682%" height="15" fill="rgb(223,154,38)" fg:x="529" fg:w="2"/><text x="18.2861%" y="7759.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (2 samples, 0.07%)</title><rect x="18.0361%" y="7733" width="0.0682%" height="15" fill="rgb(251,22,52)" fg:x="529" fg:w="2"/><text x="18.2861%" y="7743.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_insert_slot (6 samples, 0.20%)</title><rect x="17.9680%" y="7765" width="0.2046%" height="15" fill="rgb(229,209,22)" fg:x="527" fg:w="6"/><text x="18.2180%" y="7775.50"></text></g><g><title>hashbrown::raw::inner::unlikely (2 samples, 0.07%)</title><rect x="18.1043%" y="7749" width="0.0682%" height="15" fill="rgb(234,138,34)" fg:x="531" fg:w="2"/><text x="18.3543%" y="7759.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::insert (21 samples, 0.72%)</title><rect x="17.4906%" y="7781" width="0.7160%" height="15" fill="rgb(212,95,11)" fg:x="513" fg:w="21"/><text x="17.7406%" y="7791.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::record_item_insert_at (1 samples, 0.03%)</title><rect x="18.1725%" y="7765" width="0.0341%" height="15" fill="rgb(240,179,47)" fg:x="533" fg:w="1"/><text x="18.4225%" y="7775.50"></text></g><g><title>indexmap::map::core::VacantEntry&lt;K,V&gt;::insert (34 samples, 1.16%)</title><rect x="17.2520%" y="7813" width="1.1592%" height="15" fill="rgb(240,163,11)" fg:x="506" fg:w="34"/><text x="17.5020%" y="7823.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::push (33 samples, 1.13%)</title><rect x="17.2861%" y="7797" width="1.1251%" height="15" fill="rgb(236,37,12)" fg:x="507" fg:w="33"/><text x="17.5361%" y="7807.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::reserve_entries (6 samples, 0.20%)</title><rect x="18.2066%" y="7781" width="0.2046%" height="15" fill="rgb(232,164,16)" fg:x="534" fg:w="6"/><text x="18.4566%" y="7791.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve_exact (6 samples, 0.20%)</title><rect x="18.2066%" y="7765" width="0.2046%" height="15" fill="rgb(244,205,15)" fg:x="534" fg:w="6"/><text x="18.4566%" y="7775.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (6 samples, 0.20%)</title><rect x="18.2066%" y="7749" width="0.2046%" height="15" fill="rgb(223,117,47)" fg:x="534" fg:w="6"/><text x="18.4566%" y="7759.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (6 samples, 0.20%)</title><rect x="18.2066%" y="7733" width="0.2046%" height="15" fill="rgb(244,107,35)" fg:x="534" fg:w="6"/><text x="18.4566%" y="7743.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (6 samples, 0.20%)</title><rect x="18.2066%" y="7717" width="0.2046%" height="15" fill="rgb(205,140,8)" fg:x="534" fg:w="6"/><text x="18.4566%" y="7727.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.20%)</title><rect x="18.2066%" y="7701" width="0.2046%" height="15" fill="rgb(228,84,46)" fg:x="534" fg:w="6"/><text x="18.4566%" y="7711.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (5 samples, 0.17%)</title><rect x="18.2407%" y="7685" width="0.1705%" height="15" fill="rgb(254,188,9)" fg:x="535" fg:w="5"/><text x="18.4907%" y="7695.50"></text></g><g><title>alloc::alloc::Global::grow_impl (5 samples, 0.17%)</title><rect x="18.2407%" y="7669" width="0.1705%" height="15" fill="rgb(206,112,54)" fg:x="535" fg:w="5"/><text x="18.4907%" y="7679.50"></text></g><g><title>alloc::alloc::realloc (5 samples, 0.17%)</title><rect x="18.2407%" y="7653" width="0.1705%" height="15" fill="rgb(216,84,49)" fg:x="535" fg:w="5"/><text x="18.4907%" y="7663.50"></text></g><g><title>realloc (5 samples, 0.17%)</title><rect x="18.2407%" y="7637" width="0.1705%" height="15" fill="rgb(214,194,35)" fg:x="535" fg:w="5"/><text x="18.4907%" y="7647.50"></text></g><g><title>[libc.so.6] (5 samples, 0.17%)</title><rect x="18.2407%" y="7621" width="0.1705%" height="15" fill="rgb(249,28,3)" fg:x="535" fg:w="5"/><text x="18.4907%" y="7631.50"></text></g><g><title>[libc.so.6] (5 samples, 0.17%)</title><rect x="18.2407%" y="7605" width="0.1705%" height="15" fill="rgb(222,56,52)" fg:x="535" fg:w="5"/><text x="18.4907%" y="7615.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="18.3430%" y="7589" width="0.0682%" height="15" fill="rgb(245,217,50)" fg:x="538" fg:w="2"/><text x="18.5930%" y="7599.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::lt (1 samples, 0.03%)</title><rect x="18.5135%" y="7797" width="0.0341%" height="15" fill="rgb(213,201,24)" fg:x="543" fg:w="1"/><text x="18.7635%" y="7807.50"></text></g><g><title>priority_queue::priority_queue::PriorityQueue&lt;I,P,H&gt;::push (320 samples, 10.91%)</title><rect x="7.6713%" y="7829" width="10.9103%" height="15" fill="rgb(248,116,28)" fg:x="225" fg:w="320"/><text x="7.9213%" y="7839.50">priority_queue::..</text></g><g><title>priority_queue::priority_queue::PriorityQueue&lt;I,P,H&gt;::bubble_up (5 samples, 0.17%)</title><rect x="18.4112%" y="7813" width="0.1705%" height="15" fill="rgb(219,72,43)" fg:x="540" fg:w="5"/><text x="18.6612%" y="7823.50"></text></g><g><title>priority_queue::priority_queue::parent (1 samples, 0.03%)</title><rect x="18.5476%" y="7797" width="0.0341%" height="15" fill="rgb(209,138,14)" fg:x="544" fg:w="1"/><text x="18.7976%" y="7807.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4 samples, 0.14%)</title><rect x="18.6498%" y="7701" width="0.1364%" height="15" fill="rgb(222,18,33)" fg:x="547" fg:w="4"/><text x="18.8998%" y="7711.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.10%)</title><rect x="18.6839%" y="7685" width="0.1023%" height="15" fill="rgb(213,199,7)" fg:x="548" fg:w="3"/><text x="18.9339%" y="7695.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (5 samples, 0.17%)</title><rect x="18.7862%" y="7685" width="0.1705%" height="15" fill="rgb(250,110,10)" fg:x="551" fg:w="5"/><text x="19.0362%" y="7695.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (10 samples, 0.34%)</title><rect x="18.6498%" y="7749" width="0.3409%" height="15" fill="rgb(248,123,6)" fg:x="547" fg:w="10"/><text x="18.8998%" y="7759.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (10 samples, 0.34%)</title><rect x="18.6498%" y="7733" width="0.3409%" height="15" fill="rgb(206,91,31)" fg:x="547" fg:w="10"/><text x="18.8998%" y="7743.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (10 samples, 0.34%)</title><rect x="18.6498%" y="7717" width="0.3409%" height="15" fill="rgb(211,154,13)" fg:x="547" fg:w="10"/><text x="18.8998%" y="7727.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (6 samples, 0.20%)</title><rect x="18.7862%" y="7701" width="0.2046%" height="15" fill="rgb(225,148,7)" fg:x="551" fg:w="6"/><text x="19.0362%" y="7711.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.03%)</title><rect x="18.9567%" y="7685" width="0.0341%" height="15" fill="rgb(220,160,43)" fg:x="556" fg:w="1"/><text x="19.2067%" y="7695.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (43 samples, 1.47%)</title><rect x="19.1954%" y="7701" width="1.4661%" height="15" fill="rgb(213,52,39)" fg:x="563" fg:w="43"/><text x="19.4454%" y="7711.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (30 samples, 1.02%)</title><rect x="19.6386%" y="7685" width="1.0228%" height="15" fill="rgb(243,137,7)" fg:x="576" fg:w="30"/><text x="19.8886%" y="7695.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (9 samples, 0.31%)</title><rect x="20.6614%" y="7669" width="0.3069%" height="15" fill="rgb(230,79,13)" fg:x="606" fg:w="9"/><text x="20.9114%" y="7679.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (7 samples, 0.24%)</title><rect x="20.7296%" y="7653" width="0.2387%" height="15" fill="rgb(247,105,23)" fg:x="608" fg:w="7"/><text x="20.9796%" y="7663.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.24%)</title><rect x="20.7296%" y="7637" width="0.2387%" height="15" fill="rgb(223,179,41)" fg:x="608" fg:w="7"/><text x="20.9796%" y="7647.50"></text></g><g><title>core::hash::sip::u8to64_le (6 samples, 0.20%)</title><rect x="20.7637%" y="7621" width="0.2046%" height="15" fill="rgb(218,9,34)" fg:x="609" fg:w="6"/><text x="21.0137%" y="7631.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.10%)</title><rect x="20.8660%" y="7605" width="0.1023%" height="15" fill="rgb(222,106,8)" fg:x="612" fg:w="3"/><text x="21.1160%" y="7615.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for char&gt;::hash (13 samples, 0.44%)</title><rect x="20.6614%" y="7701" width="0.4432%" height="15" fill="rgb(211,220,0)" fg:x="606" fg:w="13"/><text x="20.9114%" y="7711.50"></text></g><g><title>core::hash::Hasher::write_u32 (13 samples, 0.44%)</title><rect x="20.6614%" y="7685" width="0.4432%" height="15" fill="rgb(229,52,16)" fg:x="606" fg:w="13"/><text x="20.9114%" y="7695.50"></text></g><g><title>core::num::&lt;impl u32&gt;::to_ne_bytes (4 samples, 0.14%)</title><rect x="20.9683%" y="7669" width="0.1364%" height="15" fill="rgb(212,155,18)" fg:x="615" fg:w="4"/><text x="21.2183%" y="7679.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (8 samples, 0.27%)</title><rect x="22.3321%" y="7605" width="0.2728%" height="15" fill="rgb(242,21,14)" fg:x="655" fg:w="8"/><text x="22.5821%" y="7615.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (21 samples, 0.72%)</title><rect x="22.1957%" y="7621" width="0.7160%" height="15" fill="rgb(222,19,48)" fg:x="651" fg:w="21"/><text x="22.4457%" y="7631.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (9 samples, 0.31%)</title><rect x="22.6048%" y="7605" width="0.3069%" height="15" fill="rgb(232,45,27)" fg:x="663" fg:w="9"/><text x="22.8548%" y="7615.50"></text></g><g><title>core::cmp::min (29 samples, 0.99%)</title><rect x="22.9117%" y="7621" width="0.9887%" height="15" fill="rgb(249,103,42)" fg:x="672" fg:w="29"/><text x="23.1617%" y="7631.50"></text></g><g><title>core::cmp::Ord::min (29 samples, 0.99%)</title><rect x="22.9117%" y="7605" width="0.9887%" height="15" fill="rgb(246,81,33)" fg:x="672" fg:w="29"/><text x="23.1617%" y="7615.50"></text></g><g><title>core::cmp::min_by (29 samples, 0.99%)</title><rect x="22.9117%" y="7589" width="0.9887%" height="15" fill="rgb(252,33,42)" fg:x="672" fg:w="29"/><text x="23.1617%" y="7599.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (106 samples, 3.61%)</title><rect x="21.1047%" y="7669" width="3.6140%" height="15" fill="rgb(209,212,41)" fg:x="619" fg:w="106"/><text x="21.3547%" y="7679.50">&lt;std..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (106 samples, 3.61%)</title><rect x="21.1047%" y="7653" width="3.6140%" height="15" fill="rgb(207,154,6)" fg:x="619" fg:w="106"/><text x="21.3547%" y="7663.50">&lt;cor..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (106 samples, 3.61%)</title><rect x="21.1047%" y="7637" width="3.6140%" height="15" fill="rgb(223,64,47)" fg:x="619" fg:w="106"/><text x="21.3547%" y="7647.50">&lt;cor..</text></g><g><title>core::hash::sip::u8to64_le (24 samples, 0.82%)</title><rect x="23.9004%" y="7621" width="0.8183%" height="15" fill="rgb(211,161,38)" fg:x="701" fg:w="24"/><text x="24.1504%" y="7631.50"></text></g><g><title>hashbrown::map::make_hash (210 samples, 7.16%)</title><rect x="18.6158%" y="7781" width="7.1599%" height="15" fill="rgb(219,138,40)" fg:x="546" fg:w="210"/><text x="18.8658%" y="7791.50">hashbrown:..</text></g><g><title>core::hash::BuildHasher::hash_one (210 samples, 7.16%)</title><rect x="18.6158%" y="7765" width="7.1599%" height="15" fill="rgb(241,228,46)" fg:x="546" fg:w="210"/><text x="18.8658%" y="7775.50">core::hash..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (199 samples, 6.78%)</title><rect x="18.9908%" y="7749" width="6.7849%" height="15" fill="rgb(223,209,38)" fg:x="557" fg:w="199"/><text x="19.2408%" y="7759.50">core::has..</text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::hash::Hash&gt;::hash (199 samples, 6.78%)</title><rect x="18.9908%" y="7733" width="6.7849%" height="15" fill="rgb(236,164,45)" fg:x="557" fg:w="199"/><text x="19.2408%" y="7743.50">&lt;alloc::r..</text></g><g><title>&lt;tetrs::logic::state::GameState as core::hash::Hash&gt;::hash (199 samples, 6.78%)</title><rect x="18.9908%" y="7717" width="6.7849%" height="15" fill="rgb(231,15,5)" fg:x="557" fg:w="199"/><text x="19.2408%" y="7727.50">&lt;tetrs::l..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (137 samples, 4.67%)</title><rect x="21.1047%" y="7701" width="4.6710%" height="15" fill="rgb(252,35,15)" fg:x="619" fg:w="137"/><text x="21.3547%" y="7711.50">core:..</text></g><g><title>core::hash::Hasher::write_u16 (137 samples, 4.67%)</title><rect x="21.1047%" y="7685" width="4.6710%" height="15" fill="rgb(248,181,18)" fg:x="619" fg:w="137"/><text x="21.3547%" y="7695.50">core:..</text></g><g><title>core::num::&lt;impl u16&gt;::to_ne_bytes (31 samples, 1.06%)</title><rect x="24.7187%" y="7669" width="1.0569%" height="15" fill="rgb(233,39,42)" fg:x="725" fg:w="31"/><text x="24.9687%" y="7679.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.07%)</title><rect x="25.9461%" y="7573" width="0.0682%" height="15" fill="rgb(238,110,33)" fg:x="761" fg:w="2"/><text x="26.1961%" y="7583.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (7 samples, 0.24%)</title><rect x="25.9461%" y="7589" width="0.2387%" height="15" fill="rgb(233,195,10)" fg:x="761" fg:w="7"/><text x="26.1961%" y="7599.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (5 samples, 0.17%)</title><rect x="26.0143%" y="7573" width="0.1705%" height="15" fill="rgb(254,105,3)" fg:x="763" fg:w="5"/><text x="26.2643%" y="7583.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (9 samples, 0.31%)</title><rect x="26.1848%" y="7573" width="0.3069%" height="15" fill="rgb(221,225,9)" fg:x="768" fg:w="9"/><text x="26.4348%" y="7583.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (22 samples, 0.75%)</title><rect x="25.8438%" y="7637" width="0.7501%" height="15" fill="rgb(224,227,45)" fg:x="758" fg:w="22"/><text x="26.0938%" y="7647.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (22 samples, 0.75%)</title><rect x="25.8438%" y="7621" width="0.7501%" height="15" fill="rgb(229,198,43)" fg:x="758" fg:w="22"/><text x="26.0938%" y="7631.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (22 samples, 0.75%)</title><rect x="25.8438%" y="7605" width="0.7501%" height="15" fill="rgb(206,209,35)" fg:x="758" fg:w="22"/><text x="26.0938%" y="7615.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (12 samples, 0.41%)</title><rect x="26.1848%" y="7589" width="0.4091%" height="15" fill="rgb(245,195,53)" fg:x="768" fg:w="12"/><text x="26.4348%" y="7599.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.10%)</title><rect x="26.4916%" y="7573" width="0.1023%" height="15" fill="rgb(240,92,26)" fg:x="777" fg:w="3"/><text x="26.7416%" y="7583.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.03%)</title><rect x="26.5939%" y="7637" width="0.0341%" height="15" fill="rgb(207,40,23)" fg:x="780" fg:w="1"/><text x="26.8439%" y="7647.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.03%)</title><rect x="26.5939%" y="7621" width="0.0341%" height="15" fill="rgb(223,111,35)" fg:x="780" fg:w="1"/><text x="26.8439%" y="7631.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.03%)</title><rect x="26.5939%" y="7605" width="0.0341%" height="15" fill="rgb(229,147,28)" fg:x="780" fg:w="1"/><text x="26.8439%" y="7615.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.03%)</title><rect x="26.5939%" y="7589" width="0.0341%" height="15" fill="rgb(211,29,28)" fg:x="780" fg:w="1"/><text x="26.8439%" y="7599.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.68%)</title><rect x="27.1054%" y="7589" width="0.6819%" height="15" fill="rgb(228,72,33)" fg:x="795" fg:w="20"/><text x="27.3554%" y="7599.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (16 samples, 0.55%)</title><rect x="27.2417%" y="7573" width="0.5455%" height="15" fill="rgb(205,214,31)" fg:x="799" fg:w="16"/><text x="27.4917%" y="7583.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.03%)</title><rect x="27.9236%" y="7509" width="0.0341%" height="15" fill="rgb(224,111,15)" fg:x="819" fg:w="1"/><text x="28.1736%" y="7519.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.03%)</title><rect x="27.9236%" y="7493" width="0.0341%" height="15" fill="rgb(253,21,26)" fg:x="819" fg:w="1"/><text x="28.1736%" y="7503.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (7 samples, 0.24%)</title><rect x="27.7872%" y="7557" width="0.2387%" height="15" fill="rgb(245,139,43)" fg:x="815" fg:w="7"/><text x="28.0372%" y="7567.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (6 samples, 0.20%)</title><rect x="27.8213%" y="7541" width="0.2046%" height="15" fill="rgb(252,170,7)" fg:x="816" fg:w="6"/><text x="28.0713%" y="7551.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.20%)</title><rect x="27.8213%" y="7525" width="0.2046%" height="15" fill="rgb(231,118,14)" fg:x="816" fg:w="6"/><text x="28.0713%" y="7535.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.07%)</title><rect x="27.9577%" y="7509" width="0.0682%" height="15" fill="rgb(238,83,0)" fg:x="820" fg:w="2"/><text x="28.2077%" y="7519.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.03%)</title><rect x="27.9918%" y="7493" width="0.0341%" height="15" fill="rgb(221,39,39)" fg:x="821" fg:w="1"/><text x="28.2418%" y="7503.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for char&gt;::hash (12 samples, 0.41%)</title><rect x="27.7872%" y="7589" width="0.4091%" height="15" fill="rgb(222,119,46)" fg:x="815" fg:w="12"/><text x="28.0372%" y="7599.50"></text></g><g><title>core::hash::Hasher::write_u32 (12 samples, 0.41%)</title><rect x="27.7872%" y="7573" width="0.4091%" height="15" fill="rgb(222,165,49)" fg:x="815" fg:w="12"/><text x="28.0372%" y="7583.50"></text></g><g><title>core::num::&lt;impl u32&gt;::to_ne_bytes (5 samples, 0.17%)</title><rect x="28.0259%" y="7557" width="0.1705%" height="15" fill="rgb(219,113,52)" fg:x="822" fg:w="5"/><text x="28.2759%" y="7567.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (20 samples, 0.68%)</title><rect x="29.8670%" y="7493" width="0.6819%" height="15" fill="rgb(214,7,15)" fg:x="876" fg:w="20"/><text x="30.1170%" y="7503.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (42 samples, 1.43%)</title><rect x="29.4920%" y="7509" width="1.4320%" height="15" fill="rgb(235,32,4)" fg:x="865" fg:w="42"/><text x="29.7420%" y="7519.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (11 samples, 0.38%)</title><rect x="30.5489%" y="7493" width="0.3750%" height="15" fill="rgb(238,90,54)" fg:x="896" fg:w="11"/><text x="30.7989%" y="7503.50"></text></g><g><title>core::cmp::min (20 samples, 0.68%)</title><rect x="30.9240%" y="7509" width="0.6819%" height="15" fill="rgb(213,208,19)" fg:x="907" fg:w="20"/><text x="31.1740%" y="7519.50"></text></g><g><title>core::cmp::Ord::min (20 samples, 0.68%)</title><rect x="30.9240%" y="7493" width="0.6819%" height="15" fill="rgb(233,156,4)" fg:x="907" fg:w="20"/><text x="31.1740%" y="7503.50"></text></g><g><title>core::cmp::min_by (20 samples, 0.68%)</title><rect x="30.9240%" y="7477" width="0.6819%" height="15" fill="rgb(207,194,5)" fg:x="907" fg:w="20"/><text x="31.1740%" y="7487.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (127 samples, 4.33%)</title><rect x="28.1964%" y="7557" width="4.3300%" height="15" fill="rgb(206,111,30)" fg:x="827" fg:w="127"/><text x="28.4464%" y="7567.50">&lt;std:..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (127 samples, 4.33%)</title><rect x="28.1964%" y="7541" width="4.3300%" height="15" fill="rgb(243,70,54)" fg:x="827" fg:w="127"/><text x="28.4464%" y="7551.50">&lt;core..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (127 samples, 4.33%)</title><rect x="28.1964%" y="7525" width="4.3300%" height="15" fill="rgb(242,28,8)" fg:x="827" fg:w="127"/><text x="28.4464%" y="7535.50">&lt;core..</text></g><g><title>core::hash::sip::u8to64_le (27 samples, 0.92%)</title><rect x="31.6059%" y="7509" width="0.9206%" height="15" fill="rgb(219,106,18)" fg:x="927" fg:w="27"/><text x="31.8559%" y="7519.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (225 samples, 7.67%)</title><rect x="25.8098%" y="7701" width="7.6713%" height="15" fill="rgb(244,222,10)" fg:x="757" fg:w="225"/><text x="26.0598%" y="7711.50">hashbrown::..</text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (225 samples, 7.67%)</title><rect x="25.8098%" y="7685" width="7.6713%" height="15" fill="rgb(236,179,52)" fg:x="757" fg:w="225"/><text x="26.0598%" y="7695.50">hashbrown::..</text></g><g><title>hashbrown::map::make_hash (225 samples, 7.67%)</title><rect x="25.8098%" y="7669" width="7.6713%" height="15" fill="rgb(213,23,39)" fg:x="757" fg:w="225"/><text x="26.0598%" y="7679.50">hashbrown::..</text></g><g><title>core::hash::BuildHasher::hash_one (225 samples, 7.67%)</title><rect x="25.8098%" y="7653" width="7.6713%" height="15" fill="rgb(238,48,10)" fg:x="757" fg:w="225"/><text x="26.0598%" y="7663.50">core::hash:..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (201 samples, 6.85%)</title><rect x="26.6280%" y="7637" width="6.8531%" height="15" fill="rgb(251,196,23)" fg:x="781" fg:w="201"/><text x="26.8780%" y="7647.50">core::has..</text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::hash::Hash&gt;::hash (201 samples, 6.85%)</title><rect x="26.6280%" y="7621" width="6.8531%" height="15" fill="rgb(250,152,24)" fg:x="781" fg:w="201"/><text x="26.8780%" y="7631.50">&lt;alloc::r..</text></g><g><title>&lt;tetrs::logic::state::GameState as core::hash::Hash&gt;::hash (201 samples, 6.85%)</title><rect x="26.6280%" y="7605" width="6.8531%" height="15" fill="rgb(209,150,17)" fg:x="781" fg:w="201"/><text x="26.8780%" y="7615.50">&lt;tetrs::l..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (155 samples, 5.28%)</title><rect x="28.1964%" y="7589" width="5.2847%" height="15" fill="rgb(234,202,34)" fg:x="827" fg:w="155"/><text x="28.4464%" y="7599.50">core::..</text></g><g><title>core::hash::Hasher::write_u16 (155 samples, 5.28%)</title><rect x="28.1964%" y="7573" width="5.2847%" height="15" fill="rgb(253,148,53)" fg:x="827" fg:w="155"/><text x="28.4464%" y="7583.50">core::..</text></g><g><title>core::num::&lt;impl u16&gt;::to_ne_bytes (28 samples, 0.95%)</title><rect x="32.5264%" y="7557" width="0.9547%" height="15" fill="rgb(218,129,16)" fg:x="954" fg:w="28"/><text x="32.7764%" y="7567.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot_in_group (2 samples, 0.07%)</title><rect x="33.6516%" y="7669" width="0.0682%" height="15" fill="rgb(216,85,19)" fg:x="987" fg:w="2"/><text x="33.9016%" y="7679.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.03%)</title><rect x="33.6856%" y="7653" width="0.0341%" height="15" fill="rgb(235,228,7)" fg:x="988" fg:w="1"/><text x="33.9356%" y="7663.50"></text></g><g><title>core::num::nonzero::NonZeroU16::new (1 samples, 0.03%)</title><rect x="33.6856%" y="7637" width="0.0341%" height="15" fill="rgb(245,175,0)" fg:x="988" fg:w="1"/><text x="33.9356%" y="7647.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fix_insert_slot (2 samples, 0.07%)</title><rect x="33.7197%" y="7669" width="0.0682%" height="15" fill="rgb(208,168,36)" fg:x="989" fg:w="2"/><text x="33.9697%" y="7679.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_bucket_full (2 samples, 0.07%)</title><rect x="33.7197%" y="7653" width="0.0682%" height="15" fill="rgb(246,171,24)" fg:x="989" fg:w="2"/><text x="33.9697%" y="7663.50"></text></g><g><title>hashbrown::raw::is_full (2 samples, 0.07%)</title><rect x="33.7197%" y="7637" width="0.0682%" height="15" fill="rgb(215,142,24)" fg:x="989" fg:w="2"/><text x="33.9697%" y="7647.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (10 samples, 0.34%)</title><rect x="33.4811%" y="7685" width="0.3409%" height="15" fill="rgb(250,187,7)" fg:x="982" fg:w="10"/><text x="33.7311%" y="7695.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (1 samples, 0.03%)</title><rect x="33.7879%" y="7669" width="0.0341%" height="15" fill="rgb(228,66,33)" fg:x="991" fg:w="1"/><text x="34.0379%" y="7679.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (12 samples, 0.41%)</title><rect x="33.4811%" y="7701" width="0.4091%" height="15" fill="rgb(234,215,21)" fg:x="982" fg:w="12"/><text x="33.7311%" y="7711.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (2 samples, 0.07%)</title><rect x="33.8220%" y="7685" width="0.0682%" height="15" fill="rgb(222,191,20)" fg:x="992" fg:w="2"/><text x="34.0720%" y="7695.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl (2 samples, 0.07%)</title><rect x="33.8220%" y="7669" width="0.0682%" height="15" fill="rgb(245,79,54)" fg:x="992" fg:w="2"/><text x="34.0720%" y="7679.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (238 samples, 8.11%)</title><rect x="25.8098%" y="7765" width="8.1146%" height="15" fill="rgb(240,10,37)" fg:x="757" fg:w="238"/><text x="26.0598%" y="7775.50">hashbrown::..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (238 samples, 8.11%)</title><rect x="25.8098%" y="7749" width="8.1146%" height="15" fill="rgb(214,192,32)" fg:x="757" fg:w="238"/><text x="26.0598%" y="7759.50">hashbrown::..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (238 samples, 8.11%)</title><rect x="25.8098%" y="7733" width="8.1146%" height="15" fill="rgb(209,36,54)" fg:x="757" fg:w="238"/><text x="26.0598%" y="7743.50">hashbrown::..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (238 samples, 8.11%)</title><rect x="25.8098%" y="7717" width="8.1146%" height="15" fill="rgb(220,10,11)" fg:x="757" fg:w="238"/><text x="26.0598%" y="7727.50">hashbrown::..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (1 samples, 0.03%)</title><rect x="33.8902%" y="7701" width="0.0341%" height="15" fill="rgb(221,106,17)" fg:x="994" fg:w="1"/><text x="34.1402%" y="7711.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (1 samples, 0.03%)</title><rect x="33.8902%" y="7685" width="0.0341%" height="15" fill="rgb(251,142,44)" fg:x="994" fg:w="1"/><text x="34.1402%" y="7695.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (1 samples, 0.03%)</title><rect x="33.8902%" y="7669" width="0.0341%" height="15" fill="rgb(238,13,15)" fg:x="994" fg:w="1"/><text x="34.1402%" y="7679.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.03%)</title><rect x="33.8902%" y="7653" width="0.0341%" height="15" fill="rgb(208,107,27)" fg:x="994" fg:w="1"/><text x="34.1402%" y="7663.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.03%)</title><rect x="33.8902%" y="7637" width="0.0341%" height="15" fill="rgb(205,136,37)" fg:x="994" fg:w="1"/><text x="34.1402%" y="7647.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="33.8902%" y="7621" width="0.0341%" height="15" fill="rgb(250,205,27)" fg:x="994" fg:w="1"/><text x="34.1402%" y="7631.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.03%)</title><rect x="33.8902%" y="7605" width="0.0341%" height="15" fill="rgb(210,80,43)" fg:x="994" fg:w="1"/><text x="34.1402%" y="7615.50"></text></g><g><title>malloc (1 samples, 0.03%)</title><rect x="33.8902%" y="7589" width="0.0341%" height="15" fill="rgb(247,160,36)" fg:x="994" fg:w="1"/><text x="34.1402%" y="7599.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="33.8902%" y="7573" width="0.0341%" height="15" fill="rgb(234,13,49)" fg:x="994" fg:w="1"/><text x="34.1402%" y="7583.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="33.9243%" y="7749" width="0.0341%" height="15" fill="rgb(234,122,0)" fg:x="995" fg:w="1"/><text x="34.1743%" y="7759.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot::_{{closure}} (3 samples, 0.10%)</title><rect x="33.9584%" y="7749" width="0.1023%" height="15" fill="rgb(207,146,38)" fg:x="996" fg:w="3"/><text x="34.2084%" y="7759.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (3 samples, 0.10%)</title><rect x="33.9584%" y="7733" width="0.1023%" height="15" fill="rgb(207,177,25)" fg:x="996" fg:w="3"/><text x="34.2084%" y="7743.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (3 samples, 0.10%)</title><rect x="33.9584%" y="7717" width="0.1023%" height="15" fill="rgb(211,178,42)" fg:x="996" fg:w="3"/><text x="34.2084%" y="7727.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.10%)</title><rect x="33.9584%" y="7701" width="0.1023%" height="15" fill="rgb(230,69,54)" fg:x="996" fg:w="3"/><text x="34.2084%" y="7711.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.10%)</title><rect x="33.9584%" y="7685" width="0.1023%" height="15" fill="rgb(214,135,41)" fg:x="996" fg:w="3"/><text x="34.2084%" y="7695.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as alloc::rc::RcEqIdent&lt;T,A&gt;&gt;::eq (3 samples, 0.10%)</title><rect x="33.9584%" y="7669" width="0.1023%" height="15" fill="rgb(237,67,25)" fg:x="996" fg:w="3"/><text x="34.2084%" y="7679.50"></text></g><g><title>&lt;tetrs::logic::state::GameState as core::cmp::PartialEq&gt;::eq (3 samples, 0.10%)</title><rect x="33.9584%" y="7653" width="0.1023%" height="15" fill="rgb(222,189,50)" fg:x="996" fg:w="3"/><text x="34.2084%" y="7663.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (3 samples, 0.10%)</title><rect x="33.9584%" y="7637" width="0.1023%" height="15" fill="rgb(245,148,34)" fg:x="996" fg:w="3"/><text x="34.2084%" y="7647.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3 samples, 0.10%)</title><rect x="33.9584%" y="7621" width="0.1023%" height="15" fill="rgb(222,29,6)" fg:x="996" fg:w="3"/><text x="34.2084%" y="7631.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3 samples, 0.10%)</title><rect x="33.9584%" y="7605" width="0.1023%" height="15" fill="rgb(221,189,43)" fg:x="996" fg:w="3"/><text x="34.2084%" y="7615.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (3 samples, 0.10%)</title><rect x="33.9584%" y="7589" width="0.1023%" height="15" fill="rgb(207,36,27)" fg:x="996" fg:w="3"/><text x="34.2084%" y="7599.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.10%)</title><rect x="33.9584%" y="7573" width="0.1023%" height="15" fill="rgb(217,90,24)" fg:x="996" fg:w="3"/><text x="34.2084%" y="7583.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (3 samples, 0.10%)</title><rect x="33.9584%" y="7557" width="0.1023%" height="15" fill="rgb(224,66,35)" fg:x="996" fg:w="3"/><text x="34.2084%" y="7567.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::_{{closure}} (3 samples, 0.10%)</title><rect x="33.9584%" y="7541" width="0.1023%" height="15" fill="rgb(221,13,50)" fg:x="996" fg:w="3"/><text x="34.2084%" y="7551.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.10%)</title><rect x="33.9584%" y="7525" width="0.1023%" height="15" fill="rgb(236,68,49)" fg:x="996" fg:w="3"/><text x="34.2084%" y="7535.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (3 samples, 0.10%)</title><rect x="33.9584%" y="7509" width="0.1023%" height="15" fill="rgb(229,146,28)" fg:x="996" fg:w="3"/><text x="34.2084%" y="7519.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3 samples, 0.10%)</title><rect x="33.9584%" y="7493" width="0.1023%" height="15" fill="rgb(225,31,38)" fg:x="996" fg:w="3"/><text x="34.2084%" y="7503.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3 samples, 0.10%)</title><rect x="33.9584%" y="7477" width="0.1023%" height="15" fill="rgb(250,208,3)" fg:x="996" fg:w="3"/><text x="34.2084%" y="7487.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="33.9925%" y="7461" width="0.0682%" height="15" fill="rgb(246,54,23)" fg:x="997" fg:w="2"/><text x="34.2425%" y="7471.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot_in_group (3 samples, 0.10%)</title><rect x="34.0607%" y="7749" width="0.1023%" height="15" fill="rgb(243,76,11)" fg:x="999" fg:w="3"/><text x="34.3107%" y="7759.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (3 samples, 0.10%)</title><rect x="34.0607%" y="7733" width="0.1023%" height="15" fill="rgb(245,21,50)" fg:x="999" fg:w="3"/><text x="34.3107%" y="7743.50"></text></g><g><title>core::num::nonzero::NonZeroU16::new (3 samples, 0.10%)</title><rect x="34.0607%" y="7717" width="0.1023%" height="15" fill="rgb(228,9,43)" fg:x="999" fg:w="3"/><text x="34.3107%" y="7727.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fix_insert_slot (4 samples, 0.14%)</title><rect x="34.1630%" y="7749" width="0.1364%" height="15" fill="rgb(208,100,47)" fg:x="1002" fg:w="4"/><text x="34.4130%" y="7759.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.03%)</title><rect x="34.2994%" y="7749" width="0.0341%" height="15" fill="rgb(232,26,8)" fg:x="1006" fg:w="1"/><text x="34.5494%" y="7759.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.03%)</title><rect x="34.3334%" y="7749" width="0.0341%" height="15" fill="rgb(216,166,38)" fg:x="1007" fg:w="1"/><text x="34.5834%" y="7759.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.03%)</title><rect x="34.3334%" y="7733" width="0.0341%" height="15" fill="rgb(251,202,51)" fg:x="1007" fg:w="1"/><text x="34.5834%" y="7743.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.03%)</title><rect x="34.3334%" y="7717" width="0.0341%" height="15" fill="rgb(254,216,34)" fg:x="1007" fg:w="1"/><text x="34.5834%" y="7727.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (254 samples, 8.66%)</title><rect x="25.7757%" y="7781" width="8.6601%" height="15" fill="rgb(251,32,27)" fg:x="756" fg:w="254"/><text x="26.0257%" y="7791.50">hashbrown::r..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_or_find_insert_slot_inner (15 samples, 0.51%)</title><rect x="33.9243%" y="7765" width="0.5114%" height="15" fill="rgb(208,127,28)" fg:x="995" fg:w="15"/><text x="34.1743%" y="7775.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.07%)</title><rect x="34.3675%" y="7749" width="0.0682%" height="15" fill="rgb(224,137,22)" fg:x="1008" fg:w="2"/><text x="34.6175%" y="7759.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (2 samples, 0.07%)</title><rect x="34.3675%" y="7733" width="0.0682%" height="15" fill="rgb(254,70,32)" fg:x="1008" fg:w="2"/><text x="34.6175%" y="7743.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (1 samples, 0.03%)</title><rect x="34.4357%" y="7765" width="0.0341%" height="15" fill="rgb(229,75,37)" fg:x="1010" fg:w="1"/><text x="34.6857%" y="7775.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1 samples, 0.03%)</title><rect x="34.4357%" y="7749" width="0.0341%" height="15" fill="rgb(252,64,23)" fg:x="1010" fg:w="1"/><text x="34.6857%" y="7759.50"></text></g><g><title>core::ptr::write (1 samples, 0.03%)</title><rect x="34.4357%" y="7733" width="0.0341%" height="15" fill="rgb(232,162,48)" fg:x="1010" fg:w="1"/><text x="34.6857%" y="7743.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (467 samples, 15.92%)</title><rect x="18.5817%" y="7829" width="15.9223%" height="15" fill="rgb(246,160,12)" fg:x="545" fg:w="467"/><text x="18.8317%" y="7839.50">std::collections::hash::..</text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (467 samples, 15.92%)</title><rect x="18.5817%" y="7813" width="15.9223%" height="15" fill="rgb(247,166,0)" fg:x="545" fg:w="467"/><text x="18.8317%" y="7823.50">hashbrown::set::HashSet&lt;..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (467 samples, 15.92%)</title><rect x="18.5817%" y="7797" width="15.9223%" height="15" fill="rgb(249,219,21)" fg:x="545" fg:w="467"/><text x="18.8317%" y="7807.50">hashbrown::map::HashMap&lt;..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (2 samples, 0.07%)</title><rect x="34.4357%" y="7781" width="0.0682%" height="15" fill="rgb(205,209,3)" fg:x="1010" fg:w="2"/><text x="34.6857%" y="7791.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::record_item_insert_at (1 samples, 0.03%)</title><rect x="34.4698%" y="7765" width="0.0341%" height="15" fill="rgb(243,44,1)" fg:x="1011" fg:w="1"/><text x="34.7198%" y="7775.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (1 samples, 0.03%)</title><rect x="34.4698%" y="7749" width="0.0341%" height="15" fill="rgb(206,159,16)" fg:x="1011" fg:w="1"/><text x="34.7198%" y="7759.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl (1 samples, 0.03%)</title><rect x="34.4698%" y="7733" width="0.0341%" height="15" fill="rgb(244,77,30)" fg:x="1011" fg:w="1"/><text x="34.7198%" y="7743.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (1 samples, 0.03%)</title><rect x="34.4698%" y="7717" width="0.0341%" height="15" fill="rgb(218,69,12)" fg:x="1011" fg:w="1"/><text x="34.7198%" y="7727.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="35.4245%" y="7813" width="0.0341%" height="15" fill="rgb(212,87,7)" fg:x="1039" fg:w="1"/><text x="35.6745%" y="7823.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (1 samples, 0.03%)</title><rect x="35.4245%" y="7797" width="0.0341%" height="15" fill="rgb(245,114,25)" fg:x="1039" fg:w="1"/><text x="35.6745%" y="7807.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="35.4586%" y="7797" width="0.0341%" height="15" fill="rgb(210,61,42)" fg:x="1040" fg:w="1"/><text x="35.7086%" y="7807.50"></text></g><g><title>__rdl_alloc (5 samples, 0.17%)</title><rect x="35.9359%" y="7589" width="0.1705%" height="15" fill="rgb(211,52,33)" fg:x="1054" fg:w="5"/><text x="36.1859%" y="7599.50"></text></g><g><title>__rust_alloc (1 samples, 0.03%)</title><rect x="36.1064%" y="7589" width="0.0341%" height="15" fill="rgb(234,58,33)" fg:x="1059" fg:w="1"/><text x="36.3564%" y="7599.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (189 samples, 6.44%)</title><rect x="35.6290%" y="7685" width="6.4439%" height="15" fill="rgb(220,115,36)" fg:x="1045" fg:w="189"/><text x="35.8790%" y="7695.50">alloc::v..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (189 samples, 6.44%)</title><rect x="35.6290%" y="7669" width="6.4439%" height="15" fill="rgb(243,153,54)" fg:x="1045" fg:w="189"/><text x="35.8790%" y="7679.50">alloc::r..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (189 samples, 6.44%)</title><rect x="35.6290%" y="7653" width="6.4439%" height="15" fill="rgb(251,47,18)" fg:x="1045" fg:w="189"/><text x="35.8790%" y="7663.50">alloc::r..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (182 samples, 6.21%)</title><rect x="35.8677%" y="7637" width="6.2053%" height="15" fill="rgb(242,102,42)" fg:x="1052" fg:w="182"/><text x="36.1177%" y="7647.50">&lt;alloc::..</text></g><g><title>alloc::alloc::Global::alloc_impl (182 samples, 6.21%)</title><rect x="35.8677%" y="7621" width="6.2053%" height="15" fill="rgb(234,31,38)" fg:x="1052" fg:w="182"/><text x="36.1177%" y="7631.50">alloc::a..</text></g><g><title>alloc::alloc::alloc (182 samples, 6.21%)</title><rect x="35.8677%" y="7605" width="6.2053%" height="15" fill="rgb(221,117,51)" fg:x="1052" fg:w="182"/><text x="36.1177%" y="7615.50">alloc::a..</text></g><g><title>malloc (174 samples, 5.93%)</title><rect x="36.1405%" y="7589" width="5.9325%" height="15" fill="rgb(212,20,18)" fg:x="1060" fg:w="174"/><text x="36.3905%" y="7599.50">malloc</text></g><g><title>[libc.so.6] (137 samples, 4.67%)</title><rect x="37.4020%" y="7573" width="4.6710%" height="15" fill="rgb(245,133,36)" fg:x="1097" fg:w="137"/><text x="37.6520%" y="7583.50">[libc..</text></g><g><title>[libc.so.6] (12 samples, 0.41%)</title><rect x="41.6638%" y="7557" width="0.4091%" height="15" fill="rgb(212,6,19)" fg:x="1222" fg:w="12"/><text x="41.9138%" y="7567.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (213 samples, 7.26%)</title><rect x="35.6290%" y="7749" width="7.2622%" height="15" fill="rgb(218,1,36)" fg:x="1045" fg:w="213"/><text x="35.8790%" y="7759.50">&lt;alloc::ve..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (213 samples, 7.26%)</title><rect x="35.6290%" y="7733" width="7.2622%" height="15" fill="rgb(246,84,54)" fg:x="1045" fg:w="213"/><text x="35.8790%" y="7743.50">alloc::sli..</text></g><g><title>alloc::slice::hack::to_vec (213 samples, 7.26%)</title><rect x="35.6290%" y="7717" width="7.2622%" height="15" fill="rgb(242,110,6)" fg:x="1045" fg:w="213"/><text x="35.8790%" y="7727.50">alloc::sli..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (213 samples, 7.26%)</title><rect x="35.6290%" y="7701" width="7.2622%" height="15" fill="rgb(214,47,5)" fg:x="1045" fg:w="213"/><text x="35.8790%" y="7711.50">&lt;T as allo..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (24 samples, 0.82%)</title><rect x="42.0730%" y="7685" width="0.8183%" height="15" fill="rgb(218,159,25)" fg:x="1234" fg:w="24"/><text x="42.3230%" y="7695.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (24 samples, 0.82%)</title><rect x="42.0730%" y="7669" width="0.8183%" height="15" fill="rgb(215,211,28)" fg:x="1234" fg:w="24"/><text x="42.3230%" y="7679.50"></text></g><g><title>[libc.so.6] (14 samples, 0.48%)</title><rect x="42.4139%" y="7653" width="0.4773%" height="15" fill="rgb(238,59,32)" fg:x="1244" fg:w="14"/><text x="42.6639%" y="7663.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.27%)</title><rect x="42.8912%" y="7749" width="0.2728%" height="15" fill="rgb(226,82,3)" fg:x="1258" fg:w="8"/><text x="43.1412%" y="7759.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="43.1299%" y="7733" width="0.0341%" height="15" fill="rgb(240,164,32)" fg:x="1265" fg:w="1"/><text x="43.3799%" y="7743.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="43.1299%" y="7717" width="0.0341%" height="15" fill="rgb(232,46,7)" fg:x="1265" fg:w="1"/><text x="43.3799%" y="7727.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (4 samples, 0.14%)</title><rect x="43.1640%" y="7749" width="0.1364%" height="15" fill="rgb(229,129,53)" fg:x="1266" fg:w="4"/><text x="43.4140%" y="7759.50"></text></g><g><title>__rdl_alloc (1 samples, 0.03%)</title><rect x="43.3686%" y="7653" width="0.0341%" height="15" fill="rgb(234,188,29)" fg:x="1272" fg:w="1"/><text x="43.6186%" y="7663.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (53 samples, 1.81%)</title><rect x="43.3004%" y="7749" width="1.8070%" height="15" fill="rgb(246,141,4)" fg:x="1270" fg:w="53"/><text x="43.5504%" y="7759.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (53 samples, 1.81%)</title><rect x="43.3004%" y="7733" width="1.8070%" height="15" fill="rgb(229,23,39)" fg:x="1270" fg:w="53"/><text x="43.5504%" y="7743.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (53 samples, 1.81%)</title><rect x="43.3004%" y="7717" width="1.8070%" height="15" fill="rgb(206,12,3)" fg:x="1270" fg:w="53"/><text x="43.5504%" y="7727.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (51 samples, 1.74%)</title><rect x="43.3686%" y="7701" width="1.7388%" height="15" fill="rgb(252,226,20)" fg:x="1272" fg:w="51"/><text x="43.6186%" y="7711.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (51 samples, 1.74%)</title><rect x="43.3686%" y="7685" width="1.7388%" height="15" fill="rgb(216,123,35)" fg:x="1272" fg:w="51"/><text x="43.6186%" y="7695.50"></text></g><g><title>alloc::alloc::alloc (51 samples, 1.74%)</title><rect x="43.3686%" y="7669" width="1.7388%" height="15" fill="rgb(212,68,40)" fg:x="1272" fg:w="51"/><text x="43.6186%" y="7679.50"></text></g><g><title>malloc (50 samples, 1.70%)</title><rect x="43.4027%" y="7653" width="1.7047%" height="15" fill="rgb(254,125,32)" fg:x="1273" fg:w="50"/><text x="43.6527%" y="7663.50"></text></g><g><title>[libc.so.6] (39 samples, 1.33%)</title><rect x="43.7777%" y="7637" width="1.3297%" height="15" fill="rgb(253,97,22)" fg:x="1284" fg:w="39"/><text x="44.0277%" y="7647.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="45.0392%" y="7621" width="0.0682%" height="15" fill="rgb(241,101,14)" fg:x="1321" fg:w="2"/><text x="45.2892%" y="7631.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.03%)</title><rect x="45.1074%" y="7749" width="0.0341%" height="15" fill="rgb(238,103,29)" fg:x="1323" fg:w="1"/><text x="45.3574%" y="7759.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (285 samples, 9.72%)</title><rect x="35.4586%" y="7813" width="9.7170%" height="15" fill="rgb(233,195,47)" fg:x="1040" fg:w="285"/><text x="35.7086%" y="7823.50">&lt;alloc::vec::V..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (284 samples, 9.68%)</title><rect x="35.4927%" y="7797" width="9.6829%" height="15" fill="rgb(246,218,30)" fg:x="1041" fg:w="284"/><text x="35.7427%" y="7807.50">alloc::slice::..</text></g><g><title>alloc::slice::hack::to_vec (284 samples, 9.68%)</title><rect x="35.4927%" y="7781" width="9.6829%" height="15" fill="rgb(219,145,47)" fg:x="1041" fg:w="284"/><text x="35.7427%" y="7791.50">alloc::slice::..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (284 samples, 9.68%)</title><rect x="35.4927%" y="7765" width="9.6829%" height="15" fill="rgb(243,12,26)" fg:x="1041" fg:w="284"/><text x="35.7427%" y="7775.50">&lt;T as alloc::s..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.03%)</title><rect x="45.1415%" y="7749" width="0.0341%" height="15" fill="rgb(214,87,16)" fg:x="1324" fg:w="1"/><text x="45.3915%" y="7759.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.03%)</title><rect x="45.1415%" y="7733" width="0.0341%" height="15" fill="rgb(208,99,42)" fg:x="1324" fg:w="1"/><text x="45.3915%" y="7743.50"></text></g><g><title>__rdl_alloc (1 samples, 0.03%)</title><rect x="45.2097%" y="7573" width="0.0341%" height="15" fill="rgb(253,99,2)" fg:x="1326" fg:w="1"/><text x="45.4597%" y="7583.50"></text></g><g><title>__rust_alloc (1 samples, 0.03%)</title><rect x="45.2438%" y="7573" width="0.0341%" height="15" fill="rgb(220,168,23)" fg:x="1327" fg:w="1"/><text x="45.4938%" y="7583.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8 samples, 0.27%)</title><rect x="45.1756%" y="7669" width="0.2728%" height="15" fill="rgb(242,38,24)" fg:x="1325" fg:w="8"/><text x="45.4256%" y="7679.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8 samples, 0.27%)</title><rect x="45.1756%" y="7653" width="0.2728%" height="15" fill="rgb(225,182,9)" fg:x="1325" fg:w="8"/><text x="45.4256%" y="7663.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (8 samples, 0.27%)</title><rect x="45.1756%" y="7637" width="0.2728%" height="15" fill="rgb(243,178,37)" fg:x="1325" fg:w="8"/><text x="45.4256%" y="7647.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.27%)</title><rect x="45.1756%" y="7621" width="0.2728%" height="15" fill="rgb(232,139,19)" fg:x="1325" fg:w="8"/><text x="45.4256%" y="7631.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.27%)</title><rect x="45.1756%" y="7605" width="0.2728%" height="15" fill="rgb(225,201,24)" fg:x="1325" fg:w="8"/><text x="45.4256%" y="7615.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.27%)</title><rect x="45.1756%" y="7589" width="0.2728%" height="15" fill="rgb(221,47,46)" fg:x="1325" fg:w="8"/><text x="45.4256%" y="7599.50"></text></g><g><title>malloc (5 samples, 0.17%)</title><rect x="45.2779%" y="7573" width="0.1705%" height="15" fill="rgb(249,23,13)" fg:x="1328" fg:w="5"/><text x="45.5279%" y="7583.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="45.3802%" y="7557" width="0.0682%" height="15" fill="rgb(219,9,5)" fg:x="1331" fg:w="2"/><text x="45.6302%" y="7567.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (12 samples, 0.41%)</title><rect x="45.1756%" y="7733" width="0.4091%" height="15" fill="rgb(254,171,16)" fg:x="1325" fg:w="12"/><text x="45.4256%" y="7743.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (12 samples, 0.41%)</title><rect x="45.1756%" y="7717" width="0.4091%" height="15" fill="rgb(230,171,20)" fg:x="1325" fg:w="12"/><text x="45.4256%" y="7727.50"></text></g><g><title>alloc::slice::hack::to_vec (12 samples, 0.41%)</title><rect x="45.1756%" y="7701" width="0.4091%" height="15" fill="rgb(210,71,41)" fg:x="1325" fg:w="12"/><text x="45.4256%" y="7711.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (12 samples, 0.41%)</title><rect x="45.1756%" y="7685" width="0.4091%" height="15" fill="rgb(206,173,20)" fg:x="1325" fg:w="12"/><text x="45.4256%" y="7695.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (4 samples, 0.14%)</title><rect x="45.4483%" y="7669" width="0.1364%" height="15" fill="rgb(233,88,34)" fg:x="1333" fg:w="4"/><text x="45.6983%" y="7679.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.14%)</title><rect x="45.4483%" y="7653" width="0.1364%" height="15" fill="rgb(223,209,46)" fg:x="1333" fg:w="4"/><text x="45.6983%" y="7663.50"></text></g><g><title>[libc.so.6] (4 samples, 0.14%)</title><rect x="45.4483%" y="7637" width="0.1364%" height="15" fill="rgb(250,43,18)" fg:x="1333" fg:w="4"/><text x="45.6983%" y="7647.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.07%)</title><rect x="45.5847%" y="7733" width="0.0682%" height="15" fill="rgb(208,13,10)" fg:x="1337" fg:w="2"/><text x="45.8347%" y="7743.50"></text></g><g><title>&lt;tetrs::logic::state::GameState as core::clone::Clone&gt;::clone (23 samples, 0.78%)</title><rect x="45.1756%" y="7813" width="0.7842%" height="15" fill="rgb(212,200,36)" fg:x="1325" fg:w="23"/><text x="45.4256%" y="7823.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (23 samples, 0.78%)</title><rect x="45.1756%" y="7797" width="0.7842%" height="15" fill="rgb(225,90,30)" fg:x="1325" fg:w="23"/><text x="45.4256%" y="7807.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (23 samples, 0.78%)</title><rect x="45.1756%" y="7781" width="0.7842%" height="15" fill="rgb(236,182,39)" fg:x="1325" fg:w="23"/><text x="45.4256%" y="7791.50"></text></g><g><title>alloc::slice::hack::to_vec (23 samples, 0.78%)</title><rect x="45.1756%" y="7765" width="0.7842%" height="15" fill="rgb(212,144,35)" fg:x="1325" fg:w="23"/><text x="45.4256%" y="7775.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (23 samples, 0.78%)</title><rect x="45.1756%" y="7749" width="0.7842%" height="15" fill="rgb(228,63,44)" fg:x="1325" fg:w="23"/><text x="45.4256%" y="7759.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (9 samples, 0.31%)</title><rect x="45.6529%" y="7733" width="0.3069%" height="15" fill="rgb(228,109,6)" fg:x="1339" fg:w="9"/><text x="45.9029%" y="7743.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9 samples, 0.31%)</title><rect x="45.6529%" y="7717" width="0.3069%" height="15" fill="rgb(238,117,24)" fg:x="1339" fg:w="9"/><text x="45.9029%" y="7727.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (9 samples, 0.31%)</title><rect x="45.6529%" y="7701" width="0.3069%" height="15" fill="rgb(242,26,26)" fg:x="1339" fg:w="9"/><text x="45.9029%" y="7711.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.31%)</title><rect x="45.6529%" y="7685" width="0.3069%" height="15" fill="rgb(221,92,48)" fg:x="1339" fg:w="9"/><text x="45.9029%" y="7695.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.31%)</title><rect x="45.6529%" y="7669" width="0.3069%" height="15" fill="rgb(209,209,32)" fg:x="1339" fg:w="9"/><text x="45.9029%" y="7679.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.31%)</title><rect x="45.6529%" y="7653" width="0.3069%" height="15" fill="rgb(221,70,22)" fg:x="1339" fg:w="9"/><text x="45.9029%" y="7663.50"></text></g><g><title>malloc (9 samples, 0.31%)</title><rect x="45.6529%" y="7637" width="0.3069%" height="15" fill="rgb(248,145,5)" fg:x="1339" fg:w="9"/><text x="45.9029%" y="7647.50"></text></g><g><title>[libc.so.6] (8 samples, 0.27%)</title><rect x="45.6870%" y="7621" width="0.2728%" height="15" fill="rgb(226,116,26)" fg:x="1340" fg:w="8"/><text x="45.9370%" y="7631.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="45.9257%" y="7605" width="0.0341%" height="15" fill="rgb(244,5,17)" fg:x="1347" fg:w="1"/><text x="46.1757%" y="7615.50"></text></g><g><title>__rust_alloc (1 samples, 0.03%)</title><rect x="45.9598%" y="7733" width="0.0341%" height="15" fill="rgb(252,159,33)" fg:x="1348" fg:w="1"/><text x="46.2098%" y="7743.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (4 samples, 0.14%)</title><rect x="45.9598%" y="7813" width="0.1364%" height="15" fill="rgb(206,71,0)" fg:x="1348" fg:w="4"/><text x="46.2098%" y="7823.50"></text></g><g><title>alloc::alloc::exchange_malloc (4 samples, 0.14%)</title><rect x="45.9598%" y="7797" width="0.1364%" height="15" fill="rgb(233,118,54)" fg:x="1348" fg:w="4"/><text x="46.2098%" y="7807.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.14%)</title><rect x="45.9598%" y="7781" width="0.1364%" height="15" fill="rgb(234,83,48)" fg:x="1348" fg:w="4"/><text x="46.2098%" y="7791.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.14%)</title><rect x="45.9598%" y="7765" width="0.1364%" height="15" fill="rgb(228,3,54)" fg:x="1348" fg:w="4"/><text x="46.2098%" y="7775.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.14%)</title><rect x="45.9598%" y="7749" width="0.1364%" height="15" fill="rgb(226,155,13)" fg:x="1348" fg:w="4"/><text x="46.2098%" y="7759.50"></text></g><g><title>malloc (3 samples, 0.10%)</title><rect x="45.9939%" y="7733" width="0.1023%" height="15" fill="rgb(241,28,37)" fg:x="1349" fg:w="3"/><text x="46.2439%" y="7743.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="46.0280%" y="7717" width="0.0682%" height="15" fill="rgb(233,93,10)" fg:x="1350" fg:w="2"/><text x="46.2780%" y="7727.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (175 samples, 5.97%)</title><rect x="46.1643%" y="7749" width="5.9666%" height="15" fill="rgb(225,113,19)" fg:x="1354" fg:w="175"/><text x="46.4143%" y="7759.50">&lt;alloc::..</text></g><g><title>alloc::alloc::Global::grow_impl (175 samples, 5.97%)</title><rect x="46.1643%" y="7733" width="5.9666%" height="15" fill="rgb(241,2,18)" fg:x="1354" fg:w="175"/><text x="46.4143%" y="7743.50">alloc::a..</text></g><g><title>alloc::alloc::realloc (175 samples, 5.97%)</title><rect x="46.1643%" y="7717" width="5.9666%" height="15" fill="rgb(228,207,21)" fg:x="1354" fg:w="175"/><text x="46.4143%" y="7727.50">alloc::a..</text></g><g><title>realloc (175 samples, 5.97%)</title><rect x="46.1643%" y="7701" width="5.9666%" height="15" fill="rgb(213,211,35)" fg:x="1354" fg:w="175"/><text x="46.4143%" y="7711.50">realloc</text></g><g><title>[libc.so.6] (171 samples, 5.83%)</title><rect x="46.3007%" y="7685" width="5.8302%" height="15" fill="rgb(209,83,10)" fg:x="1358" fg:w="171"/><text x="46.5507%" y="7695.50">[libc.s..</text></g><g><title>[libc.so.6] (169 samples, 5.76%)</title><rect x="46.3689%" y="7669" width="5.7620%" height="15" fill="rgb(209,164,1)" fg:x="1360" fg:w="169"/><text x="46.6189%" y="7679.50">[libc.s..</text></g><g><title>[libc.so.6] (135 samples, 4.60%)</title><rect x="47.5281%" y="7653" width="4.6028%" height="15" fill="rgb(213,184,43)" fg:x="1394" fg:w="135"/><text x="47.7781%" y="7663.50">[libc..</text></g><g><title>[libc.so.6] (54 samples, 1.84%)</title><rect x="50.2898%" y="7637" width="1.8411%" height="15" fill="rgb(231,61,34)" fg:x="1475" fg:w="54"/><text x="50.5398%" y="7647.50">[..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (176 samples, 6.00%)</title><rect x="46.1643%" y="7797" width="6.0007%" height="15" fill="rgb(235,75,3)" fg:x="1354" fg:w="176"/><text x="46.4143%" y="7807.50">alloc::r..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (176 samples, 6.00%)</title><rect x="46.1643%" y="7781" width="6.0007%" height="15" fill="rgb(220,106,47)" fg:x="1354" fg:w="176"/><text x="46.4143%" y="7791.50">alloc::r..</text></g><g><title>alloc::raw_vec::finish_grow (176 samples, 6.00%)</title><rect x="46.1643%" y="7765" width="6.0007%" height="15" fill="rgb(210,196,33)" fg:x="1354" fg:w="176"/><text x="46.4143%" y="7775.50">alloc::r..</text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.03%)</title><rect x="52.1309%" y="7749" width="0.0341%" height="15" fill="rgb(229,154,42)" fg:x="1529" fg:w="1"/><text x="52.3809%" y="7759.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (188 samples, 6.41%)</title><rect x="46.0961%" y="7813" width="6.4098%" height="15" fill="rgb(228,114,26)" fg:x="1352" fg:w="188"/><text x="46.3461%" y="7823.50">alloc::v..</text></g><g><title>core::ptr::write (10 samples, 0.34%)</title><rect x="52.1650%" y="7797" width="0.3409%" height="15" fill="rgb(208,144,1)" fg:x="1530" fg:w="10"/><text x="52.4150%" y="7807.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::remove (1 samples, 0.03%)</title><rect x="52.5060%" y="7813" width="0.0341%" height="15" fill="rgb(239,112,37)" fg:x="1540" fg:w="1"/><text x="52.7560%" y="7823.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (2 samples, 0.07%)</title><rect x="52.5401%" y="7813" width="0.0682%" height="15" fill="rgb(210,96,50)" fg:x="1541" fg:w="2"/><text x="52.7901%" y="7823.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (3 samples, 0.10%)</title><rect x="52.7105%" y="7781" width="0.1023%" height="15" fill="rgb(222,178,2)" fg:x="1546" fg:w="3"/><text x="52.9605%" y="7791.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::next (13 samples, 0.44%)</title><rect x="52.6083%" y="7813" width="0.4432%" height="15" fill="rgb(226,74,18)" fg:x="1543" fg:w="13"/><text x="52.8583%" y="7823.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::iter::range::RangeInclusiveIteratorImpl&gt;::spec_next (13 samples, 0.44%)</title><rect x="52.6083%" y="7797" width="0.4432%" height="15" fill="rgb(225,67,54)" fg:x="1543" fg:w="13"/><text x="52.8583%" y="7807.50"></text></g><g><title>core::ops::range::RangeInclusive&lt;Idx&gt;::is_empty (7 samples, 0.24%)</title><rect x="52.8128%" y="7781" width="0.2387%" height="15" fill="rgb(251,92,32)" fg:x="1549" fg:w="7"/><text x="53.0628%" y="7791.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (22 samples, 0.75%)</title><rect x="60.1432%" y="7797" width="0.7501%" height="15" fill="rgb(228,149,22)" fg:x="1764" fg:w="22"/><text x="60.3932%" y="7807.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (22 samples, 0.75%)</title><rect x="60.1432%" y="7781" width="0.7501%" height="15" fill="rgb(243,54,13)" fg:x="1764" fg:w="22"/><text x="60.3932%" y="7791.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (22 samples, 0.75%)</title><rect x="60.1432%" y="7765" width="0.7501%" height="15" fill="rgb(243,180,28)" fg:x="1764" fg:w="22"/><text x="60.3932%" y="7775.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (2 samples, 0.07%)</title><rect x="61.6093%" y="7765" width="0.0682%" height="15" fill="rgb(208,167,24)" fg:x="1807" fg:w="2"/><text x="61.8593%" y="7775.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (2 samples, 0.07%)</title><rect x="61.6093%" y="7749" width="0.0682%" height="15" fill="rgb(245,73,45)" fg:x="1807" fg:w="2"/><text x="61.8593%" y="7759.50"></text></g><g><title>tetrs::logic::bot::can_place (265 samples, 9.04%)</title><rect x="53.0515%" y="7813" width="9.0351%" height="15" fill="rgb(237,203,48)" fg:x="1556" fg:w="265"/><text x="53.3015%" y="7823.50">tetrs::logic:..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (35 samples, 1.19%)</title><rect x="60.8933%" y="7797" width="1.1933%" height="15" fill="rgb(211,197,16)" fg:x="1786" fg:w="35"/><text x="61.1433%" y="7807.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (35 samples, 1.19%)</title><rect x="60.8933%" y="7781" width="1.1933%" height="15" fill="rgb(243,99,51)" fg:x="1786" fg:w="35"/><text x="61.1433%" y="7791.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (12 samples, 0.41%)</title><rect x="61.6775%" y="7765" width="0.4091%" height="15" fill="rgb(215,123,29)" fg:x="1809" fg:w="12"/><text x="61.9275%" y="7775.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (3 samples, 0.10%)</title><rect x="62.4957%" y="7797" width="0.1023%" height="15" fill="rgb(239,186,37)" fg:x="1833" fg:w="3"/><text x="62.7457%" y="7807.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (3 samples, 0.10%)</title><rect x="62.4957%" y="7781" width="0.1023%" height="15" fill="rgb(252,136,39)" fg:x="1833" fg:w="3"/><text x="62.7457%" y="7791.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (3 samples, 0.10%)</title><rect x="62.4957%" y="7765" width="0.1023%" height="15" fill="rgb(223,213,32)" fg:x="1833" fg:w="3"/><text x="62.7457%" y="7775.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (2 samples, 0.07%)</title><rect x="62.5980%" y="7797" width="0.0682%" height="15" fill="rgb(233,115,5)" fg:x="1836" fg:w="2"/><text x="62.8480%" y="7807.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (2 samples, 0.07%)</title><rect x="62.5980%" y="7781" width="0.0682%" height="15" fill="rgb(207,226,44)" fg:x="1836" fg:w="2"/><text x="62.8480%" y="7791.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (2 samples, 0.07%)</title><rect x="62.5980%" y="7765" width="0.0682%" height="15" fill="rgb(208,126,0)" fg:x="1836" fg:w="2"/><text x="62.8480%" y="7775.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (1 samples, 0.03%)</title><rect x="62.6662%" y="7797" width="0.0341%" height="15" fill="rgb(244,66,21)" fg:x="1838" fg:w="1"/><text x="62.9162%" y="7807.50"></text></g><g><title>tetrs::logic::bot::place_piece (23 samples, 0.78%)</title><rect x="62.0866%" y="7813" width="0.7842%" height="15" fill="rgb(222,97,12)" fg:x="1821" fg:w="23"/><text x="62.3366%" y="7823.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (5 samples, 0.17%)</title><rect x="62.7003%" y="7797" width="0.1705%" height="15" fill="rgb(219,213,19)" fg:x="1839" fg:w="5"/><text x="62.9503%" y="7807.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (5 samples, 0.17%)</title><rect x="62.7003%" y="7781" width="0.1705%" height="15" fill="rgb(252,169,30)" fg:x="1839" fg:w="5"/><text x="62.9503%" y="7791.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (2 samples, 0.07%)</title><rect x="62.8026%" y="7765" width="0.0682%" height="15" fill="rgb(206,32,51)" fg:x="1842" fg:w="2"/><text x="63.0526%" y="7775.50"></text></g><g><title>tetrs::logic::bot::generate_states (834 samples, 28.44%)</title><rect x="34.5039%" y="7829" width="28.4350%" height="15" fill="rgb(250,172,42)" fg:x="1012" fg:w="834"/><text x="34.7539%" y="7839.50">tetrs::logic::bot::generate_states</text></g><g><title>tetrs::logic::id_manager::IdManager::next_unique_id (2 samples, 0.07%)</title><rect x="62.8708%" y="7813" width="0.0682%" height="15" fill="rgb(209,34,43)" fg:x="1844" fg:w="2"/><text x="63.1208%" y="7823.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (2 samples, 0.07%)</title><rect x="63.6550%" y="7813" width="0.0682%" height="15" fill="rgb(223,11,35)" fg:x="1867" fg:w="2"/><text x="63.9050%" y="7823.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2 samples, 0.07%)</title><rect x="63.6550%" y="7797" width="0.0682%" height="15" fill="rgb(251,219,26)" fg:x="1867" fg:w="2"/><text x="63.9050%" y="7807.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.07%)</title><rect x="63.6550%" y="7781" width="0.0682%" height="15" fill="rgb(231,119,3)" fg:x="1867" fg:w="2"/><text x="63.9050%" y="7791.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.03%)</title><rect x="63.7232%" y="7781" width="0.0341%" height="15" fill="rgb(216,97,11)" fg:x="1869" fg:w="1"/><text x="63.9732%" y="7791.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (1 samples, 0.03%)</title><rect x="63.7232%" y="7765" width="0.0341%" height="15" fill="rgb(223,59,9)" fg:x="1869" fg:w="1"/><text x="63.9732%" y="7775.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (7 samples, 0.24%)</title><rect x="63.7232%" y="7813" width="0.2387%" height="15" fill="rgb(233,93,31)" fg:x="1869" fg:w="7"/><text x="63.9732%" y="7823.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (7 samples, 0.24%)</title><rect x="63.7232%" y="7797" width="0.2387%" height="15" fill="rgb(239,81,33)" fg:x="1869" fg:w="7"/><text x="63.9732%" y="7807.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (6 samples, 0.20%)</title><rect x="63.7572%" y="7781" width="0.2046%" height="15" fill="rgb(213,120,34)" fg:x="1870" fg:w="6"/><text x="64.0072%" y="7791.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (7 samples, 0.24%)</title><rect x="65.6325%" y="7797" width="0.2387%" height="15" fill="rgb(243,49,53)" fg:x="1925" fg:w="7"/><text x="65.8825%" y="7807.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (2 samples, 0.07%)</title><rect x="65.8029%" y="7781" width="0.0682%" height="15" fill="rgb(247,216,33)" fg:x="1930" fg:w="2"/><text x="66.0529%" y="7791.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (2 samples, 0.07%)</title><rect x="65.8029%" y="7765" width="0.0682%" height="15" fill="rgb(226,26,14)" fg:x="1930" fg:w="2"/><text x="66.0529%" y="7775.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (7 samples, 0.24%)</title><rect x="65.8711%" y="7797" width="0.2387%" height="15" fill="rgb(215,49,53)" fg:x="1932" fg:w="7"/><text x="66.1211%" y="7807.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (7 samples, 0.24%)</title><rect x="65.8711%" y="7781" width="0.2387%" height="15" fill="rgb(245,162,40)" fg:x="1932" fg:w="7"/><text x="66.1211%" y="7791.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (7 samples, 0.24%)</title><rect x="65.8711%" y="7765" width="0.2387%" height="15" fill="rgb(229,68,17)" fg:x="1932" fg:w="7"/><text x="66.1211%" y="7775.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::backward_unchecked (2 samples, 0.07%)</title><rect x="66.1780%" y="7749" width="0.0682%" height="15" fill="rgb(213,182,10)" fg:x="1941" fg:w="2"/><text x="66.4280%" y="7759.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_sub (2 samples, 0.07%)</title><rect x="66.1780%" y="7733" width="0.0682%" height="15" fill="rgb(245,125,30)" fg:x="1941" fg:w="2"/><text x="66.4280%" y="7743.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.24%)</title><rect x="66.1098%" y="7797" width="0.2387%" height="15" fill="rgb(232,202,2)" fg:x="1939" fg:w="7"/><text x="66.3598%" y="7807.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (7 samples, 0.24%)</title><rect x="66.1098%" y="7781" width="0.2387%" height="15" fill="rgb(237,140,51)" fg:x="1939" fg:w="7"/><text x="66.3598%" y="7791.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (7 samples, 0.24%)</title><rect x="66.1098%" y="7765" width="0.2387%" height="15" fill="rgb(236,157,25)" fg:x="1939" fg:w="7"/><text x="66.3598%" y="7775.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (3 samples, 0.10%)</title><rect x="66.2462%" y="7749" width="0.1023%" height="15" fill="rgb(219,209,0)" fg:x="1943" fg:w="3"/><text x="66.4962%" y="7759.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::all (32 samples, 1.09%)</title><rect x="66.3484%" y="7797" width="1.0910%" height="15" fill="rgb(240,116,54)" fg:x="1946" fg:w="32"/><text x="66.5984%" y="7807.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.20%)</title><rect x="67.2349%" y="7781" width="0.2046%" height="15" fill="rgb(216,10,36)" fg:x="1972" fg:w="6"/><text x="67.4849%" y="7791.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3 samples, 0.10%)</title><rect x="67.4395%" y="7797" width="0.1023%" height="15" fill="rgb(222,72,44)" fg:x="1978" fg:w="3"/><text x="67.6895%" y="7807.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3 samples, 0.10%)</title><rect x="67.4395%" y="7781" width="0.1023%" height="15" fill="rgb(232,159,9)" fg:x="1978" fg:w="3"/><text x="67.6895%" y="7791.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (2 samples, 0.07%)</title><rect x="67.4736%" y="7765" width="0.0682%" height="15" fill="rgb(210,39,32)" fg:x="1979" fg:w="2"/><text x="67.7236%" y="7775.50"></text></g><g><title>tetrs::logic::game::get_pent_id (1 samples, 0.03%)</title><rect x="67.5418%" y="7797" width="0.0341%" height="15" fill="rgb(216,194,45)" fg:x="1981" fg:w="1"/><text x="67.7918%" y="7807.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (26 samples, 0.89%)</title><rect x="69.2465%" y="7781" width="0.8865%" height="15" fill="rgb(218,18,35)" fg:x="2031" fg:w="26"/><text x="69.4965%" y="7791.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (26 samples, 0.89%)</title><rect x="69.2465%" y="7765" width="0.8865%" height="15" fill="rgb(207,83,51)" fg:x="2031" fg:w="26"/><text x="69.4965%" y="7775.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (26 samples, 0.89%)</title><rect x="69.2465%" y="7749" width="0.8865%" height="15" fill="rgb(225,63,43)" fg:x="2031" fg:w="26"/><text x="69.4965%" y="7759.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::backward_unchecked (1 samples, 0.03%)</title><rect x="70.1330%" y="7733" width="0.0341%" height="15" fill="rgb(207,57,36)" fg:x="2057" fg:w="1"/><text x="70.3830%" y="7743.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_sub (1 samples, 0.03%)</title><rect x="70.1330%" y="7717" width="0.0341%" height="15" fill="rgb(216,99,33)" fg:x="2057" fg:w="1"/><text x="70.3830%" y="7727.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.17%)</title><rect x="70.1330%" y="7781" width="0.1705%" height="15" fill="rgb(225,42,16)" fg:x="2057" fg:w="5"/><text x="70.3830%" y="7791.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (5 samples, 0.17%)</title><rect x="70.1330%" y="7765" width="0.1705%" height="15" fill="rgb(220,201,45)" fg:x="2057" fg:w="5"/><text x="70.3830%" y="7775.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (5 samples, 0.17%)</title><rect x="70.1330%" y="7749" width="0.1705%" height="15" fill="rgb(225,33,4)" fg:x="2057" fg:w="5"/><text x="70.3830%" y="7759.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (4 samples, 0.14%)</title><rect x="70.1671%" y="7733" width="0.1364%" height="15" fill="rgb(224,33,50)" fg:x="2058" fg:w="4"/><text x="70.4171%" y="7743.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.10%)</title><rect x="70.3034%" y="7781" width="0.1023%" height="15" fill="rgb(246,198,51)" fg:x="2062" fg:w="3"/><text x="70.5534%" y="7791.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.10%)</title><rect x="70.3034%" y="7765" width="0.1023%" height="15" fill="rgb(205,22,4)" fg:x="2062" fg:w="3"/><text x="70.5534%" y="7775.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.03%)</title><rect x="70.8149%" y="7733" width="0.0341%" height="15" fill="rgb(206,3,8)" fg:x="2077" fg:w="1"/><text x="71.0649%" y="7743.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.03%)</title><rect x="70.8490%" y="7733" width="0.0341%" height="15" fill="rgb(251,23,15)" fg:x="2078" fg:w="1"/><text x="71.0990%" y="7743.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (1 samples, 0.03%)</title><rect x="70.8490%" y="7717" width="0.0341%" height="15" fill="rgb(252,88,28)" fg:x="2078" fg:w="1"/><text x="71.0990%" y="7727.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (1 samples, 0.03%)</title><rect x="70.8831%" y="7733" width="0.0341%" height="15" fill="rgb(212,127,14)" fg:x="2079" fg:w="1"/><text x="71.1331%" y="7743.50"></text></g><g><title>__rdl_realloc (3 samples, 0.10%)</title><rect x="70.9853%" y="7669" width="0.1023%" height="15" fill="rgb(247,145,37)" fg:x="2082" fg:w="3"/><text x="71.2353%" y="7679.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (3 samples, 0.10%)</title><rect x="70.9853%" y="7653" width="0.1023%" height="15" fill="rgb(209,117,53)" fg:x="2082" fg:w="3"/><text x="71.2353%" y="7663.50"></text></g><g><title>__rust_realloc (2 samples, 0.07%)</title><rect x="71.0876%" y="7669" width="0.0682%" height="15" fill="rgb(212,90,42)" fg:x="2085" fg:w="2"/><text x="71.3376%" y="7679.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (57 samples, 1.94%)</title><rect x="70.9853%" y="7717" width="1.9434%" height="15" fill="rgb(218,164,37)" fg:x="2082" fg:w="57"/><text x="71.2353%" y="7727.50">&lt;..</text></g><g><title>alloc::alloc::Global::grow_impl (57 samples, 1.94%)</title><rect x="70.9853%" y="7701" width="1.9434%" height="15" fill="rgb(246,65,34)" fg:x="2082" fg:w="57"/><text x="71.2353%" y="7711.50">a..</text></g><g><title>alloc::alloc::realloc (57 samples, 1.94%)</title><rect x="70.9853%" y="7685" width="1.9434%" height="15" fill="rgb(231,100,33)" fg:x="2082" fg:w="57"/><text x="71.2353%" y="7695.50">a..</text></g><g><title>realloc (52 samples, 1.77%)</title><rect x="71.1558%" y="7669" width="1.7729%" height="15" fill="rgb(228,126,14)" fg:x="2087" fg:w="52"/><text x="71.4058%" y="7679.50">r..</text></g><g><title>[libc.so.6] (42 samples, 1.43%)</title><rect x="71.4968%" y="7653" width="1.4320%" height="15" fill="rgb(215,173,21)" fg:x="2097" fg:w="42"/><text x="71.7468%" y="7663.50"></text></g><g><title>[libc.so.6] (40 samples, 1.36%)</title><rect x="71.5650%" y="7637" width="1.3638%" height="15" fill="rgb(210,6,40)" fg:x="2099" fg:w="40"/><text x="71.8150%" y="7647.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="72.8946%" y="7621" width="0.0341%" height="15" fill="rgb(212,48,18)" fg:x="2138" fg:w="1"/><text x="73.1446%" y="7631.50"></text></g><g><title>__rdl_alloc (1 samples, 0.03%)</title><rect x="72.9287%" y="7717" width="0.0341%" height="15" fill="rgb(230,214,11)" fg:x="2139" fg:w="1"/><text x="73.1787%" y="7727.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (3 samples, 0.10%)</title><rect x="72.9628%" y="7717" width="0.1023%" height="15" fill="rgb(254,105,39)" fg:x="2140" fg:w="3"/><text x="73.2128%" y="7727.50"></text></g><g><title>alloc::raw_vec::finish_grow (64 samples, 2.18%)</title><rect x="70.9171%" y="7733" width="2.1821%" height="15" fill="rgb(245,158,5)" fg:x="2080" fg:w="64"/><text x="71.1671%" y="7743.50">a..</text></g><g><title>malloc (1 samples, 0.03%)</title><rect x="73.0651%" y="7717" width="0.0341%" height="15" fill="rgb(249,208,11)" fg:x="2143" fg:w="1"/><text x="73.3151%" y="7727.50"></text></g><g><title>core::cmp::max (2 samples, 0.07%)</title><rect x="73.0992%" y="7733" width="0.0682%" height="15" fill="rgb(210,39,28)" fg:x="2144" fg:w="2"/><text x="73.3492%" y="7743.50"></text></g><g><title>core::cmp::Ord::max (2 samples, 0.07%)</title><rect x="73.0992%" y="7717" width="0.0682%" height="15" fill="rgb(211,56,53)" fg:x="2144" fg:w="2"/><text x="73.3492%" y="7727.50"></text></g><g><title>core::cmp::max_by (2 samples, 0.07%)</title><rect x="73.0992%" y="7701" width="0.0682%" height="15" fill="rgb(226,201,30)" fg:x="2144" fg:w="2"/><text x="73.3492%" y="7711.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (72 samples, 2.45%)</title><rect x="70.7808%" y="7765" width="2.4548%" height="15" fill="rgb(239,101,34)" fg:x="2076" fg:w="72"/><text x="71.0308%" y="7775.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (72 samples, 2.45%)</title><rect x="70.7808%" y="7749" width="2.4548%" height="15" fill="rgb(226,209,5)" fg:x="2076" fg:w="72"/><text x="71.0308%" y="7759.50">al..</text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (2 samples, 0.07%)</title><rect x="73.1674%" y="7733" width="0.0682%" height="15" fill="rgb(250,105,47)" fg:x="2146" fg:w="2"/><text x="73.4174%" y="7743.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (2 samples, 0.07%)</title><rect x="73.1674%" y="7717" width="0.0682%" height="15" fill="rgb(230,72,3)" fg:x="2146" fg:w="2"/><text x="73.4174%" y="7727.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (90 samples, 3.07%)</title><rect x="70.4057%" y="7781" width="3.0685%" height="15" fill="rgb(232,218,39)" fg:x="2065" fg:w="90"/><text x="70.6557%" y="7791.50">all..</text></g><g><title>core::ptr::write (7 samples, 0.24%)</title><rect x="73.2356%" y="7765" width="0.2387%" height="15" fill="rgb(248,166,6)" fg:x="2148" fg:w="7"/><text x="73.4856%" y="7775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,usize)&gt;&gt; (10 samples, 0.34%)</title><rect x="73.4743%" y="7781" width="0.3409%" height="15" fill="rgb(247,89,20)" fg:x="2155" fg:w="10"/><text x="73.7243%" y="7791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,usize)&gt;&gt; (10 samples, 0.34%)</title><rect x="73.4743%" y="7765" width="0.3409%" height="15" fill="rgb(248,130,54)" fg:x="2155" fg:w="10"/><text x="73.7243%" y="7775.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.34%)</title><rect x="73.4743%" y="7749" width="0.3409%" height="15" fill="rgb(234,196,4)" fg:x="2155" fg:w="10"/><text x="73.7243%" y="7759.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10 samples, 0.34%)</title><rect x="73.4743%" y="7733" width="0.3409%" height="15" fill="rgb(250,143,31)" fg:x="2155" fg:w="10"/><text x="73.7243%" y="7743.50"></text></g><g><title>alloc::alloc::dealloc (10 samples, 0.34%)</title><rect x="73.4743%" y="7717" width="0.3409%" height="15" fill="rgb(211,110,34)" fg:x="2155" fg:w="10"/><text x="73.7243%" y="7727.50"></text></g><g><title>cfree (10 samples, 0.34%)</title><rect x="73.4743%" y="7701" width="0.3409%" height="15" fill="rgb(215,124,48)" fg:x="2155" fg:w="10"/><text x="73.7243%" y="7711.50"></text></g><g><title>[libc.so.6] (9 samples, 0.31%)</title><rect x="73.5084%" y="7685" width="0.3069%" height="15" fill="rgb(216,46,13)" fg:x="2156" fg:w="9"/><text x="73.7584%" y="7695.50"></text></g><g><title>[libc.so.6] (6 samples, 0.20%)</title><rect x="73.6106%" y="7669" width="0.2046%" height="15" fill="rgb(205,184,25)" fg:x="2159" fg:w="6"/><text x="73.8606%" y="7679.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="73.7470%" y="7653" width="0.0682%" height="15" fill="rgb(228,1,10)" fg:x="2163" fg:w="2"/><text x="73.9970%" y="7663.50"></text></g><g><title>__rust_dealloc (1 samples, 0.03%)</title><rect x="73.8152%" y="7637" width="0.0341%" height="15" fill="rgb(213,116,27)" fg:x="2165" fg:w="1"/><text x="74.0652%" y="7647.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;u16&gt;&gt; (9 samples, 0.31%)</title><rect x="73.8152%" y="7781" width="0.3069%" height="15" fill="rgb(241,95,50)" fg:x="2165" fg:w="9"/><text x="74.0652%" y="7791.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;u16,std::collections::hash::map::RandomState&gt;&gt; (9 samples, 0.31%)</title><rect x="73.8152%" y="7765" width="0.3069%" height="15" fill="rgb(238,48,32)" fg:x="2165" fg:w="9"/><text x="74.0652%" y="7775.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;u16,(),std::collections::hash::map::RandomState&gt;&gt; (9 samples, 0.31%)</title><rect x="73.8152%" y="7749" width="0.3069%" height="15" fill="rgb(235,113,49)" fg:x="2165" fg:w="9"/><text x="74.0652%" y="7759.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u16,())&gt;&gt; (9 samples, 0.31%)</title><rect x="73.8152%" y="7733" width="0.3069%" height="15" fill="rgb(205,127,43)" fg:x="2165" fg:w="9"/><text x="74.0652%" y="7743.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.31%)</title><rect x="73.8152%" y="7717" width="0.3069%" height="15" fill="rgb(250,162,2)" fg:x="2165" fg:w="9"/><text x="74.0652%" y="7727.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (9 samples, 0.31%)</title><rect x="73.8152%" y="7701" width="0.3069%" height="15" fill="rgb(220,13,41)" fg:x="2165" fg:w="9"/><text x="74.0652%" y="7711.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (9 samples, 0.31%)</title><rect x="73.8152%" y="7685" width="0.3069%" height="15" fill="rgb(249,221,25)" fg:x="2165" fg:w="9"/><text x="74.0652%" y="7695.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9 samples, 0.31%)</title><rect x="73.8152%" y="7669" width="0.3069%" height="15" fill="rgb(215,208,19)" fg:x="2165" fg:w="9"/><text x="74.0652%" y="7679.50"></text></g><g><title>alloc::alloc::dealloc (9 samples, 0.31%)</title><rect x="73.8152%" y="7653" width="0.3069%" height="15" fill="rgb(236,175,2)" fg:x="2165" fg:w="9"/><text x="74.0652%" y="7663.50"></text></g><g><title>cfree (8 samples, 0.27%)</title><rect x="73.8493%" y="7637" width="0.2728%" height="15" fill="rgb(241,52,2)" fg:x="2166" fg:w="8"/><text x="74.0993%" y="7647.50"></text></g><g><title>[libc.so.6] (6 samples, 0.20%)</title><rect x="73.9175%" y="7621" width="0.2046%" height="15" fill="rgb(248,140,14)" fg:x="2168" fg:w="6"/><text x="74.1675%" y="7631.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::clear (1 samples, 0.03%)</title><rect x="74.1221%" y="7781" width="0.0341%" height="15" fill="rgb(253,22,42)" fg:x="2174" fg:w="1"/><text x="74.3721%" y="7791.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::clear (1 samples, 0.03%)</title><rect x="74.1221%" y="7765" width="0.0341%" height="15" fill="rgb(234,61,47)" fg:x="2174" fg:w="1"/><text x="74.3721%" y="7775.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (1 samples, 0.03%)</title><rect x="74.1221%" y="7749" width="0.0341%" height="15" fill="rgb(208,226,15)" fg:x="2174" fg:w="1"/><text x="74.3721%" y="7759.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (1 samples, 0.03%)</title><rect x="74.1221%" y="7733" width="0.0341%" height="15" fill="rgb(217,221,4)" fg:x="2174" fg:w="1"/><text x="74.3721%" y="7743.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;&amp;mut hashbrown::raw::RawTable&lt;(u16,())&gt;,hashbrown::raw::RawTable&lt;(u16,())&gt;::clear::{{closure}}&gt;&gt; (1 samples, 0.03%)</title><rect x="74.1221%" y="7717" width="0.0341%" height="15" fill="rgb(212,174,34)" fg:x="2174" fg:w="1"/><text x="74.3721%" y="7727.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="74.1221%" y="7701" width="0.0341%" height="15" fill="rgb(253,83,4)" fg:x="2174" fg:w="1"/><text x="74.3721%" y="7711.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear::_{{closure}} (1 samples, 0.03%)</title><rect x="74.1221%" y="7685" width="0.0341%" height="15" fill="rgb(250,195,49)" fg:x="2174" fg:w="1"/><text x="74.3721%" y="7695.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear_no_drop (1 samples, 0.03%)</title><rect x="74.1221%" y="7669" width="0.0341%" height="15" fill="rgb(241,192,25)" fg:x="2174" fg:w="1"/><text x="74.3721%" y="7679.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::clear_no_drop (1 samples, 0.03%)</title><rect x="74.1221%" y="7653" width="0.0341%" height="15" fill="rgb(208,124,10)" fg:x="2174" fg:w="1"/><text x="74.3721%" y="7663.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.03%)</title><rect x="74.7358%" y="7621" width="0.0341%" height="15" fill="rgb(222,33,0)" fg:x="2192" fg:w="1"/><text x="74.9858%" y="7631.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4 samples, 0.14%)</title><rect x="74.6676%" y="7637" width="0.1364%" height="15" fill="rgb(234,209,28)" fg:x="2190" fg:w="4"/><text x="74.9176%" y="7647.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.03%)</title><rect x="74.7699%" y="7621" width="0.0341%" height="15" fill="rgb(224,11,23)" fg:x="2193" fg:w="1"/><text x="75.0199%" y="7631.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (17 samples, 0.58%)</title><rect x="74.8721%" y="7621" width="0.5796%" height="15" fill="rgb(232,99,1)" fg:x="2196" fg:w="17"/><text x="75.1221%" y="7631.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (32 samples, 1.09%)</title><rect x="74.3948%" y="7685" width="1.0910%" height="15" fill="rgb(237,95,45)" fg:x="2182" fg:w="32"/><text x="74.6448%" y="7695.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (32 samples, 1.09%)</title><rect x="74.3948%" y="7669" width="1.0910%" height="15" fill="rgb(208,109,11)" fg:x="2182" fg:w="32"/><text x="74.6448%" y="7679.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (32 samples, 1.09%)</title><rect x="74.3948%" y="7653" width="1.0910%" height="15" fill="rgb(216,190,48)" fg:x="2182" fg:w="32"/><text x="74.6448%" y="7663.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (20 samples, 0.68%)</title><rect x="74.8040%" y="7637" width="0.6819%" height="15" fill="rgb(251,171,36)" fg:x="2194" fg:w="20"/><text x="75.0540%" y="7647.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.03%)</title><rect x="75.4518%" y="7621" width="0.0341%" height="15" fill="rgb(230,62,22)" fg:x="2213" fg:w="1"/><text x="75.7018%" y="7631.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (5 samples, 0.17%)</title><rect x="75.4859%" y="7685" width="0.1705%" height="15" fill="rgb(225,114,35)" fg:x="2214" fg:w="5"/><text x="75.7359%" y="7695.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.03%)</title><rect x="75.6222%" y="7669" width="0.0341%" height="15" fill="rgb(215,118,42)" fg:x="2218" fg:w="1"/><text x="75.8722%" y="7679.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.03%)</title><rect x="75.6222%" y="7653" width="0.0341%" height="15" fill="rgb(243,119,21)" fg:x="2218" fg:w="1"/><text x="75.8722%" y="7663.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.03%)</title><rect x="75.6222%" y="7637" width="0.0341%" height="15" fill="rgb(252,177,53)" fg:x="2218" fg:w="1"/><text x="75.8722%" y="7647.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (10 samples, 0.34%)</title><rect x="75.7586%" y="7637" width="0.3409%" height="15" fill="rgb(237,209,29)" fg:x="2222" fg:w="10"/><text x="76.0086%" y="7647.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (10 samples, 0.34%)</title><rect x="75.7586%" y="7621" width="0.3409%" height="15" fill="rgb(212,65,23)" fg:x="2222" fg:w="10"/><text x="76.0086%" y="7631.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (10 samples, 0.34%)</title><rect x="75.7586%" y="7605" width="0.3409%" height="15" fill="rgb(230,222,46)" fg:x="2222" fg:w="10"/><text x="76.0086%" y="7615.50"></text></g><g><title>core::hash::sip::u8to64_le (8 samples, 0.27%)</title><rect x="75.8268%" y="7589" width="0.2728%" height="15" fill="rgb(215,135,32)" fg:x="2224" fg:w="8"/><text x="76.0768%" y="7599.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.03%)</title><rect x="76.0655%" y="7573" width="0.0341%" height="15" fill="rgb(246,101,22)" fg:x="2231" fg:w="1"/><text x="76.3155%" y="7583.50"></text></g><g><title>hashbrown::map::make_hash (56 samples, 1.91%)</title><rect x="74.2925%" y="7717" width="1.9093%" height="15" fill="rgb(206,107,13)" fg:x="2179" fg:w="56"/><text x="74.5425%" y="7727.50">h..</text></g><g><title>core::hash::BuildHasher::hash_one (56 samples, 1.91%)</title><rect x="74.2925%" y="7701" width="1.9093%" height="15" fill="rgb(250,100,44)" fg:x="2179" fg:w="56"/><text x="74.5425%" y="7711.50">c..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (16 samples, 0.55%)</title><rect x="75.6563%" y="7685" width="0.5455%" height="15" fill="rgb(231,147,38)" fg:x="2219" fg:w="16"/><text x="75.9063%" y="7695.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (16 samples, 0.55%)</title><rect x="75.6563%" y="7669" width="0.5455%" height="15" fill="rgb(229,8,40)" fg:x="2219" fg:w="16"/><text x="75.9063%" y="7679.50"></text></g><g><title>core::hash::Hasher::write_u16 (16 samples, 0.55%)</title><rect x="75.6563%" y="7653" width="0.5455%" height="15" fill="rgb(221,135,30)" fg:x="2219" fg:w="16"/><text x="75.9063%" y="7663.50"></text></g><g><title>core::num::&lt;impl u16&gt;::to_ne_bytes (3 samples, 0.10%)</title><rect x="76.0996%" y="7637" width="0.1023%" height="15" fill="rgb(249,193,18)" fg:x="2232" fg:w="3"/><text x="76.3496%" y="7647.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.44%)</title><rect x="76.4746%" y="7669" width="0.4432%" height="15" fill="rgb(209,133,39)" fg:x="2243" fg:w="13"/><text x="76.7246%" y="7679.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (4 samples, 0.14%)</title><rect x="76.7815%" y="7653" width="0.1364%" height="15" fill="rgb(232,100,14)" fg:x="2252" fg:w="4"/><text x="77.0315%" y="7663.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (4 samples, 0.14%)</title><rect x="76.9178%" y="7669" width="0.1364%" height="15" fill="rgb(224,185,1)" fg:x="2256" fg:w="4"/><text x="77.1678%" y="7679.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (4 samples, 0.14%)</title><rect x="76.9178%" y="7653" width="0.1364%" height="15" fill="rgb(223,139,8)" fg:x="2256" fg:w="4"/><text x="77.1678%" y="7663.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (4 samples, 0.14%)</title><rect x="76.9178%" y="7637" width="0.1364%" height="15" fill="rgb(232,213,38)" fg:x="2256" fg:w="4"/><text x="77.1678%" y="7647.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (4 samples, 0.14%)</title><rect x="76.9178%" y="7621" width="0.1364%" height="15" fill="rgb(207,94,22)" fg:x="2256" fg:w="4"/><text x="77.1678%" y="7631.50"></text></g><g><title>hashbrown::raw::h2 (20 samples, 0.68%)</title><rect x="77.0542%" y="7669" width="0.6819%" height="15" fill="rgb(219,183,54)" fg:x="2260" fg:w="20"/><text x="77.3042%" y="7679.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (7 samples, 0.24%)</title><rect x="77.7361%" y="7669" width="0.2387%" height="15" fill="rgb(216,185,54)" fg:x="2280" fg:w="7"/><text x="77.9861%" y="7679.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (7 samples, 0.24%)</title><rect x="77.7361%" y="7653" width="0.2387%" height="15" fill="rgb(254,217,39)" fg:x="2280" fg:w="7"/><text x="77.9861%" y="7663.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (113 samples, 3.85%)</title><rect x="74.1562%" y="7781" width="3.8527%" height="15" fill="rgb(240,178,23)" fg:x="2175" fg:w="113"/><text x="74.4062%" y="7791.50">std:..</text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (113 samples, 3.85%)</title><rect x="74.1562%" y="7765" width="3.8527%" height="15" fill="rgb(218,11,47)" fg:x="2175" fg:w="113"/><text x="74.4062%" y="7775.50">hash..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (113 samples, 3.85%)</title><rect x="74.1562%" y="7749" width="3.8527%" height="15" fill="rgb(218,51,51)" fg:x="2175" fg:w="113"/><text x="74.4062%" y="7759.50">hash..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (113 samples, 3.85%)</title><rect x="74.1562%" y="7733" width="3.8527%" height="15" fill="rgb(238,126,27)" fg:x="2175" fg:w="113"/><text x="74.4062%" y="7743.50">hash..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (53 samples, 1.81%)</title><rect x="76.2018%" y="7717" width="1.8070%" height="15" fill="rgb(249,202,22)" fg:x="2235" fg:w="53"/><text x="76.4518%" y="7727.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (53 samples, 1.81%)</title><rect x="76.2018%" y="7701" width="1.8070%" height="15" fill="rgb(254,195,49)" fg:x="2235" fg:w="53"/><text x="76.4518%" y="7711.50">h..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (53 samples, 1.81%)</title><rect x="76.2018%" y="7685" width="1.8070%" height="15" fill="rgb(208,123,14)" fg:x="2235" fg:w="53"/><text x="76.4518%" y="7695.50">h..</text></g><g><title>hashbrown::raw::sse2::Group::match_empty (1 samples, 0.03%)</title><rect x="77.9748%" y="7669" width="0.0341%" height="15" fill="rgb(224,200,8)" fg:x="2287" fg:w="1"/><text x="78.2248%" y="7679.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.03%)</title><rect x="77.9748%" y="7653" width="0.0341%" height="15" fill="rgb(217,61,36)" fg:x="2287" fg:w="1"/><text x="78.2248%" y="7663.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.03%)</title><rect x="77.9748%" y="7637" width="0.0341%" height="15" fill="rgb(206,35,45)" fg:x="2287" fg:w="1"/><text x="78.2248%" y="7647.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.10%)</title><rect x="79.2704%" y="7637" width="0.1023%" height="15" fill="rgb(217,65,33)" fg:x="2325" fg:w="3"/><text x="79.5204%" y="7647.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (9 samples, 0.31%)</title><rect x="79.1681%" y="7653" width="0.3069%" height="15" fill="rgb(222,158,48)" fg:x="2322" fg:w="9"/><text x="79.4181%" y="7663.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.10%)</title><rect x="79.3727%" y="7637" width="0.1023%" height="15" fill="rgb(254,2,54)" fg:x="2328" fg:w="3"/><text x="79.6227%" y="7647.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (16 samples, 0.55%)</title><rect x="79.6113%" y="7637" width="0.5455%" height="15" fill="rgb(250,143,38)" fg:x="2335" fg:w="16"/><text x="79.8613%" y="7647.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (53 samples, 1.81%)</title><rect x="78.4862%" y="7701" width="1.8070%" height="15" fill="rgb(248,25,0)" fg:x="2302" fg:w="53"/><text x="78.7362%" y="7711.50">&lt;..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (53 samples, 1.81%)</title><rect x="78.4862%" y="7685" width="1.8070%" height="15" fill="rgb(206,152,27)" fg:x="2302" fg:w="53"/><text x="78.7362%" y="7695.50">&lt;..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (53 samples, 1.81%)</title><rect x="78.4862%" y="7669" width="1.8070%" height="15" fill="rgb(240,77,30)" fg:x="2302" fg:w="53"/><text x="78.7362%" y="7679.50">&lt;..</text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (24 samples, 0.82%)</title><rect x="79.4749%" y="7653" width="0.8183%" height="15" fill="rgb(231,5,3)" fg:x="2331" fg:w="24"/><text x="79.7249%" y="7663.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (4 samples, 0.14%)</title><rect x="80.1568%" y="7637" width="0.1364%" height="15" fill="rgb(207,226,32)" fg:x="2351" fg:w="4"/><text x="80.4068%" y="7647.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (7 samples, 0.24%)</title><rect x="80.2932%" y="7701" width="0.2387%" height="15" fill="rgb(222,207,47)" fg:x="2355" fg:w="7"/><text x="80.5432%" y="7711.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (5 samples, 0.17%)</title><rect x="80.3614%" y="7685" width="0.1705%" height="15" fill="rgb(229,115,45)" fg:x="2357" fg:w="5"/><text x="80.6114%" y="7695.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (5 samples, 0.17%)</title><rect x="80.3614%" y="7669" width="0.1705%" height="15" fill="rgb(224,191,6)" fg:x="2357" fg:w="5"/><text x="80.6114%" y="7679.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (5 samples, 0.17%)</title><rect x="80.3614%" y="7653" width="0.1705%" height="15" fill="rgb(230,227,24)" fg:x="2357" fg:w="5"/><text x="80.6114%" y="7663.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (11 samples, 0.38%)</title><rect x="80.5660%" y="7653" width="0.3750%" height="15" fill="rgb(228,80,19)" fg:x="2363" fg:w="11"/><text x="80.8160%" y="7663.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (11 samples, 0.38%)</title><rect x="80.5660%" y="7637" width="0.3750%" height="15" fill="rgb(247,229,0)" fg:x="2363" fg:w="11"/><text x="80.8160%" y="7647.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (11 samples, 0.38%)</title><rect x="80.5660%" y="7621" width="0.3750%" height="15" fill="rgb(237,194,15)" fg:x="2363" fg:w="11"/><text x="80.8160%" y="7631.50"></text></g><g><title>core::hash::sip::u8to64_le (6 samples, 0.20%)</title><rect x="80.7364%" y="7605" width="0.2046%" height="15" fill="rgb(219,203,20)" fg:x="2368" fg:w="6"/><text x="80.9864%" y="7615.50"></text></g><g><title>hashbrown::map::make_hash (81 samples, 2.76%)</title><rect x="78.2475%" y="7733" width="2.7617%" height="15" fill="rgb(234,128,8)" fg:x="2295" fg:w="81"/><text x="78.4975%" y="7743.50">ha..</text></g><g><title>core::hash::BuildHasher::hash_one (78 samples, 2.66%)</title><rect x="78.3498%" y="7717" width="2.6594%" height="15" fill="rgb(248,202,8)" fg:x="2298" fg:w="78"/><text x="78.5998%" y="7727.50">co..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (14 samples, 0.48%)</title><rect x="80.5319%" y="7701" width="0.4773%" height="15" fill="rgb(206,104,37)" fg:x="2362" fg:w="14"/><text x="80.7819%" y="7711.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (14 samples, 0.48%)</title><rect x="80.5319%" y="7685" width="0.4773%" height="15" fill="rgb(223,8,27)" fg:x="2362" fg:w="14"/><text x="80.7819%" y="7695.50"></text></g><g><title>core::hash::Hasher::write_u16 (14 samples, 0.48%)</title><rect x="80.5319%" y="7669" width="0.4773%" height="15" fill="rgb(216,217,28)" fg:x="2362" fg:w="14"/><text x="80.7819%" y="7679.50"></text></g><g><title>core::num::&lt;impl u16&gt;::to_ne_bytes (2 samples, 0.07%)</title><rect x="80.9410%" y="7653" width="0.0682%" height="15" fill="rgb(249,199,1)" fg:x="2374" fg:w="2"/><text x="81.1910%" y="7663.50"></text></g><g><title>core::mem::swap (2 samples, 0.07%)</title><rect x="81.2820%" y="7653" width="0.0682%" height="15" fill="rgb(240,85,17)" fg:x="2384" fg:w="2"/><text x="81.5320%" y="7663.50"></text></g><g><title>core::mem::swap_simple (2 samples, 0.07%)</title><rect x="81.2820%" y="7637" width="0.0682%" height="15" fill="rgb(206,108,45)" fg:x="2384" fg:w="2"/><text x="81.5320%" y="7647.50"></text></g><g><title>core::ptr::read (2 samples, 0.07%)</title><rect x="81.2820%" y="7621" width="0.0682%" height="15" fill="rgb(245,210,41)" fg:x="2384" fg:w="2"/><text x="81.5320%" y="7631.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;,hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (3 samples, 0.10%)</title><rect x="81.3502%" y="7653" width="0.1023%" height="15" fill="rgb(206,13,37)" fg:x="2386" fg:w="3"/><text x="81.6002%" y="7663.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.10%)</title><rect x="81.3502%" y="7637" width="0.1023%" height="15" fill="rgb(250,61,18)" fg:x="2386" fg:w="3"/><text x="81.6002%" y="7647.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize::_{{closure}} (3 samples, 0.10%)</title><rect x="81.3502%" y="7621" width="0.1023%" height="15" fill="rgb(235,172,48)" fg:x="2386" fg:w="3"/><text x="81.6002%" y="7631.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (3 samples, 0.10%)</title><rect x="81.3502%" y="7605" width="0.1023%" height="15" fill="rgb(249,201,17)" fg:x="2386" fg:w="3"/><text x="81.6002%" y="7615.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.10%)</title><rect x="81.3502%" y="7589" width="0.1023%" height="15" fill="rgb(219,208,6)" fg:x="2386" fg:w="3"/><text x="81.6002%" y="7599.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.10%)</title><rect x="81.3502%" y="7573" width="0.1023%" height="15" fill="rgb(248,31,23)" fg:x="2386" fg:w="3"/><text x="81.6002%" y="7583.50"></text></g><g><title>cfree (3 samples, 0.10%)</title><rect x="81.3502%" y="7557" width="0.1023%" height="15" fill="rgb(245,15,42)" fg:x="2386" fg:w="3"/><text x="81.6002%" y="7567.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="81.3842%" y="7541" width="0.0682%" height="15" fill="rgb(222,217,39)" fg:x="2387" fg:w="2"/><text x="81.6342%" y="7551.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (5 samples, 0.17%)</title><rect x="81.6570%" y="7525" width="0.1705%" height="15" fill="rgb(210,219,27)" fg:x="2395" fg:w="5"/><text x="81.9070%" y="7535.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (8 samples, 0.27%)</title><rect x="81.5888%" y="7589" width="0.2728%" height="15" fill="rgb(252,166,36)" fg:x="2393" fg:w="8"/><text x="81.8388%" y="7599.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (8 samples, 0.27%)</title><rect x="81.5888%" y="7573" width="0.2728%" height="15" fill="rgb(245,132,34)" fg:x="2393" fg:w="8"/><text x="81.8388%" y="7583.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (8 samples, 0.27%)</title><rect x="81.5888%" y="7557" width="0.2728%" height="15" fill="rgb(236,54,3)" fg:x="2393" fg:w="8"/><text x="81.8388%" y="7567.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (6 samples, 0.20%)</title><rect x="81.6570%" y="7541" width="0.2046%" height="15" fill="rgb(241,173,43)" fg:x="2395" fg:w="6"/><text x="81.9070%" y="7551.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.03%)</title><rect x="81.8275%" y="7525" width="0.0341%" height="15" fill="rgb(215,190,9)" fg:x="2400" fg:w="1"/><text x="82.0775%" y="7535.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (17 samples, 0.58%)</title><rect x="81.4524%" y="7637" width="0.5796%" height="15" fill="rgb(242,101,16)" fg:x="2389" fg:w="17"/><text x="81.7024%" y="7647.50"></text></g><g><title>hashbrown::map::make_hash (17 samples, 0.58%)</title><rect x="81.4524%" y="7621" width="0.5796%" height="15" fill="rgb(223,190,21)" fg:x="2389" fg:w="17"/><text x="81.7024%" y="7631.50"></text></g><g><title>core::hash::BuildHasher::hash_one (17 samples, 0.58%)</title><rect x="81.4524%" y="7605" width="0.5796%" height="15" fill="rgb(215,228,25)" fg:x="2389" fg:w="17"/><text x="81.7024%" y="7615.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (5 samples, 0.17%)</title><rect x="81.8616%" y="7589" width="0.1705%" height="15" fill="rgb(225,36,22)" fg:x="2401" fg:w="5"/><text x="82.1116%" y="7599.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (5 samples, 0.17%)</title><rect x="81.8616%" y="7573" width="0.1705%" height="15" fill="rgb(251,106,46)" fg:x="2401" fg:w="5"/><text x="82.1116%" y="7583.50"></text></g><g><title>core::hash::Hasher::write_u16 (5 samples, 0.17%)</title><rect x="81.8616%" y="7557" width="0.1705%" height="15" fill="rgb(208,90,1)" fg:x="2401" fg:w="5"/><text x="82.1116%" y="7567.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.14%)</title><rect x="81.8957%" y="7541" width="0.1364%" height="15" fill="rgb(243,10,4)" fg:x="2402" fg:w="4"/><text x="82.1457%" y="7551.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (4 samples, 0.14%)</title><rect x="81.8957%" y="7525" width="0.1364%" height="15" fill="rgb(212,137,27)" fg:x="2402" fg:w="4"/><text x="82.1457%" y="7535.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4 samples, 0.14%)</title><rect x="81.8957%" y="7509" width="0.1364%" height="15" fill="rgb(231,220,49)" fg:x="2402" fg:w="4"/><text x="82.1457%" y="7519.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.03%)</title><rect x="81.9980%" y="7493" width="0.0341%" height="15" fill="rgb(237,96,20)" fg:x="2405" fg:w="1"/><text x="82.2480%" y="7503.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (18 samples, 0.61%)</title><rect x="81.4524%" y="7653" width="0.6137%" height="15" fill="rgb(239,229,30)" fg:x="2389" fg:w="18"/><text x="81.7024%" y="7663.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (1 samples, 0.03%)</title><rect x="82.0320%" y="7637" width="0.0341%" height="15" fill="rgb(219,65,33)" fg:x="2406" fg:w="1"/><text x="82.2820%" y="7647.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (1 samples, 0.03%)</title><rect x="82.0320%" y="7621" width="0.0341%" height="15" fill="rgb(243,134,7)" fg:x="2406" fg:w="1"/><text x="82.2820%" y="7631.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.03%)</title><rect x="82.0320%" y="7605" width="0.0341%" height="15" fill="rgb(216,177,54)" fg:x="2406" fg:w="1"/><text x="82.2820%" y="7615.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.03%)</title><rect x="82.0320%" y="7589" width="0.0341%" height="15" fill="rgb(211,160,20)" fg:x="2406" fg:w="1"/><text x="82.2820%" y="7599.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (9 samples, 0.31%)</title><rect x="82.1002%" y="7605" width="0.3069%" height="15" fill="rgb(239,85,39)" fg:x="2408" fg:w="9"/><text x="82.3502%" y="7615.50"></text></g><g><title>core::num::nonzero::NonZeroU16::new (9 samples, 0.31%)</title><rect x="82.1002%" y="7589" width="0.3069%" height="15" fill="rgb(232,125,22)" fg:x="2408" fg:w="9"/><text x="82.3502%" y="7599.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot_in_group (14 samples, 0.48%)</title><rect x="82.0661%" y="7621" width="0.4773%" height="15" fill="rgb(244,57,34)" fg:x="2407" fg:w="14"/><text x="82.3161%" y="7631.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (4 samples, 0.14%)</title><rect x="82.4071%" y="7605" width="0.1364%" height="15" fill="rgb(214,203,32)" fg:x="2417" fg:w="4"/><text x="82.6571%" y="7615.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (4 samples, 0.14%)</title><rect x="82.4071%" y="7589" width="0.1364%" height="15" fill="rgb(207,58,43)" fg:x="2417" fg:w="4"/><text x="82.6571%" y="7599.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (23 samples, 0.78%)</title><rect x="82.0661%" y="7637" width="0.7842%" height="15" fill="rgb(215,193,15)" fg:x="2407" fg:w="23"/><text x="82.3161%" y="7647.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fix_insert_slot (9 samples, 0.31%)</title><rect x="82.5435%" y="7621" width="0.3069%" height="15" fill="rgb(232,15,44)" fg:x="2421" fg:w="9"/><text x="82.7935%" y="7631.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_bucket_full (1 samples, 0.03%)</title><rect x="82.8162%" y="7605" width="0.0341%" height="15" fill="rgb(212,3,48)" fg:x="2429" fg:w="1"/><text x="83.0662%" y="7615.50"></text></g><g><title>hashbrown::raw::is_full (1 samples, 0.03%)</title><rect x="82.8162%" y="7589" width="0.0341%" height="15" fill="rgb(218,128,7)" fg:x="2429" fg:w="1"/><text x="83.0662%" y="7599.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (24 samples, 0.82%)</title><rect x="82.0661%" y="7653" width="0.8183%" height="15" fill="rgb(226,216,39)" fg:x="2407" fg:w="24"/><text x="82.3161%" y="7663.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (1 samples, 0.03%)</title><rect x="82.8503%" y="7637" width="0.0341%" height="15" fill="rgb(243,47,51)" fg:x="2430" fg:w="1"/><text x="83.1003%" y="7647.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl (1 samples, 0.03%)</title><rect x="82.8503%" y="7621" width="0.0341%" height="15" fill="rgb(241,183,40)" fg:x="2430" fg:w="1"/><text x="83.1003%" y="7631.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (2 samples, 0.07%)</title><rect x="82.9185%" y="7621" width="0.0682%" height="15" fill="rgb(231,217,32)" fg:x="2432" fg:w="2"/><text x="83.1685%" y="7631.50"></text></g><g><title>core::intrinsics::write_bytes (2 samples, 0.07%)</title><rect x="82.9185%" y="7605" width="0.0682%" height="15" fill="rgb(229,61,38)" fg:x="2432" fg:w="2"/><text x="83.1685%" y="7615.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="82.9185%" y="7589" width="0.0682%" height="15" fill="rgb(225,210,5)" fg:x="2432" fg:w="2"/><text x="83.1685%" y="7599.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (3 samples, 0.10%)</title><rect x="82.9867%" y="7605" width="0.1023%" height="15" fill="rgb(231,79,45)" fg:x="2434" fg:w="3"/><text x="83.2367%" y="7615.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.03%)</title><rect x="83.0549%" y="7589" width="0.0341%" height="15" fill="rgb(224,100,7)" fg:x="2436" fg:w="1"/><text x="83.3049%" y="7599.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.03%)</title><rect x="83.0549%" y="7573" width="0.0341%" height="15" fill="rgb(241,198,18)" fg:x="2436" fg:w="1"/><text x="83.3049%" y="7583.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (63 samples, 2.15%)</title><rect x="81.2138%" y="7669" width="2.1480%" height="15" fill="rgb(252,97,53)" fg:x="2382" fg:w="63"/><text x="81.4638%" y="7679.50">h..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (14 samples, 0.48%)</title><rect x="82.8844%" y="7653" width="0.4773%" height="15" fill="rgb(220,88,7)" fg:x="2431" fg:w="14"/><text x="83.1344%" y="7663.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (13 samples, 0.44%)</title><rect x="82.9185%" y="7637" width="0.4432%" height="15" fill="rgb(213,176,14)" fg:x="2432" fg:w="13"/><text x="83.1685%" y="7647.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (11 samples, 0.38%)</title><rect x="82.9867%" y="7621" width="0.3750%" height="15" fill="rgb(246,73,7)" fg:x="2434" fg:w="11"/><text x="83.2367%" y="7631.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (8 samples, 0.27%)</title><rect x="83.0890%" y="7605" width="0.2728%" height="15" fill="rgb(245,64,36)" fg:x="2437" fg:w="8"/><text x="83.3390%" y="7615.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.27%)</title><rect x="83.0890%" y="7589" width="0.2728%" height="15" fill="rgb(245,80,10)" fg:x="2437" fg:w="8"/><text x="83.3390%" y="7599.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.27%)</title><rect x="83.0890%" y="7573" width="0.2728%" height="15" fill="rgb(232,107,50)" fg:x="2437" fg:w="8"/><text x="83.3390%" y="7583.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.27%)</title><rect x="83.0890%" y="7557" width="0.2728%" height="15" fill="rgb(253,3,0)" fg:x="2437" fg:w="8"/><text x="83.3390%" y="7567.50"></text></g><g><title>malloc (7 samples, 0.24%)</title><rect x="83.1231%" y="7541" width="0.2387%" height="15" fill="rgb(212,99,53)" fg:x="2438" fg:w="7"/><text x="83.3731%" y="7551.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="83.3277%" y="7525" width="0.0341%" height="15" fill="rgb(249,111,54)" fg:x="2444" fg:w="1"/><text x="83.5777%" y="7535.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (70 samples, 2.39%)</title><rect x="81.0433%" y="7717" width="2.3866%" height="15" fill="rgb(249,55,30)" fg:x="2377" fg:w="70"/><text x="81.2933%" y="7727.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (69 samples, 2.35%)</title><rect x="81.0774%" y="7701" width="2.3525%" height="15" fill="rgb(237,47,42)" fg:x="2378" fg:w="69"/><text x="81.3274%" y="7711.50">h..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (69 samples, 2.35%)</title><rect x="81.0774%" y="7685" width="2.3525%" height="15" fill="rgb(211,20,18)" fg:x="2378" fg:w="69"/><text x="81.3274%" y="7695.50">h..</text></g><g><title>hashbrown::raw::bucket_mask_to_capacity (2 samples, 0.07%)</title><rect x="83.3617%" y="7669" width="0.0682%" height="15" fill="rgb(231,203,46)" fg:x="2445" fg:w="2"/><text x="83.6117%" y="7679.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2 samples, 0.07%)</title><rect x="83.8050%" y="7685" width="0.0682%" height="15" fill="rgb(237,142,3)" fg:x="2458" fg:w="2"/><text x="84.0550%" y="7695.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.38%)</title><rect x="83.5322%" y="7701" width="0.3750%" height="15" fill="rgb(241,107,1)" fg:x="2450" fg:w="11"/><text x="83.7822%" y="7711.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (1 samples, 0.03%)</title><rect x="83.8732%" y="7685" width="0.0341%" height="15" fill="rgb(229,83,13)" fg:x="2460" fg:w="1"/><text x="84.1232%" y="7695.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (1 samples, 0.03%)</title><rect x="83.9073%" y="7701" width="0.0341%" height="15" fill="rgb(241,91,40)" fg:x="2461" fg:w="1"/><text x="84.1573%" y="7711.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.03%)</title><rect x="83.9073%" y="7685" width="0.0341%" height="15" fill="rgb(225,3,45)" fg:x="2461" fg:w="1"/><text x="84.1573%" y="7695.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot::_{{closure}} (2 samples, 0.07%)</title><rect x="83.9414%" y="7701" width="0.0682%" height="15" fill="rgb(244,223,14)" fg:x="2462" fg:w="2"/><text x="84.1914%" y="7711.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (2 samples, 0.07%)</title><rect x="83.9414%" y="7685" width="0.0682%" height="15" fill="rgb(224,124,37)" fg:x="2462" fg:w="2"/><text x="84.1914%" y="7695.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (2 samples, 0.07%)</title><rect x="83.9414%" y="7669" width="0.0682%" height="15" fill="rgb(251,171,30)" fg:x="2462" fg:w="2"/><text x="84.1914%" y="7679.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.07%)</title><rect x="83.9414%" y="7653" width="0.0682%" height="15" fill="rgb(236,46,54)" fg:x="2462" fg:w="2"/><text x="84.1914%" y="7663.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot_in_group (6 samples, 0.20%)</title><rect x="84.0095%" y="7701" width="0.2046%" height="15" fill="rgb(245,213,5)" fg:x="2464" fg:w="6"/><text x="84.2595%" y="7711.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_bucket_full (3 samples, 0.10%)</title><rect x="84.2482%" y="7685" width="0.1023%" height="15" fill="rgb(230,144,27)" fg:x="2471" fg:w="3"/><text x="84.4982%" y="7695.50"></text></g><g><title>hashbrown::raw::is_full (3 samples, 0.10%)</title><rect x="84.2482%" y="7669" width="0.1023%" height="15" fill="rgb(220,86,6)" fg:x="2471" fg:w="3"/><text x="84.4982%" y="7679.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fix_insert_slot (5 samples, 0.17%)</title><rect x="84.2141%" y="7701" width="0.1705%" height="15" fill="rgb(240,20,13)" fg:x="2470" fg:w="5"/><text x="84.4641%" y="7711.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (1 samples, 0.03%)</title><rect x="84.3505%" y="7685" width="0.0341%" height="15" fill="rgb(217,89,34)" fg:x="2474" fg:w="1"/><text x="84.6005%" y="7695.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.03%)</title><rect x="84.3505%" y="7669" width="0.0341%" height="15" fill="rgb(229,13,5)" fg:x="2474" fg:w="1"/><text x="84.6005%" y="7679.50"></text></g><g><title>hashbrown::raw::h2 (7 samples, 0.24%)</title><rect x="84.3846%" y="7701" width="0.2387%" height="15" fill="rgb(244,67,35)" fg:x="2475" fg:w="7"/><text x="84.6346%" y="7711.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (10 samples, 0.34%)</title><rect x="84.6233%" y="7701" width="0.3409%" height="15" fill="rgb(221,40,2)" fg:x="2482" fg:w="10"/><text x="84.8733%" y="7711.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (10 samples, 0.34%)</title><rect x="84.6233%" y="7685" width="0.3409%" height="15" fill="rgb(237,157,21)" fg:x="2482" fg:w="10"/><text x="84.8733%" y="7695.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (117 samples, 3.99%)</title><rect x="81.0092%" y="7733" width="3.9891%" height="15" fill="rgb(222,94,11)" fg:x="2376" fg:w="117"/><text x="81.2592%" y="7743.50">hash..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_or_find_insert_slot_inner (46 samples, 1.57%)</title><rect x="83.4299%" y="7717" width="1.5684%" height="15" fill="rgb(249,113,6)" fg:x="2447" fg:w="46"/><text x="83.6799%" y="7727.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (1 samples, 0.03%)</title><rect x="84.9642%" y="7701" width="0.0341%" height="15" fill="rgb(238,137,36)" fg:x="2492" fg:w="1"/><text x="85.2142%" y="7711.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.03%)</title><rect x="84.9642%" y="7685" width="0.0341%" height="15" fill="rgb(210,102,26)" fg:x="2492" fg:w="1"/><text x="85.2142%" y="7695.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.03%)</title><rect x="84.9642%" y="7669" width="0.0341%" height="15" fill="rgb(218,30,30)" fg:x="2492" fg:w="1"/><text x="85.2142%" y="7679.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (1 samples, 0.03%)</title><rect x="85.0324%" y="7701" width="0.0341%" height="15" fill="rgb(214,67,26)" fg:x="2494" fg:w="1"/><text x="85.2824%" y="7711.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl (1 samples, 0.03%)</title><rect x="85.0324%" y="7685" width="0.0341%" height="15" fill="rgb(251,9,53)" fg:x="2494" fg:w="1"/><text x="85.2824%" y="7695.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (1 samples, 0.03%)</title><rect x="85.0324%" y="7669" width="0.0341%" height="15" fill="rgb(228,204,25)" fg:x="2494" fg:w="1"/><text x="85.2824%" y="7679.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (208 samples, 7.09%)</title><rect x="78.0089%" y="7781" width="7.0917%" height="15" fill="rgb(207,153,8)" fg:x="2288" fg:w="208"/><text x="78.2589%" y="7791.50">std::colle..</text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (208 samples, 7.09%)</title><rect x="78.0089%" y="7765" width="7.0917%" height="15" fill="rgb(242,9,16)" fg:x="2288" fg:w="208"/><text x="78.2589%" y="7775.50">hashbrown:..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (204 samples, 6.96%)</title><rect x="78.1452%" y="7749" width="6.9553%" height="15" fill="rgb(217,211,10)" fg:x="2292" fg:w="204"/><text x="78.3952%" y="7759.50">hashbrown..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (3 samples, 0.10%)</title><rect x="84.9983%" y="7733" width="0.1023%" height="15" fill="rgb(219,228,52)" fg:x="2493" fg:w="3"/><text x="85.2483%" y="7743.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::record_item_insert_at (2 samples, 0.07%)</title><rect x="85.0324%" y="7717" width="0.0682%" height="15" fill="rgb(231,92,29)" fg:x="2494" fg:w="2"/><text x="85.2824%" y="7727.50"></text></g><g><title>hashbrown::raw::special_is_empty (1 samples, 0.03%)</title><rect x="85.0665%" y="7701" width="0.0341%" height="15" fill="rgb(232,8,23)" fg:x="2495" fg:w="1"/><text x="85.3165%" y="7711.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (5 samples, 0.17%)</title><rect x="85.1347%" y="7653" width="0.1705%" height="15" fill="rgb(216,211,34)" fg:x="2497" fg:w="5"/><text x="85.3847%" y="7663.50"></text></g><g><title>std::sys::common::thread_local::fast_local::Key&lt;T&gt;::get (5 samples, 0.17%)</title><rect x="85.1347%" y="7637" width="0.1705%" height="15" fill="rgb(236,151,0)" fg:x="2497" fg:w="5"/><text x="85.3847%" y="7647.50"></text></g><g><title>std::sys::common::thread_local::lazy::LazyKeyInner&lt;T&gt;::get (3 samples, 0.10%)</title><rect x="85.2029%" y="7621" width="0.1023%" height="15" fill="rgb(209,168,3)" fg:x="2499" fg:w="3"/><text x="85.4529%" y="7631.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (3 samples, 0.10%)</title><rect x="85.2029%" y="7605" width="0.1023%" height="15" fill="rgb(208,129,28)" fg:x="2499" fg:w="3"/><text x="85.4529%" y="7615.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (8 samples, 0.27%)</title><rect x="85.1006%" y="7717" width="0.2728%" height="15" fill="rgb(229,78,22)" fg:x="2496" fg:w="8"/><text x="85.3506%" y="7727.50"></text></g><g><title>std::collections::hash::map::RandomState::new (8 samples, 0.27%)</title><rect x="85.1006%" y="7701" width="0.2728%" height="15" fill="rgb(228,187,13)" fg:x="2496" fg:w="8"/><text x="85.3506%" y="7711.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (8 samples, 0.27%)</title><rect x="85.1006%" y="7685" width="0.2728%" height="15" fill="rgb(240,119,24)" fg:x="2496" fg:w="8"/><text x="85.3506%" y="7695.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (8 samples, 0.27%)</title><rect x="85.1006%" y="7669" width="0.2728%" height="15" fill="rgb(209,194,42)" fg:x="2496" fg:w="8"/><text x="85.3506%" y="7679.50"></text></g><g><title>std::collections::hash::map::RandomState::new::_{{closure}} (2 samples, 0.07%)</title><rect x="85.3051%" y="7653" width="0.0682%" height="15" fill="rgb(247,200,46)" fg:x="2502" fg:w="2"/><text x="85.5551%" y="7663.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (2 samples, 0.07%)</title><rect x="85.3051%" y="7637" width="0.0682%" height="15" fill="rgb(218,76,16)" fg:x="2502" fg:w="2"/><text x="85.5551%" y="7647.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (2 samples, 0.07%)</title><rect x="85.3051%" y="7621" width="0.0682%" height="15" fill="rgb(225,21,48)" fg:x="2502" fg:w="2"/><text x="85.5551%" y="7631.50"></text></g><g><title>core::mem::replace (2 samples, 0.07%)</title><rect x="85.3051%" y="7605" width="0.0682%" height="15" fill="rgb(239,223,50)" fg:x="2502" fg:w="2"/><text x="85.5551%" y="7615.50"></text></g><g><title>core::ptr::write (2 samples, 0.07%)</title><rect x="85.3051%" y="7589" width="0.0682%" height="15" fill="rgb(244,45,21)" fg:x="2502" fg:w="2"/><text x="85.5551%" y="7599.50"></text></g><g><title>tetrs::logic::game::gravity (524 samples, 17.87%)</title><rect x="67.5759%" y="7797" width="17.8657%" height="15" fill="rgb(232,33,43)" fg:x="1982" fg:w="524"/><text x="67.8259%" y="7807.50">tetrs::logic::game::gravity</text></g><g><title>std::collections::hash::set::HashSet&lt;T&gt;::new (10 samples, 0.34%)</title><rect x="85.1006%" y="7781" width="0.3409%" height="15" fill="rgb(209,8,3)" fg:x="2496" fg:w="10"/><text x="85.3506%" y="7791.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::default::Default&gt;::default (10 samples, 0.34%)</title><rect x="85.1006%" y="7765" width="0.3409%" height="15" fill="rgb(214,25,53)" fg:x="2496" fg:w="10"/><text x="85.3506%" y="7775.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::default::Default&gt;::default (10 samples, 0.34%)</title><rect x="85.1006%" y="7749" width="0.3409%" height="15" fill="rgb(254,186,54)" fg:x="2496" fg:w="10"/><text x="85.3506%" y="7759.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::default::Default&gt;::default (10 samples, 0.34%)</title><rect x="85.1006%" y="7733" width="0.3409%" height="15" fill="rgb(208,174,49)" fg:x="2496" fg:w="10"/><text x="85.3506%" y="7743.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::with_hasher_in (2 samples, 0.07%)</title><rect x="85.3733%" y="7717" width="0.0682%" height="15" fill="rgb(233,191,51)" fg:x="2504" fg:w="2"/><text x="85.6233%" y="7727.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (6 samples, 0.20%)</title><rect x="87.5895%" y="7781" width="0.2046%" height="15" fill="rgb(222,134,10)" fg:x="2569" fg:w="6"/><text x="87.8395%" y="7791.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (6 samples, 0.20%)</title><rect x="87.5895%" y="7765" width="0.2046%" height="15" fill="rgb(230,226,20)" fg:x="2569" fg:w="6"/><text x="87.8395%" y="7775.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (6 samples, 0.20%)</title><rect x="87.5895%" y="7749" width="0.2046%" height="15" fill="rgb(251,111,25)" fg:x="2569" fg:w="6"/><text x="87.8395%" y="7759.50"></text></g><g><title>__rdl_alloc (2 samples, 0.07%)</title><rect x="87.9645%" y="7717" width="0.0682%" height="15" fill="rgb(224,40,46)" fg:x="2580" fg:w="2"/><text x="88.2145%" y="7727.50"></text></g><g><title>__rust_alloc (3 samples, 0.10%)</title><rect x="88.0327%" y="7717" width="0.1023%" height="15" fill="rgb(236,108,47)" fg:x="2582" fg:w="3"/><text x="88.2827%" y="7727.50"></text></g><g><title>core::ptr::read_volatile (6 samples, 0.20%)</title><rect x="88.1350%" y="7717" width="0.2046%" height="15" fill="rgb(234,93,0)" fg:x="2585" fg:w="6"/><text x="88.3850%" y="7727.50"></text></g><g><title>alloc::alloc::exchange_malloc (70 samples, 2.39%)</title><rect x="87.7941%" y="7781" width="2.3866%" height="15" fill="rgb(224,213,32)" fg:x="2575" fg:w="70"/><text x="88.0441%" y="7791.50">al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (67 samples, 2.28%)</title><rect x="87.8964%" y="7765" width="2.2844%" height="15" fill="rgb(251,11,48)" fg:x="2578" fg:w="67"/><text x="88.1464%" y="7775.50">&lt;..</text></g><g><title>alloc::alloc::Global::alloc_impl (67 samples, 2.28%)</title><rect x="87.8964%" y="7749" width="2.2844%" height="15" fill="rgb(236,173,5)" fg:x="2578" fg:w="67"/><text x="88.1464%" y="7759.50">a..</text></g><g><title>alloc::alloc::alloc (67 samples, 2.28%)</title><rect x="87.8964%" y="7733" width="2.2844%" height="15" fill="rgb(230,95,12)" fg:x="2578" fg:w="67"/><text x="88.1464%" y="7743.50">a..</text></g><g><title>malloc (54 samples, 1.84%)</title><rect x="88.3396%" y="7717" width="1.8411%" height="15" fill="rgb(232,209,1)" fg:x="2591" fg:w="54"/><text x="88.5896%" y="7727.50">m..</text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="90.1466%" y="7701" width="0.0341%" height="15" fill="rgb(232,6,1)" fg:x="2644" fg:w="1"/><text x="90.3966%" y="7711.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.07%)</title><rect x="90.3171%" y="7653" width="0.0682%" height="15" fill="rgb(210,224,50)" fg:x="2649" fg:w="2"/><text x="90.5671%" y="7663.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2 samples, 0.07%)</title><rect x="90.3171%" y="7637" width="0.0682%" height="15" fill="rgb(228,127,35)" fg:x="2649" fg:w="2"/><text x="90.5671%" y="7647.50"></text></g><g><title>__rust_dealloc (4 samples, 0.14%)</title><rect x="90.3853%" y="7653" width="0.1364%" height="15" fill="rgb(245,102,45)" fg:x="2651" fg:w="4"/><text x="90.6353%" y="7663.50"></text></g><g><title>tetrs::logic::game::is_connected (215 samples, 7.33%)</title><rect x="85.4415%" y="7797" width="7.3304%" height="15" fill="rgb(214,1,49)" fg:x="2506" fg:w="215"/><text x="85.6915%" y="7807.50">tetrs::log..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(i8,i8)&gt;&gt; (76 samples, 2.59%)</title><rect x="90.1807%" y="7781" width="2.5912%" height="15" fill="rgb(226,163,40)" fg:x="2645" fg:w="76"/><text x="90.4307%" y="7791.50">co..</text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (76 samples, 2.59%)</title><rect x="90.1807%" y="7765" width="2.5912%" height="15" fill="rgb(239,212,28)" fg:x="2645" fg:w="76"/><text x="90.4307%" y="7775.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(i8,i8),alloc::alloc::Global&gt;&gt; (76 samples, 2.59%)</title><rect x="90.1807%" y="7749" width="2.5912%" height="15" fill="rgb(220,20,13)" fg:x="2645" fg:w="76"/><text x="90.4307%" y="7759.50">co..</text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (76 samples, 2.59%)</title><rect x="90.1807%" y="7733" width="2.5912%" height="15" fill="rgb(210,164,35)" fg:x="2645" fg:w="76"/><text x="90.4307%" y="7743.50">&lt;&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(i8,i8)&gt;&gt; (76 samples, 2.59%)</title><rect x="90.1807%" y="7717" width="2.5912%" height="15" fill="rgb(248,109,41)" fg:x="2645" fg:w="76"/><text x="90.4307%" y="7727.50">co..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (76 samples, 2.59%)</title><rect x="90.1807%" y="7701" width="2.5912%" height="15" fill="rgb(238,23,50)" fg:x="2645" fg:w="76"/><text x="90.4307%" y="7711.50">&lt;a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (76 samples, 2.59%)</title><rect x="90.1807%" y="7685" width="2.5912%" height="15" fill="rgb(211,48,49)" fg:x="2645" fg:w="76"/><text x="90.4307%" y="7695.50">&lt;a..</text></g><g><title>alloc::alloc::dealloc (76 samples, 2.59%)</title><rect x="90.1807%" y="7669" width="2.5912%" height="15" fill="rgb(223,36,21)" fg:x="2645" fg:w="76"/><text x="90.4307%" y="7679.50">al..</text></g><g><title>cfree (66 samples, 2.25%)</title><rect x="90.5217%" y="7653" width="2.2503%" height="15" fill="rgb(207,123,46)" fg:x="2655" fg:w="66"/><text x="90.7717%" y="7663.50">c..</text></g><g><title>[libc.so.6] (39 samples, 1.33%)</title><rect x="91.4422%" y="7637" width="1.3297%" height="15" fill="rgb(240,218,32)" fg:x="2682" fg:w="39"/><text x="91.6922%" y="7647.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.07%)</title><rect x="93.0106%" y="7781" width="0.0682%" height="15" fill="rgb(252,5,43)" fg:x="2728" fg:w="2"/><text x="93.2606%" y="7791.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.03%)</title><rect x="93.0447%" y="7765" width="0.0341%" height="15" fill="rgb(252,84,19)" fg:x="2729" fg:w="1"/><text x="93.2947%" y="7775.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.03%)</title><rect x="93.0447%" y="7749" width="0.0341%" height="15" fill="rgb(243,152,39)" fg:x="2729" fg:w="1"/><text x="93.2947%" y="7759.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.03%)</title><rect x="93.0788%" y="7781" width="0.0341%" height="15" fill="rgb(234,160,15)" fg:x="2730" fg:w="1"/><text x="93.3288%" y="7791.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.03%)</title><rect x="93.0788%" y="7765" width="0.0341%" height="15" fill="rgb(237,34,20)" fg:x="2730" fg:w="1"/><text x="93.3288%" y="7775.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.03%)</title><rect x="93.0788%" y="7749" width="0.0341%" height="15" fill="rgb(229,97,13)" fg:x="2730" fg:w="1"/><text x="93.3288%" y="7759.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.03%)</title><rect x="93.2492%" y="7765" width="0.0341%" height="15" fill="rgb(234,71,50)" fg:x="2735" fg:w="1"/><text x="93.4992%" y="7775.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.03%)</title><rect x="93.2492%" y="7749" width="0.0341%" height="15" fill="rgb(253,155,4)" fg:x="2735" fg:w="1"/><text x="93.4992%" y="7759.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.03%)</title><rect x="93.2492%" y="7733" width="0.0341%" height="15" fill="rgb(222,185,37)" fg:x="2735" fg:w="1"/><text x="93.4992%" y="7743.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.03%)</title><rect x="93.3174%" y="7701" width="0.0341%" height="15" fill="rgb(251,177,13)" fg:x="2737" fg:w="1"/><text x="93.5674%" y="7711.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.03%)</title><rect x="93.3174%" y="7685" width="0.0341%" height="15" fill="rgb(250,179,40)" fg:x="2737" fg:w="1"/><text x="93.5674%" y="7695.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.03%)</title><rect x="93.3174%" y="7669" width="0.0341%" height="15" fill="rgb(242,44,2)" fg:x="2737" fg:w="1"/><text x="93.5674%" y="7679.50"></text></g><g><title>realloc (1 samples, 0.03%)</title><rect x="93.3174%" y="7653" width="0.0341%" height="15" fill="rgb(216,177,13)" fg:x="2737" fg:w="1"/><text x="93.5674%" y="7663.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="93.3174%" y="7637" width="0.0341%" height="15" fill="rgb(216,106,43)" fg:x="2737" fg:w="1"/><text x="93.5674%" y="7647.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.10%)</title><rect x="93.2833%" y="7765" width="0.1023%" height="15" fill="rgb(216,183,2)" fg:x="2736" fg:w="3"/><text x="93.5333%" y="7775.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.10%)</title><rect x="93.2833%" y="7749" width="0.1023%" height="15" fill="rgb(249,75,3)" fg:x="2736" fg:w="3"/><text x="93.5333%" y="7759.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.10%)</title><rect x="93.2833%" y="7733" width="0.1023%" height="15" fill="rgb(219,67,39)" fg:x="2736" fg:w="3"/><text x="93.5333%" y="7743.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.10%)</title><rect x="93.2833%" y="7717" width="0.1023%" height="15" fill="rgb(253,228,2)" fg:x="2736" fg:w="3"/><text x="93.5333%" y="7727.50"></text></g><g><title>malloc (1 samples, 0.03%)</title><rect x="93.3515%" y="7701" width="0.0341%" height="15" fill="rgb(235,138,27)" fg:x="2738" fg:w="1"/><text x="93.6015%" y="7711.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.03%)</title><rect x="93.3856%" y="7621" width="0.0341%" height="15" fill="rgb(236,97,51)" fg:x="2739" fg:w="1"/><text x="93.6356%" y="7631.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.03%)</title><rect x="93.3856%" y="7605" width="0.0341%" height="15" fill="rgb(240,80,30)" fg:x="2739" fg:w="1"/><text x="93.6356%" y="7615.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.10%)</title><rect x="93.3856%" y="7701" width="0.1023%" height="15" fill="rgb(230,178,19)" fg:x="2739" fg:w="3"/><text x="93.6356%" y="7711.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.10%)</title><rect x="93.3856%" y="7685" width="0.1023%" height="15" fill="rgb(210,190,27)" fg:x="2739" fg:w="3"/><text x="93.6356%" y="7695.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.10%)</title><rect x="93.3856%" y="7669" width="0.1023%" height="15" fill="rgb(222,107,31)" fg:x="2739" fg:w="3"/><text x="93.6356%" y="7679.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3 samples, 0.10%)</title><rect x="93.3856%" y="7653" width="0.1023%" height="15" fill="rgb(216,127,34)" fg:x="2739" fg:w="3"/><text x="93.6356%" y="7663.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.10%)</title><rect x="93.3856%" y="7637" width="0.1023%" height="15" fill="rgb(234,116,52)" fg:x="2739" fg:w="3"/><text x="93.6356%" y="7647.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.07%)</title><rect x="93.4197%" y="7621" width="0.0682%" height="15" fill="rgb(222,124,15)" fg:x="2740" fg:w="2"/><text x="93.6697%" y="7631.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.03%)</title><rect x="93.4538%" y="7605" width="0.0341%" height="15" fill="rgb(231,179,28)" fg:x="2741" fg:w="1"/><text x="93.7038%" y="7615.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (5 samples, 0.17%)</title><rect x="93.3856%" y="7765" width="0.1705%" height="15" fill="rgb(226,93,45)" fg:x="2739" fg:w="5"/><text x="93.6356%" y="7775.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (5 samples, 0.17%)</title><rect x="93.3856%" y="7749" width="0.1705%" height="15" fill="rgb(215,8,51)" fg:x="2739" fg:w="5"/><text x="93.6356%" y="7759.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (5 samples, 0.17%)</title><rect x="93.3856%" y="7733" width="0.1705%" height="15" fill="rgb(223,106,5)" fg:x="2739" fg:w="5"/><text x="93.6356%" y="7743.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (5 samples, 0.17%)</title><rect x="93.3856%" y="7717" width="0.1705%" height="15" fill="rgb(250,191,5)" fg:x="2739" fg:w="5"/><text x="93.6356%" y="7727.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.07%)</title><rect x="93.4879%" y="7701" width="0.0682%" height="15" fill="rgb(242,132,44)" fg:x="2742" fg:w="2"/><text x="93.7379%" y="7711.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.07%)</title><rect x="93.4879%" y="7685" width="0.0682%" height="15" fill="rgb(251,152,29)" fg:x="2742" fg:w="2"/><text x="93.7379%" y="7695.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (2 samples, 0.07%)</title><rect x="93.4879%" y="7669" width="0.0682%" height="15" fill="rgb(218,179,5)" fg:x="2742" fg:w="2"/><text x="93.7379%" y="7679.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.07%)</title><rect x="93.4879%" y="7653" width="0.0682%" height="15" fill="rgb(227,67,19)" fg:x="2742" fg:w="2"/><text x="93.7379%" y="7663.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.07%)</title><rect x="93.6243%" y="7637" width="0.0682%" height="15" fill="rgb(233,119,31)" fg:x="2746" fg:w="2"/><text x="93.8743%" y="7647.50"></text></g><g><title>hashbrown::map::make_hash (5 samples, 0.17%)</title><rect x="93.5561%" y="7717" width="0.1705%" height="15" fill="rgb(241,120,22)" fg:x="2744" fg:w="5"/><text x="93.8061%" y="7727.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.14%)</title><rect x="93.5902%" y="7701" width="0.1364%" height="15" fill="rgb(224,102,30)" fg:x="2745" fg:w="4"/><text x="93.8402%" y="7711.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (4 samples, 0.14%)</title><rect x="93.5902%" y="7685" width="0.1364%" height="15" fill="rgb(210,164,37)" fg:x="2745" fg:w="4"/><text x="93.8402%" y="7695.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4 samples, 0.14%)</title><rect x="93.5902%" y="7669" width="0.1364%" height="15" fill="rgb(226,191,16)" fg:x="2745" fg:w="4"/><text x="93.8402%" y="7679.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4 samples, 0.14%)</title><rect x="93.5902%" y="7653" width="0.1364%" height="15" fill="rgb(214,40,45)" fg:x="2745" fg:w="4"/><text x="93.8402%" y="7663.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.03%)</title><rect x="93.6925%" y="7637" width="0.0341%" height="15" fill="rgb(244,29,26)" fg:x="2748" fg:w="1"/><text x="93.9425%" y="7647.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.03%)</title><rect x="93.6925%" y="7621" width="0.0341%" height="15" fill="rgb(216,16,5)" fg:x="2748" fg:w="1"/><text x="93.9425%" y="7631.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;,hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (1 samples, 0.03%)</title><rect x="93.7607%" y="7637" width="0.0341%" height="15" fill="rgb(249,76,35)" fg:x="2750" fg:w="1"/><text x="94.0107%" y="7647.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="93.7607%" y="7621" width="0.0341%" height="15" fill="rgb(207,11,44)" fg:x="2750" fg:w="1"/><text x="94.0107%" y="7631.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize::_{{closure}} (1 samples, 0.03%)</title><rect x="93.7607%" y="7605" width="0.0341%" height="15" fill="rgb(228,190,49)" fg:x="2750" fg:w="1"/><text x="94.0107%" y="7615.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (1 samples, 0.03%)</title><rect x="93.7607%" y="7589" width="0.0341%" height="15" fill="rgb(214,173,12)" fg:x="2750" fg:w="1"/><text x="94.0107%" y="7599.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.03%)</title><rect x="93.7607%" y="7573" width="0.0341%" height="15" fill="rgb(218,26,35)" fg:x="2750" fg:w="1"/><text x="94.0107%" y="7583.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.03%)</title><rect x="93.7607%" y="7557" width="0.0341%" height="15" fill="rgb(220,200,19)" fg:x="2750" fg:w="1"/><text x="94.0107%" y="7567.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.03%)</title><rect x="93.7607%" y="7541" width="0.0341%" height="15" fill="rgb(239,95,49)" fg:x="2750" fg:w="1"/><text x="94.0107%" y="7551.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.03%)</title><rect x="93.7607%" y="7525" width="0.0341%" height="15" fill="rgb(235,85,53)" fg:x="2750" fg:w="1"/><text x="94.0107%" y="7535.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (1 samples, 0.03%)</title><rect x="93.7947%" y="7637" width="0.0341%" height="15" fill="rgb(233,133,31)" fg:x="2751" fg:w="1"/><text x="94.0447%" y="7647.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (1 samples, 0.03%)</title><rect x="93.7947%" y="7621" width="0.0341%" height="15" fill="rgb(218,25,20)" fg:x="2751" fg:w="1"/><text x="94.0447%" y="7631.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.03%)</title><rect x="93.7947%" y="7605" width="0.0341%" height="15" fill="rgb(252,210,38)" fg:x="2751" fg:w="1"/><text x="94.0447%" y="7615.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.03%)</title><rect x="93.7947%" y="7589" width="0.0341%" height="15" fill="rgb(242,134,21)" fg:x="2751" fg:w="1"/><text x="94.0447%" y="7599.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.03%)</title><rect x="93.7947%" y="7573" width="0.0341%" height="15" fill="rgb(213,28,48)" fg:x="2751" fg:w="1"/><text x="94.0447%" y="7583.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.03%)</title><rect x="93.7947%" y="7557" width="0.0341%" height="15" fill="rgb(250,196,2)" fg:x="2751" fg:w="1"/><text x="94.0447%" y="7567.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.03%)</title><rect x="93.7947%" y="7541" width="0.0341%" height="15" fill="rgb(227,5,17)" fg:x="2751" fg:w="1"/><text x="94.0447%" y="7551.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.03%)</title><rect x="93.7947%" y="7525" width="0.0341%" height="15" fill="rgb(221,226,24)" fg:x="2751" fg:w="1"/><text x="94.0447%" y="7535.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.03%)</title><rect x="93.7947%" y="7509" width="0.0341%" height="15" fill="rgb(211,5,48)" fg:x="2751" fg:w="1"/><text x="94.0447%" y="7519.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (1 samples, 0.03%)</title><rect x="93.8288%" y="7637" width="0.0341%" height="15" fill="rgb(219,150,6)" fg:x="2752" fg:w="1"/><text x="94.0788%" y="7647.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (1 samples, 0.03%)</title><rect x="93.8288%" y="7621" width="0.0341%" height="15" fill="rgb(251,46,16)" fg:x="2752" fg:w="1"/><text x="94.0788%" y="7631.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot_in_group (1 samples, 0.03%)</title><rect x="93.8288%" y="7605" width="0.0341%" height="15" fill="rgb(220,204,40)" fg:x="2752" fg:w="1"/><text x="94.0788%" y="7615.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (1 samples, 0.03%)</title><rect x="93.8288%" y="7589" width="0.0341%" height="15" fill="rgb(211,85,2)" fg:x="2752" fg:w="1"/><text x="94.0788%" y="7599.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.03%)</title><rect x="93.8288%" y="7573" width="0.0341%" height="15" fill="rgb(229,17,7)" fg:x="2752" fg:w="1"/><text x="94.0788%" y="7583.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (4 samples, 0.14%)</title><rect x="93.7607%" y="7701" width="0.1364%" height="15" fill="rgb(239,72,28)" fg:x="2750" fg:w="4"/><text x="94.0107%" y="7711.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.14%)</title><rect x="93.7607%" y="7685" width="0.1364%" height="15" fill="rgb(230,47,54)" fg:x="2750" fg:w="4"/><text x="94.0107%" y="7695.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (4 samples, 0.14%)</title><rect x="93.7607%" y="7669" width="0.1364%" height="15" fill="rgb(214,50,8)" fg:x="2750" fg:w="4"/><text x="94.0107%" y="7679.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (4 samples, 0.14%)</title><rect x="93.7607%" y="7653" width="0.1364%" height="15" fill="rgb(216,198,43)" fg:x="2750" fg:w="4"/><text x="94.0107%" y="7663.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (1 samples, 0.03%)</title><rect x="93.8629%" y="7637" width="0.0341%" height="15" fill="rgb(234,20,35)" fg:x="2753" fg:w="1"/><text x="94.1129%" y="7647.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (1 samples, 0.03%)</title><rect x="93.8629%" y="7621" width="0.0341%" height="15" fill="rgb(254,45,19)" fg:x="2753" fg:w="1"/><text x="94.1129%" y="7631.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (1 samples, 0.03%)</title><rect x="93.8629%" y="7605" width="0.0341%" height="15" fill="rgb(219,14,44)" fg:x="2753" fg:w="1"/><text x="94.1129%" y="7615.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.03%)</title><rect x="93.8629%" y="7589" width="0.0341%" height="15" fill="rgb(217,220,26)" fg:x="2753" fg:w="1"/><text x="94.1129%" y="7599.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.03%)</title><rect x="93.8629%" y="7573" width="0.0341%" height="15" fill="rgb(213,158,28)" fg:x="2753" fg:w="1"/><text x="94.1129%" y="7583.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="93.8629%" y="7557" width="0.0341%" height="15" fill="rgb(252,51,52)" fg:x="2753" fg:w="1"/><text x="94.1129%" y="7567.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.03%)</title><rect x="93.8629%" y="7541" width="0.0341%" height="15" fill="rgb(246,89,16)" fg:x="2753" fg:w="1"/><text x="94.1129%" y="7551.50"></text></g><g><title>malloc (1 samples, 0.03%)</title><rect x="93.8629%" y="7525" width="0.0341%" height="15" fill="rgb(216,158,49)" fg:x="2753" fg:w="1"/><text x="94.1129%" y="7535.50"></text></g><g><title>hashbrown::raw::h2 (2 samples, 0.07%)</title><rect x="93.8970%" y="7685" width="0.0682%" height="15" fill="rgb(236,107,19)" fg:x="2754" fg:w="2"/><text x="94.1470%" y="7695.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (13 samples, 0.44%)</title><rect x="93.5561%" y="7765" width="0.4432%" height="15" fill="rgb(228,185,30)" fg:x="2744" fg:w="13"/><text x="93.8061%" y="7775.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (13 samples, 0.44%)</title><rect x="93.5561%" y="7749" width="0.4432%" height="15" fill="rgb(246,134,8)" fg:x="2744" fg:w="13"/><text x="93.8061%" y="7759.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (13 samples, 0.44%)</title><rect x="93.5561%" y="7733" width="0.4432%" height="15" fill="rgb(214,143,50)" fg:x="2744" fg:w="13"/><text x="93.8061%" y="7743.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (8 samples, 0.27%)</title><rect x="93.7266%" y="7717" width="0.2728%" height="15" fill="rgb(228,75,8)" fg:x="2749" fg:w="8"/><text x="93.9766%" y="7727.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_or_find_insert_slot_inner (3 samples, 0.10%)</title><rect x="93.8970%" y="7701" width="0.1023%" height="15" fill="rgb(207,175,4)" fg:x="2754" fg:w="3"/><text x="94.1470%" y="7711.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.03%)</title><rect x="93.9652%" y="7685" width="0.0341%" height="15" fill="rgb(205,108,24)" fg:x="2756" fg:w="1"/><text x="94.2152%" y="7695.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.03%)</title><rect x="93.9652%" y="7669" width="0.0341%" height="15" fill="rgb(244,120,49)" fg:x="2756" fg:w="1"/><text x="94.2152%" y="7679.50"></text></g><g><title>tetrs::logic::game::gravity (27 samples, 0.92%)</title><rect x="93.1129%" y="7781" width="0.9206%" height="15" fill="rgb(223,47,38)" fg:x="2731" fg:w="27"/><text x="93.3629%" y="7791.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="93.9993%" y="7765" width="0.0341%" height="15" fill="rgb(229,179,11)" fg:x="2757" fg:w="1"/><text x="94.2493%" y="7775.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::default::Default&gt;::default (1 samples, 0.03%)</title><rect x="93.9993%" y="7749" width="0.0341%" height="15" fill="rgb(231,122,1)" fg:x="2757" fg:w="1"/><text x="94.2493%" y="7759.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::default::Default&gt;::default (1 samples, 0.03%)</title><rect x="93.9993%" y="7733" width="0.0341%" height="15" fill="rgb(245,119,9)" fg:x="2757" fg:w="1"/><text x="94.2493%" y="7743.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::default::Default&gt;::default (1 samples, 0.03%)</title><rect x="93.9993%" y="7717" width="0.0341%" height="15" fill="rgb(241,163,25)" fg:x="2757" fg:w="1"/><text x="94.2493%" y="7727.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (1 samples, 0.03%)</title><rect x="93.9993%" y="7701" width="0.0341%" height="15" fill="rgb(217,214,3)" fg:x="2757" fg:w="1"/><text x="94.2493%" y="7711.50"></text></g><g><title>std::collections::hash::map::RandomState::new (1 samples, 0.03%)</title><rect x="93.9993%" y="7685" width="0.0341%" height="15" fill="rgb(240,86,28)" fg:x="2757" fg:w="1"/><text x="94.2493%" y="7695.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.03%)</title><rect x="93.9993%" y="7669" width="0.0341%" height="15" fill="rgb(215,47,9)" fg:x="2757" fg:w="1"/><text x="94.2493%" y="7679.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.03%)</title><rect x="93.9993%" y="7653" width="0.0341%" height="15" fill="rgb(252,25,45)" fg:x="2757" fg:w="1"/><text x="94.2493%" y="7663.50"></text></g><g><title>std::collections::hash::map::RandomState::new::_{{closure}} (1 samples, 0.03%)</title><rect x="93.9993%" y="7637" width="0.0341%" height="15" fill="rgb(251,164,9)" fg:x="2757" fg:w="1"/><text x="94.2493%" y="7647.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.03%)</title><rect x="93.9993%" y="7621" width="0.0341%" height="15" fill="rgb(233,194,0)" fg:x="2757" fg:w="1"/><text x="94.2493%" y="7631.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.03%)</title><rect x="93.9993%" y="7605" width="0.0341%" height="15" fill="rgb(249,111,24)" fg:x="2757" fg:w="1"/><text x="94.2493%" y="7615.50"></text></g><g><title>core::mem::replace (1 samples, 0.03%)</title><rect x="93.9993%" y="7589" width="0.0341%" height="15" fill="rgb(250,223,3)" fg:x="2757" fg:w="1"/><text x="94.2493%" y="7599.50"></text></g><g><title>core::ptr::write (1 samples, 0.03%)</title><rect x="93.9993%" y="7573" width="0.0341%" height="15" fill="rgb(236,178,37)" fg:x="2757" fg:w="1"/><text x="94.2493%" y="7583.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.03%)</title><rect x="94.1357%" y="7765" width="0.0341%" height="15" fill="rgb(241,158,50)" fg:x="2761" fg:w="1"/><text x="94.3857%" y="7775.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.03%)</title><rect x="94.1357%" y="7749" width="0.0341%" height="15" fill="rgb(213,121,41)" fg:x="2761" fg:w="1"/><text x="94.3857%" y="7759.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.03%)</title><rect x="94.1357%" y="7733" width="0.0341%" height="15" fill="rgb(240,92,3)" fg:x="2761" fg:w="1"/><text x="94.3857%" y="7743.50"></text></g><g><title>alloc::alloc::exchange_malloc (6 samples, 0.20%)</title><rect x="94.1698%" y="7765" width="0.2046%" height="15" fill="rgb(205,123,3)" fg:x="2762" fg:w="6"/><text x="94.4198%" y="7775.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.20%)</title><rect x="94.1698%" y="7749" width="0.2046%" height="15" fill="rgb(205,97,47)" fg:x="2762" fg:w="6"/><text x="94.4198%" y="7759.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.20%)</title><rect x="94.1698%" y="7733" width="0.2046%" height="15" fill="rgb(247,152,14)" fg:x="2762" fg:w="6"/><text x="94.4198%" y="7743.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.20%)</title><rect x="94.1698%" y="7717" width="0.2046%" height="15" fill="rgb(248,195,53)" fg:x="2762" fg:w="6"/><text x="94.4198%" y="7727.50"></text></g><g><title>malloc (6 samples, 0.20%)</title><rect x="94.1698%" y="7701" width="0.2046%" height="15" fill="rgb(226,201,16)" fg:x="2762" fg:w="6"/><text x="94.4198%" y="7711.50"></text></g><g><title>__rust_dealloc (1 samples, 0.03%)</title><rect x="94.3744%" y="7637" width="0.0341%" height="15" fill="rgb(205,98,0)" fg:x="2768" fg:w="1"/><text x="94.6244%" y="7647.50"></text></g><g><title>tetrs::logic::game::is_connected (15 samples, 0.51%)</title><rect x="94.0334%" y="7781" width="0.5114%" height="15" fill="rgb(214,191,48)" fg:x="2758" fg:w="15"/><text x="94.2834%" y="7791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(i8,i8)&gt;&gt; (5 samples, 0.17%)</title><rect x="94.3744%" y="7765" width="0.1705%" height="15" fill="rgb(237,112,39)" fg:x="2768" fg:w="5"/><text x="94.6244%" y="7775.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.17%)</title><rect x="94.3744%" y="7749" width="0.1705%" height="15" fill="rgb(247,203,27)" fg:x="2768" fg:w="5"/><text x="94.6244%" y="7759.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(i8,i8),alloc::alloc::Global&gt;&gt; (5 samples, 0.17%)</title><rect x="94.3744%" y="7733" width="0.1705%" height="15" fill="rgb(235,124,28)" fg:x="2768" fg:w="5"/><text x="94.6244%" y="7743.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.17%)</title><rect x="94.3744%" y="7717" width="0.1705%" height="15" fill="rgb(208,207,46)" fg:x="2768" fg:w="5"/><text x="94.6244%" y="7727.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(i8,i8)&gt;&gt; (5 samples, 0.17%)</title><rect x="94.3744%" y="7701" width="0.1705%" height="15" fill="rgb(234,176,4)" fg:x="2768" fg:w="5"/><text x="94.6244%" y="7711.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.17%)</title><rect x="94.3744%" y="7685" width="0.1705%" height="15" fill="rgb(230,133,28)" fg:x="2768" fg:w="5"/><text x="94.6244%" y="7695.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.17%)</title><rect x="94.3744%" y="7669" width="0.1705%" height="15" fill="rgb(211,137,40)" fg:x="2768" fg:w="5"/><text x="94.6244%" y="7679.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.17%)</title><rect x="94.3744%" y="7653" width="0.1705%" height="15" fill="rgb(254,35,13)" fg:x="2768" fg:w="5"/><text x="94.6244%" y="7663.50"></text></g><g><title>cfree (4 samples, 0.14%)</title><rect x="94.4085%" y="7637" width="0.1364%" height="15" fill="rgb(225,49,51)" fg:x="2769" fg:w="4"/><text x="94.6585%" y="7647.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="94.4766%" y="7621" width="0.0682%" height="15" fill="rgb(251,10,15)" fg:x="2771" fg:w="2"/><text x="94.7266%" y="7631.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::all (1 samples, 0.03%)</title><rect x="94.5789%" y="7765" width="0.0341%" height="15" fill="rgb(228,207,15)" fg:x="2774" fg:w="1"/><text x="94.8289%" y="7775.50"></text></g><g><title>tetrs::logic::game::gravity (1 samples, 0.03%)</title><rect x="94.6130%" y="7765" width="0.0341%" height="15" fill="rgb(241,99,19)" fg:x="2775" fg:w="1"/><text x="94.8630%" y="7775.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (1 samples, 0.03%)</title><rect x="94.6130%" y="7749" width="0.0341%" height="15" fill="rgb(207,104,49)" fg:x="2775" fg:w="1"/><text x="94.8630%" y="7759.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (1 samples, 0.03%)</title><rect x="94.6130%" y="7733" width="0.0341%" height="15" fill="rgb(234,99,18)" fg:x="2775" fg:w="1"/><text x="94.8630%" y="7743.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.03%)</title><rect x="94.6130%" y="7717" width="0.0341%" height="15" fill="rgb(213,191,49)" fg:x="2775" fg:w="1"/><text x="94.8630%" y="7727.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.03%)</title><rect x="94.6130%" y="7701" width="0.0341%" height="15" fill="rgb(210,226,19)" fg:x="2775" fg:w="1"/><text x="94.8630%" y="7711.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.03%)</title><rect x="94.6130%" y="7685" width="0.0341%" height="15" fill="rgb(229,97,18)" fg:x="2775" fg:w="1"/><text x="94.8630%" y="7695.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.03%)</title><rect x="94.6130%" y="7669" width="0.0341%" height="15" fill="rgb(211,167,15)" fg:x="2775" fg:w="1"/><text x="94.8630%" y="7679.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.03%)</title><rect x="94.6130%" y="7653" width="0.0341%" height="15" fill="rgb(210,169,34)" fg:x="2775" fg:w="1"/><text x="94.8630%" y="7663.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.03%)</title><rect x="94.6130%" y="7637" width="0.0341%" height="15" fill="rgb(241,121,31)" fg:x="2775" fg:w="1"/><text x="94.8630%" y="7647.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.03%)</title><rect x="94.6130%" y="7621" width="0.0341%" height="15" fill="rgb(232,40,11)" fg:x="2775" fg:w="1"/><text x="94.8630%" y="7631.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.03%)</title><rect x="94.6130%" y="7605" width="0.0341%" height="15" fill="rgb(205,86,26)" fg:x="2775" fg:w="1"/><text x="94.8630%" y="7615.50"></text></g><g><title>tetrs::logic::game::update (6 samples, 0.20%)</title><rect x="94.5448%" y="7781" width="0.2046%" height="15" fill="rgb(231,126,28)" fg:x="2773" fg:w="6"/><text x="94.7948%" y="7791.50"></text></g><g><title>tetrs::logic::game::is_connected (3 samples, 0.10%)</title><rect x="94.6471%" y="7765" width="0.1023%" height="15" fill="rgb(219,221,18)" fg:x="2776" fg:w="3"/><text x="94.8971%" y="7775.50"></text></g><g><title>tetrs::logic::game::update (67 samples, 2.28%)</title><rect x="92.7719%" y="7797" width="2.2844%" height="15" fill="rgb(211,40,0)" fg:x="2721" fg:w="67"/><text x="93.0219%" y="7807.50">t..</text></g><g><title>tetrs::logic::id_manager::IdManager::next_unique_id (9 samples, 0.31%)</title><rect x="94.7494%" y="7781" width="0.3069%" height="15" fill="rgb(239,85,43)" fg:x="2779" fg:w="9"/><text x="94.9994%" y="7791.50"></text></g><g><title>tetrs::logic::bot::search (2,911 samples, 99.25%)</title><rect x="0.2728%" y="7845" width="99.2499%" height="15" fill="rgb(231,55,21)" fg:x="8" fg:w="2911"/><text x="0.5228%" y="7855.50">tetrs::logic::bot::search</text></g><g><title>tetrs::logic::bot::heuristic (1,073 samples, 36.58%)</title><rect x="62.9390%" y="7829" width="36.5837%" height="15" fill="rgb(225,184,43)" fg:x="1846" fg:w="1073"/><text x="63.1890%" y="7839.50">tetrs::logic::bot::heuristic</text></g><g><title>tetrs::logic::game::update (1,043 samples, 35.56%)</title><rect x="63.9618%" y="7813" width="35.5609%" height="15" fill="rgb(251,158,41)" fg:x="1876" fg:w="1043"/><text x="64.2118%" y="7823.50">tetrs::logic::game::update</text></g><g><title>tetrs::logic::id_manager::IdManager::next_unique_id (131 samples, 4.47%)</title><rect x="95.0563%" y="7797" width="4.4664%" height="15" fill="rgb(234,159,37)" fg:x="2788" fg:w="131"/><text x="95.3063%" y="7807.50">tetrs..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (4 samples, 0.14%)</title><rect x="99.3863%" y="7781" width="0.1364%" height="15" fill="rgb(216,204,22)" fg:x="2915" fg:w="4"/><text x="99.6363%" y="7791.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (4 samples, 0.14%)</title><rect x="99.3863%" y="7765" width="0.1364%" height="15" fill="rgb(214,17,3)" fg:x="2915" fg:w="4"/><text x="99.6363%" y="7775.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (4 samples, 0.14%)</title><rect x="99.3863%" y="7749" width="0.1364%" height="15" fill="rgb(212,111,17)" fg:x="2915" fg:w="4"/><text x="99.6363%" y="7759.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="99.5227%" y="7829" width="0.0341%" height="15" fill="rgb(221,157,24)" fg:x="2919" fg:w="1"/><text x="99.7727%" y="7839.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (1 samples, 0.03%)</title><rect x="99.5227%" y="7813" width="0.0341%" height="15" fill="rgb(252,16,13)" fg:x="2919" fg:w="1"/><text x="99.7727%" y="7823.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (1 samples, 0.03%)</title><rect x="99.5227%" y="7797" width="0.0341%" height="15" fill="rgb(221,62,2)" fg:x="2919" fg:w="1"/><text x="99.7727%" y="7807.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::backward_unchecked (1 samples, 0.03%)</title><rect x="99.5227%" y="7781" width="0.0341%" height="15" fill="rgb(247,87,22)" fg:x="2919" fg:w="1"/><text x="99.7727%" y="7791.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_sub (1 samples, 0.03%)</title><rect x="99.5227%" y="7765" width="0.0341%" height="15" fill="rgb(215,73,9)" fg:x="2919" fg:w="1"/><text x="99.7727%" y="7775.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.10%)</title><rect x="99.5568%" y="7813" width="0.1023%" height="15" fill="rgb(207,175,33)" fg:x="2920" fg:w="3"/><text x="99.8068%" y="7823.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.10%)</title><rect x="99.5568%" y="7797" width="0.1023%" height="15" fill="rgb(243,129,54)" fg:x="2920" fg:w="3"/><text x="99.8068%" y="7807.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.10%)</title><rect x="99.5568%" y="7781" width="0.1023%" height="15" fill="rgb(227,119,45)" fg:x="2920" fg:w="3"/><text x="99.8068%" y="7791.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.10%)</title><rect x="99.5568%" y="7765" width="0.1023%" height="15" fill="rgb(205,109,36)" fg:x="2920" fg:w="3"/><text x="99.8068%" y="7775.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.10%)</title><rect x="99.5568%" y="7749" width="0.1023%" height="15" fill="rgb(205,6,39)" fg:x="2920" fg:w="3"/><text x="99.8068%" y="7759.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.10%)</title><rect x="99.5568%" y="7733" width="0.1023%" height="15" fill="rgb(221,32,16)" fg:x="2920" fg:w="3"/><text x="99.8068%" y="7743.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.10%)</title><rect x="99.5568%" y="7717" width="0.1023%" height="15" fill="rgb(228,144,50)" fg:x="2920" fg:w="3"/><text x="99.8068%" y="7727.50"></text></g><g><title>realloc (3 samples, 0.10%)</title><rect x="99.5568%" y="7701" width="0.1023%" height="15" fill="rgb(229,201,53)" fg:x="2920" fg:w="3"/><text x="99.8068%" y="7711.50"></text></g><g><title>[libc.so.6] (3 samples, 0.10%)</title><rect x="99.5568%" y="7685" width="0.1023%" height="15" fill="rgb(249,153,27)" fg:x="2920" fg:w="3"/><text x="99.8068%" y="7695.50"></text></g><g><title>[libc.so.6] (3 samples, 0.10%)</title><rect x="99.5568%" y="7669" width="0.1023%" height="15" fill="rgb(227,106,25)" fg:x="2920" fg:w="3"/><text x="99.8068%" y="7679.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1 samples, 0.03%)</title><rect x="99.6591%" y="7813" width="0.0341%" height="15" fill="rgb(230,65,29)" fg:x="2923" fg:w="1"/><text x="99.9091%" y="7823.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1 samples, 0.03%)</title><rect x="99.6591%" y="7797" width="0.0341%" height="15" fill="rgb(221,57,46)" fg:x="2923" fg:w="1"/><text x="99.9091%" y="7807.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.03%)</title><rect x="99.6591%" y="7781" width="0.0341%" height="15" fill="rgb(229,161,17)" fg:x="2923" fg:w="1"/><text x="99.9091%" y="7791.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.03%)</title><rect x="99.6591%" y="7765" width="0.0341%" height="15" fill="rgb(222,213,11)" fg:x="2923" fg:w="1"/><text x="99.9091%" y="7775.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.03%)</title><rect x="99.6591%" y="7749" width="0.0341%" height="15" fill="rgb(235,35,13)" fg:x="2923" fg:w="1"/><text x="99.9091%" y="7759.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.03%)</title><rect x="99.6591%" y="7733" width="0.0341%" height="15" fill="rgb(233,158,34)" fg:x="2923" fg:w="1"/><text x="99.9091%" y="7743.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.03%)</title><rect x="99.6591%" y="7717" width="0.0341%" height="15" fill="rgb(215,151,48)" fg:x="2923" fg:w="1"/><text x="99.9091%" y="7727.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (1 samples, 0.03%)</title><rect x="99.6591%" y="7701" width="0.0341%" height="15" fill="rgb(229,84,14)" fg:x="2923" fg:w="1"/><text x="99.9091%" y="7711.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.03%)</title><rect x="99.6591%" y="7685" width="0.0341%" height="15" fill="rgb(229,68,14)" fg:x="2923" fg:w="1"/><text x="99.9091%" y="7695.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.03%)</title><rect x="99.6591%" y="7669" width="0.0341%" height="15" fill="rgb(243,106,26)" fg:x="2923" fg:w="1"/><text x="99.9091%" y="7679.50"></text></g><g><title>tetrs::logic::game::gravity (5 samples, 0.17%)</title><rect x="99.5568%" y="7829" width="0.1705%" height="15" fill="rgb(206,45,38)" fg:x="2920" fg:w="5"/><text x="99.8068%" y="7839.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (1 samples, 0.03%)</title><rect x="99.6931%" y="7813" width="0.0341%" height="15" fill="rgb(226,6,15)" fg:x="2924" fg:w="1"/><text x="99.9431%" y="7823.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (1 samples, 0.03%)</title><rect x="99.6931%" y="7797" width="0.0341%" height="15" fill="rgb(232,22,54)" fg:x="2924" fg:w="1"/><text x="99.9431%" y="7807.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.03%)</title><rect x="99.6931%" y="7781" width="0.0341%" height="15" fill="rgb(229,222,32)" fg:x="2924" fg:w="1"/><text x="99.9431%" y="7791.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (1 samples, 0.03%)</title><rect x="99.6931%" y="7765" width="0.0341%" height="15" fill="rgb(228,62,29)" fg:x="2924" fg:w="1"/><text x="99.9431%" y="7775.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="99.6931%" y="7749" width="0.0341%" height="15" fill="rgb(251,103,34)" fg:x="2924" fg:w="1"/><text x="99.9431%" y="7759.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.03%)</title><rect x="99.6931%" y="7733" width="0.0341%" height="15" fill="rgb(233,12,30)" fg:x="2924" fg:w="1"/><text x="99.9431%" y="7743.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (1 samples, 0.03%)</title><rect x="99.6931%" y="7717" width="0.0341%" height="15" fill="rgb(238,52,0)" fg:x="2924" fg:w="1"/><text x="99.9431%" y="7727.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (1 samples, 0.03%)</title><rect x="99.6931%" y="7701" width="0.0341%" height="15" fill="rgb(223,98,5)" fg:x="2924" fg:w="1"/><text x="99.9431%" y="7711.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (1 samples, 0.03%)</title><rect x="99.6931%" y="7685" width="0.0341%" height="15" fill="rgb(228,75,37)" fg:x="2924" fg:w="1"/><text x="99.9431%" y="7695.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (1 samples, 0.03%)</title><rect x="99.6931%" y="7669" width="0.0341%" height="15" fill="rgb(205,115,49)" fg:x="2924" fg:w="1"/><text x="99.9431%" y="7679.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.03%)</title><rect x="99.6931%" y="7653" width="0.0341%" height="15" fill="rgb(250,154,43)" fg:x="2924" fg:w="1"/><text x="99.9431%" y="7663.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.03%)</title><rect x="99.6931%" y="7637" width="0.0341%" height="15" fill="rgb(226,43,29)" fg:x="2924" fg:w="1"/><text x="99.9431%" y="7647.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.03%)</title><rect x="99.6931%" y="7621" width="0.0341%" height="15" fill="rgb(249,228,39)" fg:x="2924" fg:w="1"/><text x="99.9431%" y="7631.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (1 samples, 0.03%)</title><rect x="99.6931%" y="7605" width="0.0341%" height="15" fill="rgb(216,79,43)" fg:x="2924" fg:w="1"/><text x="99.9431%" y="7615.50"></text></g><g><title>core::hash::Hasher::write_u16 (1 samples, 0.03%)</title><rect x="99.6931%" y="7589" width="0.0341%" height="15" fill="rgb(228,95,12)" fg:x="2924" fg:w="1"/><text x="99.9431%" y="7599.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.03%)</title><rect x="99.6931%" y="7573" width="0.0341%" height="15" fill="rgb(249,221,15)" fg:x="2924" fg:w="1"/><text x="99.9431%" y="7583.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.03%)</title><rect x="99.6931%" y="7557" width="0.0341%" height="15" fill="rgb(233,34,13)" fg:x="2924" fg:w="1"/><text x="99.9431%" y="7567.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.03%)</title><rect x="99.6931%" y="7541" width="0.0341%" height="15" fill="rgb(214,103,39)" fg:x="2924" fg:w="1"/><text x="99.9431%" y="7551.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.03%)</title><rect x="99.6931%" y="7525" width="0.0341%" height="15" fill="rgb(251,126,39)" fg:x="2924" fg:w="1"/><text x="99.9431%" y="7535.50"></text></g><g><title>tetrs::logic::game::gravity (1 samples, 0.03%)</title><rect x="99.7613%" y="7813" width="0.0341%" height="15" fill="rgb(214,216,36)" fg:x="2926" fg:w="1"/><text x="100.0113%" y="7823.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1 samples, 0.03%)</title><rect x="99.7613%" y="7797" width="0.0341%" height="15" fill="rgb(220,221,8)" fg:x="2926" fg:w="1"/><text x="100.0113%" y="7807.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1 samples, 0.03%)</title><rect x="99.7613%" y="7781" width="0.0341%" height="15" fill="rgb(240,216,3)" fg:x="2926" fg:w="1"/><text x="100.0113%" y="7791.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.03%)</title><rect x="99.7613%" y="7765" width="0.0341%" height="15" fill="rgb(232,218,17)" fg:x="2926" fg:w="1"/><text x="100.0113%" y="7775.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.03%)</title><rect x="99.7613%" y="7749" width="0.0341%" height="15" fill="rgb(229,163,45)" fg:x="2926" fg:w="1"/><text x="100.0113%" y="7759.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.03%)</title><rect x="99.7613%" y="7733" width="0.0341%" height="15" fill="rgb(231,110,42)" fg:x="2926" fg:w="1"/><text x="100.0113%" y="7743.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.03%)</title><rect x="99.7613%" y="7717" width="0.0341%" height="15" fill="rgb(208,170,48)" fg:x="2926" fg:w="1"/><text x="100.0113%" y="7727.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.03%)</title><rect x="99.7613%" y="7701" width="0.0341%" height="15" fill="rgb(239,116,25)" fg:x="2926" fg:w="1"/><text x="100.0113%" y="7711.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (1 samples, 0.03%)</title><rect x="99.7613%" y="7685" width="0.0341%" height="15" fill="rgb(219,200,50)" fg:x="2926" fg:w="1"/><text x="100.0113%" y="7695.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (1 samples, 0.03%)</title><rect x="99.7613%" y="7669" width="0.0341%" height="15" fill="rgb(245,200,0)" fg:x="2926" fg:w="1"/><text x="100.0113%" y="7679.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (1 samples, 0.03%)</title><rect x="99.7613%" y="7653" width="0.0341%" height="15" fill="rgb(245,119,33)" fg:x="2926" fg:w="1"/><text x="100.0113%" y="7663.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.03%)</title><rect x="99.7613%" y="7637" width="0.0341%" height="15" fill="rgb(231,125,12)" fg:x="2926" fg:w="1"/><text x="100.0113%" y="7647.50"></text></g><g><title>tetrs::logic::game::is_connected (1 samples, 0.03%)</title><rect x="99.7954%" y="7813" width="0.0341%" height="15" fill="rgb(216,96,41)" fg:x="2927" fg:w="1"/><text x="100.0454%" y="7823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(i8,i8)&gt;&gt; (1 samples, 0.03%)</title><rect x="99.7954%" y="7797" width="0.0341%" height="15" fill="rgb(248,43,45)" fg:x="2927" fg:w="1"/><text x="100.0454%" y="7807.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.7954%" y="7781" width="0.0341%" height="15" fill="rgb(217,222,7)" fg:x="2927" fg:w="1"/><text x="100.0454%" y="7791.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(i8,i8),alloc::alloc::Global&gt;&gt; (1 samples, 0.03%)</title><rect x="99.7954%" y="7765" width="0.0341%" height="15" fill="rgb(233,28,6)" fg:x="2927" fg:w="1"/><text x="100.0454%" y="7775.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.7954%" y="7749" width="0.0341%" height="15" fill="rgb(231,218,15)" fg:x="2927" fg:w="1"/><text x="100.0454%" y="7759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(i8,i8)&gt;&gt; (1 samples, 0.03%)</title><rect x="99.7954%" y="7733" width="0.0341%" height="15" fill="rgb(226,171,48)" fg:x="2927" fg:w="1"/><text x="100.0454%" y="7743.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.7954%" y="7717" width="0.0341%" height="15" fill="rgb(235,201,9)" fg:x="2927" fg:w="1"/><text x="100.0454%" y="7727.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.03%)</title><rect x="99.7954%" y="7701" width="0.0341%" height="15" fill="rgb(217,80,15)" fg:x="2927" fg:w="1"/><text x="100.0454%" y="7711.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.03%)</title><rect x="99.7954%" y="7685" width="0.0341%" height="15" fill="rgb(219,152,8)" fg:x="2927" fg:w="1"/><text x="100.0454%" y="7695.50"></text></g><g><title>cfree (1 samples, 0.03%)</title><rect x="99.7954%" y="7669" width="0.0341%" height="15" fill="rgb(243,107,38)" fg:x="2927" fg:w="1"/><text x="100.0454%" y="7679.50"></text></g><g><title>tetrs::logic::game::update (1 samples, 0.03%)</title><rect x="99.8295%" y="7813" width="0.0341%" height="15" fill="rgb(231,17,5)" fg:x="2928" fg:w="1"/><text x="100.0795%" y="7823.50"></text></g><g><title>tetrs::logic::game::update (1 samples, 0.03%)</title><rect x="99.8295%" y="7797" width="0.0341%" height="15" fill="rgb(209,25,54)" fg:x="2928" fg:w="1"/><text x="100.0795%" y="7807.50"></text></g><g><title>tetrs::logic::game::update (12 samples, 0.41%)</title><rect x="99.5227%" y="7845" width="0.4091%" height="15" fill="rgb(219,0,2)" fg:x="2919" fg:w="12"/><text x="99.7727%" y="7855.50"></text></g><g><title>tetrs::logic::game::update (6 samples, 0.20%)</title><rect x="99.7272%" y="7829" width="0.2046%" height="15" fill="rgb(246,9,5)" fg:x="2925" fg:w="6"/><text x="99.9772%" y="7839.50"></text></g><g><title>tetrs::logic::id_manager::IdManager::next_unique_id (2 samples, 0.07%)</title><rect x="99.8636%" y="7813" width="0.0682%" height="15" fill="rgb(226,159,4)" fg:x="2929" fg:w="2"/><text x="100.1136%" y="7823.50"></text></g><g><title>_start (2,924 samples, 99.69%)</title><rect x="0.2728%" y="8133" width="99.6931%" height="15" fill="rgb(219,175,34)" fg:x="8" fg:w="2924"/><text x="0.5228%" y="8143.50">_start</text></g><g><title>__libc_start_main (2,924 samples, 99.69%)</title><rect x="0.2728%" y="8117" width="99.6931%" height="15" fill="rgb(236,10,46)" fg:x="8" fg:w="2924"/><text x="0.5228%" y="8127.50">__libc_start_main</text></g><g><title>[libc.so.6] (2,924 samples, 99.69%)</title><rect x="0.2728%" y="8101" width="99.6931%" height="15" fill="rgb(240,211,16)" fg:x="8" fg:w="2924"/><text x="0.5228%" y="8111.50">[libc.so.6]</text></g><g><title>main (2,924 samples, 99.69%)</title><rect x="0.2728%" y="8085" width="99.6931%" height="15" fill="rgb(205,3,43)" fg:x="8" fg:w="2924"/><text x="0.5228%" y="8095.50">main</text></g><g><title>std::rt::lang_start_internal (2,924 samples, 99.69%)</title><rect x="0.2728%" y="8069" width="99.6931%" height="15" fill="rgb(245,7,22)" fg:x="8" fg:w="2924"/><text x="0.5228%" y="8079.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (2,924 samples, 99.69%)</title><rect x="0.2728%" y="8053" width="99.6931%" height="15" fill="rgb(239,132,32)" fg:x="8" fg:w="2924"/><text x="0.5228%" y="8063.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (2,924 samples, 99.69%)</title><rect x="0.2728%" y="8037" width="99.6931%" height="15" fill="rgb(228,202,34)" fg:x="8" fg:w="2924"/><text x="0.5228%" y="8047.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (2,924 samples, 99.69%)</title><rect x="0.2728%" y="8021" width="99.6931%" height="15" fill="rgb(254,200,22)" fg:x="8" fg:w="2924"/><text x="0.5228%" y="8031.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (2,924 samples, 99.69%)</title><rect x="0.2728%" y="8005" width="99.6931%" height="15" fill="rgb(219,10,39)" fg:x="8" fg:w="2924"/><text x="0.5228%" y="8015.50">std::rt::lang_start_internal::_{{closure}}</text></g><g><title>std::panic::catch_unwind (2,924 samples, 99.69%)</title><rect x="0.2728%" y="7989" width="99.6931%" height="15" fill="rgb(226,210,39)" fg:x="8" fg:w="2924"/><text x="0.5228%" y="7999.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (2,924 samples, 99.69%)</title><rect x="0.2728%" y="7973" width="99.6931%" height="15" fill="rgb(208,219,16)" fg:x="8" fg:w="2924"/><text x="0.5228%" y="7983.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (2,924 samples, 99.69%)</title><rect x="0.2728%" y="7957" width="99.6931%" height="15" fill="rgb(216,158,51)" fg:x="8" fg:w="2924"/><text x="0.5228%" y="7967.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (2,924 samples, 99.69%)</title><rect x="0.2728%" y="7941" width="99.6931%" height="15" fill="rgb(233,14,44)" fg:x="8" fg:w="2924"/><text x="0.5228%" y="7951.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::_{{closure}} (2,924 samples, 99.69%)</title><rect x="0.2728%" y="7925" width="99.6931%" height="15" fill="rgb(237,97,39)" fg:x="8" fg:w="2924"/><text x="0.5228%" y="7935.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2,924 samples, 99.69%)</title><rect x="0.2728%" y="7909" width="99.6931%" height="15" fill="rgb(218,198,43)" fg:x="8" fg:w="2924"/><text x="0.5228%" y="7919.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (2,924 samples, 99.69%)</title><rect x="0.2728%" y="7893" width="99.6931%" height="15" fill="rgb(231,104,20)" fg:x="8" fg:w="2924"/><text x="0.5228%" y="7903.50">core::ops::function::FnOnce::call_once</text></g><g><title>tetrs::main (2,924 samples, 99.69%)</title><rect x="0.2728%" y="7877" width="99.6931%" height="15" fill="rgb(254,36,13)" fg:x="8" fg:w="2924"/><text x="0.5228%" y="7887.50">tetrs::main</text></g><g><title>tetrs::app::App::test_bot (2,924 samples, 99.69%)</title><rect x="0.2728%" y="7861" width="99.6931%" height="15" fill="rgb(248,14,50)" fg:x="8" fg:w="2924"/><text x="0.5228%" y="7871.50">tetrs::app::App::test_bot</text></g><g><title>tetrs::logic::next_shapes::NextShapes::get_next_stack (1 samples, 0.03%)</title><rect x="99.9318%" y="7845" width="0.0341%" height="15" fill="rgb(217,107,29)" fg:x="2931" fg:w="1"/><text x="100.1818%" y="7855.50"></text></g><g><title>tetrs::logic::next_shapes::NextShapes::get_next_shape_from_pool (1 samples, 0.03%)</title><rect x="99.9318%" y="7829" width="0.0341%" height="15" fill="rgb(251,169,33)" fg:x="2931" fg:w="1"/><text x="100.1818%" y="7839.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::remove (1 samples, 0.03%)</title><rect x="99.9318%" y="7813" width="0.0341%" height="15" fill="rgb(217,108,32)" fg:x="2931" fg:w="1"/><text x="100.1818%" y="7823.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.03%)</title><rect x="99.9318%" y="7797" width="0.0341%" height="15" fill="rgb(219,66,42)" fg:x="2931" fg:w="1"/><text x="100.1818%" y="7807.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="99.9318%" y="7781" width="0.0341%" height="15" fill="rgb(206,180,7)" fg:x="2931" fg:w="1"/><text x="100.1818%" y="7791.50"></text></g><g><title>all (2,933 samples, 100%)</title><rect x="0.0000%" y="8165" width="100.0000%" height="15" fill="rgb(208,226,31)" fg:x="0" fg:w="2933"/><text x="0.2500%" y="8175.50"></text></g><g><title>tetrs (2,933 samples, 100.00%)</title><rect x="0.0000%" y="8149" width="100.0000%" height="15" fill="rgb(218,26,49)" fg:x="0" fg:w="2933"/><text x="0.2500%" y="8159.50">tetrs</text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="8133" width="0.0341%" height="15" fill="rgb(233,197,48)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="8143.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="8117" width="0.0341%" height="15" fill="rgb(252,181,51)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="8127.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="8101" width="0.0341%" height="15" fill="rgb(253,90,19)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="8111.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="8085" width="0.0341%" height="15" fill="rgb(215,171,30)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="8095.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="8069" width="0.0341%" height="15" fill="rgb(214,222,9)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="8079.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="8053" width="0.0341%" height="15" fill="rgb(223,3,22)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="8063.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="8037" width="0.0341%" height="15" fill="rgb(225,196,46)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="8047.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="8021" width="0.0341%" height="15" fill="rgb(209,110,37)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="8031.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="8005" width="0.0341%" height="15" fill="rgb(249,89,12)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="8015.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="7989" width="0.0341%" height="15" fill="rgb(226,27,33)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="7999.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="7973" width="0.0341%" height="15" fill="rgb(213,82,22)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="7983.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="7957" width="0.0341%" height="15" fill="rgb(248,140,0)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="7967.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="7941" width="0.0341%" height="15" fill="rgb(228,106,3)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="7951.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="7925" width="0.0341%" height="15" fill="rgb(209,23,37)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="7935.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="7909" width="0.0341%" height="15" fill="rgb(241,93,50)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="7919.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="7893" width="0.0341%" height="15" fill="rgb(253,46,43)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="7903.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="7877" width="0.0341%" height="15" fill="rgb(226,206,43)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="7887.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="7861" width="0.0341%" height="15" fill="rgb(217,54,7)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="7871.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="7845" width="0.0341%" height="15" fill="rgb(223,5,52)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="7855.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="7829" width="0.0341%" height="15" fill="rgb(206,52,46)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="7839.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="7813" width="0.0341%" height="15" fill="rgb(253,136,11)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="7823.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="7797" width="0.0341%" height="15" fill="rgb(208,106,33)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="7807.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="7781" width="0.0341%" height="15" fill="rgb(206,54,4)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="7791.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="7765" width="0.0341%" height="15" fill="rgb(213,3,15)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="7775.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="7749" width="0.0341%" height="15" fill="rgb(252,211,39)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="7759.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="7733" width="0.0341%" height="15" fill="rgb(223,6,36)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="7743.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="7717" width="0.0341%" height="15" fill="rgb(252,169,45)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="7727.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="7701" width="0.0341%" height="15" fill="rgb(212,48,26)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="7711.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="7685" width="0.0341%" height="15" fill="rgb(251,102,48)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="7695.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="7669" width="0.0341%" height="15" fill="rgb(243,208,16)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="7679.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="7653" width="0.0341%" height="15" fill="rgb(219,96,24)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="7663.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="7637" width="0.0341%" height="15" fill="rgb(219,33,29)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="7647.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="7621" width="0.0341%" height="15" fill="rgb(223,176,5)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="7631.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="7605" width="0.0341%" height="15" fill="rgb(228,140,14)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="7615.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="7589" width="0.0341%" height="15" fill="rgb(217,179,31)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="7599.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="7573" width="0.0341%" height="15" fill="rgb(230,9,30)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="7583.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="7557" width="0.0341%" height="15" fill="rgb(230,136,20)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="7567.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="7541" width="0.0341%" height="15" fill="rgb(215,210,22)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="7551.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="7525" width="0.0341%" height="15" fill="rgb(218,43,5)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="7535.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="7509" width="0.0341%" height="15" fill="rgb(216,11,5)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="7519.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="7493" width="0.0341%" height="15" fill="rgb(209,82,29)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="7503.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="7477" width="0.0341%" height="15" fill="rgb(244,115,12)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="7487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="7461" width="0.0341%" height="15" fill="rgb(222,82,18)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="7471.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="7445" width="0.0341%" height="15" fill="rgb(249,227,8)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="7455.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="7429" width="0.0341%" height="15" fill="rgb(253,141,45)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="7439.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="7413" width="0.0341%" height="15" fill="rgb(234,184,4)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="7423.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="7397" width="0.0341%" height="15" fill="rgb(218,194,23)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="7407.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="7381" width="0.0341%" height="15" fill="rgb(235,66,41)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="7391.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="7365" width="0.0341%" height="15" fill="rgb(245,217,1)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="7375.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="7349" width="0.0341%" height="15" fill="rgb(229,91,1)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="7359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="7333" width="0.0341%" height="15" fill="rgb(207,101,30)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="7343.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="7317" width="0.0341%" height="15" fill="rgb(223,82,49)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="7327.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="7301" width="0.0341%" height="15" fill="rgb(218,167,17)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="7311.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="7285" width="0.0341%" height="15" fill="rgb(208,103,14)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="7295.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="7269" width="0.0341%" height="15" fill="rgb(238,20,8)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="7279.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="7253" width="0.0341%" height="15" fill="rgb(218,80,54)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="7263.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="7237" width="0.0341%" height="15" fill="rgb(240,144,17)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="7247.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="7221" width="0.0341%" height="15" fill="rgb(245,27,50)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="7231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="7205" width="0.0341%" height="15" fill="rgb(251,51,7)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="7215.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="7189" width="0.0341%" height="15" fill="rgb(245,217,29)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="7199.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="7173" width="0.0341%" height="15" fill="rgb(221,176,29)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="7183.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="7157" width="0.0341%" height="15" fill="rgb(212,180,24)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="7167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="7141" width="0.0341%" height="15" fill="rgb(254,24,2)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="7151.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="7125" width="0.0341%" height="15" fill="rgb(230,100,2)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="7135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="7109" width="0.0341%" height="15" fill="rgb(219,142,25)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="7119.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="7093" width="0.0341%" height="15" fill="rgb(240,73,43)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="7103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="7077" width="0.0341%" height="15" fill="rgb(214,114,15)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="7087.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="7061" width="0.0341%" height="15" fill="rgb(207,130,4)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="7071.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="7045" width="0.0341%" height="15" fill="rgb(221,25,40)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="7055.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="7029" width="0.0341%" height="15" fill="rgb(241,184,7)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="7039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="7013" width="0.0341%" height="15" fill="rgb(235,159,4)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="7023.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="6997" width="0.0341%" height="15" fill="rgb(214,87,48)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="7007.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="6981" width="0.0341%" height="15" fill="rgb(246,198,24)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="6991.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="6965" width="0.0341%" height="15" fill="rgb(209,66,40)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="6975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="6949" width="0.0341%" height="15" fill="rgb(233,147,39)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="6959.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="6933" width="0.0341%" height="15" fill="rgb(231,145,52)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="6943.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="6917" width="0.0341%" height="15" fill="rgb(206,20,26)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="6927.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="6901" width="0.0341%" height="15" fill="rgb(238,220,4)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="6911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="6885" width="0.0341%" height="15" fill="rgb(252,195,42)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="6895.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="6869" width="0.0341%" height="15" fill="rgb(209,10,6)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="6879.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="6853" width="0.0341%" height="15" fill="rgb(229,3,52)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="6863.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="6837" width="0.0341%" height="15" fill="rgb(253,49,37)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="6847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="6821" width="0.0341%" height="15" fill="rgb(240,103,49)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="6831.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="6805" width="0.0341%" height="15" fill="rgb(250,182,30)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="6815.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="6789" width="0.0341%" height="15" fill="rgb(248,8,30)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="6799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="6773" width="0.0341%" height="15" fill="rgb(237,120,30)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="6783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="6757" width="0.0341%" height="15" fill="rgb(221,146,34)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="6767.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="6741" width="0.0341%" height="15" fill="rgb(242,55,13)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="6751.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="6725" width="0.0341%" height="15" fill="rgb(242,112,31)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="6735.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="6709" width="0.0341%" height="15" fill="rgb(249,192,27)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="6719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="6693" width="0.0341%" height="15" fill="rgb(208,204,44)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="6703.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="6677" width="0.0341%" height="15" fill="rgb(208,93,54)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="6687.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="6661" width="0.0341%" height="15" fill="rgb(242,1,31)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="6671.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="6645" width="0.0341%" height="15" fill="rgb(241,83,25)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="6655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="6629" width="0.0341%" height="15" fill="rgb(205,169,50)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="6639.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="6613" width="0.0341%" height="15" fill="rgb(239,186,37)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="6623.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="6597" width="0.0341%" height="15" fill="rgb(205,221,10)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="6607.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="6581" width="0.0341%" height="15" fill="rgb(218,196,15)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="6591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="6565" width="0.0341%" height="15" fill="rgb(218,196,35)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="6575.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="6549" width="0.0341%" height="15" fill="rgb(233,63,24)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="6559.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="6533" width="0.0341%" height="15" fill="rgb(225,8,4)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="6543.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="6517" width="0.0341%" height="15" fill="rgb(234,105,35)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="6527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="6501" width="0.0341%" height="15" fill="rgb(236,21,32)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="6511.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="6485" width="0.0341%" height="15" fill="rgb(228,109,6)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="6495.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="6469" width="0.0341%" height="15" fill="rgb(229,215,31)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="6479.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="6453" width="0.0341%" height="15" fill="rgb(221,52,54)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="6463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="6437" width="0.0341%" height="15" fill="rgb(252,129,43)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="6447.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="6421" width="0.0341%" height="15" fill="rgb(248,183,27)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="6431.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="6405" width="0.0341%" height="15" fill="rgb(250,0,22)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="6415.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="6389" width="0.0341%" height="15" fill="rgb(213,166,10)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="6399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="6373" width="0.0341%" height="15" fill="rgb(207,163,36)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="6383.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="6357" width="0.0341%" height="15" fill="rgb(208,122,22)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="6367.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="6341" width="0.0341%" height="15" fill="rgb(207,104,49)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="6351.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="6325" width="0.0341%" height="15" fill="rgb(248,211,50)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="6335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="6309" width="0.0341%" height="15" fill="rgb(217,13,45)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="6319.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="6293" width="0.0341%" height="15" fill="rgb(211,216,49)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="6303.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="6277" width="0.0341%" height="15" fill="rgb(221,58,53)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="6287.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="6261" width="0.0341%" height="15" fill="rgb(220,112,41)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="6271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="6245" width="0.0341%" height="15" fill="rgb(236,38,28)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="6255.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="6229" width="0.0341%" height="15" fill="rgb(227,195,22)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="6239.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="6213" width="0.0341%" height="15" fill="rgb(214,55,33)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="6223.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="6197" width="0.0341%" height="15" fill="rgb(248,80,13)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="6207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="6181" width="0.0341%" height="15" fill="rgb(238,52,6)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="6191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="6165" width="0.0341%" height="15" fill="rgb(224,198,47)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="6175.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="6149" width="0.0341%" height="15" fill="rgb(233,171,20)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="6159.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="6133" width="0.0341%" height="15" fill="rgb(241,30,25)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="6143.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="6117" width="0.0341%" height="15" fill="rgb(207,171,38)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="6127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="6101" width="0.0341%" height="15" fill="rgb(234,70,1)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="6111.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="6085" width="0.0341%" height="15" fill="rgb(232,178,18)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="6095.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="6069" width="0.0341%" height="15" fill="rgb(241,78,40)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="6079.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="6053" width="0.0341%" height="15" fill="rgb(222,35,25)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="6063.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="6037" width="0.0341%" height="15" fill="rgb(207,92,16)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="6047.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="6021" width="0.0341%" height="15" fill="rgb(216,59,51)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="6031.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="6005" width="0.0341%" height="15" fill="rgb(213,80,28)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="6015.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="5989" width="0.0341%" height="15" fill="rgb(220,93,7)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="5999.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="5973" width="0.0341%" height="15" fill="rgb(225,24,44)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="5983.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="5957" width="0.0341%" height="15" fill="rgb(243,74,40)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="5967.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="5941" width="0.0341%" height="15" fill="rgb(228,39,7)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="5951.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="5925" width="0.0341%" height="15" fill="rgb(227,79,8)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="5935.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="5909" width="0.0341%" height="15" fill="rgb(236,58,11)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="5919.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="5893" width="0.0341%" height="15" fill="rgb(249,63,35)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="5903.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="5877" width="0.0341%" height="15" fill="rgb(252,114,16)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="5887.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="5861" width="0.0341%" height="15" fill="rgb(254,151,24)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="5871.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="5845" width="0.0341%" height="15" fill="rgb(253,54,39)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="5855.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="5829" width="0.0341%" height="15" fill="rgb(243,25,45)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="5839.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="5813" width="0.0341%" height="15" fill="rgb(234,134,9)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="5823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="5797" width="0.0341%" height="15" fill="rgb(227,166,31)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="5807.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="5781" width="0.0341%" height="15" fill="rgb(245,143,41)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="5791.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="5765" width="0.0341%" height="15" fill="rgb(238,181,32)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="5775.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="5749" width="0.0341%" height="15" fill="rgb(224,113,18)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="5759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="5733" width="0.0341%" height="15" fill="rgb(240,229,28)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="5743.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="5717" width="0.0341%" height="15" fill="rgb(250,185,3)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="5727.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="5701" width="0.0341%" height="15" fill="rgb(212,59,25)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="5711.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="5685" width="0.0341%" height="15" fill="rgb(221,87,20)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="5695.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="5669" width="0.0341%" height="15" fill="rgb(213,74,28)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="5679.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="5653" width="0.0341%" height="15" fill="rgb(224,132,34)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="5663.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="5637" width="0.0341%" height="15" fill="rgb(222,101,24)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="5647.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="5621" width="0.0341%" height="15" fill="rgb(254,142,4)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="5631.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="5605" width="0.0341%" height="15" fill="rgb(230,229,49)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="5615.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="5589" width="0.0341%" height="15" fill="rgb(238,70,47)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="5599.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="5573" width="0.0341%" height="15" fill="rgb(231,160,17)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="5583.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="5557" width="0.0341%" height="15" fill="rgb(218,68,53)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="5567.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="5541" width="0.0341%" height="15" fill="rgb(236,111,10)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="5551.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="5525" width="0.0341%" height="15" fill="rgb(224,34,41)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="5535.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="5509" width="0.0341%" height="15" fill="rgb(241,118,19)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="5519.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="5493" width="0.0341%" height="15" fill="rgb(238,129,25)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="5503.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="5477" width="0.0341%" height="15" fill="rgb(238,22,31)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="5487.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="5461" width="0.0341%" height="15" fill="rgb(222,174,48)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="5471.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="5445" width="0.0341%" height="15" fill="rgb(206,152,40)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="5455.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="5429" width="0.0341%" height="15" fill="rgb(218,99,54)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="5439.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="5413" width="0.0341%" height="15" fill="rgb(220,174,26)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="5423.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="5397" width="0.0341%" height="15" fill="rgb(245,116,9)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="5407.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="5381" width="0.0341%" height="15" fill="rgb(209,72,35)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="5391.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="5365" width="0.0341%" height="15" fill="rgb(226,126,21)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="5375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="5349" width="0.0341%" height="15" fill="rgb(227,192,1)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="5359.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="5333" width="0.0341%" height="15" fill="rgb(237,180,29)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="5343.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="5317" width="0.0341%" height="15" fill="rgb(230,197,35)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="5327.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="5301" width="0.0341%" height="15" fill="rgb(246,193,31)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="5311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="5285" width="0.0341%" height="15" fill="rgb(241,36,4)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="5295.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="5269" width="0.0341%" height="15" fill="rgb(241,130,17)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="5279.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="5253" width="0.0341%" height="15" fill="rgb(206,137,32)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="5263.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="5237" width="0.0341%" height="15" fill="rgb(237,228,51)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="5247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="5221" width="0.0341%" height="15" fill="rgb(243,6,42)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="5231.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="5205" width="0.0341%" height="15" fill="rgb(251,74,28)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="5215.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="5189" width="0.0341%" height="15" fill="rgb(218,20,49)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="5199.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="5173" width="0.0341%" height="15" fill="rgb(238,28,14)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="5183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="5157" width="0.0341%" height="15" fill="rgb(229,40,46)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="5167.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="5141" width="0.0341%" height="15" fill="rgb(244,195,20)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="5151.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="5125" width="0.0341%" height="15" fill="rgb(253,56,35)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="5135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="5109" width="0.0341%" height="15" fill="rgb(210,149,44)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="5119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="5093" width="0.0341%" height="15" fill="rgb(240,135,12)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="5103.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="5077" width="0.0341%" height="15" fill="rgb(251,24,50)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="5087.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="5061" width="0.0341%" height="15" fill="rgb(243,200,47)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="5071.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="5045" width="0.0341%" height="15" fill="rgb(224,166,26)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="5055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="5029" width="0.0341%" height="15" fill="rgb(233,0,47)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="5039.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="5013" width="0.0341%" height="15" fill="rgb(253,80,5)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="5023.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="4997" width="0.0341%" height="15" fill="rgb(214,133,25)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="5007.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="4981" width="0.0341%" height="15" fill="rgb(209,27,14)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="4991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="4965" width="0.0341%" height="15" fill="rgb(219,102,51)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="4975.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="4949" width="0.0341%" height="15" fill="rgb(237,18,16)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="4959.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="4933" width="0.0341%" height="15" fill="rgb(241,85,17)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="4943.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="4917" width="0.0341%" height="15" fill="rgb(236,90,42)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="4927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="4901" width="0.0341%" height="15" fill="rgb(249,57,21)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="4911.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="4885" width="0.0341%" height="15" fill="rgb(243,12,36)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="4895.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="4869" width="0.0341%" height="15" fill="rgb(253,128,47)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="4879.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="4853" width="0.0341%" height="15" fill="rgb(207,33,20)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="4863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="4837" width="0.0341%" height="15" fill="rgb(233,215,35)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="4847.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="4821" width="0.0341%" height="15" fill="rgb(249,188,52)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="4831.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="4805" width="0.0341%" height="15" fill="rgb(225,12,32)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="4815.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="4789" width="0.0341%" height="15" fill="rgb(247,98,14)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="4799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="4773" width="0.0341%" height="15" fill="rgb(247,219,48)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="4783.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="4757" width="0.0341%" height="15" fill="rgb(253,60,48)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="4767.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="4741" width="0.0341%" height="15" fill="rgb(245,15,52)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="4751.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="4725" width="0.0341%" height="15" fill="rgb(220,133,28)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="4735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="4709" width="0.0341%" height="15" fill="rgb(217,180,4)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="4719.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="4693" width="0.0341%" height="15" fill="rgb(251,24,1)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="4703.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="4677" width="0.0341%" height="15" fill="rgb(212,185,49)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="4687.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="4661" width="0.0341%" height="15" fill="rgb(215,175,22)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="4671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="4645" width="0.0341%" height="15" fill="rgb(250,205,14)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="4655.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="4629" width="0.0341%" height="15" fill="rgb(225,211,22)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="4639.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="4613" width="0.0341%" height="15" fill="rgb(251,179,42)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="4623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="4597" width="0.0341%" height="15" fill="rgb(208,216,51)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="4607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="4581" width="0.0341%" height="15" fill="rgb(235,36,11)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="4591.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="4565" width="0.0341%" height="15" fill="rgb(213,189,28)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="4575.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="4549" width="0.0341%" height="15" fill="rgb(227,203,42)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="4559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="4533" width="0.0341%" height="15" fill="rgb(244,72,36)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="4543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="4517" width="0.0341%" height="15" fill="rgb(213,53,17)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="4527.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="4501" width="0.0341%" height="15" fill="rgb(207,167,3)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="4511.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="4485" width="0.0341%" height="15" fill="rgb(216,98,30)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="4495.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="4469" width="0.0341%" height="15" fill="rgb(236,123,15)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="4479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="4453" width="0.0341%" height="15" fill="rgb(248,81,50)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="4463.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="4437" width="0.0341%" height="15" fill="rgb(214,120,4)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="4447.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="4421" width="0.0341%" height="15" fill="rgb(208,179,34)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="4431.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="4405" width="0.0341%" height="15" fill="rgb(227,140,7)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="4415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="4389" width="0.0341%" height="15" fill="rgb(214,22,6)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="4399.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="4373" width="0.0341%" height="15" fill="rgb(207,137,27)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="4383.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="4357" width="0.0341%" height="15" fill="rgb(210,8,46)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="4367.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="4341" width="0.0341%" height="15" fill="rgb(240,16,54)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="4351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="4325" width="0.0341%" height="15" fill="rgb(211,209,29)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="4335.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="4309" width="0.0341%" height="15" fill="rgb(226,228,24)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="4319.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="4293" width="0.0341%" height="15" fill="rgb(222,84,9)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="4303.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="4277" width="0.0341%" height="15" fill="rgb(234,203,30)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="4287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="4261" width="0.0341%" height="15" fill="rgb(238,109,14)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="4271.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="4245" width="0.0341%" height="15" fill="rgb(233,206,34)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="4255.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="4229" width="0.0341%" height="15" fill="rgb(220,167,47)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="4239.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="4213" width="0.0341%" height="15" fill="rgb(238,105,10)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="4223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="4197" width="0.0341%" height="15" fill="rgb(213,227,17)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="4207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="4181" width="0.0341%" height="15" fill="rgb(217,132,38)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="4191.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="4165" width="0.0341%" height="15" fill="rgb(242,146,4)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="4175.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="4149" width="0.0341%" height="15" fill="rgb(212,61,9)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="4159.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="4133" width="0.0341%" height="15" fill="rgb(247,126,22)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="4143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="4117" width="0.0341%" height="15" fill="rgb(220,196,2)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="4127.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="4101" width="0.0341%" height="15" fill="rgb(208,46,4)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="4111.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="4085" width="0.0341%" height="15" fill="rgb(252,104,46)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="4095.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="4069" width="0.0341%" height="15" fill="rgb(237,152,48)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="4079.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="4053" width="0.0341%" height="15" fill="rgb(221,59,37)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="4063.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="4037" width="0.0341%" height="15" fill="rgb(209,202,51)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="4047.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="4021" width="0.0341%" height="15" fill="rgb(228,81,30)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="4031.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="4005" width="0.0341%" height="15" fill="rgb(227,42,39)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="4015.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="3989" width="0.0341%" height="15" fill="rgb(221,26,2)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="3999.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="3973" width="0.0341%" height="15" fill="rgb(254,61,31)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="3983.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="3957" width="0.0341%" height="15" fill="rgb(222,173,38)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="3967.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="3941" width="0.0341%" height="15" fill="rgb(218,50,12)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="3951.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="3925" width="0.0341%" height="15" fill="rgb(223,88,40)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="3935.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="3909" width="0.0341%" height="15" fill="rgb(237,54,19)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="3919.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="3893" width="0.0341%" height="15" fill="rgb(251,129,25)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="3903.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="3877" width="0.0341%" height="15" fill="rgb(238,97,19)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="3887.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="3861" width="0.0341%" height="15" fill="rgb(240,169,18)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="3871.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="3845" width="0.0341%" height="15" fill="rgb(230,187,49)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="3855.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="3829" width="0.0341%" height="15" fill="rgb(209,44,26)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="3839.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="3813" width="0.0341%" height="15" fill="rgb(244,0,6)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="3823.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="3797" width="0.0341%" height="15" fill="rgb(248,18,21)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="3807.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="3781" width="0.0341%" height="15" fill="rgb(245,180,19)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="3791.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="3765" width="0.0341%" height="15" fill="rgb(252,118,36)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="3775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="3749" width="0.0341%" height="15" fill="rgb(210,224,19)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="3759.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="3733" width="0.0341%" height="15" fill="rgb(218,30,24)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="3743.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="3717" width="0.0341%" height="15" fill="rgb(219,75,50)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="3727.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="3701" width="0.0341%" height="15" fill="rgb(234,72,50)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="3711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="3685" width="0.0341%" height="15" fill="rgb(219,100,48)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="3695.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="3669" width="0.0341%" height="15" fill="rgb(253,5,41)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="3679.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="3653" width="0.0341%" height="15" fill="rgb(247,181,11)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="3663.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="3637" width="0.0341%" height="15" fill="rgb(222,223,25)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="3647.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="3621" width="0.0341%" height="15" fill="rgb(214,198,28)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="3631.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="3605" width="0.0341%" height="15" fill="rgb(230,46,43)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="3615.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="3589" width="0.0341%" height="15" fill="rgb(233,65,53)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="3599.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="3573" width="0.0341%" height="15" fill="rgb(221,121,27)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="3583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="3557" width="0.0341%" height="15" fill="rgb(247,70,47)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="3567.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="3541" width="0.0341%" height="15" fill="rgb(228,85,35)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="3551.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="3525" width="0.0341%" height="15" fill="rgb(209,50,18)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="3535.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="3509" width="0.0341%" height="15" fill="rgb(250,19,35)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="3519.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="3493" width="0.0341%" height="15" fill="rgb(253,107,29)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="3503.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="3477" width="0.0341%" height="15" fill="rgb(252,179,29)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="3487.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="3461" width="0.0341%" height="15" fill="rgb(238,194,6)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="3471.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="3445" width="0.0341%" height="15" fill="rgb(238,164,29)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="3455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="3429" width="0.0341%" height="15" fill="rgb(224,25,9)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="3439.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="3413" width="0.0341%" height="15" fill="rgb(244,153,23)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="3423.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="3397" width="0.0341%" height="15" fill="rgb(212,203,14)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="3407.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="3381" width="0.0341%" height="15" fill="rgb(220,164,20)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="3391.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="3365" width="0.0341%" height="15" fill="rgb(222,203,48)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="3375.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="3349" width="0.0341%" height="15" fill="rgb(215,159,22)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="3359.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="3333" width="0.0341%" height="15" fill="rgb(216,183,47)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="3343.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="3317" width="0.0341%" height="15" fill="rgb(229,195,25)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="3327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="3301" width="0.0341%" height="15" fill="rgb(224,132,51)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="3311.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="3285" width="0.0341%" height="15" fill="rgb(240,63,7)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="3295.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="3269" width="0.0341%" height="15" fill="rgb(249,182,41)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="3279.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="3253" width="0.0341%" height="15" fill="rgb(243,47,26)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="3263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="3237" width="0.0341%" height="15" fill="rgb(233,48,2)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="3247.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="3221" width="0.0341%" height="15" fill="rgb(244,165,34)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="3231.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="3205" width="0.0341%" height="15" fill="rgb(207,89,7)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="3215.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="3189" width="0.0341%" height="15" fill="rgb(244,117,36)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="3199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="3173" width="0.0341%" height="15" fill="rgb(226,144,34)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="3183.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="3157" width="0.0341%" height="15" fill="rgb(213,23,19)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="3167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="3141" width="0.0341%" height="15" fill="rgb(217,75,12)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="3151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="3125" width="0.0341%" height="15" fill="rgb(224,159,17)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="3135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="3109" width="0.0341%" height="15" fill="rgb(217,118,1)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="3119.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="3093" width="0.0341%" height="15" fill="rgb(232,180,48)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="3103.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="3077" width="0.0341%" height="15" fill="rgb(230,27,33)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="3087.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="3061" width="0.0341%" height="15" fill="rgb(205,31,21)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="3071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="3045" width="0.0341%" height="15" fill="rgb(253,59,4)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="3055.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="3029" width="0.0341%" height="15" fill="rgb(224,201,9)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="3039.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="3013" width="0.0341%" height="15" fill="rgb(229,206,30)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="3023.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="2997" width="0.0341%" height="15" fill="rgb(212,67,47)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="3007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="2981" width="0.0341%" height="15" fill="rgb(211,96,50)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="2991.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="2965" width="0.0341%" height="15" fill="rgb(252,114,18)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="2975.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="2949" width="0.0341%" height="15" fill="rgb(223,58,37)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="2959.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="2933" width="0.0341%" height="15" fill="rgb(237,70,4)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="2943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="2917" width="0.0341%" height="15" fill="rgb(244,85,46)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="2927.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="2901" width="0.0341%" height="15" fill="rgb(223,39,52)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="2911.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="2885" width="0.0341%" height="15" fill="rgb(218,200,14)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="2895.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="2869" width="0.0341%" height="15" fill="rgb(208,171,16)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="2879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="2853" width="0.0341%" height="15" fill="rgb(234,200,18)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="2863.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="2837" width="0.0341%" height="15" fill="rgb(228,45,11)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="2847.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="2821" width="0.0341%" height="15" fill="rgb(237,182,11)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="2831.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="2805" width="0.0341%" height="15" fill="rgb(241,175,49)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="2815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="2789" width="0.0341%" height="15" fill="rgb(247,38,35)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="2799.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="2773" width="0.0341%" height="15" fill="rgb(228,39,49)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="2783.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="2757" width="0.0341%" height="15" fill="rgb(226,101,26)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="2767.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="2741" width="0.0341%" height="15" fill="rgb(206,141,19)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="2751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="2725" width="0.0341%" height="15" fill="rgb(211,200,13)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="2735.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="2709" width="0.0341%" height="15" fill="rgb(241,121,6)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="2719.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="2693" width="0.0341%" height="15" fill="rgb(234,221,29)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="2703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="2677" width="0.0341%" height="15" fill="rgb(229,136,5)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="2687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="2661" width="0.0341%" height="15" fill="rgb(238,36,11)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="2671.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="2645" width="0.0341%" height="15" fill="rgb(251,55,41)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="2655.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="2629" width="0.0341%" height="15" fill="rgb(242,34,40)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="2639.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="2613" width="0.0341%" height="15" fill="rgb(215,42,17)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="2623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="2597" width="0.0341%" height="15" fill="rgb(207,44,46)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="2607.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="2581" width="0.0341%" height="15" fill="rgb(211,206,28)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="2591.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="2565" width="0.0341%" height="15" fill="rgb(237,167,16)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="2575.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="2549" width="0.0341%" height="15" fill="rgb(233,66,6)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="2559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="2533" width="0.0341%" height="15" fill="rgb(246,123,29)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="2543.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="2517" width="0.0341%" height="15" fill="rgb(209,62,40)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="2527.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="2501" width="0.0341%" height="15" fill="rgb(218,4,25)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="2511.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="2485" width="0.0341%" height="15" fill="rgb(253,91,49)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="2495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="2469" width="0.0341%" height="15" fill="rgb(228,155,29)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="2479.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="2453" width="0.0341%" height="15" fill="rgb(243,57,37)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="2463.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="2437" width="0.0341%" height="15" fill="rgb(244,167,17)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="2447.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="2421" width="0.0341%" height="15" fill="rgb(207,181,38)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="2431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="2405" width="0.0341%" height="15" fill="rgb(211,8,23)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="2415.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="2389" width="0.0341%" height="15" fill="rgb(235,11,44)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="2399.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="2373" width="0.0341%" height="15" fill="rgb(248,18,52)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="2383.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="2357" width="0.0341%" height="15" fill="rgb(208,4,7)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="2367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="2341" width="0.0341%" height="15" fill="rgb(240,17,39)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="2351.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="2325" width="0.0341%" height="15" fill="rgb(207,170,3)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="2335.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="2309" width="0.0341%" height="15" fill="rgb(236,100,52)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="2319.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="2293" width="0.0341%" height="15" fill="rgb(246,78,51)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="2303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="2277" width="0.0341%" height="15" fill="rgb(211,17,15)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="2287.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="2261" width="0.0341%" height="15" fill="rgb(209,59,46)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="2271.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="2245" width="0.0341%" height="15" fill="rgb(210,92,25)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="2255.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="2229" width="0.0341%" height="15" fill="rgb(238,174,52)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="2239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="2213" width="0.0341%" height="15" fill="rgb(230,73,7)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="2223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="2197" width="0.0341%" height="15" fill="rgb(243,124,40)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="2207.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="2181" width="0.0341%" height="15" fill="rgb(244,170,11)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="2191.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="2165" width="0.0341%" height="15" fill="rgb(207,114,54)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="2175.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="2149" width="0.0341%" height="15" fill="rgb(205,42,20)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="2159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="2133" width="0.0341%" height="15" fill="rgb(230,30,28)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="2143.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="2117" width="0.0341%" height="15" fill="rgb(205,73,54)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="2127.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="2101" width="0.0341%" height="15" fill="rgb(254,227,23)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="2111.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="2085" width="0.0341%" height="15" fill="rgb(228,202,34)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="2095.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="2069" width="0.0341%" height="15" fill="rgb(222,225,37)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="2079.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="2053" width="0.0341%" height="15" fill="rgb(221,14,54)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="2063.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="2037" width="0.0341%" height="15" fill="rgb(254,102,2)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="2047.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="2021" width="0.0341%" height="15" fill="rgb(232,104,17)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="2031.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="2005" width="0.0341%" height="15" fill="rgb(250,220,14)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="2015.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="1989" width="0.0341%" height="15" fill="rgb(241,158,9)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="1999.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="1973" width="0.0341%" height="15" fill="rgb(246,9,43)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="1957" width="0.0341%" height="15" fill="rgb(206,73,33)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="1967.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="1941" width="0.0341%" height="15" fill="rgb(222,79,8)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="1925" width="0.0341%" height="15" fill="rgb(234,8,54)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="1935.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="1909" width="0.0341%" height="15" fill="rgb(209,134,38)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="1893" width="0.0341%" height="15" fill="rgb(230,127,29)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="1903.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="1877" width="0.0341%" height="15" fill="rgb(242,44,41)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="1861" width="0.0341%" height="15" fill="rgb(222,56,43)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="1845" width="0.0341%" height="15" fill="rgb(238,39,47)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="1829" width="0.0341%" height="15" fill="rgb(226,79,43)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="1839.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="1813" width="0.0341%" height="15" fill="rgb(242,105,53)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="1797" width="0.0341%" height="15" fill="rgb(251,132,46)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="1781" width="0.0341%" height="15" fill="rgb(231,77,14)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="1765" width="0.0341%" height="15" fill="rgb(240,135,9)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="1775.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="1749" width="0.0341%" height="15" fill="rgb(248,109,14)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="1733" width="0.0341%" height="15" fill="rgb(227,146,52)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="1717" width="0.0341%" height="15" fill="rgb(232,54,3)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="1701" width="0.0341%" height="15" fill="rgb(229,201,43)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="1711.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="1685" width="0.0341%" height="15" fill="rgb(252,161,33)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="1669" width="0.0341%" height="15" fill="rgb(226,146,40)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="1653" width="0.0341%" height="15" fill="rgb(219,47,25)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="1637" width="0.0341%" height="15" fill="rgb(250,135,13)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="1647.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="1621" width="0.0341%" height="15" fill="rgb(219,229,18)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="1605" width="0.0341%" height="15" fill="rgb(217,152,27)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="1589" width="0.0341%" height="15" fill="rgb(225,71,47)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="1573" width="0.0341%" height="15" fill="rgb(220,139,14)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="1583.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="1557" width="0.0341%" height="15" fill="rgb(247,54,32)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="1541" width="0.0341%" height="15" fill="rgb(252,131,39)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="1525" width="0.0341%" height="15" fill="rgb(210,108,39)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="1509" width="0.0341%" height="15" fill="rgb(205,23,29)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="1519.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="1493" width="0.0341%" height="15" fill="rgb(246,139,46)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="1477" width="0.0341%" height="15" fill="rgb(250,81,26)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="1461" width="0.0341%" height="15" fill="rgb(214,104,7)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="1445" width="0.0341%" height="15" fill="rgb(233,189,8)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="1455.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="1429" width="0.0341%" height="15" fill="rgb(228,141,17)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="1413" width="0.0341%" height="15" fill="rgb(247,157,1)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="1397" width="0.0341%" height="15" fill="rgb(249,225,5)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="1381" width="0.0341%" height="15" fill="rgb(242,55,13)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="1391.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="1365" width="0.0341%" height="15" fill="rgb(230,49,50)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="1349" width="0.0341%" height="15" fill="rgb(241,111,38)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="1333" width="0.0341%" height="15" fill="rgb(252,155,4)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="1317" width="0.0341%" height="15" fill="rgb(212,69,32)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="1327.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="1301" width="0.0341%" height="15" fill="rgb(243,107,47)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="1285" width="0.0341%" height="15" fill="rgb(247,130,12)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="1269" width="0.0341%" height="15" fill="rgb(233,74,16)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="1253" width="0.0341%" height="15" fill="rgb(208,58,18)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="1263.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="1237" width="0.0341%" height="15" fill="rgb(242,225,1)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="1221" width="0.0341%" height="15" fill="rgb(249,39,40)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="1205" width="0.0341%" height="15" fill="rgb(207,72,44)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="1189" width="0.0341%" height="15" fill="rgb(215,193,12)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="1199.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="1173" width="0.0341%" height="15" fill="rgb(248,41,39)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="1157" width="0.0341%" height="15" fill="rgb(253,85,4)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="1141" width="0.0341%" height="15" fill="rgb(243,70,31)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="1125" width="0.0341%" height="15" fill="rgb(253,195,26)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="1135.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="1109" width="0.0341%" height="15" fill="rgb(243,42,11)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="1093" width="0.0341%" height="15" fill="rgb(239,66,17)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="1077" width="0.0341%" height="15" fill="rgb(217,132,21)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="1061" width="0.0341%" height="15" fill="rgb(252,202,21)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="1071.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="1045" width="0.0341%" height="15" fill="rgb(233,98,36)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="1029" width="0.0341%" height="15" fill="rgb(216,153,54)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="1013" width="0.0341%" height="15" fill="rgb(250,99,7)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="997" width="0.0341%" height="15" fill="rgb(207,56,50)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="1007.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="981" width="0.0341%" height="15" fill="rgb(244,61,34)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="965" width="0.0341%" height="15" fill="rgb(241,50,38)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="949" width="0.0341%" height="15" fill="rgb(212,166,30)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="933" width="0.0341%" height="15" fill="rgb(249,127,32)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="943.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="917" width="0.0341%" height="15" fill="rgb(209,103,0)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="901" width="0.0341%" height="15" fill="rgb(238,209,51)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="885" width="0.0341%" height="15" fill="rgb(237,56,23)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="869" width="0.0341%" height="15" fill="rgb(215,153,46)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="879.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="853" width="0.0341%" height="15" fill="rgb(224,49,31)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="837" width="0.0341%" height="15" fill="rgb(250,18,42)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="821" width="0.0341%" height="15" fill="rgb(215,176,39)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="805" width="0.0341%" height="15" fill="rgb(223,77,29)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="815.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="789" width="0.0341%" height="15" fill="rgb(234,94,52)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="773" width="0.0341%" height="15" fill="rgb(220,154,50)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="757" width="0.0341%" height="15" fill="rgb(212,11,10)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="741" width="0.0341%" height="15" fill="rgb(205,166,19)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="751.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="725" width="0.0341%" height="15" fill="rgb(244,198,16)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="709" width="0.0341%" height="15" fill="rgb(219,69,12)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="693" width="0.0341%" height="15" fill="rgb(245,30,7)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="677" width="0.0341%" height="15" fill="rgb(218,221,48)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="687.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="661" width="0.0341%" height="15" fill="rgb(216,66,15)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="645" width="0.0341%" height="15" fill="rgb(226,122,50)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="629" width="0.0341%" height="15" fill="rgb(239,156,16)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="613" width="0.0341%" height="15" fill="rgb(224,27,38)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="623.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="597" width="0.0341%" height="15" fill="rgb(224,39,27)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="581" width="0.0341%" height="15" fill="rgb(215,92,29)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="565" width="0.0341%" height="15" fill="rgb(207,159,16)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="549" width="0.0341%" height="15" fill="rgb(238,163,47)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="559.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="533" width="0.0341%" height="15" fill="rgb(219,91,49)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="517" width="0.0341%" height="15" fill="rgb(227,167,31)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="501" width="0.0341%" height="15" fill="rgb(234,80,54)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="485" width="0.0341%" height="15" fill="rgb(212,114,2)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="495.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="469" width="0.0341%" height="15" fill="rgb(234,50,24)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="453" width="0.0341%" height="15" fill="rgb(221,68,8)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="437" width="0.0341%" height="15" fill="rgb(254,180,31)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="421" width="0.0341%" height="15" fill="rgb(247,130,50)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="431.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="405" width="0.0341%" height="15" fill="rgb(211,109,4)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="389" width="0.0341%" height="15" fill="rgb(238,50,21)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="373" width="0.0341%" height="15" fill="rgb(225,57,45)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="357" width="0.0341%" height="15" fill="rgb(209,196,50)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="367.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="341" width="0.0341%" height="15" fill="rgb(242,140,13)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="325" width="0.0341%" height="15" fill="rgb(217,111,7)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="309" width="0.0341%" height="15" fill="rgb(253,193,51)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="293" width="0.0341%" height="15" fill="rgb(252,70,29)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="303.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="277" width="0.0341%" height="15" fill="rgb(232,127,12)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="261" width="0.0341%" height="15" fill="rgb(211,180,21)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="245" width="0.0341%" height="15" fill="rgb(229,72,13)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;tetrs::logic::state::GameState&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="229" width="0.0341%" height="15" fill="rgb(240,211,49)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="239.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="213" width="0.0341%" height="15" fill="rgb(219,149,40)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;tetrs::logic::state::GameState&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="197" width="0.0341%" height="15" fill="rgb(210,127,46)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u16&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="181" width="0.0341%" height="15" fill="rgb(220,106,7)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="165" width="0.0341%" height="15" fill="rgb(249,31,22)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u16&gt;]&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="149" width="0.0341%" height="15" fill="rgb(253,1,49)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u16&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="133" width="0.0341%" height="15" fill="rgb(227,144,33)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u16&gt;&gt; (1 samples, 0.03%)</title><rect x="99.9659%" y="117" width="0.0341%" height="15" fill="rgb(249,163,44)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="127.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="99.9659%" y="101" width="0.0341%" height="15" fill="rgb(234,15,39)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.03%)</title><rect x="99.9659%" y="85" width="0.0341%" height="15" fill="rgb(207,66,16)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="95.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.03%)</title><rect x="99.9659%" y="69" width="0.0341%" height="15" fill="rgb(233,112,24)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="79.50"></text></g><g><title>cfree (1 samples, 0.03%)</title><rect x="99.9659%" y="53" width="0.0341%" height="15" fill="rgb(230,90,22)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="63.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="99.9659%" y="37" width="0.0341%" height="15" fill="rgb(229,61,13)" fg:x="2932" fg:w="1"/><text x="100.2159%" y="47.50"></text></g></svg></svg>